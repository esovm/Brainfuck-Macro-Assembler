#       _    _   _ ____ ___ #@(main@1)
#      / \  | \ | / ___|_ _| #@(main@2)
#     / _ \ |  \| \___ \| | #@(main@3)
#    / ___ \| |\  |___) | | #@(main@4)
#   /_/  _\_\_| \_|____/___| _ #@(main@5)
#   | | | | __ _ _ __   ___ (_) #@(main@6)
#   | |_| |/ _` | '_ \ / _ \| | #@(main@7)
#   |  _  | (_| | | | | (_) | | #@(main@8)
#   |_| |_|\__,_|_| |_|\___/|_| #@(main@9)
# #@(main@10)
# ANSI displayed Hanoi tower iterative , inspired by https://www.geeksforgeeks.org/iterative-tower-of-hanoi/ #@(main@11)
#(begin include)../include/macro.inc
# Common macros #@(macro_inc@1)
# scope variables #@(macro_inc@2)
 #@(macro_inc@5)
 #@(macro_inc@6)
# macro scope_begin : start a new scope for local variable (usage of macro lvar) #@(macro_inc@7)
 #@(macro_inc@11)
# macro scope_end : end a scope , then drop scoped local variables (drop) (usage of lvar) #@(macro_inc@12)
 #@(macro_inc@19)
# macro lvar(vname,value) : declare  in scope, a local variable named vname with an assigned value (stored in stack) #@(macro_inc@20)
 #@(macro_inc@26)
# macro if_diff(a,b) : if (a != b) { #@(macro_inc@27)
 #@(macro_inc@34)
# macro if_equal(a,b) : if (a == b) { #@(macro_inc@35)
 #@(macro_inc@42)
# macro if_sup(a,b) : if (a > b) { #@(macro_inc@43)
 #@(macro_inc@50)
# macro if_inf(a,b) : if (a < b) { #@(macro_inc@51)
 #@(macro_inc@58)
# macro if_supequal(a,b) : if (a >= b) { #@(macro_inc@59)
 #@(macro_inc@67)
# macro if_infequal(a,b) : if (a <= b) { #@(macro_inc@68)
 #@(macro_inc@76)
# macro at_2 #@(macro_inc@77)
 #@(macro_inc@83)
# macro at_1 #@(macro_inc@84)
 #@(macro_inc@88)
# macro at_reset(a) : a=0 #@(macro_inc@89)
 #@(macro_inc@93)
# macro at_inc(a) : a++ #@(macro_inc@94)
 #@(macro_inc@98)
# macro at_dec(a) : a-- #@(macro_inc@99)
 #@(macro_inc@103)
# macro at_in(a)  : a= readchar() #@(macro_inc@104)
 #@(macro_inc@108)
# macro at_out(a) : write(a) #@(macro_inc@109)
 #@(macro_inc@113)
# macro at_add(a,b) : a += b (immediate) #@(macro_inc@114)
 #@(macro_inc@118)
# macro at_sub(a,b) : a -= b (immediate) #@(macro_inc@119)
 #@(macro_inc@123)
# macro at_set(a,b) : a = b (immediate) #@(macro_inc@124)
 #@(macro_inc@128)
 #@(macro_inc@133)
 #@(macro_inc@141)
#macro addof() : push A, push B , replaced by Carry, A+B #@(macro_inc@142)
 #@(macro_inc@180)
# macro subof() : push A, push B , replaced by Carry, A-B #@(macro_inc@181)
 #@(macro_inc@221)
# macro mulof() : A = stack-1, B= stack : stack-1 = A*B div 256, stack = A*B mod 256 #@(macro_inc@222)
 #@(macro_inc@245)
 #@(macro_inc@246)
 #@(macro_inc@258)
 #@(macro_inc@265)
# macro popouthexa() : from head of stack value (from 0 to 15) write out hexa (from 0 to 9 and A to F) #@(macro_inc@266)
 #@(macro_inc@276)
# macro popout8hexa() : from head of stack the 8 bit value is write out in hexa #@(macro_inc@277)
 #@(macro_inc@284)
 #@(macro_inc@290)
 #@(macro_inc@291)
var __wbdoutput*3 #@(macro_inc@293)
 #@(macro_inc@294)
# a Byte in stack : output its decimal value #@(macro_inc@295)
 #@(macro_inc@326)
 #@(macro_inc@327)
 #@(macro_inc@328)
# macro print(aString) : print out a string #@(macro_inc@329)
#(end include)../include/macro.inc
#(begin include)../include/ansi.inc
# based on https://en.wikipedia.org/wiki/ANSI_escape_code #@(ansi_inc@1)
# macro to help to place ANSI code to output #@(ansi_inc@2)
 #@(ansi_inc@3)
####################### #@(ansi_inc@4)
# ANSI Escape sequences #@(ansi_inc@5)
####################### #@(ansi_inc@6)
 #@(ansi_inc@7)
 #@(ansi_inc@12)
## Single Shift Two #@(ansi_inc@13)
 #@(ansi_inc@17)
##  Single Shift Three #@(ansi_inc@18)
 #@(ansi_inc@22)
## Device Control String #@(ansi_inc@23)
 #@(ansi_inc@27)
## Control Sequence Introducer #@(ansi_inc@28)
 #@(ansi_inc@32)
##  String Terminator #@(ansi_inc@33)
 #@(ansi_inc@37)
## Operating System Command #@(ansi_inc@38)
 #@(ansi_inc@42)
## Start of String #@(ansi_inc@43)
 #@(ansi_inc@47)
## Privacy Message #@(ansi_inc@48)
 #@(ansi_inc@52)
##  Application Program Command #@(ansi_inc@53)
 #@(ansi_inc@57)
## Reset to Initial State #@(ansi_inc@58)
 #@(ansi_inc@62)
#################### #@(ansi_inc@63)
# ANSI CSI sequences #@(ansi_inc@64)
#################### #@(ansi_inc@65)
 #@(ansi_inc@66)
## Cursor Up #@(ansi_inc@67)
 #@(ansi_inc@74)
## Cursor Down #@(ansi_inc@75)
 #@(ansi_inc@82)
## Cursor Forward #@(ansi_inc@83)
 #@(ansi_inc@90)
## Cursor Back #@(ansi_inc@91)
 #@(ansi_inc@98)
## Cursor Next Line #@(ansi_inc@99)
 #@(ansi_inc@106)
## Cursor Previous Line #@(ansi_inc@107)
 #@(ansi_inc@114)
## Cursor Horizontal Absolute #@(ansi_inc@115)
 #@(ansi_inc@122)
## Cursor Position #@(ansi_inc@123)
 #@(ansi_inc@133)
## Erase Display #@(ansi_inc@134)
## 0 : from cursor up to end of screen #@(ansi_inc@135)
## 1 : from cursor up to begin of screen #@(ansi_inc@136)
## 2 : clear all screen : keep back buffer #@(ansi_inc@137)
## 3 : clear all screen , erase back buffer #@(ansi_inc@138)
 #@(ansi_inc@145)
## Erase in Line, to cursor position change #@(ansi_inc@146)
## 0 : clear from cursor to end of line #@(ansi_inc@147)
## 1 : clear from cursor to begin of line #@(ansi_inc@148)
## 2 : clear all line #@(ansi_inc@149)
 #@(ansi_inc@156)
##  Scroll Up #@(ansi_inc@157)
 #@(ansi_inc@164)
## Scroll Down #@(ansi_inc@165)
 #@(ansi_inc@172)
## same as ansi_CUP : Cursor Position #@(ansi_inc@173)
 #@(ansi_inc@183)
## Select Graphic Endition #@(ansi_inc@184)
 #@(ansi_inc@191)
## Select Graphic Rendition with 2 parameters #@(ansi_inc@192)
 #@(ansi_inc@205)
## Select Graphic Rendition with 4 parameters #@(ansi_inc@206)
 #@(ansi_inc@225)
## AUX Port On #@(ansi_inc@226)
 #@(ansi_inc@231)
## AUX Port On #@(ansi_inc@232)
 #@(ansi_inc@237)
## Device Status Report #@(ansi_inc@238)
 #@(ansi_inc@243)
## Save Cursor Position #@(ansi_inc@244)
 #@(ansi_inc@249)
## Restore Cursor Position #@(ansi_inc@250)
 #@(ansi_inc@255)
## show cursor #@(ansi_inc@256)
 #@(ansi_inc@261)
## hide cursor #@(ansi_inc@262)
 #@(ansi_inc@267)
## enable alternate screen buffer #@(ansi_inc@268)
 #@(ansi_inc@273)
## disable alternate screen buffer #@(ansi_inc@274)
 #@(ansi_inc@279)
## Turn on bracketed paste mode #@(ansi_inc@280)
 #@(ansi_inc@285)
## Turn off bracketed paste mode #@(ansi_inc@286)
 #@(ansi_inc@291)
##################################### #@(ansi_inc@292)
# ANSI SGR (Select Graphic Rendition) #@(ansi_inc@293)
##################################### #@(ansi_inc@294)
 #@(ansi_inc@295)
## Reset / Normal #@(ansi_inc@296)
 #@(ansi_inc@300)
## Bold or increased intensity #@(ansi_inc@301)
 #@(ansi_inc@305)
## Faint (decreased intensity) #@(ansi_inc@306)
 #@(ansi_inc@310)
## Italic #@(ansi_inc@311)
 #@(ansi_inc@315)
## Underline #@(ansi_inc@316)
 #@(ansi_inc@320)
## Slow Blink #@(ansi_inc@321)
 #@(ansi_inc@325)
## Rapid Blink #@(ansi_inc@326)
 #@(ansi_inc@330)
## Reverse Video #@(ansi_inc@331)
 #@(ansi_inc@335)
## Conceal #@(ansi_inc@336)
 #@(ansi_inc@340)
## Crossed-out #@(ansi_inc@341)
 #@(ansi_inc@345)
## primary font #@(ansi_inc@346)
 #@(ansi_inc@350)
## alternate font (1 to 9) , 0 same as primary #@(ansi_inc@351)
 #@(ansi_inc@359)
## Fraktur #@(ansi_inc@360)
 #@(ansi_inc@364)
## Bold off or Double Underline #@(ansi_inc@365)
 #@(ansi_inc@369)
## Normal color or intensity (neither bold nor faint) #@(ansi_inc@370)
 #@(ansi_inc@374)
## Not italic nor fraktur #@(ansi_inc@375)
 #@(ansi_inc@379)
## Underline off #@(ansi_inc@380)
 #@(ansi_inc@384)
## blink off #@(ansi_inc@385)
 #@(ansi_inc@389)
## Inverse off #@(ansi_inc@390)
 #@(ansi_inc@394)
## Reveal / conceal off #@(ansi_inc@395)
 #@(ansi_inc@399)
## Not cross-out #@(ansi_inc@400)
 #@(ansi_inc@404)
## Set foreground color 0 to 7 #@(ansi_inc@405)
 #@(ansi_inc@413)
## set foreground color , palette on 256 colors #@(ansi_inc@414)
 #@(ansi_inc@418)
## set foreground color, RGB 24 bits (3* 256 colors, RGB) #@(ansi_inc@419)
 #@(ansi_inc@423)
## set default foreground color #@(ansi_inc@424)
 #@(ansi_inc@428)
## Set background color 0 to 7 #@(ansi_inc@429)
 #@(ansi_inc@437)
## set background color , palette on 256 colors #@(ansi_inc@438)
 #@(ansi_inc@442)
## set background color, RGB 24 bits (3* 256 colors, RGB) #@(ansi_inc@443)
 #@(ansi_inc@447)
## set default background color #@(ansi_inc@448)
 #@(ansi_inc@452)
## Framed #@(ansi_inc@453)
 #@(ansi_inc@457)
## Encircled #@(ansi_inc@458)
 #@(ansi_inc@462)
## Overlined #@(ansi_inc@463)
 #@(ansi_inc@467)
## Not framed or encirlced #@(ansi_inc@468)
 #@(ansi_inc@475)
## Not overlined #@(ansi_inc@476)
 #@(ansi_inc@480)
## Foreground Black #@(ansi_inc@481)
 #@(ansi_inc@485)
## Foreground Red #@(ansi_inc@486)
 #@(ansi_inc@490)
## Foreground Green #@(ansi_inc@491)
 #@(ansi_inc@495)
## Foreground Yellow #@(ansi_inc@496)
 #@(ansi_inc@500)
## Foreground Blue #@(ansi_inc@501)
 #@(ansi_inc@505)
## Foreground Magenta #@(ansi_inc@506)
 #@(ansi_inc@510)
## Foreground Cyan #@(ansi_inc@511)
 #@(ansi_inc@515)
## Foreground White #@(ansi_inc@516)
 #@(ansi_inc@520)
## Background Black #@(ansi_inc@521)
 #@(ansi_inc@525)
## Background Red #@(ansi_inc@526)
 #@(ansi_inc@530)
## Background Green #@(ansi_inc@531)
 #@(ansi_inc@535)
## Background Yellow #@(ansi_inc@536)
 #@(ansi_inc@540)
## Background Blue #@(ansi_inc@541)
 #@(ansi_inc@545)
## Background Magenta #@(ansi_inc@546)
 #@(ansi_inc@550)
## Background Cyan #@(ansi_inc@551)
 #@(ansi_inc@555)
## Background White #@(ansi_inc@556)
 #@(ansi_inc@560)
 #@(ansi_inc@561)
 #@(ansi_inc@562)
 #@(ansi_inc@563)
 #@(ansi_inc@564)
 #@(ansi_inc@565)
 #@(ansi_inc@566)
 #@(ansi_inc@567)
 #@(ansi_inc@568)
#(end include)../include/ansi.inc
 #@(main@14)
# 7 means 6 disks ... #@(main@15)
 #@(main@18)
var     src*8 #@(main@19)
var     dest*8 #@(main@20)
var     aux*8 #@(main@21)
var     i #@(main@22)
 #@(main@23)
# push 1 if stack is full , 0 otherwise #@(main@24)
 #@(main@31)
# push 1 if stack is empty, 0 otherwise #@(main@32)
 #@(main@38)
# value is in stack #@(main@39)
 #@(main@51)
# value returned is in stack #@(main@52)
 #@(main@67)
# x, y are immediate values #@(main@68)
 #@(main@133)
 #@(main@142)
 #@(main@184)
#(begin macro)ansi_ED     2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@140)(main@185)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@140)(main@185)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@140)(main@185)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@140)(main@185)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@140)(main@185)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@140)(main@185)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@140)(main@185)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@140)(main@185)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@141)(main@185)
#(begin macro)writeByteDecimal
sbm _wbdinput1 #@(macro_inc@297)(ansi_inc@142)(main@185)
push 3 #@(macro_inc@298)(ansi_inc@142)(main@185)
loop #@(macro_inc@299)(ansi_inc@142)(main@185)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@142)(main@185)
  #(begin macro)divide  _wbdinput1,  10, _wbdinput1,  __wbdoutput
  push    _wbdinput1 #@(macro_inc@135)(macro_inc@301)(ansi_inc@142)(main@185)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@142)(main@185)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@142)(main@185)
  pop     _wbdinput1 #@(macro_inc@138)(macro_inc@301)(ansi_inc@142)(main@185)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@142)(main@185)
  #(end macro)divide  _wbdinput1,  10, _wbdinput1,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@142)(main@185)
endloop #@(macro_inc@303)(ansi_inc@142)(main@185)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero1, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@142)(main@185)
sbm     prefixzero1 #@(macro_inc@23)(macro_inc@305)(ansi_inc@142)(main@185)
#(end macro)lvar    prefixzero1, 1
push    3 #@(macro_inc@306)(ansi_inc@142)(main@185)
sbm     __wbdcnt1 #@(macro_inc@307)(ansi_inc@142)(main@185)
loop #@(macro_inc@308)(ansi_inc@142)(main@185)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@142)(main@185)
  #(begin macro)if_sup   __wbdcnt1,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt1 #@(macro_inc@45)(macro_inc@310)(ansi_inc@142)(main@185)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@142)(main@185)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@142)(main@185)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@142)(main@185)
    #(end macro)if_sup   __wbdcnt1,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@142)(main@185)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@142)(main@185)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@142)(main@185)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@142)(main@185)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@142)(main@185)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@142)(main@185)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@142)(main@185)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero1, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero1 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@142)(main@185)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@142)(main@185)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@142)(main@185)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero1, 0
    else #@(macro_inc@314)(ansi_inc@142)(main@185)
      #(begin macro)if_equal    prefixzero1, 0
      push    prefixzero1 #@(macro_inc@37)(macro_inc@315)(ansi_inc@142)(main@185)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@142)(main@185)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@142)(main@185)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@142)(main@185)
        #(end macro)if_equal    prefixzero1, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@142)(main@185)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@142)(main@185)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@142)(main@185)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@142)(main@185)
    fi #@(macro_inc@318)(ansi_inc@142)(main@185)
  else #@(macro_inc@319)(ansi_inc@142)(main@185)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@142)(main@185)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@142)(main@185)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@142)(main@185)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@142)(main@185)
endloop #@(macro_inc@322)(ansi_inc@142)(main@185)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@142)(main@185)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@142)(main@185)
#(end macro)writeByteDecimal
#(begin macro)print   J
push    0 #@(macro_inc@331)(ansi_inc@143)(main@185)
set     74 #@(macro_inc@346)(ansi_inc@143)(main@185)
out             # 'J' #@(macro_inc@348)(ansi_inc@143)(main@185)
drop #@(macro_inc@351)(ansi_inc@143)(main@185)
#(end macro)print   J
#(end macro)ansi_ED     2
#(begin macro)ansi_CUP    1,  1
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@186)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@186)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@186)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@186)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@186)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@186)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@186)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@186)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    1 #@(ansi_inc@126)(main@186)
#(begin macro)writeByteDecimal
sbm _wbdinput2 #@(macro_inc@297)(ansi_inc@127)(main@186)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@186)
loop #@(macro_inc@299)(ansi_inc@127)(main@186)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@186)
  #(begin macro)divide  _wbdinput2,  10, _wbdinput2,  __wbdoutput
  push    _wbdinput2 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@186)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@186)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@186)
  pop     _wbdinput2 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@186)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@186)
  #(end macro)divide  _wbdinput2,  10, _wbdinput2,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@186)
endloop #@(macro_inc@303)(ansi_inc@127)(main@186)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero2, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@186)
sbm     prefixzero2 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@186)
#(end macro)lvar    prefixzero2, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@186)
sbm     __wbdcnt2 #@(macro_inc@307)(ansi_inc@127)(main@186)
loop #@(macro_inc@308)(ansi_inc@127)(main@186)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@186)
  #(begin macro)if_sup   __wbdcnt2,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt2 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@186)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@186)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@186)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@186)
    #(end macro)if_sup   __wbdcnt2,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@186)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@186)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@186)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@186)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@186)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@186)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@186)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero2, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero2 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@186)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@186)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@186)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero2, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@186)
      #(begin macro)if_equal    prefixzero2, 0
      push    prefixzero2 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@186)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@186)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@186)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@186)
        #(end macro)if_equal    prefixzero2, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@186)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@186)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@186)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@186)
    fi #@(macro_inc@318)(ansi_inc@127)(main@186)
  else #@(macro_inc@319)(ansi_inc@127)(main@186)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@186)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@186)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@186)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@186)
endloop #@(macro_inc@322)(ansi_inc@127)(main@186)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@186)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@186)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@186)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@186)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@186)
drop #@(macro_inc@351)(ansi_inc@128)(main@186)
#(end macro)print   ;
push    1 #@(ansi_inc@129)(main@186)
#(begin macro)writeByteDecimal
sbm _wbdinput3 #@(macro_inc@297)(ansi_inc@130)(main@186)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@186)
loop #@(macro_inc@299)(ansi_inc@130)(main@186)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@186)
  #(begin macro)divide  _wbdinput3,  10, _wbdinput3,  __wbdoutput
  push    _wbdinput3 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@186)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@186)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@186)
  pop     _wbdinput3 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@186)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@186)
  #(end macro)divide  _wbdinput3,  10, _wbdinput3,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@186)
endloop #@(macro_inc@303)(ansi_inc@130)(main@186)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero3, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@186)
sbm     prefixzero3 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@186)
#(end macro)lvar    prefixzero3, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@186)
sbm     __wbdcnt3 #@(macro_inc@307)(ansi_inc@130)(main@186)
loop #@(macro_inc@308)(ansi_inc@130)(main@186)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@186)
  #(begin macro)if_sup   __wbdcnt3,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt3 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@186)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@186)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@186)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@186)
    #(end macro)if_sup   __wbdcnt3,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@186)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@186)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@186)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@186)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@186)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@186)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@186)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero3, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero3 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@186)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@186)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@186)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero3, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@186)
      #(begin macro)if_equal    prefixzero3, 0
      push    prefixzero3 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@186)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@186)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@186)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@186)
        #(end macro)if_equal    prefixzero3, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@186)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@186)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@186)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@186)
    fi #@(macro_inc@318)(ansi_inc@130)(main@186)
  else #@(macro_inc@319)(ansi_inc@130)(main@186)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@186)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@186)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@186)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@186)
endloop #@(macro_inc@322)(ansi_inc@130)(main@186)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@186)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@186)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@186)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@186)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@186)
drop #@(macro_inc@351)(ansi_inc@131)(main@186)
#(end macro)print   H
#(end macro)ansi_CUP    1,  1
#(begin macro)ansi_SGR_fg_white
#(begin macro)ansi_SGR_fgcolor    7
push    7 #@(ansi_inc@407)(ansi_inc@518)(main@187)
add     30 #@(ansi_inc@408)(ansi_inc@518)(main@187)
sbm     __ansifgc1 #@(ansi_inc@409)(ansi_inc@518)(main@187)
#(begin macro)ansi_SGR    __ansifgc1
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    __ansifgc1 #@(ansi_inc@187)(ansi_inc@410)(ansi_inc@518)(main@187)
#(begin macro)writeByteDecimal
sbm _wbdinput4 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  #(begin macro)divide  _wbdinput4,  10, _wbdinput4,  __wbdoutput
  push    _wbdinput4 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  pop     _wbdinput4 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  #(end macro)divide  _wbdinput4,  10, _wbdinput4,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero4, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
sbm     prefixzero4 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)lvar    prefixzero4, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
sbm     __wbdcnt4 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  #(begin macro)if_sup   __wbdcnt4,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt4 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    #(end macro)if_sup   __wbdcnt4,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero4, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero4 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero4, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      #(begin macro)if_equal    prefixzero4, 0
      push    prefixzero4 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
        #(end macro)if_equal    prefixzero4, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(ansi_inc@518)(main@187)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(ansi_inc@518)(main@187)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(ansi_inc@518)(main@187)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(ansi_inc@518)(main@187)
#(end macro)print   m
#(end macro)ansi_SGR    __ansifgc1
drop #@(ansi_inc@411)(ansi_inc@518)(main@187)
#(end macro)ansi_SGR_fgcolor    7
#(end macro)ansi_SGR_fg_white
#(begin macro)ansi_SGR_bold
#(begin macro)ansi_SGR    1
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@303)(main@188)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    1 #@(ansi_inc@187)(ansi_inc@303)(main@188)
#(begin macro)writeByteDecimal
sbm _wbdinput5 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@303)(main@188)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@303)(main@188)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@303)(main@188)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@303)(main@188)
  #(begin macro)divide  _wbdinput5,  10, _wbdinput5,  __wbdoutput
  push    _wbdinput5 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@303)(main@188)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@303)(main@188)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@303)(main@188)
  pop     _wbdinput5 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@303)(main@188)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@303)(main@188)
  #(end macro)divide  _wbdinput5,  10, _wbdinput5,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@303)(main@188)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@303)(main@188)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero5, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@303)(main@188)
sbm     prefixzero5 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@303)(main@188)
#(end macro)lvar    prefixzero5, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@303)(main@188)
sbm     __wbdcnt5 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@303)(main@188)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@303)(main@188)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@303)(main@188)
  #(begin macro)if_sup   __wbdcnt5,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt5 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@303)(main@188)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@303)(main@188)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@303)(main@188)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@303)(main@188)
    #(end macro)if_sup   __wbdcnt5,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@303)(main@188)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@303)(main@188)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@303)(main@188)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@303)(main@188)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@303)(main@188)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@303)(main@188)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@303)(main@188)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero5, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero5 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@303)(main@188)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@303)(main@188)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@303)(main@188)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero5, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@303)(main@188)
      #(begin macro)if_equal    prefixzero5, 0
      push    prefixzero5 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@303)(main@188)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@303)(main@188)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@303)(main@188)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@303)(main@188)
        #(end macro)if_equal    prefixzero5, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@303)(main@188)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@303)(main@188)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@303)(main@188)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@303)(main@188)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@303)(main@188)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@303)(main@188)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@303)(main@188)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@303)(main@188)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@303)(main@188)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@303)(main@188)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@303)(main@188)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@303)(main@188)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@303)(main@188)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@303)(main@188)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@303)(main@188)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@303)(main@188)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@303)(main@188)
#(end macro)print   m
#(end macro)ansi_SGR    1
#(end macro)ansi_SGR_bold
#(begin macro)print("ANSI Hanoi example in Brainf*ck : press ENTER for step by step\n")
push    0 #@(macro_inc@331)(main@189)
set     65 #@(macro_inc@346)(main@189)
out             # 'A' #@(macro_inc@348)(main@189)
add     13 #@(macro_inc@339)(main@189)
out             # 'N' #@(macro_inc@348)(main@189)
add     5 #@(macro_inc@339)(main@189)
out             # 'S' #@(macro_inc@348)(main@189)
sub     10 #@(macro_inc@342)(main@189)
out             # 'I' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     40 #@(macro_inc@339)(main@189)
out             # 'H' #@(macro_inc@348)(main@189)
add     25 #@(macro_inc@339)(main@189)
out             # 'a' #@(macro_inc@348)(main@189)
add     13 #@(macro_inc@339)(main@189)
out             # 'n' #@(macro_inc@348)(main@189)
add     1 #@(macro_inc@339)(main@189)
out             # 'o' #@(macro_inc@348)(main@189)
sub     6 #@(macro_inc@342)(main@189)
out             # 'i' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     69 #@(macro_inc@339)(main@189)
out             # 'e' #@(macro_inc@348)(main@189)
add     19 #@(macro_inc@339)(main@189)
out             # 'x' #@(macro_inc@348)(main@189)
sub     23 #@(macro_inc@342)(main@189)
out             # 'a' #@(macro_inc@348)(main@189)
add     12 #@(macro_inc@339)(main@189)
out             # 'm' #@(macro_inc@348)(main@189)
add     3 #@(macro_inc@339)(main@189)
out             # 'p' #@(macro_inc@348)(main@189)
sub     4 #@(macro_inc@342)(main@189)
out             # 'l' #@(macro_inc@348)(main@189)
sub     7 #@(macro_inc@342)(main@189)
out             # 'e' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     73 #@(macro_inc@339)(main@189)
out             # 'i' #@(macro_inc@348)(main@189)
add     5 #@(macro_inc@339)(main@189)
out             # 'n' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     34 #@(macro_inc@339)(main@189)
out             # 'B' #@(macro_inc@348)(main@189)
add     48 #@(macro_inc@339)(main@189)
out             # 'r' #@(macro_inc@348)(main@189)
sub     17 #@(macro_inc@342)(main@189)
out             # 'a' #@(macro_inc@348)(main@189)
add     8 #@(macro_inc@339)(main@189)
out             # 'i' #@(macro_inc@348)(main@189)
add     5 #@(macro_inc@339)(main@189)
out             # 'n' #@(macro_inc@348)(main@189)
sub     8 #@(macro_inc@342)(main@189)
out             # 'f' #@(macro_inc@348)(main@189)
set     42 #@(macro_inc@346)(main@189)
out             # '*' #@(macro_inc@348)(main@189)
add     57 #@(macro_inc@339)(main@189)
out             # 'c' #@(macro_inc@348)(main@189)
add     8 #@(macro_inc@339)(main@189)
out             # 'k' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     26 #@(macro_inc@339)(main@189)
out             # ':' #@(macro_inc@348)(main@189)
sub     26 #@(macro_inc@342)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     80 #@(macro_inc@339)(main@189)
out             # 'p' #@(macro_inc@348)(main@189)
add     2 #@(macro_inc@339)(main@189)
out             # 'r' #@(macro_inc@348)(main@189)
sub     13 #@(macro_inc@342)(main@189)
out             # 'e' #@(macro_inc@348)(main@189)
add     14 #@(macro_inc@339)(main@189)
out             # 's' #@(macro_inc@348)(main@189)
out             # 's' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     37 #@(macro_inc@339)(main@189)
out             # 'E' #@(macro_inc@348)(main@189)
add     9 #@(macro_inc@339)(main@189)
out             # 'N' #@(macro_inc@348)(main@189)
add     6 #@(macro_inc@339)(main@189)
out             # 'T' #@(macro_inc@348)(main@189)
sub     15 #@(macro_inc@342)(main@189)
out             # 'E' #@(macro_inc@348)(main@189)
add     13 #@(macro_inc@339)(main@189)
out             # 'R' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     70 #@(macro_inc@339)(main@189)
out             # 'f' #@(macro_inc@348)(main@189)
add     9 #@(macro_inc@339)(main@189)
out             # 'o' #@(macro_inc@348)(main@189)
add     3 #@(macro_inc@339)(main@189)
out             # 'r' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     83 #@(macro_inc@339)(main@189)
out             # 's' #@(macro_inc@348)(main@189)
add     1 #@(macro_inc@339)(main@189)
out             # 't' #@(macro_inc@348)(main@189)
sub     15 #@(macro_inc@342)(main@189)
out             # 'e' #@(macro_inc@348)(main@189)
add     11 #@(macro_inc@339)(main@189)
out             # 'p' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     66 #@(macro_inc@339)(main@189)
out             # 'b' #@(macro_inc@348)(main@189)
add     23 #@(macro_inc@339)(main@189)
out             # 'y' #@(macro_inc@348)(main@189)
set     32 #@(macro_inc@346)(main@189)
out             # ' ' #@(macro_inc@348)(main@189)
add     83 #@(macro_inc@339)(main@189)
out             # 's' #@(macro_inc@348)(main@189)
add     1 #@(macro_inc@339)(main@189)
out             # 't' #@(macro_inc@348)(main@189)
sub     15 #@(macro_inc@342)(main@189)
out             # 'e' #@(macro_inc@348)(main@189)
add     11 #@(macro_inc@339)(main@189)
out             # 'p' #@(macro_inc@348)(main@189)
set     10 #@(macro_inc@346)(main@189)
out             #  #@(macro_inc@348)(main@189)
drop #@(macro_inc@351)(main@189)
#(end macro)print("ANSI Hanoi example in Brainf*ck : press ENTER for step by step\n")
 #@(main@190)
push    7 #@(main@191)
sbm     hinit #@(main@192)
loop #@(main@193)
  push    hinit #@(main@194)
  #(begin macro)pushtower   src
  sbm pushParam1 #@(main@41)(main@195)
  #(begin macro)isfull  src
  push    src.pos #@(main@26)(main@42)(main@195)
  push    src.size #@(main@27)(main@42)(main@195)
  sub     2 #@(main@28)(main@42)(main@195)
  equal #@(main@29)(main@42)(main@195)
  #(end macro)isfull  src
  not #@(main@43)(main@195)
  if #@(main@44)(main@195)
    arotl   src #@(main@45)(main@195)
    push    pushParam1 #@(main@46)(main@195)
    pop     src #@(main@47)(main@195)
  fi #@(main@48)(main@195)
  drop #@(main@49)(main@195)
  #(end macro)pushtower   src
endloop #@(main@196)
 #@(main@197)
# show initial step #@(main@198)
#(begin macro)displayHanoi
# display Hanoi towers #@(main@135)(main@199)
#(begin macro)displayTower    src,    9,   9
# display stick #@(main@70)(main@136)(main@199)
#(begin macro)ansi_CUP    9,    2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    9 #@(ansi_inc@126)(main@71)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput6 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@136)(main@199)
  #(begin macro)divide  _wbdinput6,  10, _wbdinput6,  __wbdoutput
  push    _wbdinput6 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@199)
  pop     _wbdinput6 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@199)
  #(end macro)divide  _wbdinput6,  10, _wbdinput6,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero6, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@136)(main@199)
sbm     prefixzero6 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@136)(main@199)
#(end macro)lvar    prefixzero6, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@136)(main@199)
sbm     __wbdcnt6 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt6,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt6 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt6,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero6, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero6 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero6, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero6, 0
      push    prefixzero6 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@199)
        #(end macro)if_equal    prefixzero6, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@71)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput7 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@136)(main@199)
  #(begin macro)divide  _wbdinput7,  10, _wbdinput7,  __wbdoutput
  push    _wbdinput7 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@199)
  pop     _wbdinput7 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@199)
  #(end macro)divide  _wbdinput7,  10, _wbdinput7,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero7, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@136)(main@199)
sbm     prefixzero7 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@136)(main@199)
#(end macro)lvar    prefixzero7, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@136)(main@199)
sbm     __wbdcnt7 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt7,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt7 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt7,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero7, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero7 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero7, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero7, 0
      push    prefixzero7 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@199)
        #(end macro)if_equal    prefixzero7, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    9,    2
#(begin macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR3   48, 5,  94
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput8 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)divide  _wbdinput8,  10, _wbdinput8,  __wbdoutput
  push    _wbdinput8 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     _wbdinput8 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(end macro)divide  _wbdinput8,  10, _wbdinput8,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero8, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     prefixzero8 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)lvar    prefixzero8, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     __wbdcnt8 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt8,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt8 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt8,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero8, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero8 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero8, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero8, 0
      push    prefixzero8 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)if_equal    prefixzero8, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput9 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)divide  _wbdinput9,  10, _wbdinput9,  __wbdoutput
  push    _wbdinput9 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     _wbdinput9 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(end macro)divide  _wbdinput9,  10, _wbdinput9,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero9, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     prefixzero9 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)lvar    prefixzero9, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     __wbdcnt9 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt9,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt9 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt9,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero9, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero9 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero9, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero9, 0
      push    prefixzero9 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)if_equal    prefixzero9, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)print   ;
push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput10 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)divide  _wbdinput10,  10, _wbdinput10,  __wbdoutput
  push    _wbdinput10 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     _wbdinput10 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(end macro)divide  _wbdinput10,  10, _wbdinput10,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero10, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     prefixzero10 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)lvar    prefixzero10, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
sbm     __wbdcnt10 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt10,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt10 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt10,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero10, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero10 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero10, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero10, 0
      push    prefixzero10 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)if_equal    prefixzero10, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   48, 5,  94
#(end macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput11 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)divide  _wbdinput11,  10, _wbdinput11,  __wbdoutput
  push    _wbdinput11 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     _wbdinput11 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(end macro)divide  _wbdinput11,  10, _wbdinput11,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero11, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     prefixzero11 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)lvar    prefixzero11, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     __wbdcnt11 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt11,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt11 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt11,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero11, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero11 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero11, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero11, 0
      push    prefixzero11 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)if_equal    prefixzero11, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput12 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)divide  _wbdinput12,  10, _wbdinput12,  __wbdoutput
  push    _wbdinput12 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     _wbdinput12 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(end macro)divide  _wbdinput12,  10, _wbdinput12,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero12, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     prefixzero12 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)lvar    prefixzero12, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     __wbdcnt12 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt12,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt12 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt12,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero12, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero12 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero12, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero12, 0
      push    prefixzero12 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)if_equal    prefixzero12, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput13 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)divide  _wbdinput13,  10, _wbdinput13,  __wbdoutput
  push    _wbdinput13 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     _wbdinput13 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(end macro)divide  _wbdinput13,  10, _wbdinput13,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero13, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     prefixzero13 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)lvar    prefixzero13, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
sbm     __wbdcnt13 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt13,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt13 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt13,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero13, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero13 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero13, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero13, 0
      push    prefixzero13 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)if_equal    prefixzero13, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
push    '=' # plate #@(main@74)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
out #@(main@76)(main@136)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput14 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  #(begin macro)divide  _wbdinput14,  10, _wbdinput14,  __wbdoutput
  push    _wbdinput14 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  pop     _wbdinput14 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  #(end macro)divide  _wbdinput14,  10, _wbdinput14,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero14, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
sbm     prefixzero14 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)lvar    prefixzero14, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
sbm     __wbdcnt14 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt14,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt14 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt14,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero14, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero14 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero14, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero14, 0
      push    prefixzero14 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
        #(end macro)if_equal    prefixzero14, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
set     ' ' #@(main@79)(main@136)(main@199)
#(begin macro)ansi_CUP    8,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput15 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput15,  10, _wbdinput15,  __wbdoutput
  push    _wbdinput15 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput15 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput15,  10, _wbdinput15,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero15, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero15 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero15, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt15 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt15,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt15 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt15,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero15, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero15 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero15, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero15, 0
      push    prefixzero15 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero15, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput16 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput16,  10, _wbdinput16,  __wbdoutput
  push    _wbdinput16 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput16 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput16,  10, _wbdinput16,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero16, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero16 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero16, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt16 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt16,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt16 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt16,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero16, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero16 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero16, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero16, 0
      push    prefixzero16 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero16, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    7,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput17 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput17,  10, _wbdinput17,  __wbdoutput
  push    _wbdinput17 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput17 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput17,  10, _wbdinput17,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero17, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero17 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero17, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt17 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt17,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt17 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt17,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero17, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero17 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero17, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero17, 0
      push    prefixzero17 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero17, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput18 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput18,  10, _wbdinput18,  __wbdoutput
  push    _wbdinput18 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput18 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput18,  10, _wbdinput18,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero18, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero18 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero18, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt18 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt18,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt18 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt18,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero18, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero18 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero18, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero18, 0
      push    prefixzero18 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero18, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    6,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput19 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput19,  10, _wbdinput19,  __wbdoutput
  push    _wbdinput19 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput19 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput19,  10, _wbdinput19,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero19, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero19 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero19, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt19 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt19,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt19 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt19,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero19, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero19 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero19, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero19, 0
      push    prefixzero19 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero19, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput20 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput20,  10, _wbdinput20,  __wbdoutput
  push    _wbdinput20 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput20 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput20,  10, _wbdinput20,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero20, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero20 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero20, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt20 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt20,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt20 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt20,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero20, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero20 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero20, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero20, 0
      push    prefixzero20 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero20, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    5,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput21 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput21,  10, _wbdinput21,  __wbdoutput
  push    _wbdinput21 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput21 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput21,  10, _wbdinput21,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero21, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero21 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero21, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt21 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt21,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt21 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt21,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero21, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero21 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero21, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero21, 0
      push    prefixzero21 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero21, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput22 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput22,  10, _wbdinput22,  __wbdoutput
  push    _wbdinput22 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput22 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput22,  10, _wbdinput22,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero22, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero22 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero22, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt22 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt22,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt22 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt22,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero22, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero22 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero22, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero22, 0
      push    prefixzero22 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero22, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    4,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput23 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput23,  10, _wbdinput23,  __wbdoutput
  push    _wbdinput23 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput23 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput23,  10, _wbdinput23,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero23, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero23 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero23, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt23 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt23,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt23 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt23,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero23, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero23 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero23, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero23, 0
      push    prefixzero23 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero23, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput24 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput24,  10, _wbdinput24,  __wbdoutput
  push    _wbdinput24 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput24 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput24,  10, _wbdinput24,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero24, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero24 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero24, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt24 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt24,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt24 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt24,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero24, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero24 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero24, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero24, 0
      push    prefixzero24 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero24, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    3,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput25 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput25,  10, _wbdinput25,  __wbdoutput
  push    _wbdinput25 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput25 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput25,  10, _wbdinput25,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero25, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero25 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero25, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt25 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt25,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt25 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt25,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero25, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero25 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero25, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero25, 0
      push    prefixzero25 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero25, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput26 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput26,  10, _wbdinput26,  __wbdoutput
  push    _wbdinput26 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput26 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput26,  10, _wbdinput26,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero26, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero26 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero26, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt26 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt26,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt26 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt26,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero26, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero26 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero26, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero26, 0
      push    prefixzero26 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero26, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_CUP    2,   2
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput27 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput27,  10, _wbdinput27,  __wbdoutput
  push    _wbdinput27 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     _wbdinput27 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput27,  10, _wbdinput27,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero27, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     prefixzero27 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero27, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@199)
sbm     __wbdcnt27 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt27,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt27 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt27,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero27, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero27 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero27, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero27, 0
      push    prefixzero27 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero27, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@199)
#(end macro)print   ;
push    2 #@(ansi_inc@129)(main@81)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput28 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)divide  _wbdinput28,  10, _wbdinput28,  __wbdoutput
  push    _wbdinput28 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     _wbdinput28 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(end macro)divide  _wbdinput28,  10, _wbdinput28,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero28, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     prefixzero28 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)lvar    prefixzero28, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@199)
sbm     __wbdcnt28 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt28,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt28 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt28,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero28, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero28 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero28, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero28, 0
      push    prefixzero28 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)if_equal    prefixzero28, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,   2
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
out #@(main@83)(main@136)(main@199)
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput29 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)divide  _wbdinput29,  10, _wbdinput29,  __wbdoutput
  push    _wbdinput29 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     _wbdinput29 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(end macro)divide  _wbdinput29,  10, _wbdinput29,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero29, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     prefixzero29 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)lvar    prefixzero29, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     __wbdcnt29 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt29,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt29 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt29,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero29, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero29 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero29, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero29, 0
      push    prefixzero29 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)if_equal    prefixzero29, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput30 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)divide  _wbdinput30,  10, _wbdinput30,  __wbdoutput
  push    _wbdinput30 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     _wbdinput30 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(end macro)divide  _wbdinput30,  10, _wbdinput30,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero30, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     prefixzero30 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)lvar    prefixzero30, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     __wbdcnt30 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt30,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt30 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt30,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero30, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero30 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero30, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero30, 0
      push    prefixzero30 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)if_equal    prefixzero30, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput31 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)divide  _wbdinput31,  10, _wbdinput31,  __wbdoutput
  push    _wbdinput31 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     _wbdinput31 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(end macro)divide  _wbdinput31,  10, _wbdinput31,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero31, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     prefixzero31 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)lvar    prefixzero31, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
sbm     __wbdcnt31 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt31,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt31 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt31,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero31, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero31 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero31, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero31, 0
      push    prefixzero31 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)if_equal    prefixzero31, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
set     '|' # stick #@(main@87)(main@136)(main@199)
#(begin macro)ansi_CUP    8,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput32 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput32,  10, _wbdinput32,  __wbdoutput
  push    _wbdinput32 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput32 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput32,  10, _wbdinput32,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero32, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero32 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero32, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt32 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt32,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt32 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt32,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero32, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero32 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero32, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero32, 0
      push    prefixzero32 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero32, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput33 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput33,  10, _wbdinput33,  __wbdoutput
  push    _wbdinput33 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput33 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput33,  10, _wbdinput33,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero33, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero33 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero33, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt33 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt33,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt33 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt33,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero33, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero33 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero33, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero33, 0
      push    prefixzero33 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero33, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    7,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput34 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput34,  10, _wbdinput34,  __wbdoutput
  push    _wbdinput34 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput34 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput34,  10, _wbdinput34,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero34, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero34 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero34, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt34 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt34,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt34 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt34,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero34, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero34 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero34, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero34, 0
      push    prefixzero34 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero34, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput35 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput35,  10, _wbdinput35,  __wbdoutput
  push    _wbdinput35 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput35 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput35,  10, _wbdinput35,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero35, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero35 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero35, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt35 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt35,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt35 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt35,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero35, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero35 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero35, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero35, 0
      push    prefixzero35 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero35, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    6,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput36 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput36,  10, _wbdinput36,  __wbdoutput
  push    _wbdinput36 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput36 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput36,  10, _wbdinput36,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero36, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero36 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero36, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt36 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt36,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt36 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt36,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero36, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero36 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero36, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero36, 0
      push    prefixzero36 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero36, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput37 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput37,  10, _wbdinput37,  __wbdoutput
  push    _wbdinput37 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput37 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput37,  10, _wbdinput37,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero37, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero37 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero37, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt37 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt37,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt37 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt37,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero37, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero37 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero37, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero37, 0
      push    prefixzero37 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero37, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    5,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput38 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput38,  10, _wbdinput38,  __wbdoutput
  push    _wbdinput38 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput38 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput38,  10, _wbdinput38,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero38, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero38 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero38, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt38 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt38,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt38 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt38,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero38, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero38 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero38, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero38, 0
      push    prefixzero38 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero38, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput39 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput39,  10, _wbdinput39,  __wbdoutput
  push    _wbdinput39 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput39 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput39,  10, _wbdinput39,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero39, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero39 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero39, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt39 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt39,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt39 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt39,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero39, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero39 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero39, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero39, 0
      push    prefixzero39 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero39, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    4,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput40 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput40,  10, _wbdinput40,  __wbdoutput
  push    _wbdinput40 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput40 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput40,  10, _wbdinput40,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero40, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero40 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero40, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt40 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt40,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt40 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt40,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero40, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero40 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero40, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero40, 0
      push    prefixzero40 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero40, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput41 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput41,  10, _wbdinput41,  __wbdoutput
  push    _wbdinput41 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput41 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput41,  10, _wbdinput41,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero41, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero41 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero41, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt41 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt41,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt41 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt41,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero41, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero41 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero41, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero41, 0
      push    prefixzero41 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero41, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    3,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput42 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput42,  10, _wbdinput42,  __wbdoutput
  push    _wbdinput42 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput42 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput42,  10, _wbdinput42,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero42, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero42 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero42, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt42 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt42,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt42 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt42,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero42, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero42 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero42, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero42, 0
      push    prefixzero42 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero42, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput43 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput43,  10, _wbdinput43,  __wbdoutput
  push    _wbdinput43 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput43 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput43,  10, _wbdinput43,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero43, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero43 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero43, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt43 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt43,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt43 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt43,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero43, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero43 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero43, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero43, 0
      push    prefixzero43 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero43, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,    9
out #@(main@90)(main@136)(main@199)
#(begin macro)ansi_CUP    2,    9
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput44 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput44,  10, _wbdinput44,  __wbdoutput
  push    _wbdinput44 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     _wbdinput44 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput44,  10, _wbdinput44,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero44, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     prefixzero44 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero44, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@199)
sbm     __wbdcnt44 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt44,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt44 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt44,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero44, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero44 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero44, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero44, 0
      push    prefixzero44 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero44, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@199)
#(end macro)print   ;
push    9 #@(ansi_inc@129)(main@89)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput45 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)divide  _wbdinput45,  10, _wbdinput45,  __wbdoutput
  push    _wbdinput45 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     _wbdinput45 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(end macro)divide  _wbdinput45,  10, _wbdinput45,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero45, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     prefixzero45 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)lvar    prefixzero45, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@199)
sbm     __wbdcnt45 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt45,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt45 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt45,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero45, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero45 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero45, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero45, 0
      push    prefixzero45 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)if_equal    prefixzero45, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,    9
out #@(main@90)(main@136)(main@199)
drop #@(main@92)(main@136)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput46 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  #(begin macro)divide  _wbdinput46,  10, _wbdinput46,  __wbdoutput
  push    _wbdinput46 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  pop     _wbdinput46 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  #(end macro)divide  _wbdinput46,  10, _wbdinput46,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero46, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
sbm     prefixzero46 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)lvar    prefixzero46, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
sbm     __wbdcnt46 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt46,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt46 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt46,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero46, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero46 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero46, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero46, 0
      push    prefixzero46 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
        #(end macro)if_equal    prefixzero46, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
# display discs #@(main@94)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    yy1,  0
push    0 #@(macro_inc@22)(main@96)(main@136)(main@199)
sbm     yy1 #@(macro_inc@23)(main@96)(main@136)(main@199)
#(end macro)lvar    yy1,  0
#(begin macro)lvar    xx1,  0
push    0 #@(macro_inc@22)(main@97)(main@136)(main@199)
sbm     xx1 #@(macro_inc@23)(main@97)(main@136)(main@199)
#(end macro)lvar    xx1,  0
#(begin macro)lvar    oldPos1,  0
push    0 #@(macro_inc@22)(main@98)(main@136)(main@199)
sbm     oldPos1 #@(macro_inc@23)(main@98)(main@136)(main@199)
#(end macro)lvar    oldPos1,  0
#(begin macro)lvar    disc1,    0
push    0 #@(macro_inc@22)(main@99)(main@136)(main@199)
sbm     disc1 #@(macro_inc@23)(main@99)(main@136)(main@199)
#(end macro)lvar    disc1,    0
push    src.pos #@(main@100)(main@136)(main@199)
pop     oldPos1 #@(main@101)(main@136)(main@199)
 #@(main@102)(main@136)(main@199)
push    src.pos #@(main@103)(main@136)(main@199)
loop #@(main@104)(main@136)(main@199)
  push    src #@(main@105)(main@136)(main@199)
  pop     disc1 #@(main@106)(main@136)(main@199)
   #@(main@107)(main@136)(main@199)
  push    9 #@(main@108)(main@136)(main@199)
  push    src.pos #@(main@109)(main@136)(main@199)
  sub #@(main@110)(main@136)(main@199)
  pop     yy1 #@(main@111)(main@136)(main@199)
  push    9 #@(main@112)(main@136)(main@199)
  push    disc1 #@(main@113)(main@136)(main@199)
  sub #@(main@114)(main@136)(main@199)
  pop     xx1 #@(main@115)(main@136)(main@199)
  #(begin macro)ansi_CUP    yy1,  xx1
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    yy1 #@(ansi_inc@126)(main@116)(main@136)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput47 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@136)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@136)(main@199)
  loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@136)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@136)(main@199)
    #(begin macro)divide  _wbdinput47,  10, _wbdinput47,  __wbdoutput
    push    _wbdinput47 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@199)
    pop     _wbdinput47 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@199)
    #(end macro)divide  _wbdinput47,  10, _wbdinput47,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@136)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@136)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero47, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@136)(main@199)
  sbm     prefixzero47 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@136)(main@199)
  #(end macro)lvar    prefixzero47, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@136)(main@199)
  sbm     __wbdcnt47 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@136)(main@199)
  loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@136)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@136)(main@199)
    #(begin macro)if_sup   __wbdcnt47,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt47 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@199)
      #(end macro)if_sup   __wbdcnt47,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero47, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero47 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero47, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@136)(main@199)
        #(begin macro)if_equal    prefixzero47, 0
        push    prefixzero47 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@199)
          #(end macro)if_equal    prefixzero47, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@136)(main@199)
      fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@136)(main@199)
    else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@136)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@136)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@136)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@136)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@136)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@136)(main@199)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@136)(main@199)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@136)(main@199)
  #(end macro)print   ;
  push    xx1 #@(ansi_inc@129)(main@116)(main@136)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput48 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@136)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@136)(main@199)
  loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@136)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@136)(main@199)
    #(begin macro)divide  _wbdinput48,  10, _wbdinput48,  __wbdoutput
    push    _wbdinput48 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@199)
    pop     _wbdinput48 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@199)
    #(end macro)divide  _wbdinput48,  10, _wbdinput48,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@136)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@136)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero48, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@136)(main@199)
  sbm     prefixzero48 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@136)(main@199)
  #(end macro)lvar    prefixzero48, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@136)(main@199)
  sbm     __wbdcnt48 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@136)(main@199)
  loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@136)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@136)(main@199)
    #(begin macro)if_sup   __wbdcnt48,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt48 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@199)
      #(end macro)if_sup   __wbdcnt48,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero48, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero48 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero48, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@136)(main@199)
        #(begin macro)if_equal    prefixzero48, 0
        push    prefixzero48 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@199)
          #(end macro)if_equal    prefixzero48, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@136)(main@199)
      fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@136)(main@199)
    else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@136)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@136)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@136)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@136)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@136)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@136)(main@199)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@136)(main@199)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@136)(main@199)
  #(end macro)print   H
  #(end macro)ansi_CUP    yy1,  xx1
  #(begin macro)ansi_SGR_bgcolor   disc1
  push    disc1 #@(ansi_inc@431)(main@117)(main@136)(main@199)
  add     40 #@(ansi_inc@432)(main@117)(main@136)(main@199)
  sbm     __ansibgc1 #@(ansi_inc@433)(main@117)(main@136)(main@199)
  #(begin macro)ansi_SGR    __ansibgc1
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansibgc1 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput49 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    #(begin macro)divide  _wbdinput49,  10, _wbdinput49,  __wbdoutput
    push    _wbdinput49 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    pop     _wbdinput49 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    #(end macro)divide  _wbdinput49,  10, _wbdinput49,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero49, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  sbm     prefixzero49 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)lvar    prefixzero49, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  sbm     __wbdcnt49 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    #(begin macro)if_sup   __wbdcnt49,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt49 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      #(end macro)if_sup   __wbdcnt49,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero49, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero49 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero49, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        #(begin macro)if_equal    prefixzero49, 0
        push    prefixzero49 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
          #(end macro)if_equal    prefixzero49, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansibgc1
  drop #@(ansi_inc@435)(main@117)(main@136)(main@199)
  #(end macro)ansi_SGR_bgcolor   disc1
  #(begin macro)ansi_SGR_fgcolor   disc1
  push    disc1 #@(ansi_inc@407)(main@118)(main@136)(main@199)
  add     30 #@(ansi_inc@408)(main@118)(main@136)(main@199)
  sbm     __ansifgc2 #@(ansi_inc@409)(main@118)(main@136)(main@199)
  #(begin macro)ansi_SGR    __ansifgc2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansifgc2 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput50 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    #(begin macro)divide  _wbdinput50,  10, _wbdinput50,  __wbdoutput
    push    _wbdinput50 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    pop     _wbdinput50 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    #(end macro)divide  _wbdinput50,  10, _wbdinput50,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero50, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  sbm     prefixzero50 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)lvar    prefixzero50, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  sbm     __wbdcnt50 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    #(begin macro)if_sup   __wbdcnt50,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt50 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      #(end macro)if_sup   __wbdcnt50,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero50, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero50 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero50, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        #(begin macro)if_equal    prefixzero50, 0
        push    prefixzero50 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
          #(end macro)if_equal    prefixzero50, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansifgc2
  drop #@(ansi_inc@411)(main@118)(main@136)(main@199)
  #(end macro)ansi_SGR_fgcolor   disc1
  push    disc1 #@(main@119)(main@136)(main@199)
  loop #@(main@120)(main@136)(main@199)
    #(begin macro)print   XX
    push    0 #@(macro_inc@331)(main@121)(main@136)(main@199)
    set     88 #@(macro_inc@346)(main@121)(main@136)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@136)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@136)(main@199)
    drop #@(macro_inc@351)(main@121)(main@136)(main@199)
    #(end macro)print   XX
  endloop #@(main@122)(main@136)(main@199)
  #(begin macro)print   X
  push    0 #@(macro_inc@331)(main@123)(main@136)(main@199)
  set     88 #@(macro_inc@346)(main@123)(main@136)(main@199)
  out             # 'X' #@(macro_inc@348)(main@123)(main@136)(main@199)
  drop #@(macro_inc@351)(main@123)(main@136)(main@199)
  #(end macro)print   X
  arotr   src #@(main@124)(main@136)(main@199)
endloop #@(main@125)(main@136)(main@199)
push    oldPos1 #@(main@126)(main@136)(main@199)
loop #@(main@127)(main@136)(main@199)
  arotl   src #@(main@128)(main@136)(main@199)
endloop #@(main@129)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(main@130)(main@136)(main@199)
drop #@(macro_inc@15)(main@130)(main@136)(main@199)
drop #@(macro_inc@15)(main@130)(main@136)(main@199)
drop #@(macro_inc@15)(main@130)(main@136)(main@199)
#(end macro)scope_end
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@136)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput51 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  #(begin macro)divide  _wbdinput51,  10, _wbdinput51,  __wbdoutput
  push    _wbdinput51 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  pop     _wbdinput51 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  #(end macro)divide  _wbdinput51,  10, _wbdinput51,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero51, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
sbm     prefixzero51 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)lvar    prefixzero51, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
sbm     __wbdcnt51 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  #(begin macro)if_sup   __wbdcnt51,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt51 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    #(end macro)if_sup   __wbdcnt51,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero51, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero51 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero51, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      #(begin macro)if_equal    prefixzero51, 0
      push    prefixzero51 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
        #(end macro)if_equal    prefixzero51, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
#(end macro)displayTower    src,    9,   9
#(begin macro)displayTower    aux,    26,   9
# display stick #@(main@70)(main@137)(main@199)
#(begin macro)ansi_CUP    9,    19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    9 #@(ansi_inc@126)(main@71)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput52 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@137)(main@199)
  #(begin macro)divide  _wbdinput52,  10, _wbdinput52,  __wbdoutput
  push    _wbdinput52 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@199)
  pop     _wbdinput52 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@199)
  #(end macro)divide  _wbdinput52,  10, _wbdinput52,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero52, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@137)(main@199)
sbm     prefixzero52 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@137)(main@199)
#(end macro)lvar    prefixzero52, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@137)(main@199)
sbm     __wbdcnt52 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt52,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt52 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt52,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero52, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero52 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero52, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero52, 0
      push    prefixzero52 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@199)
        #(end macro)if_equal    prefixzero52, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@71)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput53 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@137)(main@199)
  #(begin macro)divide  _wbdinput53,  10, _wbdinput53,  __wbdoutput
  push    _wbdinput53 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@199)
  pop     _wbdinput53 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@199)
  #(end macro)divide  _wbdinput53,  10, _wbdinput53,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero53, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@137)(main@199)
sbm     prefixzero53 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@137)(main@199)
#(end macro)lvar    prefixzero53, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@137)(main@199)
sbm     __wbdcnt53 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt53,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt53 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt53,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero53, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero53 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero53, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero53, 0
      push    prefixzero53 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@199)
        #(end macro)if_equal    prefixzero53, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    9,    19
#(begin macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR3   48, 5,  94
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput54 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)divide  _wbdinput54,  10, _wbdinput54,  __wbdoutput
  push    _wbdinput54 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     _wbdinput54 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(end macro)divide  _wbdinput54,  10, _wbdinput54,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero54, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     prefixzero54 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)lvar    prefixzero54, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     __wbdcnt54 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt54,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt54 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt54,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero54, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero54 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero54, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero54, 0
      push    prefixzero54 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)if_equal    prefixzero54, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput55 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)divide  _wbdinput55,  10, _wbdinput55,  __wbdoutput
  push    _wbdinput55 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     _wbdinput55 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(end macro)divide  _wbdinput55,  10, _wbdinput55,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero55, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     prefixzero55 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)lvar    prefixzero55, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     __wbdcnt55 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt55,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt55 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt55,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero55, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero55 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero55, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero55, 0
      push    prefixzero55 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)if_equal    prefixzero55, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)print   ;
push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput56 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)divide  _wbdinput56,  10, _wbdinput56,  __wbdoutput
  push    _wbdinput56 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     _wbdinput56 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(end macro)divide  _wbdinput56,  10, _wbdinput56,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero56, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     prefixzero56 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)lvar    prefixzero56, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
sbm     __wbdcnt56 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt56,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt56 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt56,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero56, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero56 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero56, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero56, 0
      push    prefixzero56 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)if_equal    prefixzero56, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   48, 5,  94
#(end macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput57 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)divide  _wbdinput57,  10, _wbdinput57,  __wbdoutput
  push    _wbdinput57 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     _wbdinput57 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(end macro)divide  _wbdinput57,  10, _wbdinput57,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero57, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     prefixzero57 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)lvar    prefixzero57, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     __wbdcnt57 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt57,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt57 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt57,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero57, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero57 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero57, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero57, 0
      push    prefixzero57 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)if_equal    prefixzero57, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput58 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)divide  _wbdinput58,  10, _wbdinput58,  __wbdoutput
  push    _wbdinput58 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     _wbdinput58 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(end macro)divide  _wbdinput58,  10, _wbdinput58,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero58, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     prefixzero58 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)lvar    prefixzero58, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     __wbdcnt58 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt58,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt58 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt58,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero58, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero58 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero58, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero58, 0
      push    prefixzero58 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)if_equal    prefixzero58, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput59 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)divide  _wbdinput59,  10, _wbdinput59,  __wbdoutput
  push    _wbdinput59 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     _wbdinput59 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(end macro)divide  _wbdinput59,  10, _wbdinput59,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero59, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     prefixzero59 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)lvar    prefixzero59, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
sbm     __wbdcnt59 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt59,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt59 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt59,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero59, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero59 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero59, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero59, 0
      push    prefixzero59 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)if_equal    prefixzero59, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
push    '=' # plate #@(main@74)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
out #@(main@76)(main@137)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput60 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  #(begin macro)divide  _wbdinput60,  10, _wbdinput60,  __wbdoutput
  push    _wbdinput60 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  pop     _wbdinput60 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  #(end macro)divide  _wbdinput60,  10, _wbdinput60,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero60, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
sbm     prefixzero60 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)lvar    prefixzero60, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
sbm     __wbdcnt60 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt60,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt60 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt60,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero60, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero60 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero60, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero60, 0
      push    prefixzero60 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
        #(end macro)if_equal    prefixzero60, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
set     ' ' #@(main@79)(main@137)(main@199)
#(begin macro)ansi_CUP    8,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput61 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput61,  10, _wbdinput61,  __wbdoutput
  push    _wbdinput61 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput61 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput61,  10, _wbdinput61,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero61, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero61 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero61, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt61 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt61,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt61 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt61,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero61, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero61 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero61, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero61, 0
      push    prefixzero61 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero61, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput62 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput62,  10, _wbdinput62,  __wbdoutput
  push    _wbdinput62 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput62 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput62,  10, _wbdinput62,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero62, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero62 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero62, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt62 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt62,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt62 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt62,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero62, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero62 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero62, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero62, 0
      push    prefixzero62 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero62, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    7,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput63 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput63,  10, _wbdinput63,  __wbdoutput
  push    _wbdinput63 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput63 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput63,  10, _wbdinput63,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero63, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero63 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero63, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt63 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt63,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt63 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt63,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero63, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero63 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero63, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero63, 0
      push    prefixzero63 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero63, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput64 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput64,  10, _wbdinput64,  __wbdoutput
  push    _wbdinput64 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput64 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput64,  10, _wbdinput64,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero64, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero64 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero64, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt64 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt64,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt64 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt64,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero64, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero64 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero64, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero64, 0
      push    prefixzero64 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero64, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    6,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput65 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput65,  10, _wbdinput65,  __wbdoutput
  push    _wbdinput65 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput65 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput65,  10, _wbdinput65,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero65, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero65 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero65, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt65 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt65,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt65 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt65,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero65, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero65 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero65, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero65, 0
      push    prefixzero65 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero65, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput66 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput66,  10, _wbdinput66,  __wbdoutput
  push    _wbdinput66 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput66 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput66,  10, _wbdinput66,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero66, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero66 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero66, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt66 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt66,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt66 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt66,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero66, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero66 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero66, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero66, 0
      push    prefixzero66 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero66, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    5,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput67 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput67,  10, _wbdinput67,  __wbdoutput
  push    _wbdinput67 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput67 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput67,  10, _wbdinput67,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero67, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero67 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero67, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt67 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt67,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt67 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt67,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero67, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero67 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero67, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero67, 0
      push    prefixzero67 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero67, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput68 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput68,  10, _wbdinput68,  __wbdoutput
  push    _wbdinput68 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput68 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput68,  10, _wbdinput68,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero68, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero68 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero68, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt68 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt68,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt68 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt68,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero68, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero68 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero68, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero68, 0
      push    prefixzero68 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero68, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    4,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput69 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput69,  10, _wbdinput69,  __wbdoutput
  push    _wbdinput69 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput69 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput69,  10, _wbdinput69,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero69, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero69 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero69, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt69 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt69,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt69 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt69,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero69, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero69 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero69, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero69, 0
      push    prefixzero69 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero69, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput70 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput70,  10, _wbdinput70,  __wbdoutput
  push    _wbdinput70 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput70 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput70,  10, _wbdinput70,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero70, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero70 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero70, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt70 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt70,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt70 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt70,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero70, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero70 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero70, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero70, 0
      push    prefixzero70 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero70, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    3,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput71 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput71,  10, _wbdinput71,  __wbdoutput
  push    _wbdinput71 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput71 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput71,  10, _wbdinput71,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero71, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero71 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero71, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt71 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt71,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt71 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt71,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero71, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero71 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero71, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero71, 0
      push    prefixzero71 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero71, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput72 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput72,  10, _wbdinput72,  __wbdoutput
  push    _wbdinput72 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput72 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput72,  10, _wbdinput72,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero72, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero72 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero72, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt72 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt72,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt72 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt72,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero72, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero72 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero72, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero72, 0
      push    prefixzero72 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero72, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_CUP    2,   19
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput73 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput73,  10, _wbdinput73,  __wbdoutput
  push    _wbdinput73 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     _wbdinput73 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput73,  10, _wbdinput73,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero73, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     prefixzero73 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero73, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@199)
sbm     __wbdcnt73 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt73,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt73 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt73,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero73, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero73 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero73, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero73, 0
      push    prefixzero73 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero73, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@199)
#(end macro)print   ;
push    19 #@(ansi_inc@129)(main@81)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput74 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)divide  _wbdinput74,  10, _wbdinput74,  __wbdoutput
  push    _wbdinput74 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     _wbdinput74 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(end macro)divide  _wbdinput74,  10, _wbdinput74,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero74, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     prefixzero74 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)lvar    prefixzero74, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@199)
sbm     __wbdcnt74 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt74,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt74 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt74,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero74, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero74 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero74, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero74, 0
      push    prefixzero74 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)if_equal    prefixzero74, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,   19
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
out #@(main@83)(main@137)(main@199)
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput75 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)divide  _wbdinput75,  10, _wbdinput75,  __wbdoutput
  push    _wbdinput75 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     _wbdinput75 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(end macro)divide  _wbdinput75,  10, _wbdinput75,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero75, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     prefixzero75 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)lvar    prefixzero75, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     __wbdcnt75 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt75,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt75 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt75,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero75, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero75 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero75, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero75, 0
      push    prefixzero75 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)if_equal    prefixzero75, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput76 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)divide  _wbdinput76,  10, _wbdinput76,  __wbdoutput
  push    _wbdinput76 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     _wbdinput76 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(end macro)divide  _wbdinput76,  10, _wbdinput76,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero76, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     prefixzero76 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)lvar    prefixzero76, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     __wbdcnt76 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt76,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt76 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt76,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero76, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero76 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero76, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero76, 0
      push    prefixzero76 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)if_equal    prefixzero76, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput77 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)divide  _wbdinput77,  10, _wbdinput77,  __wbdoutput
  push    _wbdinput77 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     _wbdinput77 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(end macro)divide  _wbdinput77,  10, _wbdinput77,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero77, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     prefixzero77 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)lvar    prefixzero77, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
sbm     __wbdcnt77 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt77,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt77 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt77,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero77, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero77 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero77, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero77, 0
      push    prefixzero77 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)if_equal    prefixzero77, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
set     '|' # stick #@(main@87)(main@137)(main@199)
#(begin macro)ansi_CUP    8,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput78 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput78,  10, _wbdinput78,  __wbdoutput
  push    _wbdinput78 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput78 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput78,  10, _wbdinput78,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero78, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero78 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero78, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt78 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt78,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt78 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt78,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero78, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero78 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero78, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero78, 0
      push    prefixzero78 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero78, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput79 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput79,  10, _wbdinput79,  __wbdoutput
  push    _wbdinput79 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput79 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput79,  10, _wbdinput79,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero79, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero79 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero79, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt79 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt79,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt79 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt79,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero79, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero79 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero79, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero79, 0
      push    prefixzero79 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero79, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    7,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput80 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput80,  10, _wbdinput80,  __wbdoutput
  push    _wbdinput80 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput80 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput80,  10, _wbdinput80,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero80, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero80 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero80, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt80 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt80,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt80 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt80,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero80, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero80 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero80, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero80, 0
      push    prefixzero80 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero80, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput81 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput81,  10, _wbdinput81,  __wbdoutput
  push    _wbdinput81 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput81 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput81,  10, _wbdinput81,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero81, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero81 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero81, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt81 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt81,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt81 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt81,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero81, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero81 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero81, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero81, 0
      push    prefixzero81 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero81, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    6,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput82 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput82,  10, _wbdinput82,  __wbdoutput
  push    _wbdinput82 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput82 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput82,  10, _wbdinput82,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero82, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero82 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero82, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt82 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt82,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt82 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt82,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero82, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero82 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero82, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero82, 0
      push    prefixzero82 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero82, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput83 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput83,  10, _wbdinput83,  __wbdoutput
  push    _wbdinput83 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput83 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput83,  10, _wbdinput83,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero83, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero83 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero83, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt83 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt83,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt83 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt83,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero83, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero83 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero83, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero83, 0
      push    prefixzero83 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero83, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    5,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput84 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput84,  10, _wbdinput84,  __wbdoutput
  push    _wbdinput84 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput84 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput84,  10, _wbdinput84,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero84, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero84 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero84, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt84 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt84,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt84 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt84,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero84, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero84 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero84, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero84, 0
      push    prefixzero84 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero84, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput85 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput85,  10, _wbdinput85,  __wbdoutput
  push    _wbdinput85 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput85 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput85,  10, _wbdinput85,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero85, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero85 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero85, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt85 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt85,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt85 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt85,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero85, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero85 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero85, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero85, 0
      push    prefixzero85 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero85, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    4,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput86 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput86,  10, _wbdinput86,  __wbdoutput
  push    _wbdinput86 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput86 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput86,  10, _wbdinput86,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero86, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero86 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero86, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt86 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt86,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt86 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt86,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero86, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero86 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero86, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero86, 0
      push    prefixzero86 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero86, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput87 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput87,  10, _wbdinput87,  __wbdoutput
  push    _wbdinput87 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput87 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput87,  10, _wbdinput87,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero87, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero87 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero87, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt87 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt87,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt87 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt87,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero87, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero87 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero87, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero87, 0
      push    prefixzero87 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero87, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    3,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput88 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput88,  10, _wbdinput88,  __wbdoutput
  push    _wbdinput88 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput88 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput88,  10, _wbdinput88,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero88, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero88 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero88, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt88 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt88,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt88 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt88,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero88, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero88 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero88, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero88, 0
      push    prefixzero88 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero88, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput89 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput89,  10, _wbdinput89,  __wbdoutput
  push    _wbdinput89 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput89 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput89,  10, _wbdinput89,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero89, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero89 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero89, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt89 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt89,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt89 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt89,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero89, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero89 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero89, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero89, 0
      push    prefixzero89 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero89, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,    26
out #@(main@90)(main@137)(main@199)
#(begin macro)ansi_CUP    2,    26
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput90 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput90,  10, _wbdinput90,  __wbdoutput
  push    _wbdinput90 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     _wbdinput90 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput90,  10, _wbdinput90,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero90, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     prefixzero90 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero90, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@199)
sbm     __wbdcnt90 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt90,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt90 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt90,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero90, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero90 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero90, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero90, 0
      push    prefixzero90 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero90, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@199)
#(end macro)print   ;
push    26 #@(ansi_inc@129)(main@89)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput91 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)divide  _wbdinput91,  10, _wbdinput91,  __wbdoutput
  push    _wbdinput91 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     _wbdinput91 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(end macro)divide  _wbdinput91,  10, _wbdinput91,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero91, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     prefixzero91 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)lvar    prefixzero91, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@199)
sbm     __wbdcnt91 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt91,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt91 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt91,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero91, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero91 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero91, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero91, 0
      push    prefixzero91 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)if_equal    prefixzero91, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,    26
out #@(main@90)(main@137)(main@199)
drop #@(main@92)(main@137)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput92 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  #(begin macro)divide  _wbdinput92,  10, _wbdinput92,  __wbdoutput
  push    _wbdinput92 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  pop     _wbdinput92 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  #(end macro)divide  _wbdinput92,  10, _wbdinput92,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero92, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
sbm     prefixzero92 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)lvar    prefixzero92, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
sbm     __wbdcnt92 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt92,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt92 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt92,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero92, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero92 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero92, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero92, 0
      push    prefixzero92 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
        #(end macro)if_equal    prefixzero92, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
# display discs #@(main@94)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    yy2,  0
push    0 #@(macro_inc@22)(main@96)(main@137)(main@199)
sbm     yy2 #@(macro_inc@23)(main@96)(main@137)(main@199)
#(end macro)lvar    yy2,  0
#(begin macro)lvar    xx2,  0
push    0 #@(macro_inc@22)(main@97)(main@137)(main@199)
sbm     xx2 #@(macro_inc@23)(main@97)(main@137)(main@199)
#(end macro)lvar    xx2,  0
#(begin macro)lvar    oldPos2,  0
push    0 #@(macro_inc@22)(main@98)(main@137)(main@199)
sbm     oldPos2 #@(macro_inc@23)(main@98)(main@137)(main@199)
#(end macro)lvar    oldPos2,  0
#(begin macro)lvar    disc2,    0
push    0 #@(macro_inc@22)(main@99)(main@137)(main@199)
sbm     disc2 #@(macro_inc@23)(main@99)(main@137)(main@199)
#(end macro)lvar    disc2,    0
push    aux.pos #@(main@100)(main@137)(main@199)
pop     oldPos2 #@(main@101)(main@137)(main@199)
 #@(main@102)(main@137)(main@199)
push    aux.pos #@(main@103)(main@137)(main@199)
loop #@(main@104)(main@137)(main@199)
  push    aux #@(main@105)(main@137)(main@199)
  pop     disc2 #@(main@106)(main@137)(main@199)
   #@(main@107)(main@137)(main@199)
  push    9 #@(main@108)(main@137)(main@199)
  push    aux.pos #@(main@109)(main@137)(main@199)
  sub #@(main@110)(main@137)(main@199)
  pop     yy2 #@(main@111)(main@137)(main@199)
  push    26 #@(main@112)(main@137)(main@199)
  push    disc2 #@(main@113)(main@137)(main@199)
  sub #@(main@114)(main@137)(main@199)
  pop     xx2 #@(main@115)(main@137)(main@199)
  #(begin macro)ansi_CUP    yy2,  xx2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    yy2 #@(ansi_inc@126)(main@116)(main@137)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput93 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@137)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@137)(main@199)
  loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@137)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@137)(main@199)
    #(begin macro)divide  _wbdinput93,  10, _wbdinput93,  __wbdoutput
    push    _wbdinput93 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@199)
    pop     _wbdinput93 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@199)
    #(end macro)divide  _wbdinput93,  10, _wbdinput93,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@137)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@137)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero93, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@137)(main@199)
  sbm     prefixzero93 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@137)(main@199)
  #(end macro)lvar    prefixzero93, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@137)(main@199)
  sbm     __wbdcnt93 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@137)(main@199)
  loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@137)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@137)(main@199)
    #(begin macro)if_sup   __wbdcnt93,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt93 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@199)
      #(end macro)if_sup   __wbdcnt93,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero93, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero93 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero93, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@137)(main@199)
        #(begin macro)if_equal    prefixzero93, 0
        push    prefixzero93 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@199)
          #(end macro)if_equal    prefixzero93, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@137)(main@199)
      fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@137)(main@199)
    else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@137)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@137)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@137)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@137)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@137)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@137)(main@199)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@137)(main@199)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@137)(main@199)
  #(end macro)print   ;
  push    xx2 #@(ansi_inc@129)(main@116)(main@137)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput94 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@137)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@137)(main@199)
  loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@137)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@137)(main@199)
    #(begin macro)divide  _wbdinput94,  10, _wbdinput94,  __wbdoutput
    push    _wbdinput94 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@199)
    pop     _wbdinput94 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@199)
    #(end macro)divide  _wbdinput94,  10, _wbdinput94,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@137)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@137)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero94, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@137)(main@199)
  sbm     prefixzero94 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@137)(main@199)
  #(end macro)lvar    prefixzero94, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@137)(main@199)
  sbm     __wbdcnt94 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@137)(main@199)
  loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@137)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@137)(main@199)
    #(begin macro)if_sup   __wbdcnt94,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt94 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@199)
      #(end macro)if_sup   __wbdcnt94,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero94, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero94 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero94, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@137)(main@199)
        #(begin macro)if_equal    prefixzero94, 0
        push    prefixzero94 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@199)
          #(end macro)if_equal    prefixzero94, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@137)(main@199)
      fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@137)(main@199)
    else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@137)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@137)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@137)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@137)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@137)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@137)(main@199)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@137)(main@199)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@137)(main@199)
  #(end macro)print   H
  #(end macro)ansi_CUP    yy2,  xx2
  #(begin macro)ansi_SGR_bgcolor   disc2
  push    disc2 #@(ansi_inc@431)(main@117)(main@137)(main@199)
  add     40 #@(ansi_inc@432)(main@117)(main@137)(main@199)
  sbm     __ansibgc2 #@(ansi_inc@433)(main@117)(main@137)(main@199)
  #(begin macro)ansi_SGR    __ansibgc2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansibgc2 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput95 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    #(begin macro)divide  _wbdinput95,  10, _wbdinput95,  __wbdoutput
    push    _wbdinput95 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    pop     _wbdinput95 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    #(end macro)divide  _wbdinput95,  10, _wbdinput95,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero95, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  sbm     prefixzero95 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)lvar    prefixzero95, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  sbm     __wbdcnt95 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    #(begin macro)if_sup   __wbdcnt95,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt95 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      #(end macro)if_sup   __wbdcnt95,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero95, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero95 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero95, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        #(begin macro)if_equal    prefixzero95, 0
        push    prefixzero95 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
          #(end macro)if_equal    prefixzero95, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansibgc2
  drop #@(ansi_inc@435)(main@117)(main@137)(main@199)
  #(end macro)ansi_SGR_bgcolor   disc2
  #(begin macro)ansi_SGR_fgcolor   disc2
  push    disc2 #@(ansi_inc@407)(main@118)(main@137)(main@199)
  add     30 #@(ansi_inc@408)(main@118)(main@137)(main@199)
  sbm     __ansifgc3 #@(ansi_inc@409)(main@118)(main@137)(main@199)
  #(begin macro)ansi_SGR    __ansifgc3
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansifgc3 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput96 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    #(begin macro)divide  _wbdinput96,  10, _wbdinput96,  __wbdoutput
    push    _wbdinput96 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    pop     _wbdinput96 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    #(end macro)divide  _wbdinput96,  10, _wbdinput96,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero96, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  sbm     prefixzero96 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)lvar    prefixzero96, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  sbm     __wbdcnt96 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    #(begin macro)if_sup   __wbdcnt96,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt96 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      #(end macro)if_sup   __wbdcnt96,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero96, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero96 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero96, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        #(begin macro)if_equal    prefixzero96, 0
        push    prefixzero96 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
          #(end macro)if_equal    prefixzero96, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansifgc3
  drop #@(ansi_inc@411)(main@118)(main@137)(main@199)
  #(end macro)ansi_SGR_fgcolor   disc2
  push    disc2 #@(main@119)(main@137)(main@199)
  loop #@(main@120)(main@137)(main@199)
    #(begin macro)print   XX
    push    0 #@(macro_inc@331)(main@121)(main@137)(main@199)
    set     88 #@(macro_inc@346)(main@121)(main@137)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@137)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@137)(main@199)
    drop #@(macro_inc@351)(main@121)(main@137)(main@199)
    #(end macro)print   XX
  endloop #@(main@122)(main@137)(main@199)
  #(begin macro)print   X
  push    0 #@(macro_inc@331)(main@123)(main@137)(main@199)
  set     88 #@(macro_inc@346)(main@123)(main@137)(main@199)
  out             # 'X' #@(macro_inc@348)(main@123)(main@137)(main@199)
  drop #@(macro_inc@351)(main@123)(main@137)(main@199)
  #(end macro)print   X
  arotr   aux #@(main@124)(main@137)(main@199)
endloop #@(main@125)(main@137)(main@199)
push    oldPos2 #@(main@126)(main@137)(main@199)
loop #@(main@127)(main@137)(main@199)
  arotl   aux #@(main@128)(main@137)(main@199)
endloop #@(main@129)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(main@130)(main@137)(main@199)
drop #@(macro_inc@15)(main@130)(main@137)(main@199)
drop #@(macro_inc@15)(main@130)(main@137)(main@199)
drop #@(macro_inc@15)(main@130)(main@137)(main@199)
#(end macro)scope_end
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@137)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput97 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  #(begin macro)divide  _wbdinput97,  10, _wbdinput97,  __wbdoutput
  push    _wbdinput97 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  pop     _wbdinput97 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  #(end macro)divide  _wbdinput97,  10, _wbdinput97,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero97, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
sbm     prefixzero97 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)lvar    prefixzero97, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
sbm     __wbdcnt97 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  #(begin macro)if_sup   __wbdcnt97,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt97 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    #(end macro)if_sup   __wbdcnt97,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero97, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero97 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero97, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      #(begin macro)if_equal    prefixzero97, 0
      push    prefixzero97 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
        #(end macro)if_equal    prefixzero97, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
#(end macro)displayTower    aux,    26,   9
#(begin macro)displayTower    dest,   43,   9
# display stick #@(main@70)(main@138)(main@199)
#(begin macro)ansi_CUP    9,    36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    9 #@(ansi_inc@126)(main@71)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput98 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@138)(main@199)
  #(begin macro)divide  _wbdinput98,  10, _wbdinput98,  __wbdoutput
  push    _wbdinput98 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@199)
  pop     _wbdinput98 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@199)
  #(end macro)divide  _wbdinput98,  10, _wbdinput98,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero98, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@138)(main@199)
sbm     prefixzero98 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@138)(main@199)
#(end macro)lvar    prefixzero98, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@138)(main@199)
sbm     __wbdcnt98 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt98,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt98 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt98,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero98, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero98 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero98, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero98, 0
      push    prefixzero98 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@199)
        #(end macro)if_equal    prefixzero98, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@71)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput99 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@138)(main@199)
  #(begin macro)divide  _wbdinput99,  10, _wbdinput99,  __wbdoutput
  push    _wbdinput99 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@199)
  pop     _wbdinput99 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@199)
  #(end macro)divide  _wbdinput99,  10, _wbdinput99,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero99, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@138)(main@199)
sbm     prefixzero99 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@138)(main@199)
#(end macro)lvar    prefixzero99, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@138)(main@199)
sbm     __wbdcnt99 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt99,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt99 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt99,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero99, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero99 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero99, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero99, 0
      push    prefixzero99 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@199)
        #(end macro)if_equal    prefixzero99, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    9,    36
#(begin macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR3   48, 5,  94
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput100 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)divide  _wbdinput100,  10, _wbdinput100,  __wbdoutput
  push    _wbdinput100 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     _wbdinput100 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(end macro)divide  _wbdinput100,  10, _wbdinput100,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero100, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     prefixzero100 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)lvar    prefixzero100, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     __wbdcnt100 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt100,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt100 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt100,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero100, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero100 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero100, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero100, 0
      push    prefixzero100 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)if_equal    prefixzero100, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput101 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)divide  _wbdinput101,  10, _wbdinput101,  __wbdoutput
  push    _wbdinput101 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     _wbdinput101 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(end macro)divide  _wbdinput101,  10, _wbdinput101,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero101, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     prefixzero101 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)lvar    prefixzero101, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     __wbdcnt101 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt101,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt101 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt101,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero101, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero101 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero101, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero101, 0
      push    prefixzero101 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)if_equal    prefixzero101, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)print   ;
push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput102 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)divide  _wbdinput102,  10, _wbdinput102,  __wbdoutput
  push    _wbdinput102 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     _wbdinput102 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(end macro)divide  _wbdinput102,  10, _wbdinput102,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero102, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     prefixzero102 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)lvar    prefixzero102, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
sbm     __wbdcnt102 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt102,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt102 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt102,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero102, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero102 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero102, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero102, 0
      push    prefixzero102 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)if_equal    prefixzero102, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   48, 5,  94
#(end macro)ansi_SGR_bg256  94
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput103 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)divide  _wbdinput103,  10, _wbdinput103,  __wbdoutput
  push    _wbdinput103 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     _wbdinput103 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(end macro)divide  _wbdinput103,  10, _wbdinput103,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero103, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     prefixzero103 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)lvar    prefixzero103, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     __wbdcnt103 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt103,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt103 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt103,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero103, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero103 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero103, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero103, 0
      push    prefixzero103 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)if_equal    prefixzero103, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput104 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)divide  _wbdinput104,  10, _wbdinput104,  __wbdoutput
  push    _wbdinput104 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     _wbdinput104 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(end macro)divide  _wbdinput104,  10, _wbdinput104,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero104, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     prefixzero104 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)lvar    prefixzero104, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     __wbdcnt104 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt104,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt104 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt104,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero104, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero104 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero104, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero104, 0
      push    prefixzero104 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)if_equal    prefixzero104, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput105 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)divide  _wbdinput105,  10, _wbdinput105,  __wbdoutput
  push    _wbdinput105 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     _wbdinput105 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(end macro)divide  _wbdinput105,  10, _wbdinput105,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero105, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     prefixzero105 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)lvar    prefixzero105, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
sbm     __wbdcnt105 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt105,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt105 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt105,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero105, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero105 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero105, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero105, 0
      push    prefixzero105 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)if_equal    prefixzero105, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
push    '=' # plate #@(main@74)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
out #@(main@76)(main@138)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput106 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  #(begin macro)divide  _wbdinput106,  10, _wbdinput106,  __wbdoutput
  push    _wbdinput106 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  pop     _wbdinput106 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  #(end macro)divide  _wbdinput106,  10, _wbdinput106,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero106, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
sbm     prefixzero106 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)lvar    prefixzero106, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
sbm     __wbdcnt106 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt106,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt106 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt106,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero106, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero106 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero106, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero106, 0
      push    prefixzero106 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
        #(end macro)if_equal    prefixzero106, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
set     ' ' #@(main@79)(main@138)(main@199)
#(begin macro)ansi_CUP    8,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput107 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput107,  10, _wbdinput107,  __wbdoutput
  push    _wbdinput107 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput107 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput107,  10, _wbdinput107,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero107, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero107 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero107, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt107 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt107,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt107 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt107,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero107, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero107 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero107, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero107, 0
      push    prefixzero107 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero107, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput108 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput108,  10, _wbdinput108,  __wbdoutput
  push    _wbdinput108 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput108 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput108,  10, _wbdinput108,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero108, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero108 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero108, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt108 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt108,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt108 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt108,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero108, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero108 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero108, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero108, 0
      push    prefixzero108 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero108, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    7,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput109 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput109,  10, _wbdinput109,  __wbdoutput
  push    _wbdinput109 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput109 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput109,  10, _wbdinput109,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero109, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero109 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero109, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt109 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt109,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt109 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt109,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero109, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero109 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero109, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero109, 0
      push    prefixzero109 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero109, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput110 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput110,  10, _wbdinput110,  __wbdoutput
  push    _wbdinput110 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput110 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput110,  10, _wbdinput110,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero110, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero110 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero110, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt110 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt110,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt110 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt110,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero110, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero110 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero110, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero110, 0
      push    prefixzero110 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero110, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    6,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput111 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput111,  10, _wbdinput111,  __wbdoutput
  push    _wbdinput111 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput111 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput111,  10, _wbdinput111,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero111, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero111 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero111, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt111 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt111,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt111 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt111,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero111, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero111 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero111, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero111, 0
      push    prefixzero111 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero111, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput112 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput112,  10, _wbdinput112,  __wbdoutput
  push    _wbdinput112 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput112 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput112,  10, _wbdinput112,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero112, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero112 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero112, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt112 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt112,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt112 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt112,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero112, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero112 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero112, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero112, 0
      push    prefixzero112 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero112, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    5,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput113 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput113,  10, _wbdinput113,  __wbdoutput
  push    _wbdinput113 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput113 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput113,  10, _wbdinput113,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero113, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero113 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero113, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt113 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt113,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt113 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt113,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero113, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero113 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero113, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero113, 0
      push    prefixzero113 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero113, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput114 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput114,  10, _wbdinput114,  __wbdoutput
  push    _wbdinput114 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput114 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput114,  10, _wbdinput114,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero114, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero114 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero114, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt114 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt114,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt114 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt114,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero114, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero114 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero114, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero114, 0
      push    prefixzero114 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero114, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    4,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput115 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput115,  10, _wbdinput115,  __wbdoutput
  push    _wbdinput115 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput115 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput115,  10, _wbdinput115,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero115, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero115 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero115, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt115 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt115,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt115 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt115,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero115, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero115 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero115, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero115, 0
      push    prefixzero115 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero115, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput116 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput116,  10, _wbdinput116,  __wbdoutput
  push    _wbdinput116 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput116 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput116,  10, _wbdinput116,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero116, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero116 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero116, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt116 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt116,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt116 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt116,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero116, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero116 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero116, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero116, 0
      push    prefixzero116 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero116, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    3,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput117 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput117,  10, _wbdinput117,  __wbdoutput
  push    _wbdinput117 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput117 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput117,  10, _wbdinput117,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero117, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero117 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero117, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt117 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt117,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt117 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt117,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero117, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero117 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero117, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero117, 0
      push    prefixzero117 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero117, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput118 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput118,  10, _wbdinput118,  __wbdoutput
  push    _wbdinput118 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput118 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput118,  10, _wbdinput118,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero118, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero118 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero118, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt118 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt118,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt118 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt118,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero118, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero118 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero118, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero118, 0
      push    prefixzero118 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero118, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_CUP    2,   36
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput119 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput119,  10, _wbdinput119,  __wbdoutput
  push    _wbdinput119 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     _wbdinput119 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput119,  10, _wbdinput119,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero119, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     prefixzero119 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero119, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@199)
sbm     __wbdcnt119 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt119,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt119 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt119,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero119, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero119 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero119, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero119, 0
      push    prefixzero119 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero119, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@199)
#(end macro)print   ;
push    36 #@(ansi_inc@129)(main@81)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput120 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)divide  _wbdinput120,  10, _wbdinput120,  __wbdoutput
  push    _wbdinput120 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     _wbdinput120 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(end macro)divide  _wbdinput120,  10, _wbdinput120,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero120, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     prefixzero120 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)lvar    prefixzero120, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@199)
sbm     __wbdcnt120 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt120,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt120 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt120,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero120, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero120 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero120, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero120, 0
      push    prefixzero120 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)if_equal    prefixzero120, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,   36
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
out #@(main@83)(main@138)(main@199)
#(begin macro)ansi_SGR_fg256  100
#(begin macro)ansi_SGR3   38, 5,  100
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput121 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)divide  _wbdinput121,  10, _wbdinput121,  __wbdoutput
  push    _wbdinput121 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     _wbdinput121 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(end macro)divide  _wbdinput121,  10, _wbdinput121,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero121, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     prefixzero121 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)lvar    prefixzero121, 1
push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     __wbdcnt121 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt121,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt121 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt121,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero121, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero121 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero121, 0
    else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero121, 0
      push    prefixzero121 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)if_equal    prefixzero121, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)print   ;
push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput122 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)divide  _wbdinput122,  10, _wbdinput122,  __wbdoutput
  push    _wbdinput122 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     _wbdinput122 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(end macro)divide  _wbdinput122,  10, _wbdinput122,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero122, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     prefixzero122 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)lvar    prefixzero122, 1
push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     __wbdcnt122 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt122,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt122 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt122,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero122, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero122 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero122, 0
    else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero122, 0
      push    prefixzero122 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)if_equal    prefixzero122, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)print   ;
push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput123 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)divide  _wbdinput123,  10, _wbdinput123,  __wbdoutput
  push    _wbdinput123 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     _wbdinput123 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(end macro)divide  _wbdinput123,  10, _wbdinput123,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero123, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     prefixzero123 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)lvar    prefixzero123, 1
push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
sbm     __wbdcnt123 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt123,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt123 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt123,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero123, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero123 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero123, 0
    else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero123, 0
      push    prefixzero123 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)if_equal    prefixzero123, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR3   38, 5,  100
#(end macro)ansi_SGR_fg256  100
set     '|' # stick #@(main@87)(main@138)(main@199)
#(begin macro)ansi_CUP    8,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    8 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput124 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput124,  10, _wbdinput124,  __wbdoutput
  push    _wbdinput124 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput124 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput124,  10, _wbdinput124,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero124, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero124 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero124, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt124 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt124,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt124 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt124,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero124, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero124 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero124, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero124, 0
      push    prefixzero124 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero124, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput125 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput125,  10, _wbdinput125,  __wbdoutput
  push    _wbdinput125 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput125 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput125,  10, _wbdinput125,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero125, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero125 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero125, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt125 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt125,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt125 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt125,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero125, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero125 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero125, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero125, 0
      push    prefixzero125 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero125, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    8,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    7,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    7 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput126 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput126,  10, _wbdinput126,  __wbdoutput
  push    _wbdinput126 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput126 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput126,  10, _wbdinput126,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero126, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero126 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero126, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt126 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt126,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt126 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt126,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero126, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero126 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero126, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero126, 0
      push    prefixzero126 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero126, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput127 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput127,  10, _wbdinput127,  __wbdoutput
  push    _wbdinput127 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput127 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput127,  10, _wbdinput127,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero127, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero127 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero127, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt127 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt127,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt127 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt127,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero127, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero127 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero127, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero127, 0
      push    prefixzero127 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero127, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    7,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    6,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    6 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput128 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput128,  10, _wbdinput128,  __wbdoutput
  push    _wbdinput128 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput128 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput128,  10, _wbdinput128,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero128, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero128 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero128, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt128 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt128,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt128 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt128,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero128, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero128 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero128, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero128, 0
      push    prefixzero128 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero128, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput129 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput129,  10, _wbdinput129,  __wbdoutput
  push    _wbdinput129 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput129 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput129,  10, _wbdinput129,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero129, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero129 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero129, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt129 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt129,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt129 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt129,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero129, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero129 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero129, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero129, 0
      push    prefixzero129 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero129, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    6,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    5,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    5 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput130 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput130,  10, _wbdinput130,  __wbdoutput
  push    _wbdinput130 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput130 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput130,  10, _wbdinput130,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero130, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero130 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero130, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt130 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt130,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt130 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt130,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero130, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero130 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero130, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero130, 0
      push    prefixzero130 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero130, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput131 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput131,  10, _wbdinput131,  __wbdoutput
  push    _wbdinput131 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput131 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput131,  10, _wbdinput131,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero131, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero131 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero131, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt131 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt131,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt131 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt131,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero131, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero131 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero131, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero131, 0
      push    prefixzero131 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero131, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    5,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    4,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    4 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput132 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput132,  10, _wbdinput132,  __wbdoutput
  push    _wbdinput132 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput132 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput132,  10, _wbdinput132,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero132, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero132 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero132, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt132 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt132,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt132 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt132,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero132, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero132 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero132, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero132, 0
      push    prefixzero132 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero132, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput133 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput133,  10, _wbdinput133,  __wbdoutput
  push    _wbdinput133 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput133 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput133,  10, _wbdinput133,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero133, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero133 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero133, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt133 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt133,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt133 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt133,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero133, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero133 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero133, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero133, 0
      push    prefixzero133 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero133, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    4,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    3,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    3 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput134 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput134,  10, _wbdinput134,  __wbdoutput
  push    _wbdinput134 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput134 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput134,  10, _wbdinput134,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero134, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero134 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero134, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt134 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt134,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt134 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt134,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero134, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero134 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero134, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero134, 0
      push    prefixzero134 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero134, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput135 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput135,  10, _wbdinput135,  __wbdoutput
  push    _wbdinput135 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput135 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput135,  10, _wbdinput135,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero135, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero135 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero135, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt135 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt135,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt135 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt135,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero135, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero135 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero135, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero135, 0
      push    prefixzero135 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero135, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    3,    43
out #@(main@90)(main@138)(main@199)
#(begin macro)ansi_CUP    2,    43
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    2 #@(ansi_inc@126)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput136 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput136,  10, _wbdinput136,  __wbdoutput
  push    _wbdinput136 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     _wbdinput136 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput136,  10, _wbdinput136,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero136, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     prefixzero136 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero136, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@199)
sbm     __wbdcnt136 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt136,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt136 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt136,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero136, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero136 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero136, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero136, 0
      push    prefixzero136 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero136, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@199)
#(end macro)print   ;
push    43 #@(ansi_inc@129)(main@89)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput137 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)divide  _wbdinput137,  10, _wbdinput137,  __wbdoutput
  push    _wbdinput137 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     _wbdinput137 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(end macro)divide  _wbdinput137,  10, _wbdinput137,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero137, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     prefixzero137 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)lvar    prefixzero137, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@199)
sbm     __wbdcnt137 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt137,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt137 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt137,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero137, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero137 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero137, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero137, 0
      push    prefixzero137 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)if_equal    prefixzero137, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    2,    43
out #@(main@90)(main@138)(main@199)
drop #@(main@92)(main@138)(main@199)
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput138 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  #(begin macro)divide  _wbdinput138,  10, _wbdinput138,  __wbdoutput
  push    _wbdinput138 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  pop     _wbdinput138 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  #(end macro)divide  _wbdinput138,  10, _wbdinput138,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero138, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
sbm     prefixzero138 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)lvar    prefixzero138, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
sbm     __wbdcnt138 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt138,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt138 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt138,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero138, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero138 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero138, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero138, 0
      push    prefixzero138 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
        #(end macro)if_equal    prefixzero138, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
# display discs #@(main@94)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    yy3,  0
push    0 #@(macro_inc@22)(main@96)(main@138)(main@199)
sbm     yy3 #@(macro_inc@23)(main@96)(main@138)(main@199)
#(end macro)lvar    yy3,  0
#(begin macro)lvar    xx3,  0
push    0 #@(macro_inc@22)(main@97)(main@138)(main@199)
sbm     xx3 #@(macro_inc@23)(main@97)(main@138)(main@199)
#(end macro)lvar    xx3,  0
#(begin macro)lvar    oldPos3,  0
push    0 #@(macro_inc@22)(main@98)(main@138)(main@199)
sbm     oldPos3 #@(macro_inc@23)(main@98)(main@138)(main@199)
#(end macro)lvar    oldPos3,  0
#(begin macro)lvar    disc3,    0
push    0 #@(macro_inc@22)(main@99)(main@138)(main@199)
sbm     disc3 #@(macro_inc@23)(main@99)(main@138)(main@199)
#(end macro)lvar    disc3,    0
push    dest.pos #@(main@100)(main@138)(main@199)
pop     oldPos3 #@(main@101)(main@138)(main@199)
 #@(main@102)(main@138)(main@199)
push    dest.pos #@(main@103)(main@138)(main@199)
loop #@(main@104)(main@138)(main@199)
  push    dest #@(main@105)(main@138)(main@199)
  pop     disc3 #@(main@106)(main@138)(main@199)
   #@(main@107)(main@138)(main@199)
  push    9 #@(main@108)(main@138)(main@199)
  push    dest.pos #@(main@109)(main@138)(main@199)
  sub #@(main@110)(main@138)(main@199)
  pop     yy3 #@(main@111)(main@138)(main@199)
  push    43 #@(main@112)(main@138)(main@199)
  push    disc3 #@(main@113)(main@138)(main@199)
  sub #@(main@114)(main@138)(main@199)
  pop     xx3 #@(main@115)(main@138)(main@199)
  #(begin macro)ansi_CUP    yy3,  xx3
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    yy3 #@(ansi_inc@126)(main@116)(main@138)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput139 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@138)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@138)(main@199)
  loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@138)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@138)(main@199)
    #(begin macro)divide  _wbdinput139,  10, _wbdinput139,  __wbdoutput
    push    _wbdinput139 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@199)
    pop     _wbdinput139 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@199)
    #(end macro)divide  _wbdinput139,  10, _wbdinput139,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@138)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@138)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero139, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@138)(main@199)
  sbm     prefixzero139 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@138)(main@199)
  #(end macro)lvar    prefixzero139, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@138)(main@199)
  sbm     __wbdcnt139 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@138)(main@199)
  loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@138)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@138)(main@199)
    #(begin macro)if_sup   __wbdcnt139,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt139 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@199)
      #(end macro)if_sup   __wbdcnt139,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero139, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero139 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero139, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@138)(main@199)
        #(begin macro)if_equal    prefixzero139, 0
        push    prefixzero139 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@199)
          #(end macro)if_equal    prefixzero139, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@138)(main@199)
      fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@138)(main@199)
    else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@138)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@138)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@138)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@138)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@138)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@138)(main@199)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@138)(main@199)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@138)(main@199)
  #(end macro)print   ;
  push    xx3 #@(ansi_inc@129)(main@116)(main@138)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput140 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@138)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@138)(main@199)
  loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@138)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@138)(main@199)
    #(begin macro)divide  _wbdinput140,  10, _wbdinput140,  __wbdoutput
    push    _wbdinput140 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@199)
    pop     _wbdinput140 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@199)
    #(end macro)divide  _wbdinput140,  10, _wbdinput140,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@138)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@138)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero140, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@138)(main@199)
  sbm     prefixzero140 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@138)(main@199)
  #(end macro)lvar    prefixzero140, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@138)(main@199)
  sbm     __wbdcnt140 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@138)(main@199)
  loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@138)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@138)(main@199)
    #(begin macro)if_sup   __wbdcnt140,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt140 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@199)
      #(end macro)if_sup   __wbdcnt140,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero140, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero140 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero140, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@138)(main@199)
        #(begin macro)if_equal    prefixzero140, 0
        push    prefixzero140 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@199)
          #(end macro)if_equal    prefixzero140, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@138)(main@199)
      fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@138)(main@199)
    else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@138)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@138)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@138)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@138)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@138)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@138)(main@199)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@138)(main@199)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@138)(main@199)
  #(end macro)print   H
  #(end macro)ansi_CUP    yy3,  xx3
  #(begin macro)ansi_SGR_bgcolor   disc3
  push    disc3 #@(ansi_inc@431)(main@117)(main@138)(main@199)
  add     40 #@(ansi_inc@432)(main@117)(main@138)(main@199)
  sbm     __ansibgc3 #@(ansi_inc@433)(main@117)(main@138)(main@199)
  #(begin macro)ansi_SGR    __ansibgc3
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansibgc3 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput141 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    #(begin macro)divide  _wbdinput141,  10, _wbdinput141,  __wbdoutput
    push    _wbdinput141 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    pop     _wbdinput141 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    #(end macro)divide  _wbdinput141,  10, _wbdinput141,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero141, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  sbm     prefixzero141 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)lvar    prefixzero141, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  sbm     __wbdcnt141 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    #(begin macro)if_sup   __wbdcnt141,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt141 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      #(end macro)if_sup   __wbdcnt141,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero141, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero141 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero141, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        #(begin macro)if_equal    prefixzero141, 0
        push    prefixzero141 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
          #(end macro)if_equal    prefixzero141, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansibgc3
  drop #@(ansi_inc@435)(main@117)(main@138)(main@199)
  #(end macro)ansi_SGR_bgcolor   disc3
  #(begin macro)ansi_SGR_fgcolor   disc3
  push    disc3 #@(ansi_inc@407)(main@118)(main@138)(main@199)
  add     30 #@(ansi_inc@408)(main@118)(main@138)(main@199)
  sbm     __ansifgc4 #@(ansi_inc@409)(main@118)(main@138)(main@199)
  #(begin macro)ansi_SGR    __ansifgc4
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    __ansifgc4 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(begin macro)writeByteDecimal
  sbm _wbdinput142 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    #(begin macro)divide  _wbdinput142,  10, _wbdinput142,  __wbdoutput
    push    _wbdinput142 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    pop     _wbdinput142 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    #(end macro)divide  _wbdinput142,  10, _wbdinput142,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero142, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  sbm     prefixzero142 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)lvar    prefixzero142, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  sbm     __wbdcnt142 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    #(begin macro)if_sup   __wbdcnt142,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt142 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      #(end macro)if_sup   __wbdcnt142,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero142, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero142 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero142, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        #(begin macro)if_equal    prefixzero142, 0
        push    prefixzero142 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
          #(end macro)if_equal    prefixzero142, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@199)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@199)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@199)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@199)
  #(end macro)print   m
  #(end macro)ansi_SGR    __ansifgc4
  drop #@(ansi_inc@411)(main@118)(main@138)(main@199)
  #(end macro)ansi_SGR_fgcolor   disc3
  push    disc3 #@(main@119)(main@138)(main@199)
  loop #@(main@120)(main@138)(main@199)
    #(begin macro)print   XX
    push    0 #@(macro_inc@331)(main@121)(main@138)(main@199)
    set     88 #@(macro_inc@346)(main@121)(main@138)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@138)(main@199)
    out             # 'X' #@(macro_inc@348)(main@121)(main@138)(main@199)
    drop #@(macro_inc@351)(main@121)(main@138)(main@199)
    #(end macro)print   XX
  endloop #@(main@122)(main@138)(main@199)
  #(begin macro)print   X
  push    0 #@(macro_inc@331)(main@123)(main@138)(main@199)
  set     88 #@(macro_inc@346)(main@123)(main@138)(main@199)
  out             # 'X' #@(macro_inc@348)(main@123)(main@138)(main@199)
  drop #@(macro_inc@351)(main@123)(main@138)(main@199)
  #(end macro)print   X
  arotr   dest #@(main@124)(main@138)(main@199)
endloop #@(main@125)(main@138)(main@199)
push    oldPos3 #@(main@126)(main@138)(main@199)
loop #@(main@127)(main@138)(main@199)
  arotl   dest #@(main@128)(main@138)(main@199)
endloop #@(main@129)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(main@130)(main@138)(main@199)
drop #@(macro_inc@15)(main@130)(main@138)(main@199)
drop #@(macro_inc@15)(main@130)(main@138)(main@199)
drop #@(macro_inc@15)(main@130)(main@138)(main@199)
#(end macro)scope_end
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@138)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput143 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  #(begin macro)divide  _wbdinput143,  10, _wbdinput143,  __wbdoutput
  push    _wbdinput143 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  pop     _wbdinput143 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  #(end macro)divide  _wbdinput143,  10, _wbdinput143,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero143, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
sbm     prefixzero143 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)lvar    prefixzero143, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
sbm     __wbdcnt143 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  #(begin macro)if_sup   __wbdcnt143,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt143 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    #(end macro)if_sup   __wbdcnt143,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero143, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero143 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero143, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      #(begin macro)if_equal    prefixzero143, 0
      push    prefixzero143 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
        #(end macro)if_equal    prefixzero143, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
#(end macro)displayTower    dest,   43,   9
#(begin macro)ansi_CUP    12, 1
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    12 #@(ansi_inc@126)(main@139)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput144 #@(macro_inc@297)(ansi_inc@127)(main@139)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@127)(main@139)(main@199)
loop #@(macro_inc@299)(ansi_inc@127)(main@139)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@139)(main@199)
  #(begin macro)divide  _wbdinput144,  10, _wbdinput144,  __wbdoutput
  push    _wbdinput144 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@139)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@139)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@139)(main@199)
  pop     _wbdinput144 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@139)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@139)(main@199)
  #(end macro)divide  _wbdinput144,  10, _wbdinput144,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@139)(main@199)
endloop #@(macro_inc@303)(ansi_inc@127)(main@139)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero144, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@139)(main@199)
sbm     prefixzero144 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@139)(main@199)
#(end macro)lvar    prefixzero144, 1
push    3 #@(macro_inc@306)(ansi_inc@127)(main@139)(main@199)
sbm     __wbdcnt144 #@(macro_inc@307)(ansi_inc@127)(main@139)(main@199)
loop #@(macro_inc@308)(ansi_inc@127)(main@139)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@139)(main@199)
  #(begin macro)if_sup   __wbdcnt144,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt144 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@139)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@139)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@139)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@139)(main@199)
    #(end macro)if_sup   __wbdcnt144,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@139)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@139)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@139)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@139)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@139)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@139)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@139)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero144, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero144 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero144, 0
    else #@(macro_inc@314)(ansi_inc@127)(main@139)(main@199)
      #(begin macro)if_equal    prefixzero144, 0
      push    prefixzero144 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@139)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@139)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@139)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@139)(main@199)
        #(end macro)if_equal    prefixzero144, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@139)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@139)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@139)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@127)(main@139)(main@199)
    fi #@(macro_inc@318)(ansi_inc@127)(main@139)(main@199)
  else #@(macro_inc@319)(ansi_inc@127)(main@139)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@139)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@139)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@139)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@127)(main@139)(main@199)
endloop #@(macro_inc@322)(ansi_inc@127)(main@139)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@139)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@139)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   ;
push    0 #@(macro_inc@331)(ansi_inc@128)(main@139)(main@199)
set     59 #@(macro_inc@346)(ansi_inc@128)(main@139)(main@199)
out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@139)(main@199)
drop #@(macro_inc@351)(ansi_inc@128)(main@139)(main@199)
#(end macro)print   ;
push    1 #@(ansi_inc@129)(main@139)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput145 #@(macro_inc@297)(ansi_inc@130)(main@139)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@130)(main@139)(main@199)
loop #@(macro_inc@299)(ansi_inc@130)(main@139)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@139)(main@199)
  #(begin macro)divide  _wbdinput145,  10, _wbdinput145,  __wbdoutput
  push    _wbdinput145 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@139)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@139)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@139)(main@199)
  pop     _wbdinput145 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@139)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@139)(main@199)
  #(end macro)divide  _wbdinput145,  10, _wbdinput145,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@139)(main@199)
endloop #@(macro_inc@303)(ansi_inc@130)(main@139)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero145, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@139)(main@199)
sbm     prefixzero145 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@139)(main@199)
#(end macro)lvar    prefixzero145, 1
push    3 #@(macro_inc@306)(ansi_inc@130)(main@139)(main@199)
sbm     __wbdcnt145 #@(macro_inc@307)(ansi_inc@130)(main@139)(main@199)
loop #@(macro_inc@308)(ansi_inc@130)(main@139)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@139)(main@199)
  #(begin macro)if_sup   __wbdcnt145,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt145 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@139)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@139)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@139)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@139)(main@199)
    #(end macro)if_sup   __wbdcnt145,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@139)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@139)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@139)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@139)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@139)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@139)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@139)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero145, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero145 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero145, 0
    else #@(macro_inc@314)(ansi_inc@130)(main@139)(main@199)
      #(begin macro)if_equal    prefixzero145, 0
      push    prefixzero145 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@139)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@139)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@139)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@139)(main@199)
        #(end macro)if_equal    prefixzero145, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@139)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@139)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@139)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@130)(main@139)(main@199)
    fi #@(macro_inc@318)(ansi_inc@130)(main@139)(main@199)
  else #@(macro_inc@319)(ansi_inc@130)(main@139)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@139)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@139)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@139)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@130)(main@139)(main@199)
endloop #@(macro_inc@322)(ansi_inc@130)(main@139)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@139)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@139)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   H
push    0 #@(macro_inc@331)(ansi_inc@131)(main@139)(main@199)
set     72 #@(macro_inc@346)(ansi_inc@131)(main@139)(main@199)
out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@139)(main@199)
drop #@(macro_inc@351)(ansi_inc@131)(main@139)(main@199)
#(end macro)print   H
#(end macro)ansi_CUP    12, 1
#(begin macro)ansi_SGR_reset
#(begin macro)ansi_SGR    0
#(begin macro)ansi_CSI
#(begin macro)ansi_esc    [
#(begin macro)print("\x1b")
push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
#(end macro)print("\x1b")
#(begin macro)print(cmd)
push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@199)
#(end macro)print(cmd)
#(end macro)ansi_esc    [
#(end macro)ansi_CSI
push    0 #@(ansi_inc@187)(ansi_inc@298)(main@140)(main@199)
#(begin macro)writeByteDecimal
sbm _wbdinput146 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  #(begin macro)divide  _wbdinput146,  10, _wbdinput146,  __wbdoutput
  push    _wbdinput146 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  pop     _wbdinput146 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  #(end macro)divide  _wbdinput146,  10, _wbdinput146,  __wbdoutput
  arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar    prefixzero146, 1
push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
sbm     prefixzero146 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
#(end macro)lvar    prefixzero146, 1
push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
sbm     __wbdcnt146 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  #(begin macro)if_sup   __wbdcnt146,    1   # cnt == 3 or cnt == 2
  push    __wbdcnt146 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    #(end macro)if_sup   __wbdcnt146,    1   # cnt == 3 or cnt == 2
    #(begin macro)if_diff __wbdoutput, 0
    push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      #(end macro)if_diff __wbdoutput, 0
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      #(end macro)writeDigit  __wbdoutput
      #(begin macro)at_set  prefixzero146, 0
      #(begin macro)at_2("set",a,b)
      at      prefixzero146 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
        set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      #(end macro)at_2("set",a,b)
      #(end macro)at_set  prefixzero146, 0
    else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      #(begin macro)if_equal    prefixzero146, 0
      push    prefixzero146 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
      if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
        #(end macro)if_equal    prefixzero146, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
        add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
        pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
  else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    #(begin macro)writeDigit  __wbdoutput
    push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
    #(end macro)writeDigit  __wbdoutput
  fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
#(begin macro)scope_end
drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
#(end macro)scope_end
drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@140)(main@199)
#(end macro)writeByteDecimal
#(begin macro)print   m
push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@140)(main@199)
set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@140)(main@199)
out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@140)(main@199)
drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@140)(main@199)
#(end macro)print   m
#(end macro)ansi_SGR    0
#(end macro)ansi_SGR_reset
#(end macro)displayHanoi
push    1 #@(main@200)
in      # press enter to carry on #@(main@201)
drop #@(main@202)
 #@(main@203)
push    1 #@(main@204)
pop     i #@(main@205)
push    127 #@(main@206)
#push    1 #@(main@207)
loop #@(main@208)
  push    i #@(main@209)
  push    1 #@(main@210)
  equal #@(main@211)
  if #@(main@212)
    #(begin macro)movePole2Pole   src,    dest,   s,  d
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    p1top1,  0
    push    0 #@(macro_inc@22)(main@145)(main@213)
    sbm     p1top1 #@(macro_inc@23)(main@145)(main@213)
    #(end macro)lvar    p1top1,  0
    #(begin macro)lvar    p2top1,  0
    push    0 #@(macro_inc@22)(main@146)(main@213)
    sbm     p2top1 #@(macro_inc@23)(main@146)(main@213)
    #(end macro)lvar    p2top1,  0
    #(begin macro)poptower    src
    push    0 #@(main@54)(main@147)(main@213)
    sbm popresult1 #@(main@55)(main@147)(main@213)
    #(begin macro)isempty src
    push    src.pos #@(main@34)(main@56)(main@147)(main@213)
    bool #@(main@35)(main@56)(main@147)(main@213)
    not #@(main@36)(main@56)(main@147)(main@213)
    #(end macro)isempty src
    not #@(main@57)(main@147)(main@213)
    if #@(main@58)(main@147)(main@213)
      push    src #@(main@59)(main@147)(main@213)
      pop     popresult1 #@(main@60)(main@147)(main@213)
      at      src #@(main@61)(main@147)(main@213)
        reset #@(main@62)(main@147)(main@213)
      ta #@(main@63)(main@147)(main@213)
      arotr   src #@(main@64)(main@147)(main@213)
    fi #@(main@65)(main@147)(main@213)
    #(end macro)poptower    src
    pop     p1top1 #@(main@148)(main@213)
    #(begin macro)poptower    dest
    push    0 #@(main@54)(main@149)(main@213)
    sbm popresult2 #@(main@55)(main@149)(main@213)
    #(begin macro)isempty dest
    push    dest.pos #@(main@34)(main@56)(main@149)(main@213)
    bool #@(main@35)(main@56)(main@149)(main@213)
    not #@(main@36)(main@56)(main@149)(main@213)
    #(end macro)isempty dest
    not #@(main@57)(main@149)(main@213)
    if #@(main@58)(main@149)(main@213)
      push    dest #@(main@59)(main@149)(main@213)
      pop     popresult2 #@(main@60)(main@149)(main@213)
      at      dest #@(main@61)(main@149)(main@213)
        reset #@(main@62)(main@149)(main@213)
      ta #@(main@63)(main@149)(main@213)
      arotr   dest #@(main@64)(main@149)(main@213)
    fi #@(main@65)(main@149)(main@213)
    #(end macro)poptower    dest
    pop     p2top1 #@(main@150)(main@213)
    # when p1 is empty #@(main@151)(main@213)
    push    p1top1 #@(main@152)(main@213)
    not #@(main@153)(main@213)
    if #@(main@154)(main@213)
      push        p2top1 #@(main@155)(main@213)
      #(begin macro)pushtower   src
      sbm pushParam2 #@(main@41)(main@156)(main@213)
      #(begin macro)isfull  src
      push    src.pos #@(main@26)(main@42)(main@156)(main@213)
      push    src.size #@(main@27)(main@42)(main@156)(main@213)
      sub     2 #@(main@28)(main@42)(main@156)(main@213)
      equal #@(main@29)(main@42)(main@156)(main@213)
      #(end macro)isfull  src
      not #@(main@43)(main@156)(main@213)
      if #@(main@44)(main@156)(main@213)
        arotl   src #@(main@45)(main@156)(main@213)
        push    pushParam2 #@(main@46)(main@156)(main@213)
        pop     src #@(main@47)(main@156)(main@213)
      fi #@(main@48)(main@156)(main@213)
      drop #@(main@49)(main@156)(main@213)
      #(end macro)pushtower   src
    else #@(main@157)(main@213)
      # when p2 is empty #@(main@158)(main@213)
      push    p2top1 #@(main@159)(main@213)
      not #@(main@160)(main@213)
      if #@(main@161)(main@213)
        push    p1top1 #@(main@162)(main@213)
        #(begin macro)pushtower   dest
        sbm pushParam3 #@(main@41)(main@163)(main@213)
        #(begin macro)isfull  dest
        push    dest.pos #@(main@26)(main@42)(main@163)(main@213)
        push    dest.size #@(main@27)(main@42)(main@163)(main@213)
        sub     2 #@(main@28)(main@42)(main@163)(main@213)
        equal #@(main@29)(main@42)(main@163)(main@213)
        #(end macro)isfull  dest
        not #@(main@43)(main@163)(main@213)
        if #@(main@44)(main@163)(main@213)
          arotl   dest #@(main@45)(main@163)(main@213)
          push    pushParam3 #@(main@46)(main@163)(main@213)
          pop     dest #@(main@47)(main@163)(main@213)
        fi #@(main@48)(main@163)(main@213)
        drop #@(main@49)(main@163)(main@213)
        #(end macro)pushtower   dest
      else #@(main@164)(main@213)
        # when p1 > p2 #@(main@165)(main@213)
        push    p1top1 #@(main@166)(main@213)
        push    p2top1 #@(main@167)(main@213)
        sup #@(main@168)(main@213)
        if #@(main@169)(main@213)
          push    p1top1 #@(main@170)(main@213)
          #(begin macro)pushtower   src
          sbm pushParam4 #@(main@41)(main@171)(main@213)
          #(begin macro)isfull  src
          push    src.pos #@(main@26)(main@42)(main@171)(main@213)
          push    src.size #@(main@27)(main@42)(main@171)(main@213)
          sub     2 #@(main@28)(main@42)(main@171)(main@213)
          equal #@(main@29)(main@42)(main@171)(main@213)
          #(end macro)isfull  src
          not #@(main@43)(main@171)(main@213)
          if #@(main@44)(main@171)(main@213)
            arotl   src #@(main@45)(main@171)(main@213)
            push    pushParam4 #@(main@46)(main@171)(main@213)
            pop     src #@(main@47)(main@171)(main@213)
          fi #@(main@48)(main@171)(main@213)
          drop #@(main@49)(main@171)(main@213)
          #(end macro)pushtower   src
          push    p2top1 #@(main@172)(main@213)
          #(begin macro)pushtower   src
          sbm pushParam5 #@(main@41)(main@173)(main@213)
          #(begin macro)isfull  src
          push    src.pos #@(main@26)(main@42)(main@173)(main@213)
          push    src.size #@(main@27)(main@42)(main@173)(main@213)
          sub     2 #@(main@28)(main@42)(main@173)(main@213)
          equal #@(main@29)(main@42)(main@173)(main@213)
          #(end macro)isfull  src
          not #@(main@43)(main@173)(main@213)
          if #@(main@44)(main@173)(main@213)
            arotl   src #@(main@45)(main@173)(main@213)
            push    pushParam5 #@(main@46)(main@173)(main@213)
            pop     src #@(main@47)(main@173)(main@213)
          fi #@(main@48)(main@173)(main@213)
          drop #@(main@49)(main@173)(main@213)
          #(end macro)pushtower   src
        else #@(main@174)(main@213)
          push    p2top1 #@(main@175)(main@213)
          #(begin macro)pushtower   dest
          sbm pushParam6 #@(main@41)(main@176)(main@213)
          #(begin macro)isfull  dest
          push    dest.pos #@(main@26)(main@42)(main@176)(main@213)
          push    dest.size #@(main@27)(main@42)(main@176)(main@213)
          sub     2 #@(main@28)(main@42)(main@176)(main@213)
          equal #@(main@29)(main@42)(main@176)(main@213)
          #(end macro)isfull  dest
          not #@(main@43)(main@176)(main@213)
          if #@(main@44)(main@176)(main@213)
            arotl   dest #@(main@45)(main@176)(main@213)
            push    pushParam6 #@(main@46)(main@176)(main@213)
            pop     dest #@(main@47)(main@176)(main@213)
          fi #@(main@48)(main@176)(main@213)
          drop #@(main@49)(main@176)(main@213)
          #(end macro)pushtower   dest
          push    p1top1 #@(main@177)(main@213)
          #(begin macro)pushtower   dest
          sbm pushParam7 #@(main@41)(main@178)(main@213)
          #(begin macro)isfull  dest
          push    dest.pos #@(main@26)(main@42)(main@178)(main@213)
          push    dest.size #@(main@27)(main@42)(main@178)(main@213)
          sub     2 #@(main@28)(main@42)(main@178)(main@213)
          equal #@(main@29)(main@42)(main@178)(main@213)
          #(end macro)isfull  dest
          not #@(main@43)(main@178)(main@213)
          if #@(main@44)(main@178)(main@213)
            arotl   dest #@(main@45)(main@178)(main@213)
            push    pushParam7 #@(main@46)(main@178)(main@213)
            pop     dest #@(main@47)(main@178)(main@213)
          fi #@(main@48)(main@178)(main@213)
          drop #@(main@49)(main@178)(main@213)
          #(end macro)pushtower   dest
        fi #@(main@179)(main@213)
      fi #@(main@180)(main@213)
    fi #@(main@181)(main@213)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(main@182)(main@213)
    drop #@(macro_inc@15)(main@182)(main@213)
    #(end macro)scope_end
    #(end macro)movePole2Pole   src,    dest,   s,  d
  else #@(main@214)
    push    i #@(main@215)
    push    2 #@(main@216)
    equal #@(main@217)
    if #@(main@218)
      #(begin macro)movePole2Pole   src,    aux,    s,  a
      #(begin macro)scope_begin
      #(end macro)scope_begin
      #(begin macro)lvar    p1top2,  0
      push    0 #@(macro_inc@22)(main@145)(main@219)
      sbm     p1top2 #@(macro_inc@23)(main@145)(main@219)
      #(end macro)lvar    p1top2,  0
      #(begin macro)lvar    p2top2,  0
      push    0 #@(macro_inc@22)(main@146)(main@219)
      sbm     p2top2 #@(macro_inc@23)(main@146)(main@219)
      #(end macro)lvar    p2top2,  0
      #(begin macro)poptower    src
      push    0 #@(main@54)(main@147)(main@219)
      sbm popresult3 #@(main@55)(main@147)(main@219)
      #(begin macro)isempty src
      push    src.pos #@(main@34)(main@56)(main@147)(main@219)
      bool #@(main@35)(main@56)(main@147)(main@219)
      not #@(main@36)(main@56)(main@147)(main@219)
      #(end macro)isempty src
      not #@(main@57)(main@147)(main@219)
      if #@(main@58)(main@147)(main@219)
        push    src #@(main@59)(main@147)(main@219)
        pop     popresult3 #@(main@60)(main@147)(main@219)
        at      src #@(main@61)(main@147)(main@219)
          reset #@(main@62)(main@147)(main@219)
        ta #@(main@63)(main@147)(main@219)
        arotr   src #@(main@64)(main@147)(main@219)
      fi #@(main@65)(main@147)(main@219)
      #(end macro)poptower    src
      pop     p1top2 #@(main@148)(main@219)
      #(begin macro)poptower    aux
      push    0 #@(main@54)(main@149)(main@219)
      sbm popresult4 #@(main@55)(main@149)(main@219)
      #(begin macro)isempty aux
      push    aux.pos #@(main@34)(main@56)(main@149)(main@219)
      bool #@(main@35)(main@56)(main@149)(main@219)
      not #@(main@36)(main@56)(main@149)(main@219)
      #(end macro)isempty aux
      not #@(main@57)(main@149)(main@219)
      if #@(main@58)(main@149)(main@219)
        push    aux #@(main@59)(main@149)(main@219)
        pop     popresult4 #@(main@60)(main@149)(main@219)
        at      aux #@(main@61)(main@149)(main@219)
          reset #@(main@62)(main@149)(main@219)
        ta #@(main@63)(main@149)(main@219)
        arotr   aux #@(main@64)(main@149)(main@219)
      fi #@(main@65)(main@149)(main@219)
      #(end macro)poptower    aux
      pop     p2top2 #@(main@150)(main@219)
      # when p1 is empty #@(main@151)(main@219)
      push    p1top2 #@(main@152)(main@219)
      not #@(main@153)(main@219)
      if #@(main@154)(main@219)
        push        p2top2 #@(main@155)(main@219)
        #(begin macro)pushtower   src
        sbm pushParam8 #@(main@41)(main@156)(main@219)
        #(begin macro)isfull  src
        push    src.pos #@(main@26)(main@42)(main@156)(main@219)
        push    src.size #@(main@27)(main@42)(main@156)(main@219)
        sub     2 #@(main@28)(main@42)(main@156)(main@219)
        equal #@(main@29)(main@42)(main@156)(main@219)
        #(end macro)isfull  src
        not #@(main@43)(main@156)(main@219)
        if #@(main@44)(main@156)(main@219)
          arotl   src #@(main@45)(main@156)(main@219)
          push    pushParam8 #@(main@46)(main@156)(main@219)
          pop     src #@(main@47)(main@156)(main@219)
        fi #@(main@48)(main@156)(main@219)
        drop #@(main@49)(main@156)(main@219)
        #(end macro)pushtower   src
      else #@(main@157)(main@219)
        # when p2 is empty #@(main@158)(main@219)
        push    p2top2 #@(main@159)(main@219)
        not #@(main@160)(main@219)
        if #@(main@161)(main@219)
          push    p1top2 #@(main@162)(main@219)
          #(begin macro)pushtower   aux
          sbm pushParam9 #@(main@41)(main@163)(main@219)
          #(begin macro)isfull  aux
          push    aux.pos #@(main@26)(main@42)(main@163)(main@219)
          push    aux.size #@(main@27)(main@42)(main@163)(main@219)
          sub     2 #@(main@28)(main@42)(main@163)(main@219)
          equal #@(main@29)(main@42)(main@163)(main@219)
          #(end macro)isfull  aux
          not #@(main@43)(main@163)(main@219)
          if #@(main@44)(main@163)(main@219)
            arotl   aux #@(main@45)(main@163)(main@219)
            push    pushParam9 #@(main@46)(main@163)(main@219)
            pop     aux #@(main@47)(main@163)(main@219)
          fi #@(main@48)(main@163)(main@219)
          drop #@(main@49)(main@163)(main@219)
          #(end macro)pushtower   aux
        else #@(main@164)(main@219)
          # when p1 > p2 #@(main@165)(main@219)
          push    p1top2 #@(main@166)(main@219)
          push    p2top2 #@(main@167)(main@219)
          sup #@(main@168)(main@219)
          if #@(main@169)(main@219)
            push    p1top2 #@(main@170)(main@219)
            #(begin macro)pushtower   src
            sbm pushParam10 #@(main@41)(main@171)(main@219)
            #(begin macro)isfull  src
            push    src.pos #@(main@26)(main@42)(main@171)(main@219)
            push    src.size #@(main@27)(main@42)(main@171)(main@219)
            sub     2 #@(main@28)(main@42)(main@171)(main@219)
            equal #@(main@29)(main@42)(main@171)(main@219)
            #(end macro)isfull  src
            not #@(main@43)(main@171)(main@219)
            if #@(main@44)(main@171)(main@219)
              arotl   src #@(main@45)(main@171)(main@219)
              push    pushParam10 #@(main@46)(main@171)(main@219)
              pop     src #@(main@47)(main@171)(main@219)
            fi #@(main@48)(main@171)(main@219)
            drop #@(main@49)(main@171)(main@219)
            #(end macro)pushtower   src
            push    p2top2 #@(main@172)(main@219)
            #(begin macro)pushtower   src
            sbm pushParam11 #@(main@41)(main@173)(main@219)
            #(begin macro)isfull  src
            push    src.pos #@(main@26)(main@42)(main@173)(main@219)
            push    src.size #@(main@27)(main@42)(main@173)(main@219)
            sub     2 #@(main@28)(main@42)(main@173)(main@219)
            equal #@(main@29)(main@42)(main@173)(main@219)
            #(end macro)isfull  src
            not #@(main@43)(main@173)(main@219)
            if #@(main@44)(main@173)(main@219)
              arotl   src #@(main@45)(main@173)(main@219)
              push    pushParam11 #@(main@46)(main@173)(main@219)
              pop     src #@(main@47)(main@173)(main@219)
            fi #@(main@48)(main@173)(main@219)
            drop #@(main@49)(main@173)(main@219)
            #(end macro)pushtower   src
          else #@(main@174)(main@219)
            push    p2top2 #@(main@175)(main@219)
            #(begin macro)pushtower   aux
            sbm pushParam12 #@(main@41)(main@176)(main@219)
            #(begin macro)isfull  aux
            push    aux.pos #@(main@26)(main@42)(main@176)(main@219)
            push    aux.size #@(main@27)(main@42)(main@176)(main@219)
            sub     2 #@(main@28)(main@42)(main@176)(main@219)
            equal #@(main@29)(main@42)(main@176)(main@219)
            #(end macro)isfull  aux
            not #@(main@43)(main@176)(main@219)
            if #@(main@44)(main@176)(main@219)
              arotl   aux #@(main@45)(main@176)(main@219)
              push    pushParam12 #@(main@46)(main@176)(main@219)
              pop     aux #@(main@47)(main@176)(main@219)
            fi #@(main@48)(main@176)(main@219)
            drop #@(main@49)(main@176)(main@219)
            #(end macro)pushtower   aux
            push    p1top2 #@(main@177)(main@219)
            #(begin macro)pushtower   aux
            sbm pushParam13 #@(main@41)(main@178)(main@219)
            #(begin macro)isfull  aux
            push    aux.pos #@(main@26)(main@42)(main@178)(main@219)
            push    aux.size #@(main@27)(main@42)(main@178)(main@219)
            sub     2 #@(main@28)(main@42)(main@178)(main@219)
            equal #@(main@29)(main@42)(main@178)(main@219)
            #(end macro)isfull  aux
            not #@(main@43)(main@178)(main@219)
            if #@(main@44)(main@178)(main@219)
              arotl   aux #@(main@45)(main@178)(main@219)
              push    pushParam13 #@(main@46)(main@178)(main@219)
              pop     aux #@(main@47)(main@178)(main@219)
            fi #@(main@48)(main@178)(main@219)
            drop #@(main@49)(main@178)(main@219)
            #(end macro)pushtower   aux
          fi #@(main@179)(main@219)
        fi #@(main@180)(main@219)
      fi #@(main@181)(main@219)
      #(begin macro)scope_end
      drop #@(macro_inc@15)(main@182)(main@219)
      drop #@(macro_inc@15)(main@182)(main@219)
      #(end macro)scope_end
      #(end macro)movePole2Pole   src,    aux,    s,  a
    else #@(main@220)
      push    i #@(main@221)
      not #@(main@222)
      if #@(main@223)
        #(begin macro)movePole2Pole   aux,    dest,   a,  d
        #(begin macro)scope_begin
        #(end macro)scope_begin
        #(begin macro)lvar    p1top3,  0
        push    0 #@(macro_inc@22)(main@145)(main@224)
        sbm     p1top3 #@(macro_inc@23)(main@145)(main@224)
        #(end macro)lvar    p1top3,  0
        #(begin macro)lvar    p2top3,  0
        push    0 #@(macro_inc@22)(main@146)(main@224)
        sbm     p2top3 #@(macro_inc@23)(main@146)(main@224)
        #(end macro)lvar    p2top3,  0
        #(begin macro)poptower    aux
        push    0 #@(main@54)(main@147)(main@224)
        sbm popresult5 #@(main@55)(main@147)(main@224)
        #(begin macro)isempty aux
        push    aux.pos #@(main@34)(main@56)(main@147)(main@224)
        bool #@(main@35)(main@56)(main@147)(main@224)
        not #@(main@36)(main@56)(main@147)(main@224)
        #(end macro)isempty aux
        not #@(main@57)(main@147)(main@224)
        if #@(main@58)(main@147)(main@224)
          push    aux #@(main@59)(main@147)(main@224)
          pop     popresult5 #@(main@60)(main@147)(main@224)
          at      aux #@(main@61)(main@147)(main@224)
            reset #@(main@62)(main@147)(main@224)
          ta #@(main@63)(main@147)(main@224)
          arotr   aux #@(main@64)(main@147)(main@224)
        fi #@(main@65)(main@147)(main@224)
        #(end macro)poptower    aux
        pop     p1top3 #@(main@148)(main@224)
        #(begin macro)poptower    dest
        push    0 #@(main@54)(main@149)(main@224)
        sbm popresult6 #@(main@55)(main@149)(main@224)
        #(begin macro)isempty dest
        push    dest.pos #@(main@34)(main@56)(main@149)(main@224)
        bool #@(main@35)(main@56)(main@149)(main@224)
        not #@(main@36)(main@56)(main@149)(main@224)
        #(end macro)isempty dest
        not #@(main@57)(main@149)(main@224)
        if #@(main@58)(main@149)(main@224)
          push    dest #@(main@59)(main@149)(main@224)
          pop     popresult6 #@(main@60)(main@149)(main@224)
          at      dest #@(main@61)(main@149)(main@224)
            reset #@(main@62)(main@149)(main@224)
          ta #@(main@63)(main@149)(main@224)
          arotr   dest #@(main@64)(main@149)(main@224)
        fi #@(main@65)(main@149)(main@224)
        #(end macro)poptower    dest
        pop     p2top3 #@(main@150)(main@224)
        # when p1 is empty #@(main@151)(main@224)
        push    p1top3 #@(main@152)(main@224)
        not #@(main@153)(main@224)
        if #@(main@154)(main@224)
          push        p2top3 #@(main@155)(main@224)
          #(begin macro)pushtower   aux
          sbm pushParam14 #@(main@41)(main@156)(main@224)
          #(begin macro)isfull  aux
          push    aux.pos #@(main@26)(main@42)(main@156)(main@224)
          push    aux.size #@(main@27)(main@42)(main@156)(main@224)
          sub     2 #@(main@28)(main@42)(main@156)(main@224)
          equal #@(main@29)(main@42)(main@156)(main@224)
          #(end macro)isfull  aux
          not #@(main@43)(main@156)(main@224)
          if #@(main@44)(main@156)(main@224)
            arotl   aux #@(main@45)(main@156)(main@224)
            push    pushParam14 #@(main@46)(main@156)(main@224)
            pop     aux #@(main@47)(main@156)(main@224)
          fi #@(main@48)(main@156)(main@224)
          drop #@(main@49)(main@156)(main@224)
          #(end macro)pushtower   aux
        else #@(main@157)(main@224)
          # when p2 is empty #@(main@158)(main@224)
          push    p2top3 #@(main@159)(main@224)
          not #@(main@160)(main@224)
          if #@(main@161)(main@224)
            push    p1top3 #@(main@162)(main@224)
            #(begin macro)pushtower   dest
            sbm pushParam15 #@(main@41)(main@163)(main@224)
            #(begin macro)isfull  dest
            push    dest.pos #@(main@26)(main@42)(main@163)(main@224)
            push    dest.size #@(main@27)(main@42)(main@163)(main@224)
            sub     2 #@(main@28)(main@42)(main@163)(main@224)
            equal #@(main@29)(main@42)(main@163)(main@224)
            #(end macro)isfull  dest
            not #@(main@43)(main@163)(main@224)
            if #@(main@44)(main@163)(main@224)
              arotl   dest #@(main@45)(main@163)(main@224)
              push    pushParam15 #@(main@46)(main@163)(main@224)
              pop     dest #@(main@47)(main@163)(main@224)
            fi #@(main@48)(main@163)(main@224)
            drop #@(main@49)(main@163)(main@224)
            #(end macro)pushtower   dest
          else #@(main@164)(main@224)
            # when p1 > p2 #@(main@165)(main@224)
            push    p1top3 #@(main@166)(main@224)
            push    p2top3 #@(main@167)(main@224)
            sup #@(main@168)(main@224)
            if #@(main@169)(main@224)
              push    p1top3 #@(main@170)(main@224)
              #(begin macro)pushtower   aux
              sbm pushParam16 #@(main@41)(main@171)(main@224)
              #(begin macro)isfull  aux
              push    aux.pos #@(main@26)(main@42)(main@171)(main@224)
              push    aux.size #@(main@27)(main@42)(main@171)(main@224)
              sub     2 #@(main@28)(main@42)(main@171)(main@224)
              equal #@(main@29)(main@42)(main@171)(main@224)
              #(end macro)isfull  aux
              not #@(main@43)(main@171)(main@224)
              if #@(main@44)(main@171)(main@224)
                arotl   aux #@(main@45)(main@171)(main@224)
                push    pushParam16 #@(main@46)(main@171)(main@224)
                pop     aux #@(main@47)(main@171)(main@224)
              fi #@(main@48)(main@171)(main@224)
              drop #@(main@49)(main@171)(main@224)
              #(end macro)pushtower   aux
              push    p2top3 #@(main@172)(main@224)
              #(begin macro)pushtower   aux
              sbm pushParam17 #@(main@41)(main@173)(main@224)
              #(begin macro)isfull  aux
              push    aux.pos #@(main@26)(main@42)(main@173)(main@224)
              push    aux.size #@(main@27)(main@42)(main@173)(main@224)
              sub     2 #@(main@28)(main@42)(main@173)(main@224)
              equal #@(main@29)(main@42)(main@173)(main@224)
              #(end macro)isfull  aux
              not #@(main@43)(main@173)(main@224)
              if #@(main@44)(main@173)(main@224)
                arotl   aux #@(main@45)(main@173)(main@224)
                push    pushParam17 #@(main@46)(main@173)(main@224)
                pop     aux #@(main@47)(main@173)(main@224)
              fi #@(main@48)(main@173)(main@224)
              drop #@(main@49)(main@173)(main@224)
              #(end macro)pushtower   aux
            else #@(main@174)(main@224)
              push    p2top3 #@(main@175)(main@224)
              #(begin macro)pushtower   dest
              sbm pushParam18 #@(main@41)(main@176)(main@224)
              #(begin macro)isfull  dest
              push    dest.pos #@(main@26)(main@42)(main@176)(main@224)
              push    dest.size #@(main@27)(main@42)(main@176)(main@224)
              sub     2 #@(main@28)(main@42)(main@176)(main@224)
              equal #@(main@29)(main@42)(main@176)(main@224)
              #(end macro)isfull  dest
              not #@(main@43)(main@176)(main@224)
              if #@(main@44)(main@176)(main@224)
                arotl   dest #@(main@45)(main@176)(main@224)
                push    pushParam18 #@(main@46)(main@176)(main@224)
                pop     dest #@(main@47)(main@176)(main@224)
              fi #@(main@48)(main@176)(main@224)
              drop #@(main@49)(main@176)(main@224)
              #(end macro)pushtower   dest
              push    p1top3 #@(main@177)(main@224)
              #(begin macro)pushtower   dest
              sbm pushParam19 #@(main@41)(main@178)(main@224)
              #(begin macro)isfull  dest
              push    dest.pos #@(main@26)(main@42)(main@178)(main@224)
              push    dest.size #@(main@27)(main@42)(main@178)(main@224)
              sub     2 #@(main@28)(main@42)(main@178)(main@224)
              equal #@(main@29)(main@42)(main@178)(main@224)
              #(end macro)isfull  dest
              not #@(main@43)(main@178)(main@224)
              if #@(main@44)(main@178)(main@224)
                arotl   dest #@(main@45)(main@178)(main@224)
                push    pushParam19 #@(main@46)(main@178)(main@224)
                pop     dest #@(main@47)(main@178)(main@224)
              fi #@(main@48)(main@178)(main@224)
              drop #@(main@49)(main@178)(main@224)
              #(end macro)pushtower   dest
            fi #@(main@179)(main@224)
          fi #@(main@180)(main@224)
        fi #@(main@181)(main@224)
        #(begin macro)scope_end
        drop #@(macro_inc@15)(main@182)(main@224)
        drop #@(macro_inc@15)(main@182)(main@224)
        #(end macro)scope_end
        #(end macro)movePole2Pole   aux,    dest,   a,  d
      fi #@(main@225)
    fi #@(main@226)
  fi #@(main@227)
  # display Hanoi towers #@(main@228)
  #(begin macro)displayHanoi
  # display Hanoi towers #@(main@135)(main@229)
  #(begin macro)displayTower    src,    9,   9
  # display stick #@(main@70)(main@136)(main@229)
  #(begin macro)ansi_CUP    9,    2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    9 #@(ansi_inc@126)(main@71)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput147 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@136)(main@229)
    #(begin macro)divide  _wbdinput147,  10, _wbdinput147,  __wbdoutput
    push    _wbdinput147 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@229)
    pop     _wbdinput147 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@136)(main@229)
    #(end macro)divide  _wbdinput147,  10, _wbdinput147,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero147, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@136)(main@229)
  sbm     prefixzero147 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@136)(main@229)
  #(end macro)lvar    prefixzero147, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@136)(main@229)
  sbm     __wbdcnt147 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt147,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt147 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt147,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero147, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero147 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero147, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero147, 0
        push    prefixzero147 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@136)(main@229)
          #(end macro)if_equal    prefixzero147, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@71)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput148 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@136)(main@229)
    #(begin macro)divide  _wbdinput148,  10, _wbdinput148,  __wbdoutput
    push    _wbdinput148 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@229)
    pop     _wbdinput148 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@136)(main@229)
    #(end macro)divide  _wbdinput148,  10, _wbdinput148,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero148, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@136)(main@229)
  sbm     prefixzero148 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@136)(main@229)
  #(end macro)lvar    prefixzero148, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@136)(main@229)
  sbm     __wbdcnt148 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt148,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt148 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt148,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero148, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero148 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero148, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero148, 0
        push    prefixzero148 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@136)(main@229)
          #(end macro)if_equal    prefixzero148, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    9,    2
  #(begin macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR3   48, 5,  94
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput149 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)divide  _wbdinput149,  10, _wbdinput149,  __wbdoutput
    push    _wbdinput149 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     _wbdinput149 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(end macro)divide  _wbdinput149,  10, _wbdinput149,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero149, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     prefixzero149 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)lvar    prefixzero149, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     __wbdcnt149 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt149,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt149 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt149,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero149, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero149 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero149, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero149, 0
        push    prefixzero149 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)if_equal    prefixzero149, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput150 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)divide  _wbdinput150,  10, _wbdinput150,  __wbdoutput
    push    _wbdinput150 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     _wbdinput150 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(end macro)divide  _wbdinput150,  10, _wbdinput150,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero150, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     prefixzero150 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)lvar    prefixzero150, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     __wbdcnt150 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt150,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt150 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt150,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero150, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero150 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero150, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero150, 0
        push    prefixzero150 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)if_equal    prefixzero150, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)print   ;
  push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput151 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)divide  _wbdinput151,  10, _wbdinput151,  __wbdoutput
    push    _wbdinput151 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     _wbdinput151 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(end macro)divide  _wbdinput151,  10, _wbdinput151,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero151, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     prefixzero151 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)lvar    prefixzero151, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  sbm     __wbdcnt151 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt151,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt151 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt151,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero151, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero151 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero151, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero151, 0
        push    prefixzero151 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)if_equal    prefixzero151, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   48, 5,  94
  #(end macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput152 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)divide  _wbdinput152,  10, _wbdinput152,  __wbdoutput
    push    _wbdinput152 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     _wbdinput152 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(end macro)divide  _wbdinput152,  10, _wbdinput152,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero152, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     prefixzero152 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)lvar    prefixzero152, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     __wbdcnt152 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt152,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt152 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt152,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero152, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero152 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero152, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero152, 0
        push    prefixzero152 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)if_equal    prefixzero152, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput153 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)divide  _wbdinput153,  10, _wbdinput153,  __wbdoutput
    push    _wbdinput153 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     _wbdinput153 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(end macro)divide  _wbdinput153,  10, _wbdinput153,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero153, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     prefixzero153 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)lvar    prefixzero153, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     __wbdcnt153 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt153,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt153 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt153,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero153, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero153 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero153, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero153, 0
        push    prefixzero153 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)if_equal    prefixzero153, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput154 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)divide  _wbdinput154,  10, _wbdinput154,  __wbdoutput
    push    _wbdinput154 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     _wbdinput154 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(end macro)divide  _wbdinput154,  10, _wbdinput154,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero154, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     prefixzero154 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)lvar    prefixzero154, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  sbm     __wbdcnt154 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt154,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt154 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt154,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero154, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero154 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero154, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero154, 0
        push    prefixzero154 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)if_equal    prefixzero154, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  push    '=' # plate #@(main@74)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  out #@(main@76)(main@136)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput155 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    #(begin macro)divide  _wbdinput155,  10, _wbdinput155,  __wbdoutput
    push    _wbdinput155 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    pop     _wbdinput155 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    #(end macro)divide  _wbdinput155,  10, _wbdinput155,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero155, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  sbm     prefixzero155 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)lvar    prefixzero155, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  sbm     __wbdcnt155 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt155,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt155 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt155,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero155, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero155 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero155, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero155, 0
        push    prefixzero155 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
          #(end macro)if_equal    prefixzero155, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  set     ' ' #@(main@79)(main@136)(main@229)
  #(begin macro)ansi_CUP    8,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput156 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput156,  10, _wbdinput156,  __wbdoutput
    push    _wbdinput156 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput156 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput156,  10, _wbdinput156,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero156, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero156 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero156, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt156 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt156,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt156 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt156,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero156, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero156 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero156, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero156, 0
        push    prefixzero156 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero156, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput157 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput157,  10, _wbdinput157,  __wbdoutput
    push    _wbdinput157 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput157 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput157,  10, _wbdinput157,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero157, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero157 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero157, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt157 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt157,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt157 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt157,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero157, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero157 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero157, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero157, 0
        push    prefixzero157 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero157, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    7,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput158 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput158,  10, _wbdinput158,  __wbdoutput
    push    _wbdinput158 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput158 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput158,  10, _wbdinput158,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero158, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero158 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero158, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt158 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt158,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt158 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt158,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero158, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero158 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero158, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero158, 0
        push    prefixzero158 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero158, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput159 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput159,  10, _wbdinput159,  __wbdoutput
    push    _wbdinput159 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput159 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput159,  10, _wbdinput159,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero159, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero159 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero159, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt159 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt159,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt159 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt159,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero159, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero159 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero159, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero159, 0
        push    prefixzero159 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero159, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    6,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput160 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput160,  10, _wbdinput160,  __wbdoutput
    push    _wbdinput160 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput160 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput160,  10, _wbdinput160,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero160, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero160 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero160, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt160 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt160,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt160 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt160,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero160, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero160 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero160, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero160, 0
        push    prefixzero160 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero160, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput161 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput161,  10, _wbdinput161,  __wbdoutput
    push    _wbdinput161 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput161 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput161,  10, _wbdinput161,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero161, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero161 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero161, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt161 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt161,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt161 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt161,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero161, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero161 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero161, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero161, 0
        push    prefixzero161 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero161, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    5,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput162 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput162,  10, _wbdinput162,  __wbdoutput
    push    _wbdinput162 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput162 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput162,  10, _wbdinput162,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero162, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero162 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero162, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt162 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt162,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt162 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt162,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero162, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero162 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero162, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero162, 0
        push    prefixzero162 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero162, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput163 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput163,  10, _wbdinput163,  __wbdoutput
    push    _wbdinput163 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput163 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput163,  10, _wbdinput163,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero163, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero163 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero163, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt163 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt163,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt163 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt163,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero163, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero163 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero163, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero163, 0
        push    prefixzero163 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero163, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    4,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput164 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput164,  10, _wbdinput164,  __wbdoutput
    push    _wbdinput164 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput164 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput164,  10, _wbdinput164,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero164, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero164 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero164, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt164 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt164,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt164 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt164,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero164, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero164 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero164, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero164, 0
        push    prefixzero164 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero164, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput165 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput165,  10, _wbdinput165,  __wbdoutput
    push    _wbdinput165 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput165 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput165,  10, _wbdinput165,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero165, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero165 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero165, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt165 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt165,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt165 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt165,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero165, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero165 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero165, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero165, 0
        push    prefixzero165 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero165, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    3,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput166 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput166,  10, _wbdinput166,  __wbdoutput
    push    _wbdinput166 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput166 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput166,  10, _wbdinput166,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero166, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero166 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero166, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt166 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt166,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt166 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt166,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero166, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero166 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero166, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero166, 0
        push    prefixzero166 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero166, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput167 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput167,  10, _wbdinput167,  __wbdoutput
    push    _wbdinput167 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput167 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput167,  10, _wbdinput167,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero167, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero167 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero167, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt167 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt167,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt167 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt167,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero167, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero167 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero167, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero167, 0
        push    prefixzero167 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero167, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_CUP    2,   2
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput168 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput168,  10, _wbdinput168,  __wbdoutput
    push    _wbdinput168 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     _wbdinput168 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput168,  10, _wbdinput168,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero168, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     prefixzero168 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero168, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@136)(main@229)
  sbm     __wbdcnt168 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt168,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt168 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt168,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero168, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero168 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero168, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero168, 0
        push    prefixzero168 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero168, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@136)(main@229)
  #(end macro)print   ;
  push    2 #@(ansi_inc@129)(main@81)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput169 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)divide  _wbdinput169,  10, _wbdinput169,  __wbdoutput
    push    _wbdinput169 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     _wbdinput169 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(end macro)divide  _wbdinput169,  10, _wbdinput169,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero169, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     prefixzero169 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)lvar    prefixzero169, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@136)(main@229)
  sbm     __wbdcnt169 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt169,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt169 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt169,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero169, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero169 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero169, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero169, 0
        push    prefixzero169 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)if_equal    prefixzero169, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,   2
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  out #@(main@83)(main@136)(main@229)
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput170 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)divide  _wbdinput170,  10, _wbdinput170,  __wbdoutput
    push    _wbdinput170 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     _wbdinput170 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(end macro)divide  _wbdinput170,  10, _wbdinput170,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero170, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     prefixzero170 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)lvar    prefixzero170, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     __wbdcnt170 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt170,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt170 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt170,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero170, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero170 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero170, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero170, 0
        push    prefixzero170 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)if_equal    prefixzero170, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput171 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)divide  _wbdinput171,  10, _wbdinput171,  __wbdoutput
    push    _wbdinput171 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     _wbdinput171 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(end macro)divide  _wbdinput171,  10, _wbdinput171,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero171, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     prefixzero171 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)lvar    prefixzero171, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     __wbdcnt171 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt171,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt171 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt171,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero171, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero171 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero171, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero171, 0
        push    prefixzero171 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)if_equal    prefixzero171, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput172 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)divide  _wbdinput172,  10, _wbdinput172,  __wbdoutput
    push    _wbdinput172 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     _wbdinput172 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(end macro)divide  _wbdinput172,  10, _wbdinput172,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero172, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     prefixzero172 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)lvar    prefixzero172, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  sbm     __wbdcnt172 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt172,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt172 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt172,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero172, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero172 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero172, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero172, 0
        push    prefixzero172 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)if_equal    prefixzero172, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  set     '|' # stick #@(main@87)(main@136)(main@229)
  #(begin macro)ansi_CUP    8,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput173 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput173,  10, _wbdinput173,  __wbdoutput
    push    _wbdinput173 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput173 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput173,  10, _wbdinput173,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero173, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero173 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero173, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt173 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt173,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt173 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt173,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero173, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero173 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero173, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero173, 0
        push    prefixzero173 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero173, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput174 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput174,  10, _wbdinput174,  __wbdoutput
    push    _wbdinput174 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput174 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput174,  10, _wbdinput174,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero174, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero174 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero174, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt174 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt174,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt174 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt174,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero174, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero174 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero174, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero174, 0
        push    prefixzero174 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero174, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    7,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput175 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput175,  10, _wbdinput175,  __wbdoutput
    push    _wbdinput175 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput175 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput175,  10, _wbdinput175,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero175, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero175 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero175, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt175 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt175,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt175 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt175,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero175, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero175 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero175, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero175, 0
        push    prefixzero175 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero175, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput176 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput176,  10, _wbdinput176,  __wbdoutput
    push    _wbdinput176 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput176 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput176,  10, _wbdinput176,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero176, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero176 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero176, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt176 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt176,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt176 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt176,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero176, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero176 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero176, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero176, 0
        push    prefixzero176 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero176, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    6,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput177 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput177,  10, _wbdinput177,  __wbdoutput
    push    _wbdinput177 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput177 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput177,  10, _wbdinput177,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero177, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero177 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero177, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt177 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt177,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt177 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt177,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero177, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero177 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero177, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero177, 0
        push    prefixzero177 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero177, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput178 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput178,  10, _wbdinput178,  __wbdoutput
    push    _wbdinput178 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput178 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput178,  10, _wbdinput178,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero178, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero178 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero178, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt178 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt178,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt178 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt178,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero178, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero178 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero178, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero178, 0
        push    prefixzero178 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero178, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    5,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput179 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput179,  10, _wbdinput179,  __wbdoutput
    push    _wbdinput179 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput179 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput179,  10, _wbdinput179,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero179, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero179 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero179, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt179 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt179,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt179 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt179,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero179, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero179 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero179, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero179, 0
        push    prefixzero179 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero179, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput180 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput180,  10, _wbdinput180,  __wbdoutput
    push    _wbdinput180 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput180 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput180,  10, _wbdinput180,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero180, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero180 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero180, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt180 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt180,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt180 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt180,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero180, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero180 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero180, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero180, 0
        push    prefixzero180 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero180, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    4,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput181 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput181,  10, _wbdinput181,  __wbdoutput
    push    _wbdinput181 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput181 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput181,  10, _wbdinput181,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero181, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero181 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero181, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt181 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt181,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt181 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt181,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero181, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero181 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero181, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero181, 0
        push    prefixzero181 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero181, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput182 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput182,  10, _wbdinput182,  __wbdoutput
    push    _wbdinput182 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput182 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput182,  10, _wbdinput182,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero182, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero182 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero182, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt182 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt182,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt182 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt182,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero182, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero182 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero182, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero182, 0
        push    prefixzero182 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero182, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    3,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput183 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput183,  10, _wbdinput183,  __wbdoutput
    push    _wbdinput183 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput183 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput183,  10, _wbdinput183,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero183, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero183 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero183, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt183 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt183,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt183 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt183,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero183, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero183 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero183, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero183, 0
        push    prefixzero183 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero183, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput184 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput184,  10, _wbdinput184,  __wbdoutput
    push    _wbdinput184 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput184 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput184,  10, _wbdinput184,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero184, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero184 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero184, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt184 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt184,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt184 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt184,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero184, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero184 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero184, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero184, 0
        push    prefixzero184 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero184, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,    9
  out #@(main@90)(main@136)(main@229)
  #(begin macro)ansi_CUP    2,    9
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput185 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput185,  10, _wbdinput185,  __wbdoutput
    push    _wbdinput185 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     _wbdinput185 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput185,  10, _wbdinput185,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero185, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     prefixzero185 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero185, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@136)(main@229)
  sbm     __wbdcnt185 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt185,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt185 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt185,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero185, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero185 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero185, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero185, 0
        push    prefixzero185 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero185, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@136)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@136)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@136)(main@229)
  #(end macro)print   ;
  push    9 #@(ansi_inc@129)(main@89)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput186 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)divide  _wbdinput186,  10, _wbdinput186,  __wbdoutput
    push    _wbdinput186 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     _wbdinput186 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(end macro)divide  _wbdinput186,  10, _wbdinput186,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero186, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     prefixzero186 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)lvar    prefixzero186, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@136)(main@229)
  sbm     __wbdcnt186 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt186,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt186 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt186,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero186, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero186 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero186, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero186, 0
        push    prefixzero186 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)if_equal    prefixzero186, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@136)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@136)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@136)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,    9
  out #@(main@90)(main@136)(main@229)
  drop #@(main@92)(main@136)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput187 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    #(begin macro)divide  _wbdinput187,  10, _wbdinput187,  __wbdoutput
    push    _wbdinput187 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    pop     _wbdinput187 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    #(end macro)divide  _wbdinput187,  10, _wbdinput187,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero187, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  sbm     prefixzero187 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)lvar    prefixzero187, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  sbm     __wbdcnt187 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt187,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt187 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt187,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero187, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero187 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero187, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero187, 0
        push    prefixzero187 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
          #(end macro)if_equal    prefixzero187, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  # display discs #@(main@94)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    yy4,  0
  push    0 #@(macro_inc@22)(main@96)(main@136)(main@229)
  sbm     yy4 #@(macro_inc@23)(main@96)(main@136)(main@229)
  #(end macro)lvar    yy4,  0
  #(begin macro)lvar    xx4,  0
  push    0 #@(macro_inc@22)(main@97)(main@136)(main@229)
  sbm     xx4 #@(macro_inc@23)(main@97)(main@136)(main@229)
  #(end macro)lvar    xx4,  0
  #(begin macro)lvar    oldPos4,  0
  push    0 #@(macro_inc@22)(main@98)(main@136)(main@229)
  sbm     oldPos4 #@(macro_inc@23)(main@98)(main@136)(main@229)
  #(end macro)lvar    oldPos4,  0
  #(begin macro)lvar    disc4,    0
  push    0 #@(macro_inc@22)(main@99)(main@136)(main@229)
  sbm     disc4 #@(macro_inc@23)(main@99)(main@136)(main@229)
  #(end macro)lvar    disc4,    0
  push    src.pos #@(main@100)(main@136)(main@229)
  pop     oldPos4 #@(main@101)(main@136)(main@229)
   #@(main@102)(main@136)(main@229)
  push    src.pos #@(main@103)(main@136)(main@229)
  loop #@(main@104)(main@136)(main@229)
    push    src #@(main@105)(main@136)(main@229)
    pop     disc4 #@(main@106)(main@136)(main@229)
     #@(main@107)(main@136)(main@229)
    push    9 #@(main@108)(main@136)(main@229)
    push    src.pos #@(main@109)(main@136)(main@229)
    sub #@(main@110)(main@136)(main@229)
    pop     yy4 #@(main@111)(main@136)(main@229)
    push    9 #@(main@112)(main@136)(main@229)
    push    disc4 #@(main@113)(main@136)(main@229)
    sub #@(main@114)(main@136)(main@229)
    pop     xx4 #@(main@115)(main@136)(main@229)
    #(begin macro)ansi_CUP    yy4,  xx4
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@136)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    yy4 #@(ansi_inc@126)(main@116)(main@136)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput188 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@136)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@136)(main@229)
    loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@136)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@136)(main@229)
      #(begin macro)divide  _wbdinput188,  10, _wbdinput188,  __wbdoutput
      push    _wbdinput188 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@229)
      pop     _wbdinput188 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@136)(main@229)
      #(end macro)divide  _wbdinput188,  10, _wbdinput188,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@136)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@136)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero188, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@136)(main@229)
    sbm     prefixzero188 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@136)(main@229)
    #(end macro)lvar    prefixzero188, 1
    push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@136)(main@229)
    sbm     __wbdcnt188 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@136)(main@229)
    loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@136)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@136)(main@229)
      #(begin macro)if_sup   __wbdcnt188,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt188 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@136)(main@229)
        #(end macro)if_sup   __wbdcnt188,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@136)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero188, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero188 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@136)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero188, 0
        else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@136)(main@229)
          #(begin macro)if_equal    prefixzero188, 0
          push    prefixzero188 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@136)(main@229)
            #(end macro)if_equal    prefixzero188, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@136)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@136)(main@229)
        fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@136)(main@229)
      else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@136)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@136)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@136)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@136)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@136)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   ;
    push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@136)(main@229)
    set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@136)(main@229)
    out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@136)(main@229)
    #(end macro)print   ;
    push    xx4 #@(ansi_inc@129)(main@116)(main@136)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput189 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@136)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@136)(main@229)
    loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@136)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@136)(main@229)
      #(begin macro)divide  _wbdinput189,  10, _wbdinput189,  __wbdoutput
      push    _wbdinput189 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@229)
      pop     _wbdinput189 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@136)(main@229)
      #(end macro)divide  _wbdinput189,  10, _wbdinput189,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@136)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@136)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero189, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@136)(main@229)
    sbm     prefixzero189 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@136)(main@229)
    #(end macro)lvar    prefixzero189, 1
    push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@136)(main@229)
    sbm     __wbdcnt189 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@136)(main@229)
    loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@136)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@136)(main@229)
      #(begin macro)if_sup   __wbdcnt189,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt189 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@136)(main@229)
        #(end macro)if_sup   __wbdcnt189,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@136)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero189, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero189 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@136)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero189, 0
        else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@136)(main@229)
          #(begin macro)if_equal    prefixzero189, 0
          push    prefixzero189 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@136)(main@229)
            #(end macro)if_equal    prefixzero189, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@136)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@136)(main@229)
        fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@136)(main@229)
      else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@136)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@136)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@136)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@136)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@136)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   H
    push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@136)(main@229)
    set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@136)(main@229)
    out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@136)(main@229)
    #(end macro)print   H
    #(end macro)ansi_CUP    yy4,  xx4
    #(begin macro)ansi_SGR_bgcolor   disc4
    push    disc4 #@(ansi_inc@431)(main@117)(main@136)(main@229)
    add     40 #@(ansi_inc@432)(main@117)(main@136)(main@229)
    sbm     __ansibgc4 #@(ansi_inc@433)(main@117)(main@136)(main@229)
    #(begin macro)ansi_SGR    __ansibgc4
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansibgc4 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput190 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      #(begin macro)divide  _wbdinput190,  10, _wbdinput190,  __wbdoutput
      push    _wbdinput190 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      pop     _wbdinput190 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      #(end macro)divide  _wbdinput190,  10, _wbdinput190,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero190, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    sbm     prefixzero190 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)lvar    prefixzero190, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    sbm     __wbdcnt190 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      #(begin macro)if_sup   __wbdcnt190,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt190 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        #(end macro)if_sup   __wbdcnt190,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero190, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero190 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero190, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          #(begin macro)if_equal    prefixzero190, 0
          push    prefixzero190 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
            #(end macro)if_equal    prefixzero190, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@136)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansibgc4
    drop #@(ansi_inc@435)(main@117)(main@136)(main@229)
    #(end macro)ansi_SGR_bgcolor   disc4
    #(begin macro)ansi_SGR_fgcolor   disc4
    push    disc4 #@(ansi_inc@407)(main@118)(main@136)(main@229)
    add     30 #@(ansi_inc@408)(main@118)(main@136)(main@229)
    sbm     __ansifgc5 #@(ansi_inc@409)(main@118)(main@136)(main@229)
    #(begin macro)ansi_SGR    __ansifgc5
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansifgc5 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput191 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      #(begin macro)divide  _wbdinput191,  10, _wbdinput191,  __wbdoutput
      push    _wbdinput191 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      pop     _wbdinput191 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      #(end macro)divide  _wbdinput191,  10, _wbdinput191,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero191, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    sbm     prefixzero191 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)lvar    prefixzero191, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    sbm     __wbdcnt191 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      #(begin macro)if_sup   __wbdcnt191,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt191 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        #(end macro)if_sup   __wbdcnt191,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero191, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero191 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero191, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          #(begin macro)if_equal    prefixzero191, 0
          push    prefixzero191 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
            #(end macro)if_equal    prefixzero191, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@136)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansifgc5
    drop #@(ansi_inc@411)(main@118)(main@136)(main@229)
    #(end macro)ansi_SGR_fgcolor   disc4
    push    disc4 #@(main@119)(main@136)(main@229)
    loop #@(main@120)(main@136)(main@229)
      #(begin macro)print   XX
      push    0 #@(macro_inc@331)(main@121)(main@136)(main@229)
      set     88 #@(macro_inc@346)(main@121)(main@136)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@136)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@136)(main@229)
      drop #@(macro_inc@351)(main@121)(main@136)(main@229)
      #(end macro)print   XX
    endloop #@(main@122)(main@136)(main@229)
    #(begin macro)print   X
    push    0 #@(macro_inc@331)(main@123)(main@136)(main@229)
    set     88 #@(macro_inc@346)(main@123)(main@136)(main@229)
    out             # 'X' #@(macro_inc@348)(main@123)(main@136)(main@229)
    drop #@(macro_inc@351)(main@123)(main@136)(main@229)
    #(end macro)print   X
    arotr   src #@(main@124)(main@136)(main@229)
  endloop #@(main@125)(main@136)(main@229)
  push    oldPos4 #@(main@126)(main@136)(main@229)
  loop #@(main@127)(main@136)(main@229)
    arotl   src #@(main@128)(main@136)(main@229)
  endloop #@(main@129)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(main@130)(main@136)(main@229)
  drop #@(macro_inc@15)(main@130)(main@136)(main@229)
  drop #@(macro_inc@15)(main@130)(main@136)(main@229)
  drop #@(macro_inc@15)(main@130)(main@136)(main@229)
  #(end macro)scope_end
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput192 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    #(begin macro)divide  _wbdinput192,  10, _wbdinput192,  __wbdoutput
    push    _wbdinput192 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    pop     _wbdinput192 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    #(end macro)divide  _wbdinput192,  10, _wbdinput192,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero192, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  sbm     prefixzero192 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)lvar    prefixzero192, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  sbm     __wbdcnt192 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    #(begin macro)if_sup   __wbdcnt192,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt192 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      #(end macro)if_sup   __wbdcnt192,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero192, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero192 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero192, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        #(begin macro)if_equal    prefixzero192, 0
        push    prefixzero192 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
          #(end macro)if_equal    prefixzero192, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@136)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  #(end macro)displayTower    src,    9,   9
  #(begin macro)displayTower    aux,    26,   9
  # display stick #@(main@70)(main@137)(main@229)
  #(begin macro)ansi_CUP    9,    19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    9 #@(ansi_inc@126)(main@71)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput193 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@137)(main@229)
    #(begin macro)divide  _wbdinput193,  10, _wbdinput193,  __wbdoutput
    push    _wbdinput193 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@229)
    pop     _wbdinput193 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@137)(main@229)
    #(end macro)divide  _wbdinput193,  10, _wbdinput193,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero193, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@137)(main@229)
  sbm     prefixzero193 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@137)(main@229)
  #(end macro)lvar    prefixzero193, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@137)(main@229)
  sbm     __wbdcnt193 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt193,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt193 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt193,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero193, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero193 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero193, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero193, 0
        push    prefixzero193 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@137)(main@229)
          #(end macro)if_equal    prefixzero193, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@71)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput194 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@137)(main@229)
    #(begin macro)divide  _wbdinput194,  10, _wbdinput194,  __wbdoutput
    push    _wbdinput194 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@229)
    pop     _wbdinput194 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@137)(main@229)
    #(end macro)divide  _wbdinput194,  10, _wbdinput194,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero194, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@137)(main@229)
  sbm     prefixzero194 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@137)(main@229)
  #(end macro)lvar    prefixzero194, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@137)(main@229)
  sbm     __wbdcnt194 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt194,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt194 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt194,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero194, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero194 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero194, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero194, 0
        push    prefixzero194 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@137)(main@229)
          #(end macro)if_equal    prefixzero194, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    9,    19
  #(begin macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR3   48, 5,  94
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput195 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)divide  _wbdinput195,  10, _wbdinput195,  __wbdoutput
    push    _wbdinput195 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     _wbdinput195 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(end macro)divide  _wbdinput195,  10, _wbdinput195,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero195, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     prefixzero195 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)lvar    prefixzero195, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     __wbdcnt195 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt195,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt195 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt195,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero195, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero195 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero195, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero195, 0
        push    prefixzero195 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)if_equal    prefixzero195, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput196 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)divide  _wbdinput196,  10, _wbdinput196,  __wbdoutput
    push    _wbdinput196 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     _wbdinput196 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(end macro)divide  _wbdinput196,  10, _wbdinput196,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero196, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     prefixzero196 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)lvar    prefixzero196, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     __wbdcnt196 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt196,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt196 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt196,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero196, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero196 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero196, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero196, 0
        push    prefixzero196 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)if_equal    prefixzero196, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)print   ;
  push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput197 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)divide  _wbdinput197,  10, _wbdinput197,  __wbdoutput
    push    _wbdinput197 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     _wbdinput197 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(end macro)divide  _wbdinput197,  10, _wbdinput197,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero197, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     prefixzero197 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)lvar    prefixzero197, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  sbm     __wbdcnt197 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt197,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt197 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt197,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero197, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero197 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero197, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero197, 0
        push    prefixzero197 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)if_equal    prefixzero197, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   48, 5,  94
  #(end macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput198 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)divide  _wbdinput198,  10, _wbdinput198,  __wbdoutput
    push    _wbdinput198 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     _wbdinput198 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(end macro)divide  _wbdinput198,  10, _wbdinput198,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero198, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     prefixzero198 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)lvar    prefixzero198, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     __wbdcnt198 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt198,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt198 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt198,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero198, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero198 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero198, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero198, 0
        push    prefixzero198 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)if_equal    prefixzero198, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput199 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)divide  _wbdinput199,  10, _wbdinput199,  __wbdoutput
    push    _wbdinput199 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     _wbdinput199 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(end macro)divide  _wbdinput199,  10, _wbdinput199,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero199, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     prefixzero199 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)lvar    prefixzero199, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     __wbdcnt199 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt199,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt199 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt199,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero199, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero199 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero199, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero199, 0
        push    prefixzero199 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)if_equal    prefixzero199, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput200 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)divide  _wbdinput200,  10, _wbdinput200,  __wbdoutput
    push    _wbdinput200 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     _wbdinput200 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(end macro)divide  _wbdinput200,  10, _wbdinput200,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero200, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     prefixzero200 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)lvar    prefixzero200, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  sbm     __wbdcnt200 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt200,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt200 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt200,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero200, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero200 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero200, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero200, 0
        push    prefixzero200 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)if_equal    prefixzero200, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  push    '=' # plate #@(main@74)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  out #@(main@76)(main@137)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput201 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    #(begin macro)divide  _wbdinput201,  10, _wbdinput201,  __wbdoutput
    push    _wbdinput201 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    pop     _wbdinput201 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    #(end macro)divide  _wbdinput201,  10, _wbdinput201,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero201, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  sbm     prefixzero201 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)lvar    prefixzero201, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  sbm     __wbdcnt201 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt201,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt201 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt201,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero201, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero201 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero201, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero201, 0
        push    prefixzero201 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
          #(end macro)if_equal    prefixzero201, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  set     ' ' #@(main@79)(main@137)(main@229)
  #(begin macro)ansi_CUP    8,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput202 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput202,  10, _wbdinput202,  __wbdoutput
    push    _wbdinput202 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput202 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput202,  10, _wbdinput202,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero202, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero202 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero202, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt202 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt202,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt202 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt202,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero202, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero202 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero202, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero202, 0
        push    prefixzero202 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero202, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput203 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput203,  10, _wbdinput203,  __wbdoutput
    push    _wbdinput203 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput203 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput203,  10, _wbdinput203,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero203, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero203 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero203, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt203 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt203,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt203 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt203,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero203, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero203 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero203, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero203, 0
        push    prefixzero203 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero203, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    7,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput204 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput204,  10, _wbdinput204,  __wbdoutput
    push    _wbdinput204 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput204 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput204,  10, _wbdinput204,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero204, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero204 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero204, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt204 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt204,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt204 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt204,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero204, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero204 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero204, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero204, 0
        push    prefixzero204 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero204, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput205 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput205,  10, _wbdinput205,  __wbdoutput
    push    _wbdinput205 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput205 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput205,  10, _wbdinput205,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero205, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero205 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero205, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt205 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt205,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt205 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt205,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero205, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero205 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero205, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero205, 0
        push    prefixzero205 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero205, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    6,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput206 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput206,  10, _wbdinput206,  __wbdoutput
    push    _wbdinput206 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput206 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput206,  10, _wbdinput206,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero206, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero206 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero206, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt206 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt206,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt206 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt206,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero206, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero206 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero206, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero206, 0
        push    prefixzero206 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero206, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput207 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput207,  10, _wbdinput207,  __wbdoutput
    push    _wbdinput207 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput207 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput207,  10, _wbdinput207,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero207, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero207 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero207, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt207 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt207,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt207 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt207,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero207, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero207 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero207, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero207, 0
        push    prefixzero207 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero207, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    5,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput208 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput208,  10, _wbdinput208,  __wbdoutput
    push    _wbdinput208 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput208 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput208,  10, _wbdinput208,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero208, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero208 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero208, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt208 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt208,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt208 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt208,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero208, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero208 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero208, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero208, 0
        push    prefixzero208 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero208, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput209 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput209,  10, _wbdinput209,  __wbdoutput
    push    _wbdinput209 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput209 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput209,  10, _wbdinput209,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero209, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero209 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero209, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt209 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt209,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt209 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt209,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero209, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero209 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero209, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero209, 0
        push    prefixzero209 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero209, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    4,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput210 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput210,  10, _wbdinput210,  __wbdoutput
    push    _wbdinput210 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput210 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput210,  10, _wbdinput210,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero210, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero210 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero210, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt210 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt210,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt210 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt210,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero210, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero210 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero210, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero210, 0
        push    prefixzero210 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero210, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput211 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput211,  10, _wbdinput211,  __wbdoutput
    push    _wbdinput211 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput211 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput211,  10, _wbdinput211,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero211, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero211 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero211, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt211 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt211,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt211 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt211,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero211, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero211 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero211, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero211, 0
        push    prefixzero211 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero211, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    3,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput212 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput212,  10, _wbdinput212,  __wbdoutput
    push    _wbdinput212 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput212 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput212,  10, _wbdinput212,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero212, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero212 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero212, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt212 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt212,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt212 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt212,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero212, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero212 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero212, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero212, 0
        push    prefixzero212 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero212, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput213 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput213,  10, _wbdinput213,  __wbdoutput
    push    _wbdinput213 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput213 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput213,  10, _wbdinput213,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero213, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero213 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero213, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt213 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt213,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt213 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt213,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero213, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero213 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero213, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero213, 0
        push    prefixzero213 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero213, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_CUP    2,   19
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput214 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput214,  10, _wbdinput214,  __wbdoutput
    push    _wbdinput214 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     _wbdinput214 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput214,  10, _wbdinput214,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero214, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     prefixzero214 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero214, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@137)(main@229)
  sbm     __wbdcnt214 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt214,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt214 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt214,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero214, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero214 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero214, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero214, 0
        push    prefixzero214 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero214, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@137)(main@229)
  #(end macro)print   ;
  push    19 #@(ansi_inc@129)(main@81)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput215 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)divide  _wbdinput215,  10, _wbdinput215,  __wbdoutput
    push    _wbdinput215 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     _wbdinput215 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(end macro)divide  _wbdinput215,  10, _wbdinput215,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero215, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     prefixzero215 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)lvar    prefixzero215, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@137)(main@229)
  sbm     __wbdcnt215 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt215,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt215 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt215,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero215, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero215 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero215, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero215, 0
        push    prefixzero215 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)if_equal    prefixzero215, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,   19
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  out #@(main@83)(main@137)(main@229)
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput216 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)divide  _wbdinput216,  10, _wbdinput216,  __wbdoutput
    push    _wbdinput216 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     _wbdinput216 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(end macro)divide  _wbdinput216,  10, _wbdinput216,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero216, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     prefixzero216 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)lvar    prefixzero216, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     __wbdcnt216 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt216,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt216 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt216,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero216, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero216 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero216, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero216, 0
        push    prefixzero216 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)if_equal    prefixzero216, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput217 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)divide  _wbdinput217,  10, _wbdinput217,  __wbdoutput
    push    _wbdinput217 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     _wbdinput217 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(end macro)divide  _wbdinput217,  10, _wbdinput217,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero217, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     prefixzero217 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)lvar    prefixzero217, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     __wbdcnt217 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt217,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt217 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt217,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero217, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero217 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero217, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero217, 0
        push    prefixzero217 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)if_equal    prefixzero217, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput218 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)divide  _wbdinput218,  10, _wbdinput218,  __wbdoutput
    push    _wbdinput218 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     _wbdinput218 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(end macro)divide  _wbdinput218,  10, _wbdinput218,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero218, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     prefixzero218 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)lvar    prefixzero218, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  sbm     __wbdcnt218 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt218,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt218 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt218,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero218, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero218 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero218, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero218, 0
        push    prefixzero218 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)if_equal    prefixzero218, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  set     '|' # stick #@(main@87)(main@137)(main@229)
  #(begin macro)ansi_CUP    8,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput219 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput219,  10, _wbdinput219,  __wbdoutput
    push    _wbdinput219 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput219 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput219,  10, _wbdinput219,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero219, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero219 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero219, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt219 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt219,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt219 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt219,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero219, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero219 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero219, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero219, 0
        push    prefixzero219 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero219, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput220 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput220,  10, _wbdinput220,  __wbdoutput
    push    _wbdinput220 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput220 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput220,  10, _wbdinput220,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero220, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero220 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero220, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt220 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt220,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt220 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt220,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero220, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero220 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero220, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero220, 0
        push    prefixzero220 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero220, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    7,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput221 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput221,  10, _wbdinput221,  __wbdoutput
    push    _wbdinput221 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput221 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput221,  10, _wbdinput221,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero221, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero221 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero221, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt221 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt221,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt221 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt221,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero221, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero221 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero221, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero221, 0
        push    prefixzero221 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero221, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput222 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput222,  10, _wbdinput222,  __wbdoutput
    push    _wbdinput222 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput222 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput222,  10, _wbdinput222,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero222, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero222 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero222, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt222 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt222,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt222 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt222,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero222, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero222 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero222, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero222, 0
        push    prefixzero222 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero222, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    6,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput223 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput223,  10, _wbdinput223,  __wbdoutput
    push    _wbdinput223 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput223 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput223,  10, _wbdinput223,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero223, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero223 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero223, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt223 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt223,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt223 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt223,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero223, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero223 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero223, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero223, 0
        push    prefixzero223 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero223, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput224 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput224,  10, _wbdinput224,  __wbdoutput
    push    _wbdinput224 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput224 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput224,  10, _wbdinput224,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero224, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero224 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero224, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt224 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt224,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt224 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt224,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero224, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero224 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero224, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero224, 0
        push    prefixzero224 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero224, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    5,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput225 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput225,  10, _wbdinput225,  __wbdoutput
    push    _wbdinput225 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput225 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput225,  10, _wbdinput225,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero225, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero225 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero225, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt225 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt225,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt225 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt225,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero225, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero225 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero225, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero225, 0
        push    prefixzero225 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero225, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput226 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput226,  10, _wbdinput226,  __wbdoutput
    push    _wbdinput226 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput226 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput226,  10, _wbdinput226,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero226, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero226 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero226, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt226 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt226,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt226 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt226,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero226, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero226 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero226, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero226, 0
        push    prefixzero226 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero226, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    4,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput227 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput227,  10, _wbdinput227,  __wbdoutput
    push    _wbdinput227 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput227 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput227,  10, _wbdinput227,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero227, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero227 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero227, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt227 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt227,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt227 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt227,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero227, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero227 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero227, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero227, 0
        push    prefixzero227 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero227, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput228 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput228,  10, _wbdinput228,  __wbdoutput
    push    _wbdinput228 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput228 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput228,  10, _wbdinput228,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero228, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero228 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero228, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt228 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt228,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt228 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt228,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero228, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero228 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero228, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero228, 0
        push    prefixzero228 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero228, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    3,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput229 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput229,  10, _wbdinput229,  __wbdoutput
    push    _wbdinput229 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput229 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput229,  10, _wbdinput229,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero229, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero229 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero229, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt229 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt229,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt229 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt229,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero229, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero229 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero229, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero229, 0
        push    prefixzero229 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero229, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput230 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput230,  10, _wbdinput230,  __wbdoutput
    push    _wbdinput230 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput230 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput230,  10, _wbdinput230,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero230, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero230 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero230, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt230 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt230,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt230 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt230,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero230, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero230 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero230, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero230, 0
        push    prefixzero230 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero230, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,    26
  out #@(main@90)(main@137)(main@229)
  #(begin macro)ansi_CUP    2,    26
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput231 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput231,  10, _wbdinput231,  __wbdoutput
    push    _wbdinput231 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     _wbdinput231 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput231,  10, _wbdinput231,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero231, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     prefixzero231 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero231, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@137)(main@229)
  sbm     __wbdcnt231 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt231,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt231 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt231,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero231, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero231 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero231, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero231, 0
        push    prefixzero231 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero231, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@137)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@137)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@137)(main@229)
  #(end macro)print   ;
  push    26 #@(ansi_inc@129)(main@89)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput232 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)divide  _wbdinput232,  10, _wbdinput232,  __wbdoutput
    push    _wbdinput232 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     _wbdinput232 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(end macro)divide  _wbdinput232,  10, _wbdinput232,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero232, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     prefixzero232 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)lvar    prefixzero232, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@137)(main@229)
  sbm     __wbdcnt232 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt232,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt232 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt232,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero232, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero232 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero232, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero232, 0
        push    prefixzero232 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)if_equal    prefixzero232, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@137)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@137)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@137)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,    26
  out #@(main@90)(main@137)(main@229)
  drop #@(main@92)(main@137)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput233 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    #(begin macro)divide  _wbdinput233,  10, _wbdinput233,  __wbdoutput
    push    _wbdinput233 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    pop     _wbdinput233 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    #(end macro)divide  _wbdinput233,  10, _wbdinput233,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero233, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  sbm     prefixzero233 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)lvar    prefixzero233, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  sbm     __wbdcnt233 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt233,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt233 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt233,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero233, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero233 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero233, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero233, 0
        push    prefixzero233 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
          #(end macro)if_equal    prefixzero233, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  # display discs #@(main@94)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    yy5,  0
  push    0 #@(macro_inc@22)(main@96)(main@137)(main@229)
  sbm     yy5 #@(macro_inc@23)(main@96)(main@137)(main@229)
  #(end macro)lvar    yy5,  0
  #(begin macro)lvar    xx5,  0
  push    0 #@(macro_inc@22)(main@97)(main@137)(main@229)
  sbm     xx5 #@(macro_inc@23)(main@97)(main@137)(main@229)
  #(end macro)lvar    xx5,  0
  #(begin macro)lvar    oldPos5,  0
  push    0 #@(macro_inc@22)(main@98)(main@137)(main@229)
  sbm     oldPos5 #@(macro_inc@23)(main@98)(main@137)(main@229)
  #(end macro)lvar    oldPos5,  0
  #(begin macro)lvar    disc5,    0
  push    0 #@(macro_inc@22)(main@99)(main@137)(main@229)
  sbm     disc5 #@(macro_inc@23)(main@99)(main@137)(main@229)
  #(end macro)lvar    disc5,    0
  push    aux.pos #@(main@100)(main@137)(main@229)
  pop     oldPos5 #@(main@101)(main@137)(main@229)
   #@(main@102)(main@137)(main@229)
  push    aux.pos #@(main@103)(main@137)(main@229)
  loop #@(main@104)(main@137)(main@229)
    push    aux #@(main@105)(main@137)(main@229)
    pop     disc5 #@(main@106)(main@137)(main@229)
     #@(main@107)(main@137)(main@229)
    push    9 #@(main@108)(main@137)(main@229)
    push    aux.pos #@(main@109)(main@137)(main@229)
    sub #@(main@110)(main@137)(main@229)
    pop     yy5 #@(main@111)(main@137)(main@229)
    push    26 #@(main@112)(main@137)(main@229)
    push    disc5 #@(main@113)(main@137)(main@229)
    sub #@(main@114)(main@137)(main@229)
    pop     xx5 #@(main@115)(main@137)(main@229)
    #(begin macro)ansi_CUP    yy5,  xx5
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@137)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    yy5 #@(ansi_inc@126)(main@116)(main@137)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput234 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@137)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@137)(main@229)
    loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@137)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@137)(main@229)
      #(begin macro)divide  _wbdinput234,  10, _wbdinput234,  __wbdoutput
      push    _wbdinput234 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@229)
      pop     _wbdinput234 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@137)(main@229)
      #(end macro)divide  _wbdinput234,  10, _wbdinput234,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@137)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@137)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero234, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@137)(main@229)
    sbm     prefixzero234 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@137)(main@229)
    #(end macro)lvar    prefixzero234, 1
    push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@137)(main@229)
    sbm     __wbdcnt234 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@137)(main@229)
    loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@137)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@137)(main@229)
      #(begin macro)if_sup   __wbdcnt234,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt234 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@137)(main@229)
        #(end macro)if_sup   __wbdcnt234,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@137)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero234, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero234 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@137)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero234, 0
        else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@137)(main@229)
          #(begin macro)if_equal    prefixzero234, 0
          push    prefixzero234 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@137)(main@229)
            #(end macro)if_equal    prefixzero234, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@137)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@137)(main@229)
        fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@137)(main@229)
      else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@137)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@137)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@137)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@137)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@137)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   ;
    push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@137)(main@229)
    set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@137)(main@229)
    out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@137)(main@229)
    #(end macro)print   ;
    push    xx5 #@(ansi_inc@129)(main@116)(main@137)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput235 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@137)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@137)(main@229)
    loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@137)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@137)(main@229)
      #(begin macro)divide  _wbdinput235,  10, _wbdinput235,  __wbdoutput
      push    _wbdinput235 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@229)
      pop     _wbdinput235 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@137)(main@229)
      #(end macro)divide  _wbdinput235,  10, _wbdinput235,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@137)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@137)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero235, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@137)(main@229)
    sbm     prefixzero235 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@137)(main@229)
    #(end macro)lvar    prefixzero235, 1
    push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@137)(main@229)
    sbm     __wbdcnt235 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@137)(main@229)
    loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@137)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@137)(main@229)
      #(begin macro)if_sup   __wbdcnt235,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt235 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@137)(main@229)
        #(end macro)if_sup   __wbdcnt235,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@137)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero235, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero235 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@137)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero235, 0
        else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@137)(main@229)
          #(begin macro)if_equal    prefixzero235, 0
          push    prefixzero235 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@137)(main@229)
            #(end macro)if_equal    prefixzero235, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@137)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@137)(main@229)
        fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@137)(main@229)
      else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@137)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@137)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@137)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@137)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@137)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   H
    push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@137)(main@229)
    set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@137)(main@229)
    out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@137)(main@229)
    #(end macro)print   H
    #(end macro)ansi_CUP    yy5,  xx5
    #(begin macro)ansi_SGR_bgcolor   disc5
    push    disc5 #@(ansi_inc@431)(main@117)(main@137)(main@229)
    add     40 #@(ansi_inc@432)(main@117)(main@137)(main@229)
    sbm     __ansibgc5 #@(ansi_inc@433)(main@117)(main@137)(main@229)
    #(begin macro)ansi_SGR    __ansibgc5
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansibgc5 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput236 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      #(begin macro)divide  _wbdinput236,  10, _wbdinput236,  __wbdoutput
      push    _wbdinput236 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      pop     _wbdinput236 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      #(end macro)divide  _wbdinput236,  10, _wbdinput236,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero236, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    sbm     prefixzero236 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)lvar    prefixzero236, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    sbm     __wbdcnt236 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      #(begin macro)if_sup   __wbdcnt236,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt236 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        #(end macro)if_sup   __wbdcnt236,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero236, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero236 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero236, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          #(begin macro)if_equal    prefixzero236, 0
          push    prefixzero236 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
            #(end macro)if_equal    prefixzero236, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@137)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansibgc5
    drop #@(ansi_inc@435)(main@117)(main@137)(main@229)
    #(end macro)ansi_SGR_bgcolor   disc5
    #(begin macro)ansi_SGR_fgcolor   disc5
    push    disc5 #@(ansi_inc@407)(main@118)(main@137)(main@229)
    add     30 #@(ansi_inc@408)(main@118)(main@137)(main@229)
    sbm     __ansifgc6 #@(ansi_inc@409)(main@118)(main@137)(main@229)
    #(begin macro)ansi_SGR    __ansifgc6
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansifgc6 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput237 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      #(begin macro)divide  _wbdinput237,  10, _wbdinput237,  __wbdoutput
      push    _wbdinput237 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      pop     _wbdinput237 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      #(end macro)divide  _wbdinput237,  10, _wbdinput237,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero237, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    sbm     prefixzero237 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)lvar    prefixzero237, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    sbm     __wbdcnt237 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      #(begin macro)if_sup   __wbdcnt237,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt237 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        #(end macro)if_sup   __wbdcnt237,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero237, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero237 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero237, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          #(begin macro)if_equal    prefixzero237, 0
          push    prefixzero237 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
            #(end macro)if_equal    prefixzero237, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@137)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansifgc6
    drop #@(ansi_inc@411)(main@118)(main@137)(main@229)
    #(end macro)ansi_SGR_fgcolor   disc5
    push    disc5 #@(main@119)(main@137)(main@229)
    loop #@(main@120)(main@137)(main@229)
      #(begin macro)print   XX
      push    0 #@(macro_inc@331)(main@121)(main@137)(main@229)
      set     88 #@(macro_inc@346)(main@121)(main@137)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@137)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@137)(main@229)
      drop #@(macro_inc@351)(main@121)(main@137)(main@229)
      #(end macro)print   XX
    endloop #@(main@122)(main@137)(main@229)
    #(begin macro)print   X
    push    0 #@(macro_inc@331)(main@123)(main@137)(main@229)
    set     88 #@(macro_inc@346)(main@123)(main@137)(main@229)
    out             # 'X' #@(macro_inc@348)(main@123)(main@137)(main@229)
    drop #@(macro_inc@351)(main@123)(main@137)(main@229)
    #(end macro)print   X
    arotr   aux #@(main@124)(main@137)(main@229)
  endloop #@(main@125)(main@137)(main@229)
  push    oldPos5 #@(main@126)(main@137)(main@229)
  loop #@(main@127)(main@137)(main@229)
    arotl   aux #@(main@128)(main@137)(main@229)
  endloop #@(main@129)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(main@130)(main@137)(main@229)
  drop #@(macro_inc@15)(main@130)(main@137)(main@229)
  drop #@(macro_inc@15)(main@130)(main@137)(main@229)
  drop #@(macro_inc@15)(main@130)(main@137)(main@229)
  #(end macro)scope_end
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput238 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    #(begin macro)divide  _wbdinput238,  10, _wbdinput238,  __wbdoutput
    push    _wbdinput238 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    pop     _wbdinput238 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    #(end macro)divide  _wbdinput238,  10, _wbdinput238,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero238, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  sbm     prefixzero238 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)lvar    prefixzero238, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  sbm     __wbdcnt238 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    #(begin macro)if_sup   __wbdcnt238,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt238 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      #(end macro)if_sup   __wbdcnt238,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero238, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero238 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero238, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        #(begin macro)if_equal    prefixzero238, 0
        push    prefixzero238 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
          #(end macro)if_equal    prefixzero238, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@137)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  #(end macro)displayTower    aux,    26,   9
  #(begin macro)displayTower    dest,   43,   9
  # display stick #@(main@70)(main@138)(main@229)
  #(begin macro)ansi_CUP    9,    36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@71)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    9 #@(ansi_inc@126)(main@71)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput239 #@(macro_inc@297)(ansi_inc@127)(main@71)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@71)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@71)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@71)(main@138)(main@229)
    #(begin macro)divide  _wbdinput239,  10, _wbdinput239,  __wbdoutput
    push    _wbdinput239 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@229)
    pop     _wbdinput239 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@71)(main@138)(main@229)
    #(end macro)divide  _wbdinput239,  10, _wbdinput239,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@71)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@71)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero239, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@71)(main@138)(main@229)
  sbm     prefixzero239 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@71)(main@138)(main@229)
  #(end macro)lvar    prefixzero239, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@71)(main@138)(main@229)
  sbm     __wbdcnt239 #@(macro_inc@307)(ansi_inc@127)(main@71)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@71)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@71)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt239,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt239 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@71)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt239,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@71)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@71)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero239, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero239 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@71)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero239, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@71)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero239, 0
        push    prefixzero239 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@71)(main@138)(main@229)
          #(end macro)if_equal    prefixzero239, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@71)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@71)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@71)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@71)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@71)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@71)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@71)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@71)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@71)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@71)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@71)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@71)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@71)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@71)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput240 #@(macro_inc@297)(ansi_inc@130)(main@71)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@71)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@71)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@71)(main@138)(main@229)
    #(begin macro)divide  _wbdinput240,  10, _wbdinput240,  __wbdoutput
    push    _wbdinput240 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@229)
    pop     _wbdinput240 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@71)(main@138)(main@229)
    #(end macro)divide  _wbdinput240,  10, _wbdinput240,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@71)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@71)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero240, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@71)(main@138)(main@229)
  sbm     prefixzero240 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@71)(main@138)(main@229)
  #(end macro)lvar    prefixzero240, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@71)(main@138)(main@229)
  sbm     __wbdcnt240 #@(macro_inc@307)(ansi_inc@130)(main@71)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@71)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@71)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt240,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt240 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@71)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt240,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@71)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@71)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero240, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero240 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@71)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero240, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@71)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero240, 0
        push    prefixzero240 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@71)(main@138)(main@229)
          #(end macro)if_equal    prefixzero240, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@71)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@71)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@71)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@71)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@71)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@71)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@71)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@71)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@71)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@71)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@71)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@71)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@71)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    9,    36
  #(begin macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR3   48, 5,  94
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    48 #@(ansi_inc@195)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput241 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)divide  _wbdinput241,  10, _wbdinput241,  __wbdoutput
    push    _wbdinput241 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     _wbdinput241 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(end macro)divide  _wbdinput241,  10, _wbdinput241,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero241, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     prefixzero241 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)lvar    prefixzero241, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     __wbdcnt241 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt241,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt241 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt241,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero241, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero241 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero241, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero241, 0
        push    prefixzero241 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)if_equal    prefixzero241, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput242 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)divide  _wbdinput242,  10, _wbdinput242,  __wbdoutput
    push    _wbdinput242 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     _wbdinput242 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(end macro)divide  _wbdinput242,  10, _wbdinput242,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero242, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     prefixzero242 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)lvar    prefixzero242, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     __wbdcnt242 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt242,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt242 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt242,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero242, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero242 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero242, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero242, 0
        push    prefixzero242 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)if_equal    prefixzero242, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)print   ;
  push    94 #@(ansi_inc@201)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput243 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)divide  _wbdinput243,  10, _wbdinput243,  __wbdoutput
    push    _wbdinput243 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     _wbdinput243 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(end macro)divide  _wbdinput243,  10, _wbdinput243,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero243, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     prefixzero243 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)lvar    prefixzero243, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  sbm     __wbdcnt243 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt243,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt243 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt243,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero243, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero243 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero243, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero243, 0
        push    prefixzero243 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)if_equal    prefixzero243, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@440)(main@72)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   48, 5,  94
  #(end macro)ansi_SGR_bg256  94
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput244 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)divide  _wbdinput244,  10, _wbdinput244,  __wbdoutput
    push    _wbdinput244 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     _wbdinput244 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(end macro)divide  _wbdinput244,  10, _wbdinput244,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero244, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     prefixzero244 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)lvar    prefixzero244, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     __wbdcnt244 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt244,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt244 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt244,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero244, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero244 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero244, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero244, 0
        push    prefixzero244 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)if_equal    prefixzero244, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput245 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)divide  _wbdinput245,  10, _wbdinput245,  __wbdoutput
    push    _wbdinput245 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     _wbdinput245 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(end macro)divide  _wbdinput245,  10, _wbdinput245,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero245, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     prefixzero245 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)lvar    prefixzero245, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     __wbdcnt245 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt245,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt245 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt245,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero245, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero245 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero245, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero245, 0
        push    prefixzero245 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)if_equal    prefixzero245, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput246 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)divide  _wbdinput246,  10, _wbdinput246,  __wbdoutput
    push    _wbdinput246 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     _wbdinput246 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(end macro)divide  _wbdinput246,  10, _wbdinput246,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero246, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     prefixzero246 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)lvar    prefixzero246, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  sbm     __wbdcnt246 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt246,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt246 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt246,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero246, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero246 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero246, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero246, 0
        push    prefixzero246 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)if_equal    prefixzero246, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@73)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  push    '=' # plate #@(main@74)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  out #@(main@76)(main@138)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput247 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    #(begin macro)divide  _wbdinput247,  10, _wbdinput247,  __wbdoutput
    push    _wbdinput247 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    pop     _wbdinput247 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    #(end macro)divide  _wbdinput247,  10, _wbdinput247,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero247, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  sbm     prefixzero247 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)lvar    prefixzero247, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  sbm     __wbdcnt247 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt247,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt247 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt247,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero247, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero247 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero247, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero247, 0
        push    prefixzero247 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
          #(end macro)if_equal    prefixzero247, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@78)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  set     ' ' #@(main@79)(main@138)(main@229)
  #(begin macro)ansi_CUP    8,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput248 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput248,  10, _wbdinput248,  __wbdoutput
    push    _wbdinput248 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput248 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput248,  10, _wbdinput248,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero248, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero248 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero248, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt248 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt248,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt248 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt248,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero248, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero248 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero248, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero248, 0
        push    prefixzero248 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero248, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput249 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput249,  10, _wbdinput249,  __wbdoutput
    push    _wbdinput249 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput249 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput249,  10, _wbdinput249,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero249, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero249 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero249, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt249 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt249,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt249 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt249,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero249, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero249 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero249, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero249, 0
        push    prefixzero249 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero249, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    7,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput250 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput250,  10, _wbdinput250,  __wbdoutput
    push    _wbdinput250 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput250 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput250,  10, _wbdinput250,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero250, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero250 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero250, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt250 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt250,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt250 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt250,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero250, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero250 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero250, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero250, 0
        push    prefixzero250 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero250, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput251 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput251,  10, _wbdinput251,  __wbdoutput
    push    _wbdinput251 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput251 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput251,  10, _wbdinput251,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero251, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero251 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero251, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt251 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt251,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt251 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt251,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero251, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero251 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero251, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero251, 0
        push    prefixzero251 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero251, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    6,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput252 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput252,  10, _wbdinput252,  __wbdoutput
    push    _wbdinput252 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput252 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput252,  10, _wbdinput252,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero252, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero252 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero252, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt252 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt252,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt252 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt252,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero252, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero252 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero252, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero252, 0
        push    prefixzero252 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero252, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput253 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput253,  10, _wbdinput253,  __wbdoutput
    push    _wbdinput253 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput253 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput253,  10, _wbdinput253,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero253, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero253 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero253, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt253 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt253,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt253 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt253,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero253, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero253 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero253, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero253, 0
        push    prefixzero253 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero253, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    5,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput254 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput254,  10, _wbdinput254,  __wbdoutput
    push    _wbdinput254 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput254 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput254,  10, _wbdinput254,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero254, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero254 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero254, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt254 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt254,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt254 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt254,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero254, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero254 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero254, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero254, 0
        push    prefixzero254 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero254, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput255 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput255,  10, _wbdinput255,  __wbdoutput
    push    _wbdinput255 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput255 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput255,  10, _wbdinput255,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero255, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero255 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero255, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt255 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt255,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt255 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt255,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero255, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero255 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero255, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero255, 0
        push    prefixzero255 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero255, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    4,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput256 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput256,  10, _wbdinput256,  __wbdoutput
    push    _wbdinput256 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput256 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput256,  10, _wbdinput256,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero256, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero256 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero256, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt256 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt256,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt256 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt256,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero256, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero256 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero256, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero256, 0
        push    prefixzero256 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero256, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput257 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput257,  10, _wbdinput257,  __wbdoutput
    push    _wbdinput257 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput257 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput257,  10, _wbdinput257,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero257, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero257 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero257, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt257 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt257,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt257 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt257,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero257, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero257 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero257, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero257, 0
        push    prefixzero257 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero257, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    3,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput258 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput258,  10, _wbdinput258,  __wbdoutput
    push    _wbdinput258 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput258 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput258,  10, _wbdinput258,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero258, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero258 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero258, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt258 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt258,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt258 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt258,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero258, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero258 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero258, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero258, 0
        push    prefixzero258 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero258, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput259 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput259,  10, _wbdinput259,  __wbdoutput
    push    _wbdinput259 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput259 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput259,  10, _wbdinput259,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero259, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero259 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero259, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt259 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt259,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt259 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt259,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero259, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero259 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero259, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero259, 0
        push    prefixzero259 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero259, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_CUP    2,   36
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@81)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput260 #@(macro_inc@297)(ansi_inc@127)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput260,  10, _wbdinput260,  __wbdoutput
    push    _wbdinput260 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     _wbdinput260 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput260,  10, _wbdinput260,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero260, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     prefixzero260 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero260, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@81)(main@138)(main@229)
  sbm     __wbdcnt260 #@(macro_inc@307)(ansi_inc@127)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt260,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt260 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt260,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero260, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero260 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero260, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero260, 0
        push    prefixzero260 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero260, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@81)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@81)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@81)(main@138)(main@229)
  #(end macro)print   ;
  push    36 #@(ansi_inc@129)(main@81)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput261 #@(macro_inc@297)(ansi_inc@130)(main@81)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@81)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)divide  _wbdinput261,  10, _wbdinput261,  __wbdoutput
    push    _wbdinput261 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     _wbdinput261 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(end macro)divide  _wbdinput261,  10, _wbdinput261,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero261, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     prefixzero261 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)lvar    prefixzero261, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@81)(main@138)(main@229)
  sbm     __wbdcnt261 #@(macro_inc@307)(ansi_inc@130)(main@81)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@81)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@81)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt261,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt261 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt261,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero261, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero261 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero261, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@81)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero261, 0
        push    prefixzero261 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)if_equal    prefixzero261, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@81)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@81)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@81)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@81)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@81)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@81)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@81)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@81)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@81)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@81)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,   36
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  out #@(main@83)(main@138)(main@229)
  #(begin macro)ansi_SGR_fg256  100
  #(begin macro)ansi_SGR3   38, 5,  100
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@194)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    38 #@(ansi_inc@195)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput262 #@(macro_inc@297)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)divide  _wbdinput262,  10, _wbdinput262,  __wbdoutput
    push    _wbdinput262 #@(macro_inc@135)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     _wbdinput262 #@(macro_inc@138)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(end macro)divide  _wbdinput262,  10, _wbdinput262,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero262, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     prefixzero262 #@(macro_inc@23)(macro_inc@305)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)lvar    prefixzero262, 1
  push    3 #@(macro_inc@306)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     __wbdcnt262 #@(macro_inc@307)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt262,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt262 #@(macro_inc@45)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt262,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero262, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero262 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero262, 0
      else #@(macro_inc@314)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero262, 0
        push    prefixzero262 #@(macro_inc@37)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)if_equal    prefixzero262, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@196)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@197)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)print   ;
  push    5 #@(ansi_inc@198)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput263 #@(macro_inc@297)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)divide  _wbdinput263,  10, _wbdinput263,  __wbdoutput
    push    _wbdinput263 #@(macro_inc@135)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     _wbdinput263 #@(macro_inc@138)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(end macro)divide  _wbdinput263,  10, _wbdinput263,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero263, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     prefixzero263 #@(macro_inc@23)(macro_inc@305)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)lvar    prefixzero263, 1
  push    3 #@(macro_inc@306)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     __wbdcnt263 #@(macro_inc@307)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt263,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt263 #@(macro_inc@45)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt263,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero263, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero263 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero263, 0
      else #@(macro_inc@314)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero263, 0
        push    prefixzero263 #@(macro_inc@37)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)if_equal    prefixzero263, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@199)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@200)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)print   ;
  push    100 #@(ansi_inc@201)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput264 #@(macro_inc@297)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)divide  _wbdinput264,  10, _wbdinput264,  __wbdoutput
    push    _wbdinput264 #@(macro_inc@135)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     _wbdinput264 #@(macro_inc@138)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(end macro)divide  _wbdinput264,  10, _wbdinput264,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero264, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     prefixzero264 #@(macro_inc@23)(macro_inc@305)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)lvar    prefixzero264, 1
  push    3 #@(macro_inc@306)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  sbm     __wbdcnt264 #@(macro_inc@307)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt264,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt264 #@(macro_inc@45)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt264,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero264, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero264 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero264, 0
      else #@(macro_inc@314)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero264, 0
        push    prefixzero264 #@(macro_inc@37)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)if_equal    prefixzero264, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@202)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@203)(ansi_inc@416)(main@86)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR3   38, 5,  100
  #(end macro)ansi_SGR_fg256  100
  set     '|' # stick #@(main@87)(main@138)(main@229)
  #(begin macro)ansi_CUP    8,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    8 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput265 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput265,  10, _wbdinput265,  __wbdoutput
    push    _wbdinput265 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput265 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput265,  10, _wbdinput265,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero265, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero265 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero265, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt265 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt265,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt265 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt265,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero265, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero265 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero265, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero265, 0
        push    prefixzero265 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero265, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput266 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput266,  10, _wbdinput266,  __wbdoutput
    push    _wbdinput266 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput266 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput266,  10, _wbdinput266,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero266, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero266 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero266, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt266 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt266,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt266 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt266,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero266, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero266 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero266, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero266, 0
        push    prefixzero266 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero266, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    8,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    7,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    7 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput267 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput267,  10, _wbdinput267,  __wbdoutput
    push    _wbdinput267 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput267 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput267,  10, _wbdinput267,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero267, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero267 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero267, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt267 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt267,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt267 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt267,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero267, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero267 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero267, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero267, 0
        push    prefixzero267 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero267, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput268 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput268,  10, _wbdinput268,  __wbdoutput
    push    _wbdinput268 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput268 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput268,  10, _wbdinput268,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero268, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero268 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero268, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt268 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt268,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt268 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt268,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero268, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero268 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero268, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero268, 0
        push    prefixzero268 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero268, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    7,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    6,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    6 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput269 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput269,  10, _wbdinput269,  __wbdoutput
    push    _wbdinput269 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput269 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput269,  10, _wbdinput269,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero269, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero269 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero269, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt269 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt269,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt269 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt269,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero269, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero269 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero269, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero269, 0
        push    prefixzero269 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero269, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput270 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput270,  10, _wbdinput270,  __wbdoutput
    push    _wbdinput270 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput270 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput270,  10, _wbdinput270,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero270, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero270 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero270, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt270 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt270,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt270 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt270,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero270, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero270 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero270, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero270, 0
        push    prefixzero270 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero270, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    6,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    5,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    5 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput271 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput271,  10, _wbdinput271,  __wbdoutput
    push    _wbdinput271 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput271 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput271,  10, _wbdinput271,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero271, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero271 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero271, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt271 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt271,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt271 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt271,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero271, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero271 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero271, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero271, 0
        push    prefixzero271 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero271, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput272 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput272,  10, _wbdinput272,  __wbdoutput
    push    _wbdinput272 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput272 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput272,  10, _wbdinput272,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero272, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero272 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero272, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt272 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt272,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt272 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt272,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero272, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero272 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero272, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero272, 0
        push    prefixzero272 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero272, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    5,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    4,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    4 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput273 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput273,  10, _wbdinput273,  __wbdoutput
    push    _wbdinput273 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput273 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput273,  10, _wbdinput273,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero273, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero273 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero273, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt273 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt273,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt273 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt273,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero273, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero273 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero273, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero273, 0
        push    prefixzero273 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero273, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput274 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput274,  10, _wbdinput274,  __wbdoutput
    push    _wbdinput274 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput274 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput274,  10, _wbdinput274,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero274, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero274 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero274, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt274 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt274,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt274 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt274,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero274, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero274 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero274, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero274, 0
        push    prefixzero274 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero274, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    4,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    3,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    3 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput275 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput275,  10, _wbdinput275,  __wbdoutput
    push    _wbdinput275 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput275 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput275,  10, _wbdinput275,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero275, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero275 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero275, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt275 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt275,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt275 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt275,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero275, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero275 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero275, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero275, 0
        push    prefixzero275 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero275, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput276 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput276,  10, _wbdinput276,  __wbdoutput
    push    _wbdinput276 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput276 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput276,  10, _wbdinput276,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero276, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero276 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero276, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt276 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt276,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt276 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt276,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero276, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero276 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero276, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero276, 0
        push    prefixzero276 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero276, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    3,    43
  out #@(main@90)(main@138)(main@229)
  #(begin macro)ansi_CUP    2,    43
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@89)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    2 #@(ansi_inc@126)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput277 #@(macro_inc@297)(ansi_inc@127)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput277,  10, _wbdinput277,  __wbdoutput
    push    _wbdinput277 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     _wbdinput277 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput277,  10, _wbdinput277,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero277, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     prefixzero277 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero277, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@89)(main@138)(main@229)
  sbm     __wbdcnt277 #@(macro_inc@307)(ansi_inc@127)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt277,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt277 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt277,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero277, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero277 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero277, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero277, 0
        push    prefixzero277 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero277, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@89)(main@138)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@89)(main@138)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@89)(main@138)(main@229)
  #(end macro)print   ;
  push    43 #@(ansi_inc@129)(main@89)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput278 #@(macro_inc@297)(ansi_inc@130)(main@89)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@89)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)divide  _wbdinput278,  10, _wbdinput278,  __wbdoutput
    push    _wbdinput278 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     _wbdinput278 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(end macro)divide  _wbdinput278,  10, _wbdinput278,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero278, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     prefixzero278 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)lvar    prefixzero278, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@89)(main@138)(main@229)
  sbm     __wbdcnt278 #@(macro_inc@307)(ansi_inc@130)(main@89)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@89)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@89)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt278,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt278 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt278,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero278, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero278 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero278, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@89)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero278, 0
        push    prefixzero278 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)if_equal    prefixzero278, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@89)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@89)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@89)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@89)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@89)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@89)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@89)(main@138)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@89)(main@138)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@89)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@89)(main@138)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    2,    43
  out #@(main@90)(main@138)(main@229)
  drop #@(main@92)(main@138)(main@229)
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput279 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    #(begin macro)divide  _wbdinput279,  10, _wbdinput279,  __wbdoutput
    push    _wbdinput279 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    pop     _wbdinput279 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    #(end macro)divide  _wbdinput279,  10, _wbdinput279,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero279, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  sbm     prefixzero279 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)lvar    prefixzero279, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  sbm     __wbdcnt279 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt279,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt279 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt279,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero279, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero279 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero279, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero279, 0
        push    prefixzero279 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
          #(end macro)if_equal    prefixzero279, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@93)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  # display discs #@(main@94)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    yy6,  0
  push    0 #@(macro_inc@22)(main@96)(main@138)(main@229)
  sbm     yy6 #@(macro_inc@23)(main@96)(main@138)(main@229)
  #(end macro)lvar    yy6,  0
  #(begin macro)lvar    xx6,  0
  push    0 #@(macro_inc@22)(main@97)(main@138)(main@229)
  sbm     xx6 #@(macro_inc@23)(main@97)(main@138)(main@229)
  #(end macro)lvar    xx6,  0
  #(begin macro)lvar    oldPos6,  0
  push    0 #@(macro_inc@22)(main@98)(main@138)(main@229)
  sbm     oldPos6 #@(macro_inc@23)(main@98)(main@138)(main@229)
  #(end macro)lvar    oldPos6,  0
  #(begin macro)lvar    disc6,    0
  push    0 #@(macro_inc@22)(main@99)(main@138)(main@229)
  sbm     disc6 #@(macro_inc@23)(main@99)(main@138)(main@229)
  #(end macro)lvar    disc6,    0
  push    dest.pos #@(main@100)(main@138)(main@229)
  pop     oldPos6 #@(main@101)(main@138)(main@229)
   #@(main@102)(main@138)(main@229)
  push    dest.pos #@(main@103)(main@138)(main@229)
  loop #@(main@104)(main@138)(main@229)
    push    dest #@(main@105)(main@138)(main@229)
    pop     disc6 #@(main@106)(main@138)(main@229)
     #@(main@107)(main@138)(main@229)
    push    9 #@(main@108)(main@138)(main@229)
    push    dest.pos #@(main@109)(main@138)(main@229)
    sub #@(main@110)(main@138)(main@229)
    pop     yy6 #@(main@111)(main@138)(main@229)
    push    43 #@(main@112)(main@138)(main@229)
    push    disc6 #@(main@113)(main@138)(main@229)
    sub #@(main@114)(main@138)(main@229)
    pop     xx6 #@(main@115)(main@138)(main@229)
    #(begin macro)ansi_CUP    yy6,  xx6
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@116)(main@138)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    yy6 #@(ansi_inc@126)(main@116)(main@138)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput280 #@(macro_inc@297)(ansi_inc@127)(main@116)(main@138)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@127)(main@116)(main@138)(main@229)
    loop #@(macro_inc@299)(ansi_inc@127)(main@116)(main@138)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@116)(main@138)(main@229)
      #(begin macro)divide  _wbdinput280,  10, _wbdinput280,  __wbdoutput
      push    _wbdinput280 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@229)
      pop     _wbdinput280 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@116)(main@138)(main@229)
      #(end macro)divide  _wbdinput280,  10, _wbdinput280,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@116)(main@138)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@127)(main@116)(main@138)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero280, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@116)(main@138)(main@229)
    sbm     prefixzero280 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@116)(main@138)(main@229)
    #(end macro)lvar    prefixzero280, 1
    push    3 #@(macro_inc@306)(ansi_inc@127)(main@116)(main@138)(main@229)
    sbm     __wbdcnt280 #@(macro_inc@307)(ansi_inc@127)(main@116)(main@138)(main@229)
    loop #@(macro_inc@308)(ansi_inc@127)(main@116)(main@138)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@116)(main@138)(main@229)
      #(begin macro)if_sup   __wbdcnt280,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt280 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@116)(main@138)(main@229)
        #(end macro)if_sup   __wbdcnt280,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@116)(main@138)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@116)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero280, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero280 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@116)(main@138)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero280, 0
        else #@(macro_inc@314)(ansi_inc@127)(main@116)(main@138)(main@229)
          #(begin macro)if_equal    prefixzero280, 0
          push    prefixzero280 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@116)(main@138)(main@229)
            #(end macro)if_equal    prefixzero280, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@116)(main@138)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@127)(main@116)(main@138)(main@229)
        fi #@(macro_inc@318)(ansi_inc@127)(main@116)(main@138)(main@229)
      else #@(macro_inc@319)(ansi_inc@127)(main@116)(main@138)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@116)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@127)(main@116)(main@138)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@127)(main@116)(main@138)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@116)(main@138)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@116)(main@138)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   ;
    push    0 #@(macro_inc@331)(ansi_inc@128)(main@116)(main@138)(main@229)
    set     59 #@(macro_inc@346)(ansi_inc@128)(main@116)(main@138)(main@229)
    out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@116)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@128)(main@116)(main@138)(main@229)
    #(end macro)print   ;
    push    xx6 #@(ansi_inc@129)(main@116)(main@138)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput281 #@(macro_inc@297)(ansi_inc@130)(main@116)(main@138)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@130)(main@116)(main@138)(main@229)
    loop #@(macro_inc@299)(ansi_inc@130)(main@116)(main@138)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@116)(main@138)(main@229)
      #(begin macro)divide  _wbdinput281,  10, _wbdinput281,  __wbdoutput
      push    _wbdinput281 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@229)
      pop     _wbdinput281 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@116)(main@138)(main@229)
      #(end macro)divide  _wbdinput281,  10, _wbdinput281,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@116)(main@138)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@130)(main@116)(main@138)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero281, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@116)(main@138)(main@229)
    sbm     prefixzero281 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@116)(main@138)(main@229)
    #(end macro)lvar    prefixzero281, 1
    push    3 #@(macro_inc@306)(ansi_inc@130)(main@116)(main@138)(main@229)
    sbm     __wbdcnt281 #@(macro_inc@307)(ansi_inc@130)(main@116)(main@138)(main@229)
    loop #@(macro_inc@308)(ansi_inc@130)(main@116)(main@138)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@116)(main@138)(main@229)
      #(begin macro)if_sup   __wbdcnt281,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt281 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@116)(main@138)(main@229)
        #(end macro)if_sup   __wbdcnt281,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@116)(main@138)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@116)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero281, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero281 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@116)(main@138)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero281, 0
        else #@(macro_inc@314)(ansi_inc@130)(main@116)(main@138)(main@229)
          #(begin macro)if_equal    prefixzero281, 0
          push    prefixzero281 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@116)(main@138)(main@229)
            #(end macro)if_equal    prefixzero281, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@116)(main@138)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@130)(main@116)(main@138)(main@229)
        fi #@(macro_inc@318)(ansi_inc@130)(main@116)(main@138)(main@229)
      else #@(macro_inc@319)(ansi_inc@130)(main@116)(main@138)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@116)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@130)(main@116)(main@138)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@130)(main@116)(main@138)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@116)(main@138)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@116)(main@138)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   H
    push    0 #@(macro_inc@331)(ansi_inc@131)(main@116)(main@138)(main@229)
    set     72 #@(macro_inc@346)(ansi_inc@131)(main@116)(main@138)(main@229)
    out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@116)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@131)(main@116)(main@138)(main@229)
    #(end macro)print   H
    #(end macro)ansi_CUP    yy6,  xx6
    #(begin macro)ansi_SGR_bgcolor   disc6
    push    disc6 #@(ansi_inc@431)(main@117)(main@138)(main@229)
    add     40 #@(ansi_inc@432)(main@117)(main@138)(main@229)
    sbm     __ansibgc6 #@(ansi_inc@433)(main@117)(main@138)(main@229)
    #(begin macro)ansi_SGR    __ansibgc6
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansibgc6 #@(ansi_inc@187)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput282 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      #(begin macro)divide  _wbdinput282,  10, _wbdinput282,  __wbdoutput
      push    _wbdinput282 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      pop     _wbdinput282 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      #(end macro)divide  _wbdinput282,  10, _wbdinput282,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero282, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    sbm     prefixzero282 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)lvar    prefixzero282, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    sbm     __wbdcnt282 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      #(begin macro)if_sup   __wbdcnt282,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt282 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        #(end macro)if_sup   __wbdcnt282,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero282, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero282 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero282, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          #(begin macro)if_equal    prefixzero282, 0
          push    prefixzero282 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
            #(end macro)if_equal    prefixzero282, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@434)(main@117)(main@138)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansibgc6
    drop #@(ansi_inc@435)(main@117)(main@138)(main@229)
    #(end macro)ansi_SGR_bgcolor   disc6
    #(begin macro)ansi_SGR_fgcolor   disc6
    push    disc6 #@(ansi_inc@407)(main@118)(main@138)(main@229)
    add     30 #@(ansi_inc@408)(main@118)(main@138)(main@229)
    sbm     __ansifgc7 #@(ansi_inc@409)(main@118)(main@138)(main@229)
    #(begin macro)ansi_SGR    __ansifgc7
    #(begin macro)ansi_CSI
    #(begin macro)ansi_esc    [
    #(begin macro)print("\x1b")
    push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)print("\x1b")
    #(begin macro)print(cmd)
    push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)print(cmd)
    #(end macro)ansi_esc    [
    #(end macro)ansi_CSI
    push    __ansifgc7 #@(ansi_inc@187)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(begin macro)writeByteDecimal
    sbm _wbdinput283 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      #(begin macro)divide  _wbdinput283,  10, _wbdinput283,  __wbdoutput
      push    _wbdinput283 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      pop     _wbdinput283 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      #(end macro)divide  _wbdinput283,  10, _wbdinput283,  __wbdoutput
      arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(begin macro)scope_begin
    #(end macro)scope_begin
    #(begin macro)lvar    prefixzero283, 1
    push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    sbm     prefixzero283 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)lvar    prefixzero283, 1
    push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    sbm     __wbdcnt283 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      #(begin macro)if_sup   __wbdcnt283,    1   # cnt == 3 or cnt == 2
      push    __wbdcnt283 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        #(end macro)if_sup   __wbdcnt283,    1   # cnt == 3 or cnt == 2
        #(begin macro)if_diff __wbdoutput, 0
        push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          #(end macro)if_diff __wbdoutput, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
          #(begin macro)at_set  prefixzero283, 0
          #(begin macro)at_2("set",a,b)
          at      prefixzero283 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
            set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          #(end macro)at_2("set",a,b)
          #(end macro)at_set  prefixzero283, 0
        else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          #(begin macro)if_equal    prefixzero283, 0
          push    prefixzero283 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
          if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
            #(end macro)if_equal    prefixzero283, 0
            #(begin macro)writeDigit  __wbdoutput
            push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
            add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
            pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
            #(end macro)writeDigit  __wbdoutput
          fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
      else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
      fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(begin macro)scope_end
    drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)scope_end
    drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)writeByteDecimal
    #(begin macro)print   m
    push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@229)
    set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@229)
    out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@229)
    drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@410)(main@118)(main@138)(main@229)
    #(end macro)print   m
    #(end macro)ansi_SGR    __ansifgc7
    drop #@(ansi_inc@411)(main@118)(main@138)(main@229)
    #(end macro)ansi_SGR_fgcolor   disc6
    push    disc6 #@(main@119)(main@138)(main@229)
    loop #@(main@120)(main@138)(main@229)
      #(begin macro)print   XX
      push    0 #@(macro_inc@331)(main@121)(main@138)(main@229)
      set     88 #@(macro_inc@346)(main@121)(main@138)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@138)(main@229)
      out             # 'X' #@(macro_inc@348)(main@121)(main@138)(main@229)
      drop #@(macro_inc@351)(main@121)(main@138)(main@229)
      #(end macro)print   XX
    endloop #@(main@122)(main@138)(main@229)
    #(begin macro)print   X
    push    0 #@(macro_inc@331)(main@123)(main@138)(main@229)
    set     88 #@(macro_inc@346)(main@123)(main@138)(main@229)
    out             # 'X' #@(macro_inc@348)(main@123)(main@138)(main@229)
    drop #@(macro_inc@351)(main@123)(main@138)(main@229)
    #(end macro)print   X
    arotr   dest #@(main@124)(main@138)(main@229)
  endloop #@(main@125)(main@138)(main@229)
  push    oldPos6 #@(main@126)(main@138)(main@229)
  loop #@(main@127)(main@138)(main@229)
    arotl   dest #@(main@128)(main@138)(main@229)
  endloop #@(main@129)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(main@130)(main@138)(main@229)
  drop #@(macro_inc@15)(main@130)(main@138)(main@229)
  drop #@(macro_inc@15)(main@130)(main@138)(main@229)
  drop #@(macro_inc@15)(main@130)(main@138)(main@229)
  #(end macro)scope_end
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput284 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    #(begin macro)divide  _wbdinput284,  10, _wbdinput284,  __wbdoutput
    push    _wbdinput284 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    pop     _wbdinput284 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    #(end macro)divide  _wbdinput284,  10, _wbdinput284,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero284, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  sbm     prefixzero284 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)lvar    prefixzero284, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  sbm     __wbdcnt284 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    #(begin macro)if_sup   __wbdcnt284,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt284 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      #(end macro)if_sup   __wbdcnt284,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero284, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero284 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero284, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        #(begin macro)if_equal    prefixzero284, 0
        push    prefixzero284 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
          #(end macro)if_equal    prefixzero284, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@131)(main@138)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  #(end macro)displayTower    dest,   43,   9
  #(begin macro)ansi_CUP    12, 1
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@125)(main@139)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    12 #@(ansi_inc@126)(main@139)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput285 #@(macro_inc@297)(ansi_inc@127)(main@139)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@127)(main@139)(main@229)
  loop #@(macro_inc@299)(ansi_inc@127)(main@139)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@127)(main@139)(main@229)
    #(begin macro)divide  _wbdinput285,  10, _wbdinput285,  __wbdoutput
    push    _wbdinput285 #@(macro_inc@135)(macro_inc@301)(ansi_inc@127)(main@139)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@127)(main@139)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@127)(main@139)(main@229)
    pop     _wbdinput285 #@(macro_inc@138)(macro_inc@301)(ansi_inc@127)(main@139)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@127)(main@139)(main@229)
    #(end macro)divide  _wbdinput285,  10, _wbdinput285,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@127)(main@139)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@127)(main@139)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero285, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@127)(main@139)(main@229)
  sbm     prefixzero285 #@(macro_inc@23)(macro_inc@305)(ansi_inc@127)(main@139)(main@229)
  #(end macro)lvar    prefixzero285, 1
  push    3 #@(macro_inc@306)(ansi_inc@127)(main@139)(main@229)
  sbm     __wbdcnt285 #@(macro_inc@307)(ansi_inc@127)(main@139)(main@229)
  loop #@(macro_inc@308)(ansi_inc@127)(main@139)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@127)(main@139)(main@229)
    #(begin macro)if_sup   __wbdcnt285,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt285 #@(macro_inc@45)(macro_inc@310)(ansi_inc@127)(main@139)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@127)(main@139)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@127)(main@139)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@127)(main@139)(main@229)
      #(end macro)if_sup   __wbdcnt285,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@127)(main@139)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@127)(main@139)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@127)(main@139)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@127)(main@139)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@127)(main@139)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@127)(main@139)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@127)(main@139)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero285, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero285 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@127)(main@139)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero285, 0
      else #@(macro_inc@314)(ansi_inc@127)(main@139)(main@229)
        #(begin macro)if_equal    prefixzero285, 0
        push    prefixzero285 #@(macro_inc@37)(macro_inc@315)(ansi_inc@127)(main@139)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@127)(main@139)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@127)(main@139)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@127)(main@139)(main@229)
          #(end macro)if_equal    prefixzero285, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@127)(main@139)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@127)(main@139)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@127)(main@139)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@127)(main@139)(main@229)
      fi #@(macro_inc@318)(ansi_inc@127)(main@139)(main@229)
    else #@(macro_inc@319)(ansi_inc@127)(main@139)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@127)(main@139)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@127)(main@139)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@127)(main@139)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@127)(main@139)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@127)(main@139)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@127)(main@139)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@127)(main@139)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   ;
  push    0 #@(macro_inc@331)(ansi_inc@128)(main@139)(main@229)
  set     59 #@(macro_inc@346)(ansi_inc@128)(main@139)(main@229)
  out             # ';' #@(macro_inc@348)(ansi_inc@128)(main@139)(main@229)
  drop #@(macro_inc@351)(ansi_inc@128)(main@139)(main@229)
  #(end macro)print   ;
  push    1 #@(ansi_inc@129)(main@139)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput286 #@(macro_inc@297)(ansi_inc@130)(main@139)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@130)(main@139)(main@229)
  loop #@(macro_inc@299)(ansi_inc@130)(main@139)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@130)(main@139)(main@229)
    #(begin macro)divide  _wbdinput286,  10, _wbdinput286,  __wbdoutput
    push    _wbdinput286 #@(macro_inc@135)(macro_inc@301)(ansi_inc@130)(main@139)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@130)(main@139)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@130)(main@139)(main@229)
    pop     _wbdinput286 #@(macro_inc@138)(macro_inc@301)(ansi_inc@130)(main@139)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@130)(main@139)(main@229)
    #(end macro)divide  _wbdinput286,  10, _wbdinput286,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@130)(main@139)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@130)(main@139)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero286, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@130)(main@139)(main@229)
  sbm     prefixzero286 #@(macro_inc@23)(macro_inc@305)(ansi_inc@130)(main@139)(main@229)
  #(end macro)lvar    prefixzero286, 1
  push    3 #@(macro_inc@306)(ansi_inc@130)(main@139)(main@229)
  sbm     __wbdcnt286 #@(macro_inc@307)(ansi_inc@130)(main@139)(main@229)
  loop #@(macro_inc@308)(ansi_inc@130)(main@139)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@130)(main@139)(main@229)
    #(begin macro)if_sup   __wbdcnt286,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt286 #@(macro_inc@45)(macro_inc@310)(ansi_inc@130)(main@139)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@130)(main@139)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@130)(main@139)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@130)(main@139)(main@229)
      #(end macro)if_sup   __wbdcnt286,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@130)(main@139)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@130)(main@139)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@130)(main@139)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@130)(main@139)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@130)(main@139)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@130)(main@139)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@130)(main@139)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero286, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero286 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@130)(main@139)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero286, 0
      else #@(macro_inc@314)(ansi_inc@130)(main@139)(main@229)
        #(begin macro)if_equal    prefixzero286, 0
        push    prefixzero286 #@(macro_inc@37)(macro_inc@315)(ansi_inc@130)(main@139)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@130)(main@139)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@130)(main@139)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@130)(main@139)(main@229)
          #(end macro)if_equal    prefixzero286, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@130)(main@139)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@130)(main@139)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@130)(main@139)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@130)(main@139)(main@229)
      fi #@(macro_inc@318)(ansi_inc@130)(main@139)(main@229)
    else #@(macro_inc@319)(ansi_inc@130)(main@139)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@130)(main@139)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@130)(main@139)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@130)(main@139)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@130)(main@139)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@130)(main@139)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@130)(main@139)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@130)(main@139)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   H
  push    0 #@(macro_inc@331)(ansi_inc@131)(main@139)(main@229)
  set     72 #@(macro_inc@346)(ansi_inc@131)(main@139)(main@229)
  out             # 'H' #@(macro_inc@348)(ansi_inc@131)(main@139)(main@229)
  drop #@(macro_inc@351)(ansi_inc@131)(main@139)(main@229)
  #(end macro)print   H
  #(end macro)ansi_CUP    12, 1
  #(begin macro)ansi_SGR_reset
  #(begin macro)ansi_SGR    0
  #(begin macro)ansi_CSI
  #(begin macro)ansi_esc    [
  #(begin macro)print("\x1b")
  push    0 #@(macro_inc@331)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  set     27 #@(macro_inc@346)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  out             #  #@(macro_inc@348)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  drop #@(macro_inc@351)(ansi_inc@9)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  #(end macro)print("\x1b")
  #(begin macro)print(cmd)
  push    0 #@(macro_inc@331)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  set     91 #@(macro_inc@346)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  out             # '[' #@(macro_inc@348)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  drop #@(macro_inc@351)(ansi_inc@10)(ansi_inc@30)(ansi_inc@186)(ansi_inc@298)(main@140)(main@229)
  #(end macro)print(cmd)
  #(end macro)ansi_esc    [
  #(end macro)ansi_CSI
  push    0 #@(ansi_inc@187)(ansi_inc@298)(main@140)(main@229)
  #(begin macro)writeByteDecimal
  sbm _wbdinput287 #@(macro_inc@297)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  push 3 #@(macro_inc@298)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  loop #@(macro_inc@299)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    # output = input mod 10 ; input = input div 10 #@(macro_inc@300)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    #(begin macro)divide  _wbdinput287,  10, _wbdinput287,  __wbdoutput
    push    _wbdinput287 #@(macro_inc@135)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    push    10 #@(macro_inc@136)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    div #@(macro_inc@137)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    pop     _wbdinput287 #@(macro_inc@138)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    pop     __wbdoutput #@(macro_inc@139)(macro_inc@301)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    #(end macro)divide  _wbdinput287,  10, _wbdinput287,  __wbdoutput
    arotl __wbdoutput #@(macro_inc@302)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  endloop #@(macro_inc@303)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  #(begin macro)scope_begin
  #(end macro)scope_begin
  #(begin macro)lvar    prefixzero287, 1
  push    1 #@(macro_inc@22)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  sbm     prefixzero287 #@(macro_inc@23)(macro_inc@305)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  #(end macro)lvar    prefixzero287, 1
  push    3 #@(macro_inc@306)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  sbm     __wbdcnt287 #@(macro_inc@307)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  loop #@(macro_inc@308)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    arotr   __wbdoutput #@(macro_inc@309)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    #(begin macro)if_sup   __wbdcnt287,    1   # cnt == 3 or cnt == 2
    push    __wbdcnt287 #@(macro_inc@45)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    push    1 #@(macro_inc@46)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    sup #@(macro_inc@47)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    if #@(macro_inc@48)(macro_inc@310)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      #(end macro)if_sup   __wbdcnt287,    1   # cnt == 3 or cnt == 2
      #(begin macro)if_diff __wbdoutput, 0
      push    __wbdoutput #@(macro_inc@29)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      push    0 #@(macro_inc@30)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      diff #@(macro_inc@31)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      if #@(macro_inc@32)(macro_inc@311)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        #(end macro)if_diff __wbdoutput, 0
        #(begin macro)writeDigit  __wbdoutput
        push    __wbdoutput #@(macro_inc@286)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        add     '0' #@(macro_inc@287)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        pop     out #@(macro_inc@288)(macro_inc@312)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        #(end macro)writeDigit  __wbdoutput
        #(begin macro)at_set  prefixzero287, 0
        #(begin macro)at_2("set",a,b)
        at      prefixzero287 #@(macro_inc@79)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
          set   0 #@(macro_inc@80)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        ta #@(macro_inc@81)(macro_inc@126)(macro_inc@313)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        #(end macro)at_2("set",a,b)
        #(end macro)at_set  prefixzero287, 0
      else #@(macro_inc@314)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        #(begin macro)if_equal    prefixzero287, 0
        push    prefixzero287 #@(macro_inc@37)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        push    0 #@(macro_inc@38)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        equal #@(macro_inc@39)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
        if #@(macro_inc@40)(macro_inc@315)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
          #(end macro)if_equal    prefixzero287, 0
          #(begin macro)writeDigit  __wbdoutput
          push    __wbdoutput #@(macro_inc@286)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
          add     '0' #@(macro_inc@287)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
          pop     out #@(macro_inc@288)(macro_inc@316)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
          #(end macro)writeDigit  __wbdoutput
        fi #@(macro_inc@317)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      fi #@(macro_inc@318)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
    else #@(macro_inc@319)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      #(begin macro)writeDigit  __wbdoutput
      push    __wbdoutput #@(macro_inc@286)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      add     '0' #@(macro_inc@287)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      pop     out #@(macro_inc@288)(macro_inc@320)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
      #(end macro)writeDigit  __wbdoutput
    fi #@(macro_inc@321)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  endloop #@(macro_inc@322)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  #(begin macro)scope_end
  drop #@(macro_inc@15)(macro_inc@323)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  #(end macro)scope_end
  drop    # remove push #@(macro_inc@324)(ansi_inc@188)(ansi_inc@298)(main@140)(main@229)
  #(end macro)writeByteDecimal
  #(begin macro)print   m
  push    0 #@(macro_inc@331)(ansi_inc@189)(ansi_inc@298)(main@140)(main@229)
  set     109 #@(macro_inc@346)(ansi_inc@189)(ansi_inc@298)(main@140)(main@229)
  out             # 'm' #@(macro_inc@348)(ansi_inc@189)(ansi_inc@298)(main@140)(main@229)
  drop #@(macro_inc@351)(ansi_inc@189)(ansi_inc@298)(main@140)(main@229)
  #(end macro)print   m
  #(end macro)ansi_SGR    0
  #(end macro)ansi_SGR_reset
  #(end macro)displayHanoi
  # begin wait for enter key #@(main@230)
  push 1 #@(main@231)
  in #@(main@232)
  drop #@(main@233)
  # end wait #@(main@234)
  # i = (i + 1) % 3 #@(main@235)
  at  i #@(main@236)
    inc #@(main@237)
  ta #@(main@238)
  push i #@(main@239)
  push 3 #@(main@240)
  equal #@(main@241)
  if #@(main@242)
    at  i #@(main@243)
      reset #@(main@244)
    ta #@(main@245)
  fi #@(main@246)
endloop #@(main@247)

