# ASCII Mandelbrot attempt
# inspired by C code at https://stackoverflow.com/questions/16124127/improvement-to-my-mandelbrot-set-code
#(begin include)../include/macro.inc
# Common macros
# scope variables
#(js) var __scope; var __idx;
#(js) __scope=[0]; __idx = 0;


# macro scope_begin : start a new scope for local variable (usage of macro lvar)

# macro scope_end : end a scope , then drop scoped local variables (drop) (usage of lvar)

# macro lvar(vname,value) : declare  in scope, a local variable named vname with an assigned value (stored in stack)

# macro if_diff(a,b) : if (a != b) {

# macro if_equal(a,b) : if (a == b) {

# macro if_sup(a,b) : if (a > b) {

# macro if_inf(a,b) : if (a < b) {

# macro if_supequal(a,b) : if (a >= b) {

# macro if_infequal(a,b) : if (a <= b) {

# macro at_2

# macro at_1

# macro at_reset(a) : a=0

# macro at_inc(a) : a++

# macro at_dec(a) : a--

# macro at_in(a)  : a= readchar()

# macro at_out(a) : write(a)

# macro at_add(a,b) : a += b (immediate)

# macro at_sub(a,b) : a -= b (immediate)

# macro at_set(a,b) : a = b (immediate)





# macro popouthexa() : from head of stack value (from 0 to 15) write out hexa (from 0 to 9 and A to F)

# macro popout8hexa() : from head of stack the 8 bit value is write out in hexa

# macro print(aString) : print out a string
#(end include)../include/macro.inc
#(begin include)../include/fpnumber.inc
# fix point number
#(begin include)signedX.inc
# X bytes : X*8 bits signed integer : 

# macro varX(name) :declare global X * 8 bits

# macro lvarX(X,name) : declare local X * 8 bits

# macro fixsvX(X,name) : be sure that name is positive if equal to zero

# macro pushvX(X,name) : push X*8 bits name on stack

# macro pushX(X,immValue) : push immediate X*8 bits value on the stack

# macro dupX(X) : duplicate X * 8 bits value on stack

# macro pushsvX(X,name) : push the sign of the X*8 bits variable 'name'

# macro pushcvX(X,name) : push the carry of the X*8 bits variable 'name'

# macro popvX(X,name) : pop the stack to the X*8 bits variable 'name'

# macro popsvX(X,name) : pop the sign(8 bits 0/1) to the X*8 bits variable 'name'

# macro popcvX(X,name) : pop the carry(8 bit 0/1) to the X*8 bits variable 'name'

# macro negvX(X,name) : name = -name

# macro absvX(X,name) : name = abs(name)

# macro absX(X) : X*8 bits head of stack = abs(X*8 bits head of stack)

# macro negX(X) : X*8 bits head of stack = - (X*8 bits head of stack)    

# macro setcX(X) : set 1 to X*8 bits head of stack carry

# macro setcvX(X,name) : set 1 to X*8 bits variable 'name' carry

# macro clearcX(X) : set 0 to 8*X bits head of stack carry

# macro clearcvX(X,name) : set 0 to X*8 bits variable 'name' carry

# macro dropX(X) : drop 8*X bits value from stack

# macro resetX(X) : reset X*8 bits value of the head of stack

# macro resetvX(X,name) : reset X*8 bits variable 'name'

# macro setX(X,immValue) : set X*8 bits value on the head of stack

# macro setvX(X,name, immValue) : set X*8 bits immediate value to a X*8 bits variable 'name' 

# macro fixsvX(X,name) : be sure to have sign to zero if X*8bits variable 'name' is zero

# macro fixsX(X) : be sure to have sign to zero if X*8 bits head of stack value is zero

# macro boolX(X) : same as 'bool' but with a X*8 bits value on stack

# macro boolvX(X,name) : push on stack the bool(name) X*8 bits 

# macro incvX(X,name) : name = name +1 (X*8 bits)

# macro incX(X) : X*8 bits head of stack value incremented

# macro decvX(X,name) : name-- (X*8 bits)

# macro decX(X) : X*8 bits head of stack value decrement

# macro addviX(X,name, immValue) : name += immediate value

# macro addi16(immValue) : 16 bits head of stack value += immediate value

# macro subviX(X,name, immValue) : name -= immediate value

# macro subiX(X,immValue) : X*8 bits head of stack value -= immediate value

#macro addof() : push A, push B , replaced by Carry, A+B

# macro subof() : push A, push B , replaced by Carry, A-B

# macro addvvvX(X,name, nameA, nameB) : name = nameA + nameB



# macro addvvX(X,name, nameA) : name += nameA

# macro addvX(X,nameA) : head stack += nameA

# macro addX(X) : stack-1 = stack-1 + stack ; stack--



# macro subvvvX(X,name, nameA, nameB) : name = nameA - nameB


# macro subvvX(X,name, nameA) : name -= nameA 

# macro subvX(X,nameA) : head stack -= nameA

# macro subX(X) : stack-1 = stack-1 - stack ; stack--

# macro mulvvvX(X,name, nameA, nameB) : name = nameA * nameB 

# macro mulvvX(X,name, nameA) : name *= nameA

# macro mulvX(X,name) : head of stack *= name

# macro mulX(X) : stack-1 = stack-1 * stack : stack--

# macro equalvvX(X,nameA, nameB) : push 1 if NameA == NameB , push 0 otherwise

# macro equalX(X) : same as "equal" but with X*8 bits value in stack

# macro diffvvX(X,nameA, nameB) : push 1 if Name != NameB , push 0 otherwise

# macro diffX(X) : same as "diff" but with X*8 bits value in stack

# macro supequalvvX(X,nameA, nameB) : push 1 if nameA >= nameB push 0 otherwise

# macro supequalX(X) : push 1 if stack-1 >= stack , push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro infvvX(X,nameA, nameB) : push 1 if nameA < nameB push 0 otherwise

# macro infX(X) : push 1 if stack-1 < stack, push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro infequalvvX(X,nameA, nameB) : push 1 if nameA <= nameB push 0 otherwise

# macro infequalX(X) : push 1 if stack-1 <= stack, push 0 otherwise : after dropped 2 X*8 bits value from stack 

# macro supvvX(X,nameA , nameB) : push 1 if nameA > nameB push 0 otherwise

# macro supX(X) : push 1 if stack-1 > stack, push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro divvvvvX(X,nameAdivB, nameAmodB, nameA, nameB) : nameAdivB = nameA div nameB ; nameAmodB = nameA mod nameB

# macro divvvX(X,nameA, nameB) : Push 2 X*8 bits values  : stack-1 = nameA mod nameB ; stack = nameA div nameB 

# macro divX(X) : stack-1 == A , stack == B ; stack-1 = A mod B , stack = A div B


# macro castX(X1,X2) : transform stack X1*8 bits value to X2*8 bits value

# macro sbmX2(X,name,backward,offset) : sbm a X*8 bit head of stack - (backward X*8 bits value+ offset)

# macro sbmX(X,name,backward) : sbm a X*8 bit head of stack - (backward X*8 bits value)


# upcast macro






# downcast macro








# macro writeX(X,name) : print out the decimal value (signed)

# macro printhexaX(X,name) : print the X*8 bit variable in hexadecimal


#(js) var _sv1; var _sv2; var _sv3; var _sv4; var _sv11;
#(js) var _sv5; var _sv6; var _sv7; var _sv8; var _sv9;var _sv10;
#(js) _sv1 = 0; _sv2=0; _sv3 = 0; _sv4 = 0; _sv11 = 0;
#(js) _sv5 = 0; _sv6 = 0; _sv7 = 0; _sv8 = 0; _sv9 = 0;_sv10 = 0;

# declare temporary 16 bits value used for signed16.inc macros
#(end include)signedX.inc

# macro add 2 fixed point number (I+P)*8 bits in stack

# macro sub 2 fixed point number (I+P)*8 bits in stack



# macro setFP(I,P,immValue) : set fixed point head of stack I,P (I+P)*8 bits with immediate value 

# macro pushFP(I,P,immValue) : push immediate fixed point number onto the stack 

# macro castFP(I1,P1,I2,P2) : transform head of Stack Fixed point number I1,P1 (I1+P1* 8 bits) into a Fixed point number I2,P2 (I2+P2*8 bits)

# macro integerFP(I,P) : transform head of stack fixed point number I,P (I+P)*8 bits , into a signed integer I*8bits



# macro mul 2 fixed point number (I+P)*8 bits in stack

#(js) var _fp1; var _fp2;
#(js) _fp1 = 0; _fp2 = 0;
#(end include)../include/fpnumber.inc


# 8.16 fixed number
    ## 8 = 1*8 bits
    ## 16 = 2*8 bits
# FP_I + FP_P
    ## 1+2 = 3 : 24 bits

#(begin macro)varX(FP,"pr")  # pixel real
#(js) for (var xx=0 ; xx < X ; xx++) {
    var pr_0    # 0 byte of pr
#(js) }
    var pr_1    # 1 byte of pr
#(js) }
    var pr_2    # 2 byte of pr
#(js) }
    var pr_s    # Sign of pr
    var pr_c    # carry of pr 
#(end macro)varX(FP,"pr")  # pixel real
#(begin macro)varX(FP,"pi")  # pixel imaginary
#(js) for (var xx=0 ; xx < X ; xx++) {
    var pi_0    # 0 byte of pi
#(js) }
    var pi_1    # 1 byte of pi
#(js) }
    var pi_2    # 2 byte of pi
#(js) }
    var pi_s    # Sign of pi
    var pi_c    # carry of pi 
#(end macro)varX(FP,"pi")  # pixel imaginary
#(begin macro)varX(FP,"x")    # screen coordinate horizontal
#(js) for (var xx=0 ; xx < X ; xx++) {
    var x_0    # 0 byte of x
#(js) }
    var x_1    # 1 byte of x
#(js) }
    var x_2    # 2 byte of x
#(js) }
    var x_s    # Sign of x
    var x_c    # carry of x 
#(end macro)varX(FP,"x")    # screen coordinate horizontal
#(begin macro)varX(FP,"y")    # screen coordinate vertical
#(js) for (var xx=0 ; xx < X ; xx++) {
    var y_0    # 0 byte of y
#(js) }
    var y_1    # 1 byte of y
#(js) }
    var y_2    # 2 byte of y
#(js) }
    var y_s    # Sign of y
    var y_c    # carry of y 
#(end macro)varX(FP,"y")    # screen coordinate vertical
#(begin macro)varX(FP,"newRe")
#(js) for (var xx=0 ; xx < X ; xx++) {
    var newRe_0    # 0 byte of newRe
#(js) }
    var newRe_1    # 1 byte of newRe
#(js) }
    var newRe_2    # 2 byte of newRe
#(js) }
    var newRe_s    # Sign of newRe
    var newRe_c    # carry of newRe 
#(end macro)varX(FP,"newRe")
#(begin macro)varX(FP,"newIm")
#(js) for (var xx=0 ; xx < X ; xx++) {
    var newIm_0    # 0 byte of newIm
#(js) }
    var newIm_1    # 1 byte of newIm
#(js) }
    var newIm_2    # 2 byte of newIm
#(js) }
    var newIm_s    # Sign of newIm
    var newIm_c    # carry of newIm 
#(end macro)varX(FP,"newIm")
#(begin macro)varX(FP,"oldRe")
#(js) for (var xx=0 ; xx < X ; xx++) {
    var oldRe_0    # 0 byte of oldRe
#(js) }
    var oldRe_1    # 1 byte of oldRe
#(js) }
    var oldRe_2    # 2 byte of oldRe
#(js) }
    var oldRe_s    # Sign of oldRe
    var oldRe_c    # carry of oldRe 
#(end macro)varX(FP,"oldRe")
#(begin macro)varX(FP,"oldIm")
#(js) for (var xx=0 ; xx < X ; xx++) {
    var oldIm_0    # 0 byte of oldIm
#(js) }
    var oldIm_1    # 1 byte of oldIm
#(js) }
    var oldIm_2    # 2 byte of oldIm
#(js) }
    var oldIm_s    # Sign of oldIm
    var oldIm_c    # carry of oldIm 
#(end macro)varX(FP,"oldIm")
# varX(FP,"ONE")
var     i

#(begin macro)declareTmpX(FP)
#(js) var _xbits; _xbits = X * 8;
#(js) var _nDecimal ; _nDecimal = ("" + (Math.pow(2,8*X)-1)).length;
#(begin macro)    varX(X, "__tmp" + _xbits + "__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp24___0    # 0 byte of __tmp24__
#(js) }
    var __tmp24___1    # 1 byte of __tmp24__
#(js) }
    var __tmp24___2    # 2 byte of __tmp24__
#(js) }
    var __tmp24___s    # Sign of __tmp24__
    var __tmp24___c    # carry of __tmp24__ 
#(end macro)    varX(X, "__tmp" + _xbits + "__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "a__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp24a___0    # 0 byte of __tmp24a__
#(js) }
    var __tmp24a___1    # 1 byte of __tmp24a__
#(js) }
    var __tmp24a___2    # 2 byte of __tmp24a__
#(js) }
    var __tmp24a___s    # Sign of __tmp24a__
    var __tmp24a___c    # carry of __tmp24a__ 
#(end macro)    varX(X, "__tmp" + _xbits + "a__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "b__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp24b___0    # 0 byte of __tmp24b__
#(js) }
    var __tmp24b___1    # 1 byte of __tmp24b__
#(js) }
    var __tmp24b___2    # 2 byte of __tmp24b__
#(js) }
    var __tmp24b___s    # Sign of __tmp24b__
    var __tmp24b___c    # carry of __tmp24b__ 
#(end macro)    varX(X, "__tmp" + _xbits + "b__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "c__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp24c___0    # 0 byte of __tmp24c__
#(js) }
    var __tmp24c___1    # 1 byte of __tmp24c__
#(js) }
    var __tmp24c___2    # 2 byte of __tmp24c__
#(js) }
    var __tmp24c___s    # Sign of __tmp24c__
    var __tmp24c___c    # carry of __tmp24c__ 
#(end macro)    varX(X, "__tmp" + _xbits + "c__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "d__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp24d___0    # 0 byte of __tmp24d__
#(js) }
    var __tmp24d___1    # 1 byte of __tmp24d__
#(js) }
    var __tmp24d___2    # 2 byte of __tmp24d__
#(js) }
    var __tmp24d___s    # Sign of __tmp24d__
    var __tmp24d___c    # carry of __tmp24d__ 
#(end macro)    varX(X, "__tmp" + _xbits + "d__" )
    var  _stringDecimal24_*8
#(end macro)declareTmpX(FP)
#(begin macro)declareTmpX(FP*2)
#(js) var _xbits; _xbits = X * 8;
#(js) var _nDecimal ; _nDecimal = ("" + (Math.pow(2,8*X)-1)).length;
#(begin macro)    varX(X, "__tmp" + _xbits + "__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp48___0    # 0 byte of __tmp48__
#(js) }
    var __tmp48___1    # 1 byte of __tmp48__
#(js) }
    var __tmp48___2    # 2 byte of __tmp48__
#(js) }
    var __tmp48___3    # 3 byte of __tmp48__
#(js) }
    var __tmp48___4    # 4 byte of __tmp48__
#(js) }
    var __tmp48___5    # 5 byte of __tmp48__
#(js) }
    var __tmp48___s    # Sign of __tmp48__
    var __tmp48___c    # carry of __tmp48__ 
#(end macro)    varX(X, "__tmp" + _xbits + "__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "a__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp48a___0    # 0 byte of __tmp48a__
#(js) }
    var __tmp48a___1    # 1 byte of __tmp48a__
#(js) }
    var __tmp48a___2    # 2 byte of __tmp48a__
#(js) }
    var __tmp48a___3    # 3 byte of __tmp48a__
#(js) }
    var __tmp48a___4    # 4 byte of __tmp48a__
#(js) }
    var __tmp48a___5    # 5 byte of __tmp48a__
#(js) }
    var __tmp48a___s    # Sign of __tmp48a__
    var __tmp48a___c    # carry of __tmp48a__ 
#(end macro)    varX(X, "__tmp" + _xbits + "a__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "b__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp48b___0    # 0 byte of __tmp48b__
#(js) }
    var __tmp48b___1    # 1 byte of __tmp48b__
#(js) }
    var __tmp48b___2    # 2 byte of __tmp48b__
#(js) }
    var __tmp48b___3    # 3 byte of __tmp48b__
#(js) }
    var __tmp48b___4    # 4 byte of __tmp48b__
#(js) }
    var __tmp48b___5    # 5 byte of __tmp48b__
#(js) }
    var __tmp48b___s    # Sign of __tmp48b__
    var __tmp48b___c    # carry of __tmp48b__ 
#(end macro)    varX(X, "__tmp" + _xbits + "b__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "c__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp48c___0    # 0 byte of __tmp48c__
#(js) }
    var __tmp48c___1    # 1 byte of __tmp48c__
#(js) }
    var __tmp48c___2    # 2 byte of __tmp48c__
#(js) }
    var __tmp48c___3    # 3 byte of __tmp48c__
#(js) }
    var __tmp48c___4    # 4 byte of __tmp48c__
#(js) }
    var __tmp48c___5    # 5 byte of __tmp48c__
#(js) }
    var __tmp48c___s    # Sign of __tmp48c__
    var __tmp48c___c    # carry of __tmp48c__ 
#(end macro)    varX(X, "__tmp" + _xbits + "c__" )
#(begin macro)    varX(X, "__tmp" + _xbits + "d__" )
#(js) for (var xx=0 ; xx < X ; xx++) {
    var __tmp48d___0    # 0 byte of __tmp48d__
#(js) }
    var __tmp48d___1    # 1 byte of __tmp48d__
#(js) }
    var __tmp48d___2    # 2 byte of __tmp48d__
#(js) }
    var __tmp48d___3    # 3 byte of __tmp48d__
#(js) }
    var __tmp48d___4    # 4 byte of __tmp48d__
#(js) }
    var __tmp48d___5    # 5 byte of __tmp48d__
#(js) }
    var __tmp48d___s    # Sign of __tmp48d__
    var __tmp48d___c    # carry of __tmp48d__ 
#(end macro)    varX(X, "__tmp" + _xbits + "d__" )
    var  _stringDecimal48_*15
#(end macro)declareTmpX(FP*2)

# pushFP(FP_I,FP_P,1)
# popvX(FP,"ONE")          # ONE = 1.0

push    40
loop
    push    80
    loop
        # pr = 1.5 *(x - halfW) * oneOnHalfZoomW + moveX
#(begin macro)        pushFP(FP_I,FP_P,1.5)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack1_0 - 0
#(js) }
    sbm _instack1_1 - 1
#(js) }
    sbm _instack1_2 - 2
#(js) }
    sbm _instack1_s - 3
    sbm _instack1_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack1_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    128
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,1.5)
#(begin macro)        pushvX(FP,"x")
    push    x_c
    push    x_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_0
#(js) }
#(end macro)        pushvX(FP,"x")
#(begin macro)        pushFP(FP_I,FP_P, halfW)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack2_0 - 0
#(js) }
    sbm _instack2_1 - 1
#(js) }
    sbm _instack2_2 - 2
#(js) }
    sbm _instack2_s - 3
    sbm _instack2_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack2_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    40
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P, halfW)
#(begin macro)        subX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv4++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm negNameB1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm negNameB1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)        pushvX(X,nameB)
    push    __tmp24b___c
    push    __tmp24b___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"negNameB"+_sv4)
#(js) for (var xx=0; xx < X; xx++) {
    pop     negNameB1_0
#(js) }
    pop     negNameB1_1
#(js) }
    pop     negNameB1_2
#(js) }
    pop     negNameB1_s
    pop     negNameB1_c
#(end macro)        popvX(X,"negNameB"+_sv4)
#(begin macro)        negvX(X,"negNameB"+_sv4)
    push    negNameB1_s
    dec
    bool
    dup
    if    # if name is now negative
#(js) for (var xx = 0; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB1_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB1_1
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB1_2
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at negNameB1_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
    pop     negNameB1_s
#(end macro)        negvX(X,"negNameB"+_sv4)
#(begin macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(js) _sv3++;
    
    push    __tmp24a___s
    push    negNameB1_s
    or
    not
    push    __tmp24a___s
    push    negNameB1_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b1
    sbm _a1 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c1
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao1
        while
            push _a1
            if
                at _a1
                    dec
                ta 
                at _b1
                    inc
                ta
                push _b1
                not
                if 
                    at _c1
                        set 1
                    ta
                fi
            else 
                at _loopao1
                    reset
                ta
            fi
        wend
        push _c1
        if
            at _a1
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    negNameB1_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b2
    sbm _a2 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c2
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao2
        while
            push _a2
            if
                at _a2
                    dec
                ta 
                at _b2
                    inc
                ta
                push _b2
                not
                if 
                    at _c2
                        set 1
                    ta
                fi
            else 
                at _loopao2
                    reset
                ta
            fi
        wend
        push _c2
        if
            at _a2
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b3
    sbm _a3 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c3
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao3
        while
            push _a3
            if
                at _a3
                    dec
                ta 
                at _b3
                    inc
                ta
                push _b3
                not
                if 
                    at _c3
                        set 1
                    ta
                fi
            else 
                at _loopao3
                    reset
                ta
            fi
        wend
        push _c3
        if
            at _a3
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b4
    sbm _a4 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c4
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao4
        while
            push _a4
            if
                at _a4
                    dec
                ta 
                at _b4
                    inc
                ta
                push _b4
                not
                if 
                    at _c4
                        set 1
                    ta
                fi
            else 
                at _loopao4
                    reset
                ta
            fi
        wend
        push _c4
        if
            at _a4
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    negNameB1_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b5
    sbm _a5 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c5
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao5
        while
            push _a5
            if
                at _a5
                    dec
                ta 
                at _b5
                    inc
                ta
                push _b5
                not
                if 
                    at _c5
                        set 1
                    ta
                fi
            else 
                at _loopao5
                    reset
                ta
            fi
        wend
        push _c5
        if
            at _a5
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b6
    sbm _a6 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c6
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao6
        while
            push _a6
            if
                at _a6
                    dec
                ta 
                at _b6
                    inc
                ta
                push _b6
                not
                if 
                    at _c6
                        set 1
                    ta
                fi
            else 
                at _loopao6
                    reset
                ta
            fi
        wend
        push _c6
        if
            at _a6
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b7
    sbm _a7 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c7
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao7
        while
            push _a7
            if
                at _a7
                    dec
                ta 
                at _b7
                    inc
                ta
                push _b7
                not
                if 
                    at _c7
                        set 1
                    ta
                fi
            else 
                at _loopao7
                    reset
                ta
            fi
        wend
        push _c7
        if
            at _a7
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    negNameB1_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b8
    sbm _a8 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c8
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao8
        while
            push _a8
            if
                at _a8
                    dec
                ta 
                at _b8
                    inc
                ta
                push _b8
                not
                if 
                    at _c8
                        set 1
                    ta
                fi
            else 
                at _loopao8
                    reset
                ta
            fi
        wend
        push _c8
        if
            at _a8
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b9
    sbm _a9 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c9
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao9
        while
            push _a9
            if
                at _a9
                    dec
                ta 
                at _b9
                    inc
                ta
                push _b9
                not
                if 
                    at _c9
                        set 1
                    ta
                fi
            else 
                at _loopao9
                    reset
                ta
            fi
        wend
        push _c9
        if
            at _a9
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb1
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb1
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    negNameB1_2
            sup
            if  
               at _asupb1
                set 1
               ta
            else 
                push    __tmp24a___2
                push    negNameB1_2
                diff
                if
                at _asupb1
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    negNameB1_1
            sup
            if  
               at _asupb1
                set 1
               ta
            else 
                push    __tmp24a___1
                push    negNameB1_1
                diff
                if
                at _asupb1
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    negNameB1_0
            sup
            if  
               at _asupb1
                set 1
               ta
            else 
                push    __tmp24a___0
                push    negNameB1_0
                diff
                if
                at _asupb1
                    reset
                ta
                else           
#(js) }
            at _aequb1
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb1
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b10
    sbm _a10 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c10
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao10
        while
            push _b10
            if  
                at _b10
                    dec
                ta
                at _a10
                    dec
                ta
                push _a10
                inc
                not
                if
                    at _c10
                        set 1
                    ta
                fi 
            else
                at _loopao10
                    reset
                ta
            fi
        wend
        push _c10
        if
            at _b10
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    negNameB1_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b11
    sbm _a11 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c11
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao11
        while
            push _b11
            if  
                at _b11
                    dec
                ta
                at _a11
                    dec
                ta
                push _a11
                inc
                not
                if
                    at _c11
                        set 1
                    ta
                fi 
            else
                at _loopao11
                    reset
                ta
            fi
        wend
        push _c11
        if
            at _b11
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b12
    sbm _a12 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c12
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao12
        while
            push _b12
            if  
                at _b12
                    dec
                ta
                at _a12
                    dec
                ta
                push _a12
                inc
                not
                if
                    at _c12
                        set 1
                    ta
                fi 
            else
                at _loopao12
                    reset
                ta
            fi
        wend
        push _c12
        if
            at _b12
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b13
    sbm _a13 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c13
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao13
        while
            push _b13
            if  
                at _b13
                    dec
                ta
                at _a13
                    dec
                ta
                push _a13
                inc
                not
                if
                    at _c13
                        set 1
                    ta
                fi 
            else
                at _loopao13
                    reset
                ta
            fi
        wend
        push _c13
        if
            at _b13
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    negNameB1_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b14
    sbm _a14 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c14
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao14
        while
            push _b14
            if  
                at _b14
                    dec
                ta
                at _a14
                    dec
                ta
                push _a14
                inc
                not
                if
                    at _c14
                        set 1
                    ta
                fi 
            else
                at _loopao14
                    reset
                ta
            fi
        wend
        push _c14
        if
            at _b14
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b15
    sbm _a15 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c15
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao15
        while
            push _b15
            if  
                at _b15
                    dec
                ta
                at _a15
                    dec
                ta
                push _a15
                inc
                not
                if
                    at _c15
                        set 1
                    ta
                fi 
            else
                at _loopao15
                    reset
                ta
            fi
        wend
        push _c15
        if
            at _b15
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b16
    sbm _a16 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c16
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao16
        while
            push _b16
            if  
                at _b16
                    dec
                ta
                at _a16
                    dec
                ta
                push _a16
                inc
                not
                if
                    at _c16
                        set 1
                    ta
                fi 
            else
                at _loopao16
                    reset
                ta
            fi
        wend
        push _c16
        if
            at _b16
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    negNameB1_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b17
    sbm _a17 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c17
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao17
        while
            push _b17
            if  
                at _b17
                    dec
                ta
                at _a17
                    dec
                ta
                push _a17
                inc
                not
                if
                    at _c17
                        set 1
                    ta
                fi 
            else
                at _loopao17
                    reset
                ta
            fi
        wend
        push _c17
        if
            at _b17
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b18
    sbm _a18 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c18
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao18
        while
            push _b18
            if  
                at _b18
                    dec
                ta
                at _a18
                    dec
                ta
                push _a18
                inc
                not
                if
                    at _c18
                        set 1
                    ta
                fi 
            else
                at _loopao18
                    reset
                ta
            fi
        wend
        push _c18
        if
            at _b18
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb1
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    negNameB1_s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    negNameB1_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b19
    sbm _a19 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c19
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao19
        while
            push _b19
            if  
                at _b19
                    dec
                ta
                at _a19
                    dec
                ta
                push _a19
                inc
                not
                if
                    at _c19
                        set 1
                    ta
                fi 
            else
                at _loopao19
                    reset
                ta
            fi
        wend
        push _c19
        if
            at _b19
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b20
    sbm _a20 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c20
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao20
        while
            push _b20
            if  
                at _b20
                    dec
                ta
                at _a20
                    dec
                ta
                push _a20
                inc
                not
                if
                    at _c20
                        set 1
                    ta
                fi 
            else
                at _loopao20
                    reset
                ta
            fi
        wend
        push _c20
        if
            at _b20
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b21
    sbm _a21 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c21
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao21
        while
            push _b21
            if  
                at _b21
                    dec
                ta
                at _a21
                    dec
                ta
                push _a21
                inc
                not
                if
                    at _c21
                        set 1
                    ta
                fi 
            else
                at _loopao21
                    reset
                ta
            fi
        wend
        push _c21
        if
            at _b21
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    negNameB1_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b22
    sbm _a22 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c22
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao22
        while
            push _b22
            if  
                at _b22
                    dec
                ta
                at _a22
                    dec
                ta
                push _a22
                inc
                not
                if
                    at _c22
                        set 1
                    ta
                fi 
            else
                at _loopao22
                    reset
                ta
            fi
        wend
        push _c22
        if
            at _b22
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b23
    sbm _a23 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c23
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao23
        while
            push _b23
            if  
                at _b23
                    dec
                ta
                at _a23
                    dec
                ta
                push _a23
                inc
                not
                if
                    at _c23
                        set 1
                    ta
                fi 
            else
                at _loopao23
                    reset
                ta
            fi
        wend
        push _c23
        if
            at _b23
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b24
    sbm _a24 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c24
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao24
        while
            push _b24
            if  
                at _b24
                    dec
                ta
                at _a24
                    dec
                ta
                push _a24
                inc
                not
                if
                    at _c24
                        set 1
                    ta
                fi 
            else
                at _loopao24
                    reset
                ta
            fi
        wend
        push _c24
        if
            at _b24
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    negNameB1_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b25
    sbm _a25 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c25
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao25
        while
            push _b25
            if  
                at _b25
                    dec
                ta
                at _a25
                    dec
                ta
                push _a25
                inc
                not
                if
                    at _c25
                        set 1
                    ta
                fi 
            else
                at _loopao25
                    reset
                ta
            fi
        wend
        push _c25
        if
            at _b25
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b26
    sbm _a26 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c26
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao26
        while
            push _b26
            if  
                at _b26
                    dec
                ta
                at _a26
                    dec
                ta
                push _a26
                inc
                not
                if
                    at _c26
                        set 1
                    ta
                fi 
            else
                at _loopao26
                    reset
                ta
            fi
        wend
        push _c26
        if
            at _b26
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b27
    sbm _a27 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c27
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao27
        while
            push _b27
            if  
                at _b27
                    dec
                ta
                at _a27
                    dec
                ta
                push _a27
                inc
                not
                if
                    at _c27
                        set 1
                    ta
                fi 
            else
                at _loopao27
                    reset
                ta
            fi
        wend
        push _c27
        if
            at _b27
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)        subX(FP)
#(begin macro)        mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB1_0 - 0
#(js) }
    sbm nameB1_1 - 1
#(js) }
    sbm nameB1_2 - 2
#(js) }
    sbm nameB1_s - 3
    sbm nameB1_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA1_0 - 5
#(js) }
    sbm nameA1_1 - 6
#(js) }
    sbm nameA1_2 - 7
#(js) }
    sbm nameA1_s - 8
    sbm nameA1_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA1_c
    push    nameA1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA1_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput1_0 - 0
#(js) }
    sbm _castXInput1_1 - 1
#(js) }
    sbm _castXInput1_2 - 2
#(js) }
    sbm _castXInput1_s - 3
    sbm _castXInput1_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput1_0    # 0 byte of _castXoutput1
#(js) }
    var _castXoutput1_1    # 1 byte of _castXoutput1
#(js) }
    var _castXoutput1_2    # 2 byte of _castXoutput1
#(js) }
    var _castXoutput1_3    # 3 byte of _castXoutput1
#(js) }
    var _castXoutput1_4    # 4 byte of _castXoutput1
#(js) }
    var _castXoutput1_5    # 5 byte of _castXoutput1
#(js) }
    var _castXoutput1_s    # Sign of _castXoutput1
    var _castXoutput1_c    # carry of _castXoutput1 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput1_c
    push    _castXInput1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput1_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori1_0
#(js) }
    pop     ori1_1
#(js) }
    pop     ori1_2
#(js) }
    pop     ori1_s
    pop     ori1_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori1_s   
        pop     dest1_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori1_0
                pop     dest1_0
#(js) }
                push    ori1_1
                pop     dest1_1
#(js) }
                push    ori1_2
                pop     dest1_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest1_3
#(js) } 
                push    0
                pop     dest1_4
#(js) } 
                push    0
                pop     dest1_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest1_c
    push    dest1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest1_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput1_0
#(js) }
    pop     _castXoutput1_1
#(js) }
    pop     _castXoutput1_2
#(js) }
    pop     _castXoutput1_3
#(js) }
    pop     _castXoutput1_4
#(js) }
    pop     _castXoutput1_5
#(js) }
    pop     _castXoutput1_s
    pop     _castXoutput1_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput1_c
    push    _castXoutput1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput1_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX1_0
#(js) }
    pop     nameAX1_1
#(js) }
    pop     nameAX1_2
#(js) }
    pop     nameAX1_3
#(js) }
    pop     nameAX1_4
#(js) }
    pop     nameAX1_5
#(js) }
    pop     nameAX1_s
    pop     nameAX1_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB1_c
    push    nameB1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB1_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput2_0 - 0
#(js) }
    sbm _castXInput2_1 - 1
#(js) }
    sbm _castXInput2_2 - 2
#(js) }
    sbm _castXInput2_s - 3
    sbm _castXInput2_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput2_0    # 0 byte of _castXoutput2
#(js) }
    var _castXoutput2_1    # 1 byte of _castXoutput2
#(js) }
    var _castXoutput2_2    # 2 byte of _castXoutput2
#(js) }
    var _castXoutput2_3    # 3 byte of _castXoutput2
#(js) }
    var _castXoutput2_4    # 4 byte of _castXoutput2
#(js) }
    var _castXoutput2_5    # 5 byte of _castXoutput2
#(js) }
    var _castXoutput2_s    # Sign of _castXoutput2
    var _castXoutput2_c    # carry of _castXoutput2 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput2_c
    push    _castXInput2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput2_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori2_0
#(js) }
    pop     ori2_1
#(js) }
    pop     ori2_2
#(js) }
    pop     ori2_s
    pop     ori2_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori2_s   
        pop     dest2_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori2_0
                pop     dest2_0
#(js) }
                push    ori2_1
                pop     dest2_1
#(js) }
                push    ori2_2
                pop     dest2_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest2_3
#(js) } 
                push    0
                pop     dest2_4
#(js) } 
                push    0
                pop     dest2_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest2_c
    push    dest2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest2_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput2_0
#(js) }
    pop     _castXoutput2_1
#(js) }
    pop     _castXoutput2_2
#(js) }
    pop     _castXoutput2_3
#(js) }
    pop     _castXoutput2_4
#(js) }
    pop     _castXoutput2_5
#(js) }
    pop     _castXoutput2_s
    pop     _castXoutput2_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput2_c
    push    _castXoutput2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput2_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX1_0
#(js) }
    pop     nameBX1_1
#(js) }
    pop     nameBX1_2
#(js) }
    pop     nameBX1_3
#(js) }
    pop     nameBX1_4
#(js) }
    pop     nameBX1_5
#(js) }
    pop     nameBX1_s
    pop     nameBX1_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX1_c
    push    nameAX1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX1_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA1_0
#(js) }
    pop     mulvvvXabsNameA1_1
#(js) }
    pop     mulvvvXabsNameA1_2
#(js) }
    pop     mulvvvXabsNameA1_3
#(js) }
    pop     mulvvvXabsNameA1_4
#(js) }
    pop     mulvvvXabsNameA1_5
#(js) }
    pop     mulvvvXabsNameA1_s
    pop     mulvvvXabsNameA1_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA1
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA1_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA1
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA1_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX1_c
    push    nameBX1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX1_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB1_0
#(js) }
    pop     mulvvvXabsNameB1_1
#(js) }
    pop     mulvvvXabsNameB1_2
#(js) }
    pop     mulvvvXabsNameB1_3
#(js) }
    pop     mulvvvXabsNameB1_4
#(js) }
    pop     mulvvvXabsNameB1_5
#(js) }
    pop     mulvvvXabsNameB1_s
    pop     mulvvvXabsNameB1_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB1
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB1_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB1
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB1_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX1_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop1
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB1_0
    bool
#(js) }
    push mulvvvXabsNameB1_1
    bool
#(js) }
    push mulvvvXabsNameB1_2
    bool
#(js) }
    push mulvvvXabsNameB1_3
    bool
#(js) }
    push mulvvvXabsNameB1_4
    bool
#(js) }
    push mulvvvXabsNameB1_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB1_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB1_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB1_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX1_c
    push    resultX1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB1_0
#(js) }
    pop     addvvXnameB1_1
#(js) }
    pop     addvvXnameB1_2
#(js) }
    pop     addvvXnameB1_3
#(js) }
    pop     addvvXnameB1_4
#(js) }
    pop     addvvXnameB1_5
#(js) }
    pop     addvvXnameB1_s
    pop     addvvXnameB1_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB1_s
    push    mulvvvXabsNameA1_s
    or
    not
    push    addvvXnameB1_s
    push    mulvvvXabsNameA1_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB1_s
        pop     resultX1_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB1_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b28
    sbm _a28 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c28
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao28
        while
            push _a28
            if
                at _a28
                    dec
                ta 
                at _b28
                    inc
                ta
                push _b28
                not
                if 
                    at _c28
                        set 1
                    ta
                fi
            else 
                at _loopao28
                    reset
                ta
            fi
        wend
        push _c28
        if
            at _a28
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_0
        push    mulvvvXabsNameA1_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b29
    sbm _a29 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c29
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao29
        while
            push _a29
            if
                at _a29
                    dec
                ta 
                at _b29
                    inc
                ta
                push _b29
                not
                if 
                    at _c29
                        set 1
                    ta
                fi
            else 
                at _loopao29
                    reset
                ta
            fi
        wend
        push _c29
        if
            at _a29
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b30
    sbm _a30 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c30
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao30
        while
            push _a30
            if
                at _a30
                    dec
                ta 
                at _b30
                    inc
                ta
                push _b30
                not
                if 
                    at _c30
                        set 1
                    ta
                fi
            else 
                at _loopao30
                    reset
                ta
            fi
        wend
        push _c30
        if
            at _a30
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_0
        add    
#(js) }
        push    addvvXnameB1_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b31
    sbm _a31 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c31
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao31
        while
            push _a31
            if
                at _a31
                    dec
                ta 
                at _b31
                    inc
                ta
                push _b31
                not
                if 
                    at _c31
                        set 1
                    ta
                fi
            else 
                at _loopao31
                    reset
                ta
            fi
        wend
        push _c31
        if
            at _a31
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_1
        push    mulvvvXabsNameA1_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b32
    sbm _a32 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c32
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao32
        while
            push _a32
            if
                at _a32
                    dec
                ta 
                at _b32
                    inc
                ta
                push _b32
                not
                if 
                    at _c32
                        set 1
                    ta
                fi
            else 
                at _loopao32
                    reset
                ta
            fi
        wend
        push _c32
        if
            at _a32
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b33
    sbm _a33 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c33
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao33
        while
            push _a33
            if
                at _a33
                    dec
                ta 
                at _b33
                    inc
                ta
                push _b33
                not
                if 
                    at _c33
                        set 1
                    ta
                fi
            else 
                at _loopao33
                    reset
                ta
            fi
        wend
        push _c33
        if
            at _a33
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_1
        add    
#(js) }
        push    addvvXnameB1_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b34
    sbm _a34 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c34
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao34
        while
            push _a34
            if
                at _a34
                    dec
                ta 
                at _b34
                    inc
                ta
                push _b34
                not
                if 
                    at _c34
                        set 1
                    ta
                fi
            else 
                at _loopao34
                    reset
                ta
            fi
        wend
        push _c34
        if
            at _a34
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_2
        push    mulvvvXabsNameA1_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b35
    sbm _a35 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c35
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao35
        while
            push _a35
            if
                at _a35
                    dec
                ta 
                at _b35
                    inc
                ta
                push _b35
                not
                if 
                    at _c35
                        set 1
                    ta
                fi
            else 
                at _loopao35
                    reset
                ta
            fi
        wend
        push _c35
        if
            at _a35
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b36
    sbm _a36 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c36
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao36
        while
            push _a36
            if
                at _a36
                    dec
                ta 
                at _b36
                    inc
                ta
                push _b36
                not
                if 
                    at _c36
                        set 1
                    ta
                fi
            else 
                at _loopao36
                    reset
                ta
            fi
        wend
        push _c36
        if
            at _a36
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_2
        add    
#(js) }
        push    addvvXnameB1_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b37
    sbm _a37 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c37
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao37
        while
            push _a37
            if
                at _a37
                    dec
                ta 
                at _b37
                    inc
                ta
                push _b37
                not
                if 
                    at _c37
                        set 1
                    ta
                fi
            else 
                at _loopao37
                    reset
                ta
            fi
        wend
        push _c37
        if
            at _a37
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_3
        push    mulvvvXabsNameA1_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b38
    sbm _a38 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c38
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao38
        while
            push _a38
            if
                at _a38
                    dec
                ta 
                at _b38
                    inc
                ta
                push _b38
                not
                if 
                    at _c38
                        set 1
                    ta
                fi
            else 
                at _loopao38
                    reset
                ta
            fi
        wend
        push _c38
        if
            at _a38
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b39
    sbm _a39 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c39
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao39
        while
            push _a39
            if
                at _a39
                    dec
                ta 
                at _b39
                    inc
                ta
                push _b39
                not
                if 
                    at _c39
                        set 1
                    ta
                fi
            else 
                at _loopao39
                    reset
                ta
            fi
        wend
        push _c39
        if
            at _a39
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_3
        add    
#(js) }
        push    addvvXnameB1_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b40
    sbm _a40 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c40
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao40
        while
            push _a40
            if
                at _a40
                    dec
                ta 
                at _b40
                    inc
                ta
                push _b40
                not
                if 
                    at _c40
                        set 1
                    ta
                fi
            else 
                at _loopao40
                    reset
                ta
            fi
        wend
        push _c40
        if
            at _a40
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_4
        push    mulvvvXabsNameA1_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b41
    sbm _a41 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c41
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao41
        while
            push _a41
            if
                at _a41
                    dec
                ta 
                at _b41
                    inc
                ta
                push _b41
                not
                if 
                    at _c41
                        set 1
                    ta
                fi
            else 
                at _loopao41
                    reset
                ta
            fi
        wend
        push _c41
        if
            at _a41
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b42
    sbm _a42 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c42
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao42
        while
            push _a42
            if
                at _a42
                    dec
                ta 
                at _b42
                    inc
                ta
                push _b42
                not
                if 
                    at _c42
                        set 1
                    ta
                fi
            else 
                at _loopao42
                    reset
                ta
            fi
        wend
        push _c42
        if
            at _a42
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_4
        add    
#(js) }
        push    addvvXnameB1_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b43
    sbm _a43 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c43
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao43
        while
            push _a43
            if
                at _a43
                    dec
                ta 
                at _b43
                    inc
                ta
                push _b43
                not
                if 
                    at _c43
                        set 1
                    ta
                fi
            else 
                at _loopao43
                    reset
                ta
            fi
        wend
        push _c43
        if
            at _a43
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_5
        push    mulvvvXabsNameA1_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b44
    sbm _a44 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c44
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao44
        while
            push _a44
            if
                at _a44
                    dec
                ta 
                at _b44
                    inc
                ta
                push _b44
                not
                if 
                    at _c44
                        set 1
                    ta
                fi
            else 
                at _loopao44
                    reset
                ta
            fi
        wend
        push _c44
        if
            at _a44
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX1_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b45
    sbm _a45 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c45
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao45
        while
            push _a45
            if
                at _a45
                    dec
                ta 
                at _b45
                    inc
                ta
                push _b45
                not
                if 
                    at _c45
                        set 1
                    ta
                fi
            else 
                at _loopao45
                    reset
                ta
            fi
        wend
        push _c45
        if
            at _a45
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX1_5
        add    
#(js) }
        pop     resultX1_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb2
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb2
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB1_5
            push    mulvvvXabsNameA1_5
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_5
                push    mulvvvXabsNameA1_5
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB1_4
            push    mulvvvXabsNameA1_4
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_4
                push    mulvvvXabsNameA1_4
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB1_3
            push    mulvvvXabsNameA1_3
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_3
                push    mulvvvXabsNameA1_3
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB1_2
            push    mulvvvXabsNameA1_2
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_2
                push    mulvvvXabsNameA1_2
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB1_1
            push    mulvvvXabsNameA1_1
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_1
                push    mulvvvXabsNameA1_1
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB1_0
            push    mulvvvXabsNameA1_0
            sup
            if  
               at _asupb2
                set 1
               ta
            else 
                push    addvvXnameB1_0
                push    mulvvvXabsNameA1_0
                diff
                if
                at _asupb2
                    reset
                ta
                else           
#(js) }
            at _aequb2
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb2
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB1_s
                pop     resultX1_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB1_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b46
    sbm _a46 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c46
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao46
        while
            push _b46
            if  
                at _b46
                    dec
                ta
                at _a46
                    dec
                ta
                push _a46
                inc
                not
                if
                    at _c46
                        set 1
                    ta
                fi 
            else
                at _loopao46
                    reset
                ta
            fi
        wend
        push _c46
        if
            at _b46
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_0
                push    mulvvvXabsNameA1_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b47
    sbm _a47 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c47
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao47
        while
            push _b47
            if  
                at _b47
                    dec
                ta
                at _a47
                    dec
                ta
                push _a47
                inc
                not
                if
                    at _c47
                        set 1
                    ta
                fi 
            else
                at _loopao47
                    reset
                ta
            fi
        wend
        push _c47
        if
            at _b47
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b48
    sbm _a48 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c48
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao48
        while
            push _b48
            if  
                at _b48
                    dec
                ta
                at _a48
                    dec
                ta
                push _a48
                inc
                not
                if
                    at _c48
                        set 1
                    ta
                fi 
            else
                at _loopao48
                    reset
                ta
            fi
        wend
        push _c48
        if
            at _b48
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_0 
                add   
#(js) }
                push    addvvXnameB1_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b49
    sbm _a49 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c49
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao49
        while
            push _b49
            if  
                at _b49
                    dec
                ta
                at _a49
                    dec
                ta
                push _a49
                inc
                not
                if
                    at _c49
                        set 1
                    ta
                fi 
            else
                at _loopao49
                    reset
                ta
            fi
        wend
        push _c49
        if
            at _b49
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_1
                push    mulvvvXabsNameA1_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b50
    sbm _a50 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c50
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao50
        while
            push _b50
            if  
                at _b50
                    dec
                ta
                at _a50
                    dec
                ta
                push _a50
                inc
                not
                if
                    at _c50
                        set 1
                    ta
                fi 
            else
                at _loopao50
                    reset
                ta
            fi
        wend
        push _c50
        if
            at _b50
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b51
    sbm _a51 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c51
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao51
        while
            push _b51
            if  
                at _b51
                    dec
                ta
                at _a51
                    dec
                ta
                push _a51
                inc
                not
                if
                    at _c51
                        set 1
                    ta
                fi 
            else
                at _loopao51
                    reset
                ta
            fi
        wend
        push _c51
        if
            at _b51
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_1 
                add   
#(js) }
                push    addvvXnameB1_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b52
    sbm _a52 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c52
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao52
        while
            push _b52
            if  
                at _b52
                    dec
                ta
                at _a52
                    dec
                ta
                push _a52
                inc
                not
                if
                    at _c52
                        set 1
                    ta
                fi 
            else
                at _loopao52
                    reset
                ta
            fi
        wend
        push _c52
        if
            at _b52
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_2
                push    mulvvvXabsNameA1_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b53
    sbm _a53 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c53
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao53
        while
            push _b53
            if  
                at _b53
                    dec
                ta
                at _a53
                    dec
                ta
                push _a53
                inc
                not
                if
                    at _c53
                        set 1
                    ta
                fi 
            else
                at _loopao53
                    reset
                ta
            fi
        wend
        push _c53
        if
            at _b53
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b54
    sbm _a54 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c54
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao54
        while
            push _b54
            if  
                at _b54
                    dec
                ta
                at _a54
                    dec
                ta
                push _a54
                inc
                not
                if
                    at _c54
                        set 1
                    ta
                fi 
            else
                at _loopao54
                    reset
                ta
            fi
        wend
        push _c54
        if
            at _b54
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_2 
                add   
#(js) }
                push    addvvXnameB1_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b55
    sbm _a55 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c55
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao55
        while
            push _b55
            if  
                at _b55
                    dec
                ta
                at _a55
                    dec
                ta
                push _a55
                inc
                not
                if
                    at _c55
                        set 1
                    ta
                fi 
            else
                at _loopao55
                    reset
                ta
            fi
        wend
        push _c55
        if
            at _b55
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_3
                push    mulvvvXabsNameA1_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b56
    sbm _a56 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c56
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao56
        while
            push _b56
            if  
                at _b56
                    dec
                ta
                at _a56
                    dec
                ta
                push _a56
                inc
                not
                if
                    at _c56
                        set 1
                    ta
                fi 
            else
                at _loopao56
                    reset
                ta
            fi
        wend
        push _c56
        if
            at _b56
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b57
    sbm _a57 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c57
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao57
        while
            push _b57
            if  
                at _b57
                    dec
                ta
                at _a57
                    dec
                ta
                push _a57
                inc
                not
                if
                    at _c57
                        set 1
                    ta
                fi 
            else
                at _loopao57
                    reset
                ta
            fi
        wend
        push _c57
        if
            at _b57
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_3 
                add   
#(js) }
                push    addvvXnameB1_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b58
    sbm _a58 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c58
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao58
        while
            push _b58
            if  
                at _b58
                    dec
                ta
                at _a58
                    dec
                ta
                push _a58
                inc
                not
                if
                    at _c58
                        set 1
                    ta
                fi 
            else
                at _loopao58
                    reset
                ta
            fi
        wend
        push _c58
        if
            at _b58
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_4
                push    mulvvvXabsNameA1_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b59
    sbm _a59 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c59
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao59
        while
            push _b59
            if  
                at _b59
                    dec
                ta
                at _a59
                    dec
                ta
                push _a59
                inc
                not
                if
                    at _c59
                        set 1
                    ta
                fi 
            else
                at _loopao59
                    reset
                ta
            fi
        wend
        push _c59
        if
            at _b59
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b60
    sbm _a60 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c60
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao60
        while
            push _b60
            if  
                at _b60
                    dec
                ta
                at _a60
                    dec
                ta
                push _a60
                inc
                not
                if
                    at _c60
                        set 1
                    ta
                fi 
            else
                at _loopao60
                    reset
                ta
            fi
        wend
        push _c60
        if
            at _b60
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_4 
                add   
#(js) }
                push    addvvXnameB1_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b61
    sbm _a61 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c61
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao61
        while
            push _b61
            if  
                at _b61
                    dec
                ta
                at _a61
                    dec
                ta
                push _a61
                inc
                not
                if
                    at _c61
                        set 1
                    ta
                fi 
            else
                at _loopao61
                    reset
                ta
            fi
        wend
        push _c61
        if
            at _b61
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_5
                push    mulvvvXabsNameA1_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b62
    sbm _a62 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c62
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao62
        while
            push _b62
            if  
                at _b62
                    dec
                ta
                at _a62
                    dec
                ta
                push _a62
                inc
                not
                if
                    at _c62
                        set 1
                    ta
                fi 
            else
                at _loopao62
                    reset
                ta
            fi
        wend
        push _c62
        if
            at _b62
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX1_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b63
    sbm _a63 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c63
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao63
        while
            push _b63
            if  
                at _b63
                    dec
                ta
                at _a63
                    dec
                ta
                push _a63
                inc
                not
                if
                    at _c63
                        set 1
                    ta
                fi 
            else
                at _loopao63
                    reset
                ta
            fi
        wend
        push _c63
        if
            at _b63
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX1_5 
                add   
#(js) }
                pop     resultX1_c
            
            else # absB >= absA : 
                push    _aequb2
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX1_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA1_s
                    pop     resultX1_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA1_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b64
    sbm _a64 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c64
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao64
        while
            push _b64
            if  
                at _b64
                    dec
                ta
                at _a64
                    dec
                ta
                push _a64
                inc
                not
                if
                    at _c64
                        set 1
                    ta
                fi 
            else
                at _loopao64
                    reset
                ta
            fi
        wend
        push _c64
        if
            at _b64
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_0
                    push    addvvXnameB1_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b65
    sbm _a65 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c65
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao65
        while
            push _b65
            if  
                at _b65
                    dec
                ta
                at _a65
                    dec
                ta
                push _a65
                inc
                not
                if
                    at _c65
                        set 1
                    ta
                fi 
            else
                at _loopao65
                    reset
                ta
            fi
        wend
        push _c65
        if
            at _b65
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b66
    sbm _a66 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c66
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao66
        while
            push _b66
            if  
                at _b66
                    dec
                ta
                at _a66
                    dec
                ta
                push _a66
                inc
                not
                if
                    at _c66
                        set 1
                    ta
                fi 
            else
                at _loopao66
                    reset
                ta
            fi
        wend
        push _c66
        if
            at _b66
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_0
                    add    
#(js) }
                    push    mulvvvXabsNameA1_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b67
    sbm _a67 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c67
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao67
        while
            push _b67
            if  
                at _b67
                    dec
                ta
                at _a67
                    dec
                ta
                push _a67
                inc
                not
                if
                    at _c67
                        set 1
                    ta
                fi 
            else
                at _loopao67
                    reset
                ta
            fi
        wend
        push _c67
        if
            at _b67
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_1
                    push    addvvXnameB1_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b68
    sbm _a68 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c68
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao68
        while
            push _b68
            if  
                at _b68
                    dec
                ta
                at _a68
                    dec
                ta
                push _a68
                inc
                not
                if
                    at _c68
                        set 1
                    ta
                fi 
            else
                at _loopao68
                    reset
                ta
            fi
        wend
        push _c68
        if
            at _b68
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b69
    sbm _a69 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c69
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao69
        while
            push _b69
            if  
                at _b69
                    dec
                ta
                at _a69
                    dec
                ta
                push _a69
                inc
                not
                if
                    at _c69
                        set 1
                    ta
                fi 
            else
                at _loopao69
                    reset
                ta
            fi
        wend
        push _c69
        if
            at _b69
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_1
                    add    
#(js) }
                    push    mulvvvXabsNameA1_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b70
    sbm _a70 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c70
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao70
        while
            push _b70
            if  
                at _b70
                    dec
                ta
                at _a70
                    dec
                ta
                push _a70
                inc
                not
                if
                    at _c70
                        set 1
                    ta
                fi 
            else
                at _loopao70
                    reset
                ta
            fi
        wend
        push _c70
        if
            at _b70
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_2
                    push    addvvXnameB1_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b71
    sbm _a71 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c71
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao71
        while
            push _b71
            if  
                at _b71
                    dec
                ta
                at _a71
                    dec
                ta
                push _a71
                inc
                not
                if
                    at _c71
                        set 1
                    ta
                fi 
            else
                at _loopao71
                    reset
                ta
            fi
        wend
        push _c71
        if
            at _b71
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b72
    sbm _a72 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c72
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao72
        while
            push _b72
            if  
                at _b72
                    dec
                ta
                at _a72
                    dec
                ta
                push _a72
                inc
                not
                if
                    at _c72
                        set 1
                    ta
                fi 
            else
                at _loopao72
                    reset
                ta
            fi
        wend
        push _c72
        if
            at _b72
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_2
                    add    
#(js) }
                    push    mulvvvXabsNameA1_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b73
    sbm _a73 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c73
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao73
        while
            push _b73
            if  
                at _b73
                    dec
                ta
                at _a73
                    dec
                ta
                push _a73
                inc
                not
                if
                    at _c73
                        set 1
                    ta
                fi 
            else
                at _loopao73
                    reset
                ta
            fi
        wend
        push _c73
        if
            at _b73
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_3
                    push    addvvXnameB1_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b74
    sbm _a74 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c74
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao74
        while
            push _b74
            if  
                at _b74
                    dec
                ta
                at _a74
                    dec
                ta
                push _a74
                inc
                not
                if
                    at _c74
                        set 1
                    ta
                fi 
            else
                at _loopao74
                    reset
                ta
            fi
        wend
        push _c74
        if
            at _b74
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b75
    sbm _a75 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c75
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao75
        while
            push _b75
            if  
                at _b75
                    dec
                ta
                at _a75
                    dec
                ta
                push _a75
                inc
                not
                if
                    at _c75
                        set 1
                    ta
                fi 
            else
                at _loopao75
                    reset
                ta
            fi
        wend
        push _c75
        if
            at _b75
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_3
                    add    
#(js) }
                    push    mulvvvXabsNameA1_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b76
    sbm _a76 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c76
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao76
        while
            push _b76
            if  
                at _b76
                    dec
                ta
                at _a76
                    dec
                ta
                push _a76
                inc
                not
                if
                    at _c76
                        set 1
                    ta
                fi 
            else
                at _loopao76
                    reset
                ta
            fi
        wend
        push _c76
        if
            at _b76
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_4
                    push    addvvXnameB1_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b77
    sbm _a77 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c77
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao77
        while
            push _b77
            if  
                at _b77
                    dec
                ta
                at _a77
                    dec
                ta
                push _a77
                inc
                not
                if
                    at _c77
                        set 1
                    ta
                fi 
            else
                at _loopao77
                    reset
                ta
            fi
        wend
        push _c77
        if
            at _b77
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b78
    sbm _a78 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c78
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao78
        while
            push _b78
            if  
                at _b78
                    dec
                ta
                at _a78
                    dec
                ta
                push _a78
                inc
                not
                if
                    at _c78
                        set 1
                    ta
                fi 
            else
                at _loopao78
                    reset
                ta
            fi
        wend
        push _c78
        if
            at _b78
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_4
                    add    
#(js) }
                    push    mulvvvXabsNameA1_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b79
    sbm _a79 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c79
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao79
        while
            push _b79
            if  
                at _b79
                    dec
                ta
                at _a79
                    dec
                ta
                push _a79
                inc
                not
                if
                    at _c79
                        set 1
                    ta
                fi 
            else
                at _loopao79
                    reset
                ta
            fi
        wend
        push _c79
        if
            at _b79
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_5
                    push    addvvXnameB1_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b80
    sbm _a80 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c80
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao80
        while
            push _b80
            if  
                at _b80
                    dec
                ta
                at _a80
                    dec
                ta
                push _a80
                inc
                not
                if
                    at _c80
                        set 1
                    ta
                fi 
            else
                at _loopao80
                    reset
                ta
            fi
        wend
        push _c80
        if
            at _b80
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX1_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b81
    sbm _a81 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c81
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao81
        while
            push _b81
            if  
                at _b81
                    dec
                ta
                at _a81
                    dec
                ta
                push _a81
                inc
                not
                if
                    at _c81
                        set 1
                    ta
                fi 
            else
                at _loopao81
                    reset
                ta
            fi
        wend
        push _c81
        if
            at _b81
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX1_5
                    add    
#(js) }
                    pop     resultX1_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB1_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB1_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB1_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB1_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB1_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB1_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop1
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA1
        push mulvvvXsB1
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX1_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX1_c
    push    resultX1_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX1_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack3_0    # 0 byte of _instack3
#(js) }
    var _instack3_1    # 1 byte of _instack3
#(js) }
    var _instack3_2    # 2 byte of _instack3
#(js) }
    var _instack3_3    # 3 byte of _instack3
#(js) }
    var _instack3_4    # 4 byte of _instack3
#(js) }
    var _instack3_5    # 5 byte of _instack3
#(js) }
    var _instack3_s    # Sign of _instack3
    var _instack3_c    # carry of _instack3 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack3_0    # 0 byte of _outstack3
#(js) }
    var _outstack3_1    # 1 byte of _outstack3
#(js) }
    var _outstack3_2    # 2 byte of _outstack3
#(js) }
    var _outstack3_s    # Sign of _outstack3
    var _outstack3_c    # carry of _outstack3 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack3_0
#(js) }
    pop     _instack3_1
#(js) }
    pop     _instack3_2
#(js) }
    pop     _instack3_3
#(js) }
    pop     _instack3_4
#(js) }
    pop     _instack3_5
#(js) }
    pop     _instack3_s
    pop     _instack3_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack3_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack3_s
    pop _outstack3_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack3_4
            pop _outstack3_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack3_3
            pop _outstack3_1
#(js) }
            push _instack3_2
            pop _outstack3_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack3_c
    push    _outstack3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack3_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA1_0
#(js) }
    pop     nameA1_1
#(js) }
    pop     nameA1_2
#(js) }
    pop     nameA1_s
    pop     nameA1_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)        mulFP(FP_I,FP_P)
#(begin macro)        pushFP(FP_I,FP_P,oneOnHalfZoomW)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack4_0 - 0
#(js) }
    sbm _instack4_1 - 1
#(js) }
    sbm _instack4_2 - 2
#(js) }
    sbm _instack4_s - 3
    sbm _instack4_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack4_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    160
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,oneOnHalfZoomW)
#(begin macro)        mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB2_0 - 0
#(js) }
    sbm nameB2_1 - 1
#(js) }
    sbm nameB2_2 - 2
#(js) }
    sbm nameB2_s - 3
    sbm nameB2_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA2_0 - 5
#(js) }
    sbm nameA2_1 - 6
#(js) }
    sbm nameA2_2 - 7
#(js) }
    sbm nameA2_s - 8
    sbm nameA2_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA2_c
    push    nameA2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA2_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput3_0 - 0
#(js) }
    sbm _castXInput3_1 - 1
#(js) }
    sbm _castXInput3_2 - 2
#(js) }
    sbm _castXInput3_s - 3
    sbm _castXInput3_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput3_0    # 0 byte of _castXoutput3
#(js) }
    var _castXoutput3_1    # 1 byte of _castXoutput3
#(js) }
    var _castXoutput3_2    # 2 byte of _castXoutput3
#(js) }
    var _castXoutput3_3    # 3 byte of _castXoutput3
#(js) }
    var _castXoutput3_4    # 4 byte of _castXoutput3
#(js) }
    var _castXoutput3_5    # 5 byte of _castXoutput3
#(js) }
    var _castXoutput3_s    # Sign of _castXoutput3
    var _castXoutput3_c    # carry of _castXoutput3 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput3_c
    push    _castXInput3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput3_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori3_0
#(js) }
    pop     ori3_1
#(js) }
    pop     ori3_2
#(js) }
    pop     ori3_s
    pop     ori3_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori3_s   
        pop     dest3_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori3_0
                pop     dest3_0
#(js) }
                push    ori3_1
                pop     dest3_1
#(js) }
                push    ori3_2
                pop     dest3_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest3_3
#(js) } 
                push    0
                pop     dest3_4
#(js) } 
                push    0
                pop     dest3_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest3_c
    push    dest3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest3_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput3_0
#(js) }
    pop     _castXoutput3_1
#(js) }
    pop     _castXoutput3_2
#(js) }
    pop     _castXoutput3_3
#(js) }
    pop     _castXoutput3_4
#(js) }
    pop     _castXoutput3_5
#(js) }
    pop     _castXoutput3_s
    pop     _castXoutput3_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput3_c
    push    _castXoutput3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput3_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX2_0
#(js) }
    pop     nameAX2_1
#(js) }
    pop     nameAX2_2
#(js) }
    pop     nameAX2_3
#(js) }
    pop     nameAX2_4
#(js) }
    pop     nameAX2_5
#(js) }
    pop     nameAX2_s
    pop     nameAX2_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB2_c
    push    nameB2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB2_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput4_0 - 0
#(js) }
    sbm _castXInput4_1 - 1
#(js) }
    sbm _castXInput4_2 - 2
#(js) }
    sbm _castXInput4_s - 3
    sbm _castXInput4_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput4_0    # 0 byte of _castXoutput4
#(js) }
    var _castXoutput4_1    # 1 byte of _castXoutput4
#(js) }
    var _castXoutput4_2    # 2 byte of _castXoutput4
#(js) }
    var _castXoutput4_3    # 3 byte of _castXoutput4
#(js) }
    var _castXoutput4_4    # 4 byte of _castXoutput4
#(js) }
    var _castXoutput4_5    # 5 byte of _castXoutput4
#(js) }
    var _castXoutput4_s    # Sign of _castXoutput4
    var _castXoutput4_c    # carry of _castXoutput4 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput4_c
    push    _castXInput4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput4_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori4_0
#(js) }
    pop     ori4_1
#(js) }
    pop     ori4_2
#(js) }
    pop     ori4_s
    pop     ori4_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori4_s   
        pop     dest4_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori4_0
                pop     dest4_0
#(js) }
                push    ori4_1
                pop     dest4_1
#(js) }
                push    ori4_2
                pop     dest4_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest4_3
#(js) } 
                push    0
                pop     dest4_4
#(js) } 
                push    0
                pop     dest4_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest4_c
    push    dest4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest4_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput4_0
#(js) }
    pop     _castXoutput4_1
#(js) }
    pop     _castXoutput4_2
#(js) }
    pop     _castXoutput4_3
#(js) }
    pop     _castXoutput4_4
#(js) }
    pop     _castXoutput4_5
#(js) }
    pop     _castXoutput4_s
    pop     _castXoutput4_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput4_c
    push    _castXoutput4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput4_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX2_0
#(js) }
    pop     nameBX2_1
#(js) }
    pop     nameBX2_2
#(js) }
    pop     nameBX2_3
#(js) }
    pop     nameBX2_4
#(js) }
    pop     nameBX2_5
#(js) }
    pop     nameBX2_s
    pop     nameBX2_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX2_c
    push    nameAX2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX2_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA2_0
#(js) }
    pop     mulvvvXabsNameA2_1
#(js) }
    pop     mulvvvXabsNameA2_2
#(js) }
    pop     mulvvvXabsNameA2_3
#(js) }
    pop     mulvvvXabsNameA2_4
#(js) }
    pop     mulvvvXabsNameA2_5
#(js) }
    pop     mulvvvXabsNameA2_s
    pop     mulvvvXabsNameA2_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA2
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA2_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA2
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA2_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX2_c
    push    nameBX2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX2_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB2_0
#(js) }
    pop     mulvvvXabsNameB2_1
#(js) }
    pop     mulvvvXabsNameB2_2
#(js) }
    pop     mulvvvXabsNameB2_3
#(js) }
    pop     mulvvvXabsNameB2_4
#(js) }
    pop     mulvvvXabsNameB2_5
#(js) }
    pop     mulvvvXabsNameB2_s
    pop     mulvvvXabsNameB2_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB2
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB2_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB2
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB2_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX2_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop2
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB2_0
    bool
#(js) }
    push mulvvvXabsNameB2_1
    bool
#(js) }
    push mulvvvXabsNameB2_2
    bool
#(js) }
    push mulvvvXabsNameB2_3
    bool
#(js) }
    push mulvvvXabsNameB2_4
    bool
#(js) }
    push mulvvvXabsNameB2_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX2_c
    push    resultX2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB2_0
#(js) }
    pop     addvvXnameB2_1
#(js) }
    pop     addvvXnameB2_2
#(js) }
    pop     addvvXnameB2_3
#(js) }
    pop     addvvXnameB2_4
#(js) }
    pop     addvvXnameB2_5
#(js) }
    pop     addvvXnameB2_s
    pop     addvvXnameB2_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB2_s
    push    mulvvvXabsNameA2_s
    or
    not
    push    addvvXnameB2_s
    push    mulvvvXabsNameA2_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB2_s
        pop     resultX2_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB2_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b82
    sbm _a82 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c82
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao82
        while
            push _a82
            if
                at _a82
                    dec
                ta 
                at _b82
                    inc
                ta
                push _b82
                not
                if 
                    at _c82
                        set 1
                    ta
                fi
            else 
                at _loopao82
                    reset
                ta
            fi
        wend
        push _c82
        if
            at _a82
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_0
        push    mulvvvXabsNameA2_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b83
    sbm _a83 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c83
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao83
        while
            push _a83
            if
                at _a83
                    dec
                ta 
                at _b83
                    inc
                ta
                push _b83
                not
                if 
                    at _c83
                        set 1
                    ta
                fi
            else 
                at _loopao83
                    reset
                ta
            fi
        wend
        push _c83
        if
            at _a83
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b84
    sbm _a84 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c84
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao84
        while
            push _a84
            if
                at _a84
                    dec
                ta 
                at _b84
                    inc
                ta
                push _b84
                not
                if 
                    at _c84
                        set 1
                    ta
                fi
            else 
                at _loopao84
                    reset
                ta
            fi
        wend
        push _c84
        if
            at _a84
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_0
        add    
#(js) }
        push    addvvXnameB2_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b85
    sbm _a85 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c85
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao85
        while
            push _a85
            if
                at _a85
                    dec
                ta 
                at _b85
                    inc
                ta
                push _b85
                not
                if 
                    at _c85
                        set 1
                    ta
                fi
            else 
                at _loopao85
                    reset
                ta
            fi
        wend
        push _c85
        if
            at _a85
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_1
        push    mulvvvXabsNameA2_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b86
    sbm _a86 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c86
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao86
        while
            push _a86
            if
                at _a86
                    dec
                ta 
                at _b86
                    inc
                ta
                push _b86
                not
                if 
                    at _c86
                        set 1
                    ta
                fi
            else 
                at _loopao86
                    reset
                ta
            fi
        wend
        push _c86
        if
            at _a86
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b87
    sbm _a87 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c87
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao87
        while
            push _a87
            if
                at _a87
                    dec
                ta 
                at _b87
                    inc
                ta
                push _b87
                not
                if 
                    at _c87
                        set 1
                    ta
                fi
            else 
                at _loopao87
                    reset
                ta
            fi
        wend
        push _c87
        if
            at _a87
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_1
        add    
#(js) }
        push    addvvXnameB2_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b88
    sbm _a88 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c88
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao88
        while
            push _a88
            if
                at _a88
                    dec
                ta 
                at _b88
                    inc
                ta
                push _b88
                not
                if 
                    at _c88
                        set 1
                    ta
                fi
            else 
                at _loopao88
                    reset
                ta
            fi
        wend
        push _c88
        if
            at _a88
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_2
        push    mulvvvXabsNameA2_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b89
    sbm _a89 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c89
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao89
        while
            push _a89
            if
                at _a89
                    dec
                ta 
                at _b89
                    inc
                ta
                push _b89
                not
                if 
                    at _c89
                        set 1
                    ta
                fi
            else 
                at _loopao89
                    reset
                ta
            fi
        wend
        push _c89
        if
            at _a89
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b90
    sbm _a90 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c90
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao90
        while
            push _a90
            if
                at _a90
                    dec
                ta 
                at _b90
                    inc
                ta
                push _b90
                not
                if 
                    at _c90
                        set 1
                    ta
                fi
            else 
                at _loopao90
                    reset
                ta
            fi
        wend
        push _c90
        if
            at _a90
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_2
        add    
#(js) }
        push    addvvXnameB2_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b91
    sbm _a91 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c91
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao91
        while
            push _a91
            if
                at _a91
                    dec
                ta 
                at _b91
                    inc
                ta
                push _b91
                not
                if 
                    at _c91
                        set 1
                    ta
                fi
            else 
                at _loopao91
                    reset
                ta
            fi
        wend
        push _c91
        if
            at _a91
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_3
        push    mulvvvXabsNameA2_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b92
    sbm _a92 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c92
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao92
        while
            push _a92
            if
                at _a92
                    dec
                ta 
                at _b92
                    inc
                ta
                push _b92
                not
                if 
                    at _c92
                        set 1
                    ta
                fi
            else 
                at _loopao92
                    reset
                ta
            fi
        wend
        push _c92
        if
            at _a92
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b93
    sbm _a93 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c93
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao93
        while
            push _a93
            if
                at _a93
                    dec
                ta 
                at _b93
                    inc
                ta
                push _b93
                not
                if 
                    at _c93
                        set 1
                    ta
                fi
            else 
                at _loopao93
                    reset
                ta
            fi
        wend
        push _c93
        if
            at _a93
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_3
        add    
#(js) }
        push    addvvXnameB2_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b94
    sbm _a94 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c94
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao94
        while
            push _a94
            if
                at _a94
                    dec
                ta 
                at _b94
                    inc
                ta
                push _b94
                not
                if 
                    at _c94
                        set 1
                    ta
                fi
            else 
                at _loopao94
                    reset
                ta
            fi
        wend
        push _c94
        if
            at _a94
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_4
        push    mulvvvXabsNameA2_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b95
    sbm _a95 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c95
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao95
        while
            push _a95
            if
                at _a95
                    dec
                ta 
                at _b95
                    inc
                ta
                push _b95
                not
                if 
                    at _c95
                        set 1
                    ta
                fi
            else 
                at _loopao95
                    reset
                ta
            fi
        wend
        push _c95
        if
            at _a95
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b96
    sbm _a96 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c96
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao96
        while
            push _a96
            if
                at _a96
                    dec
                ta 
                at _b96
                    inc
                ta
                push _b96
                not
                if 
                    at _c96
                        set 1
                    ta
                fi
            else 
                at _loopao96
                    reset
                ta
            fi
        wend
        push _c96
        if
            at _a96
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_4
        add    
#(js) }
        push    addvvXnameB2_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b97
    sbm _a97 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c97
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao97
        while
            push _a97
            if
                at _a97
                    dec
                ta 
                at _b97
                    inc
                ta
                push _b97
                not
                if 
                    at _c97
                        set 1
                    ta
                fi
            else 
                at _loopao97
                    reset
                ta
            fi
        wend
        push _c97
        if
            at _a97
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_5
        push    mulvvvXabsNameA2_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b98
    sbm _a98 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c98
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao98
        while
            push _a98
            if
                at _a98
                    dec
                ta 
                at _b98
                    inc
                ta
                push _b98
                not
                if 
                    at _c98
                        set 1
                    ta
                fi
            else 
                at _loopao98
                    reset
                ta
            fi
        wend
        push _c98
        if
            at _a98
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX2_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b99
    sbm _a99 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c99
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao99
        while
            push _a99
            if
                at _a99
                    dec
                ta 
                at _b99
                    inc
                ta
                push _b99
                not
                if 
                    at _c99
                        set 1
                    ta
                fi
            else 
                at _loopao99
                    reset
                ta
            fi
        wend
        push _c99
        if
            at _a99
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX2_5
        add    
#(js) }
        pop     resultX2_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb3
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb3
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB2_5
            push    mulvvvXabsNameA2_5
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_5
                push    mulvvvXabsNameA2_5
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB2_4
            push    mulvvvXabsNameA2_4
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_4
                push    mulvvvXabsNameA2_4
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB2_3
            push    mulvvvXabsNameA2_3
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_3
                push    mulvvvXabsNameA2_3
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB2_2
            push    mulvvvXabsNameA2_2
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_2
                push    mulvvvXabsNameA2_2
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB2_1
            push    mulvvvXabsNameA2_1
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_1
                push    mulvvvXabsNameA2_1
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB2_0
            push    mulvvvXabsNameA2_0
            sup
            if  
               at _asupb3
                set 1
               ta
            else 
                push    addvvXnameB2_0
                push    mulvvvXabsNameA2_0
                diff
                if
                at _asupb3
                    reset
                ta
                else           
#(js) }
            at _aequb3
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb3
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB2_s
                pop     resultX2_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB2_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b100
    sbm _a100 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c100
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao100
        while
            push _b100
            if  
                at _b100
                    dec
                ta
                at _a100
                    dec
                ta
                push _a100
                inc
                not
                if
                    at _c100
                        set 1
                    ta
                fi 
            else
                at _loopao100
                    reset
                ta
            fi
        wend
        push _c100
        if
            at _b100
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_0
                push    mulvvvXabsNameA2_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b101
    sbm _a101 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c101
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao101
        while
            push _b101
            if  
                at _b101
                    dec
                ta
                at _a101
                    dec
                ta
                push _a101
                inc
                not
                if
                    at _c101
                        set 1
                    ta
                fi 
            else
                at _loopao101
                    reset
                ta
            fi
        wend
        push _c101
        if
            at _b101
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b102
    sbm _a102 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c102
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao102
        while
            push _b102
            if  
                at _b102
                    dec
                ta
                at _a102
                    dec
                ta
                push _a102
                inc
                not
                if
                    at _c102
                        set 1
                    ta
                fi 
            else
                at _loopao102
                    reset
                ta
            fi
        wend
        push _c102
        if
            at _b102
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_0 
                add   
#(js) }
                push    addvvXnameB2_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b103
    sbm _a103 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c103
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao103
        while
            push _b103
            if  
                at _b103
                    dec
                ta
                at _a103
                    dec
                ta
                push _a103
                inc
                not
                if
                    at _c103
                        set 1
                    ta
                fi 
            else
                at _loopao103
                    reset
                ta
            fi
        wend
        push _c103
        if
            at _b103
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_1
                push    mulvvvXabsNameA2_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b104
    sbm _a104 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c104
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao104
        while
            push _b104
            if  
                at _b104
                    dec
                ta
                at _a104
                    dec
                ta
                push _a104
                inc
                not
                if
                    at _c104
                        set 1
                    ta
                fi 
            else
                at _loopao104
                    reset
                ta
            fi
        wend
        push _c104
        if
            at _b104
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b105
    sbm _a105 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c105
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao105
        while
            push _b105
            if  
                at _b105
                    dec
                ta
                at _a105
                    dec
                ta
                push _a105
                inc
                not
                if
                    at _c105
                        set 1
                    ta
                fi 
            else
                at _loopao105
                    reset
                ta
            fi
        wend
        push _c105
        if
            at _b105
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_1 
                add   
#(js) }
                push    addvvXnameB2_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b106
    sbm _a106 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c106
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao106
        while
            push _b106
            if  
                at _b106
                    dec
                ta
                at _a106
                    dec
                ta
                push _a106
                inc
                not
                if
                    at _c106
                        set 1
                    ta
                fi 
            else
                at _loopao106
                    reset
                ta
            fi
        wend
        push _c106
        if
            at _b106
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_2
                push    mulvvvXabsNameA2_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b107
    sbm _a107 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c107
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao107
        while
            push _b107
            if  
                at _b107
                    dec
                ta
                at _a107
                    dec
                ta
                push _a107
                inc
                not
                if
                    at _c107
                        set 1
                    ta
                fi 
            else
                at _loopao107
                    reset
                ta
            fi
        wend
        push _c107
        if
            at _b107
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b108
    sbm _a108 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c108
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao108
        while
            push _b108
            if  
                at _b108
                    dec
                ta
                at _a108
                    dec
                ta
                push _a108
                inc
                not
                if
                    at _c108
                        set 1
                    ta
                fi 
            else
                at _loopao108
                    reset
                ta
            fi
        wend
        push _c108
        if
            at _b108
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_2 
                add   
#(js) }
                push    addvvXnameB2_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b109
    sbm _a109 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c109
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao109
        while
            push _b109
            if  
                at _b109
                    dec
                ta
                at _a109
                    dec
                ta
                push _a109
                inc
                not
                if
                    at _c109
                        set 1
                    ta
                fi 
            else
                at _loopao109
                    reset
                ta
            fi
        wend
        push _c109
        if
            at _b109
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_3
                push    mulvvvXabsNameA2_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b110
    sbm _a110 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c110
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao110
        while
            push _b110
            if  
                at _b110
                    dec
                ta
                at _a110
                    dec
                ta
                push _a110
                inc
                not
                if
                    at _c110
                        set 1
                    ta
                fi 
            else
                at _loopao110
                    reset
                ta
            fi
        wend
        push _c110
        if
            at _b110
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b111
    sbm _a111 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c111
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao111
        while
            push _b111
            if  
                at _b111
                    dec
                ta
                at _a111
                    dec
                ta
                push _a111
                inc
                not
                if
                    at _c111
                        set 1
                    ta
                fi 
            else
                at _loopao111
                    reset
                ta
            fi
        wend
        push _c111
        if
            at _b111
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_3 
                add   
#(js) }
                push    addvvXnameB2_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b112
    sbm _a112 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c112
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao112
        while
            push _b112
            if  
                at _b112
                    dec
                ta
                at _a112
                    dec
                ta
                push _a112
                inc
                not
                if
                    at _c112
                        set 1
                    ta
                fi 
            else
                at _loopao112
                    reset
                ta
            fi
        wend
        push _c112
        if
            at _b112
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_4
                push    mulvvvXabsNameA2_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b113
    sbm _a113 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c113
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao113
        while
            push _b113
            if  
                at _b113
                    dec
                ta
                at _a113
                    dec
                ta
                push _a113
                inc
                not
                if
                    at _c113
                        set 1
                    ta
                fi 
            else
                at _loopao113
                    reset
                ta
            fi
        wend
        push _c113
        if
            at _b113
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b114
    sbm _a114 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c114
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao114
        while
            push _b114
            if  
                at _b114
                    dec
                ta
                at _a114
                    dec
                ta
                push _a114
                inc
                not
                if
                    at _c114
                        set 1
                    ta
                fi 
            else
                at _loopao114
                    reset
                ta
            fi
        wend
        push _c114
        if
            at _b114
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_4 
                add   
#(js) }
                push    addvvXnameB2_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b115
    sbm _a115 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c115
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao115
        while
            push _b115
            if  
                at _b115
                    dec
                ta
                at _a115
                    dec
                ta
                push _a115
                inc
                not
                if
                    at _c115
                        set 1
                    ta
                fi 
            else
                at _loopao115
                    reset
                ta
            fi
        wend
        push _c115
        if
            at _b115
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_5
                push    mulvvvXabsNameA2_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b116
    sbm _a116 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c116
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao116
        while
            push _b116
            if  
                at _b116
                    dec
                ta
                at _a116
                    dec
                ta
                push _a116
                inc
                not
                if
                    at _c116
                        set 1
                    ta
                fi 
            else
                at _loopao116
                    reset
                ta
            fi
        wend
        push _c116
        if
            at _b116
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX2_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b117
    sbm _a117 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c117
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao117
        while
            push _b117
            if  
                at _b117
                    dec
                ta
                at _a117
                    dec
                ta
                push _a117
                inc
                not
                if
                    at _c117
                        set 1
                    ta
                fi 
            else
                at _loopao117
                    reset
                ta
            fi
        wend
        push _c117
        if
            at _b117
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX2_5 
                add   
#(js) }
                pop     resultX2_c
            
            else # absB >= absA : 
                push    _aequb3
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX2_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA2_s
                    pop     resultX2_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA2_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b118
    sbm _a118 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c118
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao118
        while
            push _b118
            if  
                at _b118
                    dec
                ta
                at _a118
                    dec
                ta
                push _a118
                inc
                not
                if
                    at _c118
                        set 1
                    ta
                fi 
            else
                at _loopao118
                    reset
                ta
            fi
        wend
        push _c118
        if
            at _b118
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_0
                    push    addvvXnameB2_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b119
    sbm _a119 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c119
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao119
        while
            push _b119
            if  
                at _b119
                    dec
                ta
                at _a119
                    dec
                ta
                push _a119
                inc
                not
                if
                    at _c119
                        set 1
                    ta
                fi 
            else
                at _loopao119
                    reset
                ta
            fi
        wend
        push _c119
        if
            at _b119
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b120
    sbm _a120 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c120
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao120
        while
            push _b120
            if  
                at _b120
                    dec
                ta
                at _a120
                    dec
                ta
                push _a120
                inc
                not
                if
                    at _c120
                        set 1
                    ta
                fi 
            else
                at _loopao120
                    reset
                ta
            fi
        wend
        push _c120
        if
            at _b120
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_0
                    add    
#(js) }
                    push    mulvvvXabsNameA2_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b121
    sbm _a121 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c121
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao121
        while
            push _b121
            if  
                at _b121
                    dec
                ta
                at _a121
                    dec
                ta
                push _a121
                inc
                not
                if
                    at _c121
                        set 1
                    ta
                fi 
            else
                at _loopao121
                    reset
                ta
            fi
        wend
        push _c121
        if
            at _b121
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_1
                    push    addvvXnameB2_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b122
    sbm _a122 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c122
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao122
        while
            push _b122
            if  
                at _b122
                    dec
                ta
                at _a122
                    dec
                ta
                push _a122
                inc
                not
                if
                    at _c122
                        set 1
                    ta
                fi 
            else
                at _loopao122
                    reset
                ta
            fi
        wend
        push _c122
        if
            at _b122
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b123
    sbm _a123 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c123
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao123
        while
            push _b123
            if  
                at _b123
                    dec
                ta
                at _a123
                    dec
                ta
                push _a123
                inc
                not
                if
                    at _c123
                        set 1
                    ta
                fi 
            else
                at _loopao123
                    reset
                ta
            fi
        wend
        push _c123
        if
            at _b123
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_1
                    add    
#(js) }
                    push    mulvvvXabsNameA2_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b124
    sbm _a124 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c124
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao124
        while
            push _b124
            if  
                at _b124
                    dec
                ta
                at _a124
                    dec
                ta
                push _a124
                inc
                not
                if
                    at _c124
                        set 1
                    ta
                fi 
            else
                at _loopao124
                    reset
                ta
            fi
        wend
        push _c124
        if
            at _b124
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_2
                    push    addvvXnameB2_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b125
    sbm _a125 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c125
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao125
        while
            push _b125
            if  
                at _b125
                    dec
                ta
                at _a125
                    dec
                ta
                push _a125
                inc
                not
                if
                    at _c125
                        set 1
                    ta
                fi 
            else
                at _loopao125
                    reset
                ta
            fi
        wend
        push _c125
        if
            at _b125
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b126
    sbm _a126 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c126
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao126
        while
            push _b126
            if  
                at _b126
                    dec
                ta
                at _a126
                    dec
                ta
                push _a126
                inc
                not
                if
                    at _c126
                        set 1
                    ta
                fi 
            else
                at _loopao126
                    reset
                ta
            fi
        wend
        push _c126
        if
            at _b126
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_2
                    add    
#(js) }
                    push    mulvvvXabsNameA2_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b127
    sbm _a127 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c127
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao127
        while
            push _b127
            if  
                at _b127
                    dec
                ta
                at _a127
                    dec
                ta
                push _a127
                inc
                not
                if
                    at _c127
                        set 1
                    ta
                fi 
            else
                at _loopao127
                    reset
                ta
            fi
        wend
        push _c127
        if
            at _b127
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_3
                    push    addvvXnameB2_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b128
    sbm _a128 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c128
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao128
        while
            push _b128
            if  
                at _b128
                    dec
                ta
                at _a128
                    dec
                ta
                push _a128
                inc
                not
                if
                    at _c128
                        set 1
                    ta
                fi 
            else
                at _loopao128
                    reset
                ta
            fi
        wend
        push _c128
        if
            at _b128
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b129
    sbm _a129 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c129
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao129
        while
            push _b129
            if  
                at _b129
                    dec
                ta
                at _a129
                    dec
                ta
                push _a129
                inc
                not
                if
                    at _c129
                        set 1
                    ta
                fi 
            else
                at _loopao129
                    reset
                ta
            fi
        wend
        push _c129
        if
            at _b129
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_3
                    add    
#(js) }
                    push    mulvvvXabsNameA2_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b130
    sbm _a130 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c130
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao130
        while
            push _b130
            if  
                at _b130
                    dec
                ta
                at _a130
                    dec
                ta
                push _a130
                inc
                not
                if
                    at _c130
                        set 1
                    ta
                fi 
            else
                at _loopao130
                    reset
                ta
            fi
        wend
        push _c130
        if
            at _b130
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_4
                    push    addvvXnameB2_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b131
    sbm _a131 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c131
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao131
        while
            push _b131
            if  
                at _b131
                    dec
                ta
                at _a131
                    dec
                ta
                push _a131
                inc
                not
                if
                    at _c131
                        set 1
                    ta
                fi 
            else
                at _loopao131
                    reset
                ta
            fi
        wend
        push _c131
        if
            at _b131
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b132
    sbm _a132 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c132
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao132
        while
            push _b132
            if  
                at _b132
                    dec
                ta
                at _a132
                    dec
                ta
                push _a132
                inc
                not
                if
                    at _c132
                        set 1
                    ta
                fi 
            else
                at _loopao132
                    reset
                ta
            fi
        wend
        push _c132
        if
            at _b132
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_4
                    add    
#(js) }
                    push    mulvvvXabsNameA2_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b133
    sbm _a133 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c133
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao133
        while
            push _b133
            if  
                at _b133
                    dec
                ta
                at _a133
                    dec
                ta
                push _a133
                inc
                not
                if
                    at _c133
                        set 1
                    ta
                fi 
            else
                at _loopao133
                    reset
                ta
            fi
        wend
        push _c133
        if
            at _b133
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_5
                    push    addvvXnameB2_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b134
    sbm _a134 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c134
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao134
        while
            push _b134
            if  
                at _b134
                    dec
                ta
                at _a134
                    dec
                ta
                push _a134
                inc
                not
                if
                    at _c134
                        set 1
                    ta
                fi 
            else
                at _loopao134
                    reset
                ta
            fi
        wend
        push _c134
        if
            at _b134
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX2_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b135
    sbm _a135 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c135
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao135
        while
            push _b135
            if  
                at _b135
                    dec
                ta
                at _a135
                    dec
                ta
                push _a135
                inc
                not
                if
                    at _c135
                        set 1
                    ta
                fi 
            else
                at _loopao135
                    reset
                ta
            fi
        wend
        push _c135
        if
            at _b135
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX2_5
                    add    
#(js) }
                    pop     resultX2_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB2_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB2_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB2_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB2_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB2_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB2_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop2
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA2
        push mulvvvXsB2
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX2_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX2_c
    push    resultX2_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX2_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack5_0    # 0 byte of _instack5
#(js) }
    var _instack5_1    # 1 byte of _instack5
#(js) }
    var _instack5_2    # 2 byte of _instack5
#(js) }
    var _instack5_3    # 3 byte of _instack5
#(js) }
    var _instack5_4    # 4 byte of _instack5
#(js) }
    var _instack5_5    # 5 byte of _instack5
#(js) }
    var _instack5_s    # Sign of _instack5
    var _instack5_c    # carry of _instack5 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack5_0    # 0 byte of _outstack5
#(js) }
    var _outstack5_1    # 1 byte of _outstack5
#(js) }
    var _outstack5_2    # 2 byte of _outstack5
#(js) }
    var _outstack5_s    # Sign of _outstack5
    var _outstack5_c    # carry of _outstack5 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack5_0
#(js) }
    pop     _instack5_1
#(js) }
    pop     _instack5_2
#(js) }
    pop     _instack5_3
#(js) }
    pop     _instack5_4
#(js) }
    pop     _instack5_5
#(js) }
    pop     _instack5_s
    pop     _instack5_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack5_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack5_s
    pop _outstack5_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack5_4
            pop _outstack5_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack5_3
            pop _outstack5_1
#(js) }
            push _instack5_2
            pop _outstack5_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack5_c
    push    _outstack5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack5_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA2_0
#(js) }
    pop     nameA2_1
#(js) }
    pop     nameA2_2
#(js) }
    pop     nameA2_s
    pop     nameA2_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)        mulFP(FP_I,FP_P)
#(begin macro)        pushFP(FP_I,FP_P,moveX)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack6_0 - 0
#(js) }
    sbm _instack6_1 - 1
#(js) }
    sbm _instack6_2 - 2
#(js) }
    sbm _instack6_s - 3
    sbm _instack6_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack6_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    128
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,moveX)
#(begin macro)        addX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv3++;
    
    push    __tmp24a___s
    push    __tmp24b___s
    or
    not
    push    __tmp24a___s
    push    __tmp24b___s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b136
    sbm _a136 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c136
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao136
        while
            push _a136
            if
                at _a136
                    dec
                ta 
                at _b136
                    inc
                ta
                push _b136
                not
                if 
                    at _c136
                        set 1
                    ta
                fi
            else 
                at _loopao136
                    reset
                ta
            fi
        wend
        push _c136
        if
            at _a136
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b137
    sbm _a137 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c137
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao137
        while
            push _a137
            if
                at _a137
                    dec
                ta 
                at _b137
                    inc
                ta
                push _b137
                not
                if 
                    at _c137
                        set 1
                    ta
                fi
            else 
                at _loopao137
                    reset
                ta
            fi
        wend
        push _c137
        if
            at _a137
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b138
    sbm _a138 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c138
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao138
        while
            push _a138
            if
                at _a138
                    dec
                ta 
                at _b138
                    inc
                ta
                push _b138
                not
                if 
                    at _c138
                        set 1
                    ta
                fi
            else 
                at _loopao138
                    reset
                ta
            fi
        wend
        push _c138
        if
            at _a138
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b139
    sbm _a139 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c139
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao139
        while
            push _a139
            if
                at _a139
                    dec
                ta 
                at _b139
                    inc
                ta
                push _b139
                not
                if 
                    at _c139
                        set 1
                    ta
                fi
            else 
                at _loopao139
                    reset
                ta
            fi
        wend
        push _c139
        if
            at _a139
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b140
    sbm _a140 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c140
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao140
        while
            push _a140
            if
                at _a140
                    dec
                ta 
                at _b140
                    inc
                ta
                push _b140
                not
                if 
                    at _c140
                        set 1
                    ta
                fi
            else 
                at _loopao140
                    reset
                ta
            fi
        wend
        push _c140
        if
            at _a140
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b141
    sbm _a141 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c141
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao141
        while
            push _a141
            if
                at _a141
                    dec
                ta 
                at _b141
                    inc
                ta
                push _b141
                not
                if 
                    at _c141
                        set 1
                    ta
                fi
            else 
                at _loopao141
                    reset
                ta
            fi
        wend
        push _c141
        if
            at _a141
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b142
    sbm _a142 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c142
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao142
        while
            push _a142
            if
                at _a142
                    dec
                ta 
                at _b142
                    inc
                ta
                push _b142
                not
                if 
                    at _c142
                        set 1
                    ta
                fi
            else 
                at _loopao142
                    reset
                ta
            fi
        wend
        push _c142
        if
            at _a142
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b143
    sbm _a143 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c143
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao143
        while
            push _a143
            if
                at _a143
                    dec
                ta 
                at _b143
                    inc
                ta
                push _b143
                not
                if 
                    at _c143
                        set 1
                    ta
                fi
            else 
                at _loopao143
                    reset
                ta
            fi
        wend
        push _c143
        if
            at _a143
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b144
    sbm _a144 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c144
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao144
        while
            push _a144
            if
                at _a144
                    dec
                ta 
                at _b144
                    inc
                ta
                push _b144
                not
                if 
                    at _c144
                        set 1
                    ta
                fi
            else 
                at _loopao144
                    reset
                ta
            fi
        wend
        push _c144
        if
            at _a144
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb4
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb4
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    __tmp24b___2
            sup
            if  
               at _asupb4
                set 1
               ta
            else 
                push    __tmp24a___2
                push    __tmp24b___2
                diff
                if
                at _asupb4
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    __tmp24b___1
            sup
            if  
               at _asupb4
                set 1
               ta
            else 
                push    __tmp24a___1
                push    __tmp24b___1
                diff
                if
                at _asupb4
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    __tmp24b___0
            sup
            if  
               at _asupb4
                set 1
               ta
            else 
                push    __tmp24a___0
                push    __tmp24b___0
                diff
                if
                at _asupb4
                    reset
                ta
                else           
#(js) }
            at _aequb4
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb4
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b145
    sbm _a145 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c145
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao145
        while
            push _b145
            if  
                at _b145
                    dec
                ta
                at _a145
                    dec
                ta
                push _a145
                inc
                not
                if
                    at _c145
                        set 1
                    ta
                fi 
            else
                at _loopao145
                    reset
                ta
            fi
        wend
        push _c145
        if
            at _b145
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b146
    sbm _a146 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c146
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao146
        while
            push _b146
            if  
                at _b146
                    dec
                ta
                at _a146
                    dec
                ta
                push _a146
                inc
                not
                if
                    at _c146
                        set 1
                    ta
                fi 
            else
                at _loopao146
                    reset
                ta
            fi
        wend
        push _c146
        if
            at _b146
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b147
    sbm _a147 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c147
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao147
        while
            push _b147
            if  
                at _b147
                    dec
                ta
                at _a147
                    dec
                ta
                push _a147
                inc
                not
                if
                    at _c147
                        set 1
                    ta
                fi 
            else
                at _loopao147
                    reset
                ta
            fi
        wend
        push _c147
        if
            at _b147
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b148
    sbm _a148 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c148
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao148
        while
            push _b148
            if  
                at _b148
                    dec
                ta
                at _a148
                    dec
                ta
                push _a148
                inc
                not
                if
                    at _c148
                        set 1
                    ta
                fi 
            else
                at _loopao148
                    reset
                ta
            fi
        wend
        push _c148
        if
            at _b148
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b149
    sbm _a149 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c149
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao149
        while
            push _b149
            if  
                at _b149
                    dec
                ta
                at _a149
                    dec
                ta
                push _a149
                inc
                not
                if
                    at _c149
                        set 1
                    ta
                fi 
            else
                at _loopao149
                    reset
                ta
            fi
        wend
        push _c149
        if
            at _b149
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b150
    sbm _a150 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c150
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao150
        while
            push _b150
            if  
                at _b150
                    dec
                ta
                at _a150
                    dec
                ta
                push _a150
                inc
                not
                if
                    at _c150
                        set 1
                    ta
                fi 
            else
                at _loopao150
                    reset
                ta
            fi
        wend
        push _c150
        if
            at _b150
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b151
    sbm _a151 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c151
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao151
        while
            push _b151
            if  
                at _b151
                    dec
                ta
                at _a151
                    dec
                ta
                push _a151
                inc
                not
                if
                    at _c151
                        set 1
                    ta
                fi 
            else
                at _loopao151
                    reset
                ta
            fi
        wend
        push _c151
        if
            at _b151
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b152
    sbm _a152 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c152
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao152
        while
            push _b152
            if  
                at _b152
                    dec
                ta
                at _a152
                    dec
                ta
                push _a152
                inc
                not
                if
                    at _c152
                        set 1
                    ta
                fi 
            else
                at _loopao152
                    reset
                ta
            fi
        wend
        push _c152
        if
            at _b152
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b153
    sbm _a153 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c153
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao153
        while
            push _b153
            if  
                at _b153
                    dec
                ta
                at _a153
                    dec
                ta
                push _a153
                inc
                not
                if
                    at _c153
                        set 1
                    ta
                fi 
            else
                at _loopao153
                    reset
                ta
            fi
        wend
        push _c153
        if
            at _b153
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb4
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    __tmp24b___s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b154
    sbm _a154 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c154
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao154
        while
            push _b154
            if  
                at _b154
                    dec
                ta
                at _a154
                    dec
                ta
                push _a154
                inc
                not
                if
                    at _c154
                        set 1
                    ta
                fi 
            else
                at _loopao154
                    reset
                ta
            fi
        wend
        push _c154
        if
            at _b154
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b155
    sbm _a155 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c155
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao155
        while
            push _b155
            if  
                at _b155
                    dec
                ta
                at _a155
                    dec
                ta
                push _a155
                inc
                not
                if
                    at _c155
                        set 1
                    ta
                fi 
            else
                at _loopao155
                    reset
                ta
            fi
        wend
        push _c155
        if
            at _b155
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b156
    sbm _a156 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c156
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao156
        while
            push _b156
            if  
                at _b156
                    dec
                ta
                at _a156
                    dec
                ta
                push _a156
                inc
                not
                if
                    at _c156
                        set 1
                    ta
                fi 
            else
                at _loopao156
                    reset
                ta
            fi
        wend
        push _c156
        if
            at _b156
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b157
    sbm _a157 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c157
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao157
        while
            push _b157
            if  
                at _b157
                    dec
                ta
                at _a157
                    dec
                ta
                push _a157
                inc
                not
                if
                    at _c157
                        set 1
                    ta
                fi 
            else
                at _loopao157
                    reset
                ta
            fi
        wend
        push _c157
        if
            at _b157
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b158
    sbm _a158 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c158
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao158
        while
            push _b158
            if  
                at _b158
                    dec
                ta
                at _a158
                    dec
                ta
                push _a158
                inc
                not
                if
                    at _c158
                        set 1
                    ta
                fi 
            else
                at _loopao158
                    reset
                ta
            fi
        wend
        push _c158
        if
            at _b158
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b159
    sbm _a159 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c159
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao159
        while
            push _b159
            if  
                at _b159
                    dec
                ta
                at _a159
                    dec
                ta
                push _a159
                inc
                not
                if
                    at _c159
                        set 1
                    ta
                fi 
            else
                at _loopao159
                    reset
                ta
            fi
        wend
        push _c159
        if
            at _b159
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b160
    sbm _a160 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c160
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao160
        while
            push _b160
            if  
                at _b160
                    dec
                ta
                at _a160
                    dec
                ta
                push _a160
                inc
                not
                if
                    at _c160
                        set 1
                    ta
                fi 
            else
                at _loopao160
                    reset
                ta
            fi
        wend
        push _c160
        if
            at _b160
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b161
    sbm _a161 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c161
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao161
        while
            push _b161
            if  
                at _b161
                    dec
                ta
                at _a161
                    dec
                ta
                push _a161
                inc
                not
                if
                    at _c161
                        set 1
                    ta
                fi 
            else
                at _loopao161
                    reset
                ta
            fi
        wend
        push _c161
        if
            at _b161
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b162
    sbm _a162 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c162
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao162
        while
            push _b162
            if  
                at _b162
                    dec
                ta
                at _a162
                    dec
                ta
                push _a162
                inc
                not
                if
                    at _c162
                        set 1
                    ta
                fi 
            else
                at _loopao162
                    reset
                ta
            fi
        wend
        push _c162
        if
            at _b162
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)        addX(FP)
#(begin macro)        popvX(FP,"pr")
#(js) for (var xx=0; xx < X; xx++) {
    pop     pr_0
#(js) }
    pop     pr_1
#(js) }
    pop     pr_2
#(js) }
    pop     pr_s
    pop     pr_c
#(end macro)        popvX(FP,"pr")
        # pi = (y - halfH) * oneOnHalfZoomH + moveY
#(begin macro)        pushvX(FP,"y")
    push    y_c
    push    y_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_0
#(js) }
#(end macro)        pushvX(FP,"y")
#(begin macro)        pushFP(FP_I,FP_P,halfH)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack7_0 - 0
#(js) }
    sbm _instack7_1 - 1
#(js) }
    sbm _instack7_2 - 2
#(js) }
    sbm _instack7_s - 3
    sbm _instack7_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack7_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    20
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,halfH)
#(begin macro)        subX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv4++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm negNameB2_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm negNameB2_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB2_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB2_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB2_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)        pushvX(X,nameB)
    push    __tmp24b___c
    push    __tmp24b___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"negNameB"+_sv4)
#(js) for (var xx=0; xx < X; xx++) {
    pop     negNameB2_0
#(js) }
    pop     negNameB2_1
#(js) }
    pop     negNameB2_2
#(js) }
    pop     negNameB2_s
    pop     negNameB2_c
#(end macro)        popvX(X,"negNameB"+_sv4)
#(begin macro)        negvX(X,"negNameB"+_sv4)
    push    negNameB2_s
    dec
    bool
    dup
    if    # if name is now negative
#(js) for (var xx = 0; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB2_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB2_1
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB2_2
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at negNameB2_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
    pop     negNameB2_s
#(end macro)        negvX(X,"negNameB"+_sv4)
#(begin macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(js) _sv3++;
    
    push    __tmp24a___s
    push    negNameB2_s
    or
    not
    push    __tmp24a___s
    push    negNameB2_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b163
    sbm _a163 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c163
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao163
        while
            push _a163
            if
                at _a163
                    dec
                ta 
                at _b163
                    inc
                ta
                push _b163
                not
                if 
                    at _c163
                        set 1
                    ta
                fi
            else 
                at _loopao163
                    reset
                ta
            fi
        wend
        push _c163
        if
            at _a163
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    negNameB2_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b164
    sbm _a164 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c164
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao164
        while
            push _a164
            if
                at _a164
                    dec
                ta 
                at _b164
                    inc
                ta
                push _b164
                not
                if 
                    at _c164
                        set 1
                    ta
                fi
            else 
                at _loopao164
                    reset
                ta
            fi
        wend
        push _c164
        if
            at _a164
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b165
    sbm _a165 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c165
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao165
        while
            push _a165
            if
                at _a165
                    dec
                ta 
                at _b165
                    inc
                ta
                push _b165
                not
                if 
                    at _c165
                        set 1
                    ta
                fi
            else 
                at _loopao165
                    reset
                ta
            fi
        wend
        push _c165
        if
            at _a165
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b166
    sbm _a166 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c166
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao166
        while
            push _a166
            if
                at _a166
                    dec
                ta 
                at _b166
                    inc
                ta
                push _b166
                not
                if 
                    at _c166
                        set 1
                    ta
                fi
            else 
                at _loopao166
                    reset
                ta
            fi
        wend
        push _c166
        if
            at _a166
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    negNameB2_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b167
    sbm _a167 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c167
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao167
        while
            push _a167
            if
                at _a167
                    dec
                ta 
                at _b167
                    inc
                ta
                push _b167
                not
                if 
                    at _c167
                        set 1
                    ta
                fi
            else 
                at _loopao167
                    reset
                ta
            fi
        wend
        push _c167
        if
            at _a167
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b168
    sbm _a168 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c168
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao168
        while
            push _a168
            if
                at _a168
                    dec
                ta 
                at _b168
                    inc
                ta
                push _b168
                not
                if 
                    at _c168
                        set 1
                    ta
                fi
            else 
                at _loopao168
                    reset
                ta
            fi
        wend
        push _c168
        if
            at _a168
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b169
    sbm _a169 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c169
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao169
        while
            push _a169
            if
                at _a169
                    dec
                ta 
                at _b169
                    inc
                ta
                push _b169
                not
                if 
                    at _c169
                        set 1
                    ta
                fi
            else 
                at _loopao169
                    reset
                ta
            fi
        wend
        push _c169
        if
            at _a169
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    negNameB2_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b170
    sbm _a170 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c170
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao170
        while
            push _a170
            if
                at _a170
                    dec
                ta 
                at _b170
                    inc
                ta
                push _b170
                not
                if 
                    at _c170
                        set 1
                    ta
                fi
            else 
                at _loopao170
                    reset
                ta
            fi
        wend
        push _c170
        if
            at _a170
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b171
    sbm _a171 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c171
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao171
        while
            push _a171
            if
                at _a171
                    dec
                ta 
                at _b171
                    inc
                ta
                push _b171
                not
                if 
                    at _c171
                        set 1
                    ta
                fi
            else 
                at _loopao171
                    reset
                ta
            fi
        wend
        push _c171
        if
            at _a171
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb5
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb5
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    negNameB2_2
            sup
            if  
               at _asupb5
                set 1
               ta
            else 
                push    __tmp24a___2
                push    negNameB2_2
                diff
                if
                at _asupb5
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    negNameB2_1
            sup
            if  
               at _asupb5
                set 1
               ta
            else 
                push    __tmp24a___1
                push    negNameB2_1
                diff
                if
                at _asupb5
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    negNameB2_0
            sup
            if  
               at _asupb5
                set 1
               ta
            else 
                push    __tmp24a___0
                push    negNameB2_0
                diff
                if
                at _asupb5
                    reset
                ta
                else           
#(js) }
            at _aequb5
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb5
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b172
    sbm _a172 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c172
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao172
        while
            push _b172
            if  
                at _b172
                    dec
                ta
                at _a172
                    dec
                ta
                push _a172
                inc
                not
                if
                    at _c172
                        set 1
                    ta
                fi 
            else
                at _loopao172
                    reset
                ta
            fi
        wend
        push _c172
        if
            at _b172
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    negNameB2_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b173
    sbm _a173 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c173
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao173
        while
            push _b173
            if  
                at _b173
                    dec
                ta
                at _a173
                    dec
                ta
                push _a173
                inc
                not
                if
                    at _c173
                        set 1
                    ta
                fi 
            else
                at _loopao173
                    reset
                ta
            fi
        wend
        push _c173
        if
            at _b173
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b174
    sbm _a174 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c174
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao174
        while
            push _b174
            if  
                at _b174
                    dec
                ta
                at _a174
                    dec
                ta
                push _a174
                inc
                not
                if
                    at _c174
                        set 1
                    ta
                fi 
            else
                at _loopao174
                    reset
                ta
            fi
        wend
        push _c174
        if
            at _b174
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b175
    sbm _a175 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c175
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao175
        while
            push _b175
            if  
                at _b175
                    dec
                ta
                at _a175
                    dec
                ta
                push _a175
                inc
                not
                if
                    at _c175
                        set 1
                    ta
                fi 
            else
                at _loopao175
                    reset
                ta
            fi
        wend
        push _c175
        if
            at _b175
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    negNameB2_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b176
    sbm _a176 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c176
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao176
        while
            push _b176
            if  
                at _b176
                    dec
                ta
                at _a176
                    dec
                ta
                push _a176
                inc
                not
                if
                    at _c176
                        set 1
                    ta
                fi 
            else
                at _loopao176
                    reset
                ta
            fi
        wend
        push _c176
        if
            at _b176
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b177
    sbm _a177 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c177
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao177
        while
            push _b177
            if  
                at _b177
                    dec
                ta
                at _a177
                    dec
                ta
                push _a177
                inc
                not
                if
                    at _c177
                        set 1
                    ta
                fi 
            else
                at _loopao177
                    reset
                ta
            fi
        wend
        push _c177
        if
            at _b177
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b178
    sbm _a178 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c178
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao178
        while
            push _b178
            if  
                at _b178
                    dec
                ta
                at _a178
                    dec
                ta
                push _a178
                inc
                not
                if
                    at _c178
                        set 1
                    ta
                fi 
            else
                at _loopao178
                    reset
                ta
            fi
        wend
        push _c178
        if
            at _b178
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    negNameB2_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b179
    sbm _a179 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c179
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao179
        while
            push _b179
            if  
                at _b179
                    dec
                ta
                at _a179
                    dec
                ta
                push _a179
                inc
                not
                if
                    at _c179
                        set 1
                    ta
                fi 
            else
                at _loopao179
                    reset
                ta
            fi
        wend
        push _c179
        if
            at _b179
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b180
    sbm _a180 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c180
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao180
        while
            push _b180
            if  
                at _b180
                    dec
                ta
                at _a180
                    dec
                ta
                push _a180
                inc
                not
                if
                    at _c180
                        set 1
                    ta
                fi 
            else
                at _loopao180
                    reset
                ta
            fi
        wend
        push _c180
        if
            at _b180
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb5
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    negNameB2_s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    negNameB2_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b181
    sbm _a181 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c181
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao181
        while
            push _b181
            if  
                at _b181
                    dec
                ta
                at _a181
                    dec
                ta
                push _a181
                inc
                not
                if
                    at _c181
                        set 1
                    ta
                fi 
            else
                at _loopao181
                    reset
                ta
            fi
        wend
        push _c181
        if
            at _b181
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b182
    sbm _a182 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c182
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao182
        while
            push _b182
            if  
                at _b182
                    dec
                ta
                at _a182
                    dec
                ta
                push _a182
                inc
                not
                if
                    at _c182
                        set 1
                    ta
                fi 
            else
                at _loopao182
                    reset
                ta
            fi
        wend
        push _c182
        if
            at _b182
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b183
    sbm _a183 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c183
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao183
        while
            push _b183
            if  
                at _b183
                    dec
                ta
                at _a183
                    dec
                ta
                push _a183
                inc
                not
                if
                    at _c183
                        set 1
                    ta
                fi 
            else
                at _loopao183
                    reset
                ta
            fi
        wend
        push _c183
        if
            at _b183
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    negNameB2_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b184
    sbm _a184 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c184
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao184
        while
            push _b184
            if  
                at _b184
                    dec
                ta
                at _a184
                    dec
                ta
                push _a184
                inc
                not
                if
                    at _c184
                        set 1
                    ta
                fi 
            else
                at _loopao184
                    reset
                ta
            fi
        wend
        push _c184
        if
            at _b184
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b185
    sbm _a185 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c185
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao185
        while
            push _b185
            if  
                at _b185
                    dec
                ta
                at _a185
                    dec
                ta
                push _a185
                inc
                not
                if
                    at _c185
                        set 1
                    ta
                fi 
            else
                at _loopao185
                    reset
                ta
            fi
        wend
        push _c185
        if
            at _b185
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b186
    sbm _a186 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c186
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao186
        while
            push _b186
            if  
                at _b186
                    dec
                ta
                at _a186
                    dec
                ta
                push _a186
                inc
                not
                if
                    at _c186
                        set 1
                    ta
                fi 
            else
                at _loopao186
                    reset
                ta
            fi
        wend
        push _c186
        if
            at _b186
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    negNameB2_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b187
    sbm _a187 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c187
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao187
        while
            push _b187
            if  
                at _b187
                    dec
                ta
                at _a187
                    dec
                ta
                push _a187
                inc
                not
                if
                    at _c187
                        set 1
                    ta
                fi 
            else
                at _loopao187
                    reset
                ta
            fi
        wend
        push _c187
        if
            at _b187
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b188
    sbm _a188 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c188
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao188
        while
            push _b188
            if  
                at _b188
                    dec
                ta
                at _a188
                    dec
                ta
                push _a188
                inc
                not
                if
                    at _c188
                        set 1
                    ta
                fi 
            else
                at _loopao188
                    reset
                ta
            fi
        wend
        push _c188
        if
            at _b188
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b189
    sbm _a189 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c189
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao189
        while
            push _b189
            if  
                at _b189
                    dec
                ta
                at _a189
                    dec
                ta
                push _a189
                inc
                not
                if
                    at _c189
                        set 1
                    ta
                fi 
            else
                at _loopao189
                    reset
                ta
            fi
        wend
        push _c189
        if
            at _b189
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)        subX(FP)
#(begin macro)        pushFP(FP_I,FP_P,oneOnHalfZoomW)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack8_0 - 0
#(js) }
    sbm _instack8_1 - 1
#(js) }
    sbm _instack8_2 - 2
#(js) }
    sbm _instack8_s - 3
    sbm _instack8_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack8_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    160
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,oneOnHalfZoomW)
#(begin macro)        mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB3_0 - 0
#(js) }
    sbm nameB3_1 - 1
#(js) }
    sbm nameB3_2 - 2
#(js) }
    sbm nameB3_s - 3
    sbm nameB3_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA3_0 - 5
#(js) }
    sbm nameA3_1 - 6
#(js) }
    sbm nameA3_2 - 7
#(js) }
    sbm nameA3_s - 8
    sbm nameA3_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA3_c
    push    nameA3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA3_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput5_0 - 0
#(js) }
    sbm _castXInput5_1 - 1
#(js) }
    sbm _castXInput5_2 - 2
#(js) }
    sbm _castXInput5_s - 3
    sbm _castXInput5_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput5_0    # 0 byte of _castXoutput5
#(js) }
    var _castXoutput5_1    # 1 byte of _castXoutput5
#(js) }
    var _castXoutput5_2    # 2 byte of _castXoutput5
#(js) }
    var _castXoutput5_3    # 3 byte of _castXoutput5
#(js) }
    var _castXoutput5_4    # 4 byte of _castXoutput5
#(js) }
    var _castXoutput5_5    # 5 byte of _castXoutput5
#(js) }
    var _castXoutput5_s    # Sign of _castXoutput5
    var _castXoutput5_c    # carry of _castXoutput5 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput5_c
    push    _castXInput5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput5_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori5_0
#(js) }
    pop     ori5_1
#(js) }
    pop     ori5_2
#(js) }
    pop     ori5_s
    pop     ori5_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori5_s   
        pop     dest5_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori5_0
                pop     dest5_0
#(js) }
                push    ori5_1
                pop     dest5_1
#(js) }
                push    ori5_2
                pop     dest5_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest5_3
#(js) } 
                push    0
                pop     dest5_4
#(js) } 
                push    0
                pop     dest5_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest5_c
    push    dest5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest5_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput5_0
#(js) }
    pop     _castXoutput5_1
#(js) }
    pop     _castXoutput5_2
#(js) }
    pop     _castXoutput5_3
#(js) }
    pop     _castXoutput5_4
#(js) }
    pop     _castXoutput5_5
#(js) }
    pop     _castXoutput5_s
    pop     _castXoutput5_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput5_c
    push    _castXoutput5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput5_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX3_0
#(js) }
    pop     nameAX3_1
#(js) }
    pop     nameAX3_2
#(js) }
    pop     nameAX3_3
#(js) }
    pop     nameAX3_4
#(js) }
    pop     nameAX3_5
#(js) }
    pop     nameAX3_s
    pop     nameAX3_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB3_c
    push    nameB3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB3_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput6_0 - 0
#(js) }
    sbm _castXInput6_1 - 1
#(js) }
    sbm _castXInput6_2 - 2
#(js) }
    sbm _castXInput6_s - 3
    sbm _castXInput6_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput6_0    # 0 byte of _castXoutput6
#(js) }
    var _castXoutput6_1    # 1 byte of _castXoutput6
#(js) }
    var _castXoutput6_2    # 2 byte of _castXoutput6
#(js) }
    var _castXoutput6_3    # 3 byte of _castXoutput6
#(js) }
    var _castXoutput6_4    # 4 byte of _castXoutput6
#(js) }
    var _castXoutput6_5    # 5 byte of _castXoutput6
#(js) }
    var _castXoutput6_s    # Sign of _castXoutput6
    var _castXoutput6_c    # carry of _castXoutput6 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput6_c
    push    _castXInput6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput6_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori6_0
#(js) }
    pop     ori6_1
#(js) }
    pop     ori6_2
#(js) }
    pop     ori6_s
    pop     ori6_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori6_s   
        pop     dest6_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori6_0
                pop     dest6_0
#(js) }
                push    ori6_1
                pop     dest6_1
#(js) }
                push    ori6_2
                pop     dest6_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest6_3
#(js) } 
                push    0
                pop     dest6_4
#(js) } 
                push    0
                pop     dest6_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest6_c
    push    dest6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest6_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput6_0
#(js) }
    pop     _castXoutput6_1
#(js) }
    pop     _castXoutput6_2
#(js) }
    pop     _castXoutput6_3
#(js) }
    pop     _castXoutput6_4
#(js) }
    pop     _castXoutput6_5
#(js) }
    pop     _castXoutput6_s
    pop     _castXoutput6_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput6_c
    push    _castXoutput6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput6_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX3_0
#(js) }
    pop     nameBX3_1
#(js) }
    pop     nameBX3_2
#(js) }
    pop     nameBX3_3
#(js) }
    pop     nameBX3_4
#(js) }
    pop     nameBX3_5
#(js) }
    pop     nameBX3_s
    pop     nameBX3_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX3_c
    push    nameAX3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX3_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA3_0
#(js) }
    pop     mulvvvXabsNameA3_1
#(js) }
    pop     mulvvvXabsNameA3_2
#(js) }
    pop     mulvvvXabsNameA3_3
#(js) }
    pop     mulvvvXabsNameA3_4
#(js) }
    pop     mulvvvXabsNameA3_5
#(js) }
    pop     mulvvvXabsNameA3_s
    pop     mulvvvXabsNameA3_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA3
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA3_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA3
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA3_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX3_c
    push    nameBX3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX3_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB3_0
#(js) }
    pop     mulvvvXabsNameB3_1
#(js) }
    pop     mulvvvXabsNameB3_2
#(js) }
    pop     mulvvvXabsNameB3_3
#(js) }
    pop     mulvvvXabsNameB3_4
#(js) }
    pop     mulvvvXabsNameB3_5
#(js) }
    pop     mulvvvXabsNameB3_s
    pop     mulvvvXabsNameB3_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB3
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB3_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB3
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB3_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX3_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop3
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB3_0
    bool
#(js) }
    push mulvvvXabsNameB3_1
    bool
#(js) }
    push mulvvvXabsNameB3_2
    bool
#(js) }
    push mulvvvXabsNameB3_3
    bool
#(js) }
    push mulvvvXabsNameB3_4
    bool
#(js) }
    push mulvvvXabsNameB3_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX3_c
    push    resultX3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB3_0
#(js) }
    pop     addvvXnameB3_1
#(js) }
    pop     addvvXnameB3_2
#(js) }
    pop     addvvXnameB3_3
#(js) }
    pop     addvvXnameB3_4
#(js) }
    pop     addvvXnameB3_5
#(js) }
    pop     addvvXnameB3_s
    pop     addvvXnameB3_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB3_s
    push    mulvvvXabsNameA3_s
    or
    not
    push    addvvXnameB3_s
    push    mulvvvXabsNameA3_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB3_s
        pop     resultX3_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB3_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b190
    sbm _a190 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c190
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao190
        while
            push _a190
            if
                at _a190
                    dec
                ta 
                at _b190
                    inc
                ta
                push _b190
                not
                if 
                    at _c190
                        set 1
                    ta
                fi
            else 
                at _loopao190
                    reset
                ta
            fi
        wend
        push _c190
        if
            at _a190
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_0
        push    mulvvvXabsNameA3_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b191
    sbm _a191 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c191
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao191
        while
            push _a191
            if
                at _a191
                    dec
                ta 
                at _b191
                    inc
                ta
                push _b191
                not
                if 
                    at _c191
                        set 1
                    ta
                fi
            else 
                at _loopao191
                    reset
                ta
            fi
        wend
        push _c191
        if
            at _a191
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b192
    sbm _a192 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c192
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao192
        while
            push _a192
            if
                at _a192
                    dec
                ta 
                at _b192
                    inc
                ta
                push _b192
                not
                if 
                    at _c192
                        set 1
                    ta
                fi
            else 
                at _loopao192
                    reset
                ta
            fi
        wend
        push _c192
        if
            at _a192
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_0
        add    
#(js) }
        push    addvvXnameB3_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b193
    sbm _a193 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c193
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao193
        while
            push _a193
            if
                at _a193
                    dec
                ta 
                at _b193
                    inc
                ta
                push _b193
                not
                if 
                    at _c193
                        set 1
                    ta
                fi
            else 
                at _loopao193
                    reset
                ta
            fi
        wend
        push _c193
        if
            at _a193
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_1
        push    mulvvvXabsNameA3_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b194
    sbm _a194 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c194
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao194
        while
            push _a194
            if
                at _a194
                    dec
                ta 
                at _b194
                    inc
                ta
                push _b194
                not
                if 
                    at _c194
                        set 1
                    ta
                fi
            else 
                at _loopao194
                    reset
                ta
            fi
        wend
        push _c194
        if
            at _a194
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b195
    sbm _a195 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c195
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao195
        while
            push _a195
            if
                at _a195
                    dec
                ta 
                at _b195
                    inc
                ta
                push _b195
                not
                if 
                    at _c195
                        set 1
                    ta
                fi
            else 
                at _loopao195
                    reset
                ta
            fi
        wend
        push _c195
        if
            at _a195
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_1
        add    
#(js) }
        push    addvvXnameB3_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b196
    sbm _a196 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c196
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao196
        while
            push _a196
            if
                at _a196
                    dec
                ta 
                at _b196
                    inc
                ta
                push _b196
                not
                if 
                    at _c196
                        set 1
                    ta
                fi
            else 
                at _loopao196
                    reset
                ta
            fi
        wend
        push _c196
        if
            at _a196
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_2
        push    mulvvvXabsNameA3_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b197
    sbm _a197 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c197
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao197
        while
            push _a197
            if
                at _a197
                    dec
                ta 
                at _b197
                    inc
                ta
                push _b197
                not
                if 
                    at _c197
                        set 1
                    ta
                fi
            else 
                at _loopao197
                    reset
                ta
            fi
        wend
        push _c197
        if
            at _a197
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b198
    sbm _a198 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c198
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao198
        while
            push _a198
            if
                at _a198
                    dec
                ta 
                at _b198
                    inc
                ta
                push _b198
                not
                if 
                    at _c198
                        set 1
                    ta
                fi
            else 
                at _loopao198
                    reset
                ta
            fi
        wend
        push _c198
        if
            at _a198
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_2
        add    
#(js) }
        push    addvvXnameB3_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b199
    sbm _a199 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c199
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao199
        while
            push _a199
            if
                at _a199
                    dec
                ta 
                at _b199
                    inc
                ta
                push _b199
                not
                if 
                    at _c199
                        set 1
                    ta
                fi
            else 
                at _loopao199
                    reset
                ta
            fi
        wend
        push _c199
        if
            at _a199
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_3
        push    mulvvvXabsNameA3_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b200
    sbm _a200 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c200
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao200
        while
            push _a200
            if
                at _a200
                    dec
                ta 
                at _b200
                    inc
                ta
                push _b200
                not
                if 
                    at _c200
                        set 1
                    ta
                fi
            else 
                at _loopao200
                    reset
                ta
            fi
        wend
        push _c200
        if
            at _a200
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b201
    sbm _a201 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c201
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao201
        while
            push _a201
            if
                at _a201
                    dec
                ta 
                at _b201
                    inc
                ta
                push _b201
                not
                if 
                    at _c201
                        set 1
                    ta
                fi
            else 
                at _loopao201
                    reset
                ta
            fi
        wend
        push _c201
        if
            at _a201
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_3
        add    
#(js) }
        push    addvvXnameB3_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b202
    sbm _a202 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c202
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao202
        while
            push _a202
            if
                at _a202
                    dec
                ta 
                at _b202
                    inc
                ta
                push _b202
                not
                if 
                    at _c202
                        set 1
                    ta
                fi
            else 
                at _loopao202
                    reset
                ta
            fi
        wend
        push _c202
        if
            at _a202
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_4
        push    mulvvvXabsNameA3_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b203
    sbm _a203 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c203
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao203
        while
            push _a203
            if
                at _a203
                    dec
                ta 
                at _b203
                    inc
                ta
                push _b203
                not
                if 
                    at _c203
                        set 1
                    ta
                fi
            else 
                at _loopao203
                    reset
                ta
            fi
        wend
        push _c203
        if
            at _a203
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b204
    sbm _a204 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c204
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao204
        while
            push _a204
            if
                at _a204
                    dec
                ta 
                at _b204
                    inc
                ta
                push _b204
                not
                if 
                    at _c204
                        set 1
                    ta
                fi
            else 
                at _loopao204
                    reset
                ta
            fi
        wend
        push _c204
        if
            at _a204
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_4
        add    
#(js) }
        push    addvvXnameB3_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b205
    sbm _a205 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c205
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao205
        while
            push _a205
            if
                at _a205
                    dec
                ta 
                at _b205
                    inc
                ta
                push _b205
                not
                if 
                    at _c205
                        set 1
                    ta
                fi
            else 
                at _loopao205
                    reset
                ta
            fi
        wend
        push _c205
        if
            at _a205
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_5
        push    mulvvvXabsNameA3_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b206
    sbm _a206 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c206
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao206
        while
            push _a206
            if
                at _a206
                    dec
                ta 
                at _b206
                    inc
                ta
                push _b206
                not
                if 
                    at _c206
                        set 1
                    ta
                fi
            else 
                at _loopao206
                    reset
                ta
            fi
        wend
        push _c206
        if
            at _a206
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX3_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b207
    sbm _a207 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c207
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao207
        while
            push _a207
            if
                at _a207
                    dec
                ta 
                at _b207
                    inc
                ta
                push _b207
                not
                if 
                    at _c207
                        set 1
                    ta
                fi
            else 
                at _loopao207
                    reset
                ta
            fi
        wend
        push _c207
        if
            at _a207
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX3_5
        add    
#(js) }
        pop     resultX3_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb6
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb6
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB3_5
            push    mulvvvXabsNameA3_5
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_5
                push    mulvvvXabsNameA3_5
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB3_4
            push    mulvvvXabsNameA3_4
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_4
                push    mulvvvXabsNameA3_4
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB3_3
            push    mulvvvXabsNameA3_3
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_3
                push    mulvvvXabsNameA3_3
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB3_2
            push    mulvvvXabsNameA3_2
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_2
                push    mulvvvXabsNameA3_2
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB3_1
            push    mulvvvXabsNameA3_1
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_1
                push    mulvvvXabsNameA3_1
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB3_0
            push    mulvvvXabsNameA3_0
            sup
            if  
               at _asupb6
                set 1
               ta
            else 
                push    addvvXnameB3_0
                push    mulvvvXabsNameA3_0
                diff
                if
                at _asupb6
                    reset
                ta
                else           
#(js) }
            at _aequb6
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb6
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB3_s
                pop     resultX3_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB3_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b208
    sbm _a208 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c208
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao208
        while
            push _b208
            if  
                at _b208
                    dec
                ta
                at _a208
                    dec
                ta
                push _a208
                inc
                not
                if
                    at _c208
                        set 1
                    ta
                fi 
            else
                at _loopao208
                    reset
                ta
            fi
        wend
        push _c208
        if
            at _b208
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_0
                push    mulvvvXabsNameA3_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b209
    sbm _a209 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c209
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao209
        while
            push _b209
            if  
                at _b209
                    dec
                ta
                at _a209
                    dec
                ta
                push _a209
                inc
                not
                if
                    at _c209
                        set 1
                    ta
                fi 
            else
                at _loopao209
                    reset
                ta
            fi
        wend
        push _c209
        if
            at _b209
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b210
    sbm _a210 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c210
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao210
        while
            push _b210
            if  
                at _b210
                    dec
                ta
                at _a210
                    dec
                ta
                push _a210
                inc
                not
                if
                    at _c210
                        set 1
                    ta
                fi 
            else
                at _loopao210
                    reset
                ta
            fi
        wend
        push _c210
        if
            at _b210
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_0 
                add   
#(js) }
                push    addvvXnameB3_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b211
    sbm _a211 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c211
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao211
        while
            push _b211
            if  
                at _b211
                    dec
                ta
                at _a211
                    dec
                ta
                push _a211
                inc
                not
                if
                    at _c211
                        set 1
                    ta
                fi 
            else
                at _loopao211
                    reset
                ta
            fi
        wend
        push _c211
        if
            at _b211
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_1
                push    mulvvvXabsNameA3_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b212
    sbm _a212 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c212
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao212
        while
            push _b212
            if  
                at _b212
                    dec
                ta
                at _a212
                    dec
                ta
                push _a212
                inc
                not
                if
                    at _c212
                        set 1
                    ta
                fi 
            else
                at _loopao212
                    reset
                ta
            fi
        wend
        push _c212
        if
            at _b212
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b213
    sbm _a213 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c213
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao213
        while
            push _b213
            if  
                at _b213
                    dec
                ta
                at _a213
                    dec
                ta
                push _a213
                inc
                not
                if
                    at _c213
                        set 1
                    ta
                fi 
            else
                at _loopao213
                    reset
                ta
            fi
        wend
        push _c213
        if
            at _b213
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_1 
                add   
#(js) }
                push    addvvXnameB3_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b214
    sbm _a214 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c214
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao214
        while
            push _b214
            if  
                at _b214
                    dec
                ta
                at _a214
                    dec
                ta
                push _a214
                inc
                not
                if
                    at _c214
                        set 1
                    ta
                fi 
            else
                at _loopao214
                    reset
                ta
            fi
        wend
        push _c214
        if
            at _b214
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_2
                push    mulvvvXabsNameA3_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b215
    sbm _a215 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c215
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao215
        while
            push _b215
            if  
                at _b215
                    dec
                ta
                at _a215
                    dec
                ta
                push _a215
                inc
                not
                if
                    at _c215
                        set 1
                    ta
                fi 
            else
                at _loopao215
                    reset
                ta
            fi
        wend
        push _c215
        if
            at _b215
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b216
    sbm _a216 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c216
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao216
        while
            push _b216
            if  
                at _b216
                    dec
                ta
                at _a216
                    dec
                ta
                push _a216
                inc
                not
                if
                    at _c216
                        set 1
                    ta
                fi 
            else
                at _loopao216
                    reset
                ta
            fi
        wend
        push _c216
        if
            at _b216
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_2 
                add   
#(js) }
                push    addvvXnameB3_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b217
    sbm _a217 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c217
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao217
        while
            push _b217
            if  
                at _b217
                    dec
                ta
                at _a217
                    dec
                ta
                push _a217
                inc
                not
                if
                    at _c217
                        set 1
                    ta
                fi 
            else
                at _loopao217
                    reset
                ta
            fi
        wend
        push _c217
        if
            at _b217
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_3
                push    mulvvvXabsNameA3_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b218
    sbm _a218 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c218
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao218
        while
            push _b218
            if  
                at _b218
                    dec
                ta
                at _a218
                    dec
                ta
                push _a218
                inc
                not
                if
                    at _c218
                        set 1
                    ta
                fi 
            else
                at _loopao218
                    reset
                ta
            fi
        wend
        push _c218
        if
            at _b218
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b219
    sbm _a219 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c219
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao219
        while
            push _b219
            if  
                at _b219
                    dec
                ta
                at _a219
                    dec
                ta
                push _a219
                inc
                not
                if
                    at _c219
                        set 1
                    ta
                fi 
            else
                at _loopao219
                    reset
                ta
            fi
        wend
        push _c219
        if
            at _b219
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_3 
                add   
#(js) }
                push    addvvXnameB3_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b220
    sbm _a220 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c220
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao220
        while
            push _b220
            if  
                at _b220
                    dec
                ta
                at _a220
                    dec
                ta
                push _a220
                inc
                not
                if
                    at _c220
                        set 1
                    ta
                fi 
            else
                at _loopao220
                    reset
                ta
            fi
        wend
        push _c220
        if
            at _b220
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_4
                push    mulvvvXabsNameA3_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b221
    sbm _a221 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c221
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao221
        while
            push _b221
            if  
                at _b221
                    dec
                ta
                at _a221
                    dec
                ta
                push _a221
                inc
                not
                if
                    at _c221
                        set 1
                    ta
                fi 
            else
                at _loopao221
                    reset
                ta
            fi
        wend
        push _c221
        if
            at _b221
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b222
    sbm _a222 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c222
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao222
        while
            push _b222
            if  
                at _b222
                    dec
                ta
                at _a222
                    dec
                ta
                push _a222
                inc
                not
                if
                    at _c222
                        set 1
                    ta
                fi 
            else
                at _loopao222
                    reset
                ta
            fi
        wend
        push _c222
        if
            at _b222
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_4 
                add   
#(js) }
                push    addvvXnameB3_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b223
    sbm _a223 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c223
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao223
        while
            push _b223
            if  
                at _b223
                    dec
                ta
                at _a223
                    dec
                ta
                push _a223
                inc
                not
                if
                    at _c223
                        set 1
                    ta
                fi 
            else
                at _loopao223
                    reset
                ta
            fi
        wend
        push _c223
        if
            at _b223
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_5
                push    mulvvvXabsNameA3_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b224
    sbm _a224 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c224
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao224
        while
            push _b224
            if  
                at _b224
                    dec
                ta
                at _a224
                    dec
                ta
                push _a224
                inc
                not
                if
                    at _c224
                        set 1
                    ta
                fi 
            else
                at _loopao224
                    reset
                ta
            fi
        wend
        push _c224
        if
            at _b224
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX3_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b225
    sbm _a225 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c225
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao225
        while
            push _b225
            if  
                at _b225
                    dec
                ta
                at _a225
                    dec
                ta
                push _a225
                inc
                not
                if
                    at _c225
                        set 1
                    ta
                fi 
            else
                at _loopao225
                    reset
                ta
            fi
        wend
        push _c225
        if
            at _b225
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX3_5 
                add   
#(js) }
                pop     resultX3_c
            
            else # absB >= absA : 
                push    _aequb6
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX3_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA3_s
                    pop     resultX3_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA3_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b226
    sbm _a226 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c226
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao226
        while
            push _b226
            if  
                at _b226
                    dec
                ta
                at _a226
                    dec
                ta
                push _a226
                inc
                not
                if
                    at _c226
                        set 1
                    ta
                fi 
            else
                at _loopao226
                    reset
                ta
            fi
        wend
        push _c226
        if
            at _b226
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_0
                    push    addvvXnameB3_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b227
    sbm _a227 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c227
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao227
        while
            push _b227
            if  
                at _b227
                    dec
                ta
                at _a227
                    dec
                ta
                push _a227
                inc
                not
                if
                    at _c227
                        set 1
                    ta
                fi 
            else
                at _loopao227
                    reset
                ta
            fi
        wend
        push _c227
        if
            at _b227
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b228
    sbm _a228 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c228
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao228
        while
            push _b228
            if  
                at _b228
                    dec
                ta
                at _a228
                    dec
                ta
                push _a228
                inc
                not
                if
                    at _c228
                        set 1
                    ta
                fi 
            else
                at _loopao228
                    reset
                ta
            fi
        wend
        push _c228
        if
            at _b228
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_0
                    add    
#(js) }
                    push    mulvvvXabsNameA3_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b229
    sbm _a229 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c229
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao229
        while
            push _b229
            if  
                at _b229
                    dec
                ta
                at _a229
                    dec
                ta
                push _a229
                inc
                not
                if
                    at _c229
                        set 1
                    ta
                fi 
            else
                at _loopao229
                    reset
                ta
            fi
        wend
        push _c229
        if
            at _b229
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_1
                    push    addvvXnameB3_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b230
    sbm _a230 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c230
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao230
        while
            push _b230
            if  
                at _b230
                    dec
                ta
                at _a230
                    dec
                ta
                push _a230
                inc
                not
                if
                    at _c230
                        set 1
                    ta
                fi 
            else
                at _loopao230
                    reset
                ta
            fi
        wend
        push _c230
        if
            at _b230
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b231
    sbm _a231 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c231
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao231
        while
            push _b231
            if  
                at _b231
                    dec
                ta
                at _a231
                    dec
                ta
                push _a231
                inc
                not
                if
                    at _c231
                        set 1
                    ta
                fi 
            else
                at _loopao231
                    reset
                ta
            fi
        wend
        push _c231
        if
            at _b231
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_1
                    add    
#(js) }
                    push    mulvvvXabsNameA3_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b232
    sbm _a232 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c232
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao232
        while
            push _b232
            if  
                at _b232
                    dec
                ta
                at _a232
                    dec
                ta
                push _a232
                inc
                not
                if
                    at _c232
                        set 1
                    ta
                fi 
            else
                at _loopao232
                    reset
                ta
            fi
        wend
        push _c232
        if
            at _b232
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_2
                    push    addvvXnameB3_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b233
    sbm _a233 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c233
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao233
        while
            push _b233
            if  
                at _b233
                    dec
                ta
                at _a233
                    dec
                ta
                push _a233
                inc
                not
                if
                    at _c233
                        set 1
                    ta
                fi 
            else
                at _loopao233
                    reset
                ta
            fi
        wend
        push _c233
        if
            at _b233
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b234
    sbm _a234 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c234
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao234
        while
            push _b234
            if  
                at _b234
                    dec
                ta
                at _a234
                    dec
                ta
                push _a234
                inc
                not
                if
                    at _c234
                        set 1
                    ta
                fi 
            else
                at _loopao234
                    reset
                ta
            fi
        wend
        push _c234
        if
            at _b234
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_2
                    add    
#(js) }
                    push    mulvvvXabsNameA3_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b235
    sbm _a235 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c235
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao235
        while
            push _b235
            if  
                at _b235
                    dec
                ta
                at _a235
                    dec
                ta
                push _a235
                inc
                not
                if
                    at _c235
                        set 1
                    ta
                fi 
            else
                at _loopao235
                    reset
                ta
            fi
        wend
        push _c235
        if
            at _b235
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_3
                    push    addvvXnameB3_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b236
    sbm _a236 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c236
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao236
        while
            push _b236
            if  
                at _b236
                    dec
                ta
                at _a236
                    dec
                ta
                push _a236
                inc
                not
                if
                    at _c236
                        set 1
                    ta
                fi 
            else
                at _loopao236
                    reset
                ta
            fi
        wend
        push _c236
        if
            at _b236
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b237
    sbm _a237 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c237
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao237
        while
            push _b237
            if  
                at _b237
                    dec
                ta
                at _a237
                    dec
                ta
                push _a237
                inc
                not
                if
                    at _c237
                        set 1
                    ta
                fi 
            else
                at _loopao237
                    reset
                ta
            fi
        wend
        push _c237
        if
            at _b237
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_3
                    add    
#(js) }
                    push    mulvvvXabsNameA3_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b238
    sbm _a238 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c238
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao238
        while
            push _b238
            if  
                at _b238
                    dec
                ta
                at _a238
                    dec
                ta
                push _a238
                inc
                not
                if
                    at _c238
                        set 1
                    ta
                fi 
            else
                at _loopao238
                    reset
                ta
            fi
        wend
        push _c238
        if
            at _b238
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_4
                    push    addvvXnameB3_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b239
    sbm _a239 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c239
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao239
        while
            push _b239
            if  
                at _b239
                    dec
                ta
                at _a239
                    dec
                ta
                push _a239
                inc
                not
                if
                    at _c239
                        set 1
                    ta
                fi 
            else
                at _loopao239
                    reset
                ta
            fi
        wend
        push _c239
        if
            at _b239
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b240
    sbm _a240 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c240
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao240
        while
            push _b240
            if  
                at _b240
                    dec
                ta
                at _a240
                    dec
                ta
                push _a240
                inc
                not
                if
                    at _c240
                        set 1
                    ta
                fi 
            else
                at _loopao240
                    reset
                ta
            fi
        wend
        push _c240
        if
            at _b240
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_4
                    add    
#(js) }
                    push    mulvvvXabsNameA3_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b241
    sbm _a241 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c241
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao241
        while
            push _b241
            if  
                at _b241
                    dec
                ta
                at _a241
                    dec
                ta
                push _a241
                inc
                not
                if
                    at _c241
                        set 1
                    ta
                fi 
            else
                at _loopao241
                    reset
                ta
            fi
        wend
        push _c241
        if
            at _b241
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_5
                    push    addvvXnameB3_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b242
    sbm _a242 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c242
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao242
        while
            push _b242
            if  
                at _b242
                    dec
                ta
                at _a242
                    dec
                ta
                push _a242
                inc
                not
                if
                    at _c242
                        set 1
                    ta
                fi 
            else
                at _loopao242
                    reset
                ta
            fi
        wend
        push _c242
        if
            at _b242
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX3_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b243
    sbm _a243 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c243
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao243
        while
            push _b243
            if  
                at _b243
                    dec
                ta
                at _a243
                    dec
                ta
                push _a243
                inc
                not
                if
                    at _c243
                        set 1
                    ta
                fi 
            else
                at _loopao243
                    reset
                ta
            fi
        wend
        push _c243
        if
            at _b243
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX3_5
                    add    
#(js) }
                    pop     resultX3_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB3_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB3_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB3_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB3_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB3_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB3_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop3
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA3
        push mulvvvXsB3
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX3_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX3_c
    push    resultX3_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX3_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack9_0    # 0 byte of _instack9
#(js) }
    var _instack9_1    # 1 byte of _instack9
#(js) }
    var _instack9_2    # 2 byte of _instack9
#(js) }
    var _instack9_3    # 3 byte of _instack9
#(js) }
    var _instack9_4    # 4 byte of _instack9
#(js) }
    var _instack9_5    # 5 byte of _instack9
#(js) }
    var _instack9_s    # Sign of _instack9
    var _instack9_c    # carry of _instack9 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack9_0    # 0 byte of _outstack9
#(js) }
    var _outstack9_1    # 1 byte of _outstack9
#(js) }
    var _outstack9_2    # 2 byte of _outstack9
#(js) }
    var _outstack9_s    # Sign of _outstack9
    var _outstack9_c    # carry of _outstack9 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack9_0
#(js) }
    pop     _instack9_1
#(js) }
    pop     _instack9_2
#(js) }
    pop     _instack9_3
#(js) }
    pop     _instack9_4
#(js) }
    pop     _instack9_5
#(js) }
    pop     _instack9_s
    pop     _instack9_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack9_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack9_s
    pop _outstack9_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack9_4
            pop _outstack9_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack9_3
            pop _outstack9_1
#(js) }
            push _instack9_2
            pop _outstack9_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack9_c
    push    _outstack9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack9_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA3_0
#(js) }
    pop     nameA3_1
#(js) }
    pop     nameA3_2
#(js) }
    pop     nameA3_s
    pop     nameA3_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)        mulFP(FP_I,FP_P)
#(begin macro)        pushFP(FP_I,FP_P,moveX)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack10_0 - 0
#(js) }
    sbm _instack10_1 - 1
#(js) }
    sbm _instack10_2 - 2
#(js) }
    sbm _instack10_s - 3
    sbm _instack10_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack10_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    128
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)        pushFP(FP_I,FP_P,moveX)
#(begin macro)        addX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv3++;
    
    push    __tmp24a___s
    push    __tmp24b___s
    or
    not
    push    __tmp24a___s
    push    __tmp24b___s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b244
    sbm _a244 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c244
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao244
        while
            push _a244
            if
                at _a244
                    dec
                ta 
                at _b244
                    inc
                ta
                push _b244
                not
                if 
                    at _c244
                        set 1
                    ta
                fi
            else 
                at _loopao244
                    reset
                ta
            fi
        wend
        push _c244
        if
            at _a244
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b245
    sbm _a245 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c245
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao245
        while
            push _a245
            if
                at _a245
                    dec
                ta 
                at _b245
                    inc
                ta
                push _b245
                not
                if 
                    at _c245
                        set 1
                    ta
                fi
            else 
                at _loopao245
                    reset
                ta
            fi
        wend
        push _c245
        if
            at _a245
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b246
    sbm _a246 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c246
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao246
        while
            push _a246
            if
                at _a246
                    dec
                ta 
                at _b246
                    inc
                ta
                push _b246
                not
                if 
                    at _c246
                        set 1
                    ta
                fi
            else 
                at _loopao246
                    reset
                ta
            fi
        wend
        push _c246
        if
            at _a246
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b247
    sbm _a247 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c247
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao247
        while
            push _a247
            if
                at _a247
                    dec
                ta 
                at _b247
                    inc
                ta
                push _b247
                not
                if 
                    at _c247
                        set 1
                    ta
                fi
            else 
                at _loopao247
                    reset
                ta
            fi
        wend
        push _c247
        if
            at _a247
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b248
    sbm _a248 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c248
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao248
        while
            push _a248
            if
                at _a248
                    dec
                ta 
                at _b248
                    inc
                ta
                push _b248
                not
                if 
                    at _c248
                        set 1
                    ta
                fi
            else 
                at _loopao248
                    reset
                ta
            fi
        wend
        push _c248
        if
            at _a248
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b249
    sbm _a249 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c249
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao249
        while
            push _a249
            if
                at _a249
                    dec
                ta 
                at _b249
                    inc
                ta
                push _b249
                not
                if 
                    at _c249
                        set 1
                    ta
                fi
            else 
                at _loopao249
                    reset
                ta
            fi
        wend
        push _c249
        if
            at _a249
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b250
    sbm _a250 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c250
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao250
        while
            push _a250
            if
                at _a250
                    dec
                ta 
                at _b250
                    inc
                ta
                push _b250
                not
                if 
                    at _c250
                        set 1
                    ta
                fi
            else 
                at _loopao250
                    reset
                ta
            fi
        wend
        push _c250
        if
            at _a250
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b251
    sbm _a251 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c251
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao251
        while
            push _a251
            if
                at _a251
                    dec
                ta 
                at _b251
                    inc
                ta
                push _b251
                not
                if 
                    at _c251
                        set 1
                    ta
                fi
            else 
                at _loopao251
                    reset
                ta
            fi
        wend
        push _c251
        if
            at _a251
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b252
    sbm _a252 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c252
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao252
        while
            push _a252
            if
                at _a252
                    dec
                ta 
                at _b252
                    inc
                ta
                push _b252
                not
                if 
                    at _c252
                        set 1
                    ta
                fi
            else 
                at _loopao252
                    reset
                ta
            fi
        wend
        push _c252
        if
            at _a252
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb7
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb7
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    __tmp24b___2
            sup
            if  
               at _asupb7
                set 1
               ta
            else 
                push    __tmp24a___2
                push    __tmp24b___2
                diff
                if
                at _asupb7
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    __tmp24b___1
            sup
            if  
               at _asupb7
                set 1
               ta
            else 
                push    __tmp24a___1
                push    __tmp24b___1
                diff
                if
                at _asupb7
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    __tmp24b___0
            sup
            if  
               at _asupb7
                set 1
               ta
            else 
                push    __tmp24a___0
                push    __tmp24b___0
                diff
                if
                at _asupb7
                    reset
                ta
                else           
#(js) }
            at _aequb7
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb7
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b253
    sbm _a253 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c253
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao253
        while
            push _b253
            if  
                at _b253
                    dec
                ta
                at _a253
                    dec
                ta
                push _a253
                inc
                not
                if
                    at _c253
                        set 1
                    ta
                fi 
            else
                at _loopao253
                    reset
                ta
            fi
        wend
        push _c253
        if
            at _b253
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b254
    sbm _a254 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c254
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao254
        while
            push _b254
            if  
                at _b254
                    dec
                ta
                at _a254
                    dec
                ta
                push _a254
                inc
                not
                if
                    at _c254
                        set 1
                    ta
                fi 
            else
                at _loopao254
                    reset
                ta
            fi
        wend
        push _c254
        if
            at _b254
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b255
    sbm _a255 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c255
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao255
        while
            push _b255
            if  
                at _b255
                    dec
                ta
                at _a255
                    dec
                ta
                push _a255
                inc
                not
                if
                    at _c255
                        set 1
                    ta
                fi 
            else
                at _loopao255
                    reset
                ta
            fi
        wend
        push _c255
        if
            at _b255
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b256
    sbm _a256 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c256
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao256
        while
            push _b256
            if  
                at _b256
                    dec
                ta
                at _a256
                    dec
                ta
                push _a256
                inc
                not
                if
                    at _c256
                        set 1
                    ta
                fi 
            else
                at _loopao256
                    reset
                ta
            fi
        wend
        push _c256
        if
            at _b256
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b257
    sbm _a257 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c257
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao257
        while
            push _b257
            if  
                at _b257
                    dec
                ta
                at _a257
                    dec
                ta
                push _a257
                inc
                not
                if
                    at _c257
                        set 1
                    ta
                fi 
            else
                at _loopao257
                    reset
                ta
            fi
        wend
        push _c257
        if
            at _b257
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b258
    sbm _a258 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c258
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao258
        while
            push _b258
            if  
                at _b258
                    dec
                ta
                at _a258
                    dec
                ta
                push _a258
                inc
                not
                if
                    at _c258
                        set 1
                    ta
                fi 
            else
                at _loopao258
                    reset
                ta
            fi
        wend
        push _c258
        if
            at _b258
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b259
    sbm _a259 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c259
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao259
        while
            push _b259
            if  
                at _b259
                    dec
                ta
                at _a259
                    dec
                ta
                push _a259
                inc
                not
                if
                    at _c259
                        set 1
                    ta
                fi 
            else
                at _loopao259
                    reset
                ta
            fi
        wend
        push _c259
        if
            at _b259
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b260
    sbm _a260 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c260
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao260
        while
            push _b260
            if  
                at _b260
                    dec
                ta
                at _a260
                    dec
                ta
                push _a260
                inc
                not
                if
                    at _c260
                        set 1
                    ta
                fi 
            else
                at _loopao260
                    reset
                ta
            fi
        wend
        push _c260
        if
            at _b260
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b261
    sbm _a261 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c261
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao261
        while
            push _b261
            if  
                at _b261
                    dec
                ta
                at _a261
                    dec
                ta
                push _a261
                inc
                not
                if
                    at _c261
                        set 1
                    ta
                fi 
            else
                at _loopao261
                    reset
                ta
            fi
        wend
        push _c261
        if
            at _b261
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb7
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    __tmp24b___s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b262
    sbm _a262 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c262
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao262
        while
            push _b262
            if  
                at _b262
                    dec
                ta
                at _a262
                    dec
                ta
                push _a262
                inc
                not
                if
                    at _c262
                        set 1
                    ta
                fi 
            else
                at _loopao262
                    reset
                ta
            fi
        wend
        push _c262
        if
            at _b262
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b263
    sbm _a263 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c263
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao263
        while
            push _b263
            if  
                at _b263
                    dec
                ta
                at _a263
                    dec
                ta
                push _a263
                inc
                not
                if
                    at _c263
                        set 1
                    ta
                fi 
            else
                at _loopao263
                    reset
                ta
            fi
        wend
        push _c263
        if
            at _b263
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b264
    sbm _a264 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c264
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao264
        while
            push _b264
            if  
                at _b264
                    dec
                ta
                at _a264
                    dec
                ta
                push _a264
                inc
                not
                if
                    at _c264
                        set 1
                    ta
                fi 
            else
                at _loopao264
                    reset
                ta
            fi
        wend
        push _c264
        if
            at _b264
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b265
    sbm _a265 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c265
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao265
        while
            push _b265
            if  
                at _b265
                    dec
                ta
                at _a265
                    dec
                ta
                push _a265
                inc
                not
                if
                    at _c265
                        set 1
                    ta
                fi 
            else
                at _loopao265
                    reset
                ta
            fi
        wend
        push _c265
        if
            at _b265
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b266
    sbm _a266 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c266
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao266
        while
            push _b266
            if  
                at _b266
                    dec
                ta
                at _a266
                    dec
                ta
                push _a266
                inc
                not
                if
                    at _c266
                        set 1
                    ta
                fi 
            else
                at _loopao266
                    reset
                ta
            fi
        wend
        push _c266
        if
            at _b266
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b267
    sbm _a267 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c267
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao267
        while
            push _b267
            if  
                at _b267
                    dec
                ta
                at _a267
                    dec
                ta
                push _a267
                inc
                not
                if
                    at _c267
                        set 1
                    ta
                fi 
            else
                at _loopao267
                    reset
                ta
            fi
        wend
        push _c267
        if
            at _b267
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b268
    sbm _a268 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c268
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao268
        while
            push _b268
            if  
                at _b268
                    dec
                ta
                at _a268
                    dec
                ta
                push _a268
                inc
                not
                if
                    at _c268
                        set 1
                    ta
                fi 
            else
                at _loopao268
                    reset
                ta
            fi
        wend
        push _c268
        if
            at _b268
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b269
    sbm _a269 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c269
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao269
        while
            push _b269
            if  
                at _b269
                    dec
                ta
                at _a269
                    dec
                ta
                push _a269
                inc
                not
                if
                    at _c269
                        set 1
                    ta
                fi 
            else
                at _loopao269
                    reset
                ta
            fi
        wend
        push _c269
        if
            at _b269
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b270
    sbm _a270 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c270
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao270
        while
            push _b270
            if  
                at _b270
                    dec
                ta
                at _a270
                    dec
                ta
                push _a270
                inc
                not
                if
                    at _c270
                        set 1
                    ta
                fi 
            else
                at _loopao270
                    reset
                ta
            fi
        wend
        push _c270
        if
            at _b270
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)        addX(FP)
#(begin macro)        popvX(FP,"pi")
#(js) for (var xx=0; xx < X; xx++) {
    pop     pi_0
#(js) }
    pop     pi_1
#(js) }
    pop     pi_2
#(js) }
    pop     pi_s
    pop     pi_c
#(end macro)        popvX(FP,"pi")
        # newRe = 0
#(begin macro)        setvX(FP,"newRe",0)
    at newRe_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(FP,"newRe",0)
        # newIm = 0
#(begin macro)        setvX(FP,"newIm",0)
    at newIm_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(FP,"newIm",0)
        # oldRe = 0
#(begin macro)        setvX(FP,"oldRe",0)
    at oldRe_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(FP,"oldRe",0)
        # oldIm = 0
#(begin macro)        setvX(FP,"oldIm",0)
    at oldIm_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(FP,"oldIm",0)
        # i = 0
#(begin macro)        at_reset("i")
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at i
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)        at_reset("i")
        # for (i =0 ; i < maxIte; i++) {
        push    1
        sbm     loop
        while
#(begin macro)            if_inf("i",maxIte)
    push i
    push 26
    inf
    if
#(end macro)            if_inf("i",maxIte)
            #    oldRe = newRe
#(begin macro)                pushvX(FP,"newRe")
    push    newRe_c
    push    newRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_0
#(js) }
#(end macro)                pushvX(FP,"newRe")
#(begin macro)                popvX(FP,"oldRe")
#(js) for (var xx=0; xx < X; xx++) {
    pop     oldRe_0
#(js) }
    pop     oldRe_1
#(js) }
    pop     oldRe_2
#(js) }
    pop     oldRe_s
    pop     oldRe_c
#(end macro)                popvX(FP,"oldRe")
            #    oldIm = newIm
#(begin macro)                pushvX(FP,"newIm")
    push    newIm_c
    push    newIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_0
#(js) }
#(end macro)                pushvX(FP,"newIm")
#(begin macro)                popvX(FP,"oldIm")
#(js) for (var xx=0; xx < X; xx++) {
    pop     oldIm_0
#(js) }
    pop     oldIm_1
#(js) }
    pop     oldIm_2
#(js) }
    pop     oldIm_s
    pop     oldIm_c
#(end macro)                popvX(FP,"oldIm")
            #    newRe = oldRe * oldRe - oldIm * oldIm + pr
#(begin macro)                pushvX(FP,"oldRe")
    push    oldRe_c
    push    oldRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_0
#(js) }
#(end macro)                pushvX(FP,"oldRe")
#(begin macro)                pushvX(FP,"oldRe")
    push    oldRe_c
    push    oldRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_0
#(js) }
#(end macro)                pushvX(FP,"oldRe")
#(begin macro)                mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB4_0 - 0
#(js) }
    sbm nameB4_1 - 1
#(js) }
    sbm nameB4_2 - 2
#(js) }
    sbm nameB4_s - 3
    sbm nameB4_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA4_0 - 5
#(js) }
    sbm nameA4_1 - 6
#(js) }
    sbm nameA4_2 - 7
#(js) }
    sbm nameA4_s - 8
    sbm nameA4_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA4_c
    push    nameA4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA4_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput7_0 - 0
#(js) }
    sbm _castXInput7_1 - 1
#(js) }
    sbm _castXInput7_2 - 2
#(js) }
    sbm _castXInput7_s - 3
    sbm _castXInput7_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput7_0    # 0 byte of _castXoutput7
#(js) }
    var _castXoutput7_1    # 1 byte of _castXoutput7
#(js) }
    var _castXoutput7_2    # 2 byte of _castXoutput7
#(js) }
    var _castXoutput7_3    # 3 byte of _castXoutput7
#(js) }
    var _castXoutput7_4    # 4 byte of _castXoutput7
#(js) }
    var _castXoutput7_5    # 5 byte of _castXoutput7
#(js) }
    var _castXoutput7_s    # Sign of _castXoutput7
    var _castXoutput7_c    # carry of _castXoutput7 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput7_c
    push    _castXInput7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput7_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori7_0
#(js) }
    pop     ori7_1
#(js) }
    pop     ori7_2
#(js) }
    pop     ori7_s
    pop     ori7_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori7_s   
        pop     dest7_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori7_0
                pop     dest7_0
#(js) }
                push    ori7_1
                pop     dest7_1
#(js) }
                push    ori7_2
                pop     dest7_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest7_3
#(js) } 
                push    0
                pop     dest7_4
#(js) } 
                push    0
                pop     dest7_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest7_c
    push    dest7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest7_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput7_0
#(js) }
    pop     _castXoutput7_1
#(js) }
    pop     _castXoutput7_2
#(js) }
    pop     _castXoutput7_3
#(js) }
    pop     _castXoutput7_4
#(js) }
    pop     _castXoutput7_5
#(js) }
    pop     _castXoutput7_s
    pop     _castXoutput7_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput7_c
    push    _castXoutput7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput7_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX4_0
#(js) }
    pop     nameAX4_1
#(js) }
    pop     nameAX4_2
#(js) }
    pop     nameAX4_3
#(js) }
    pop     nameAX4_4
#(js) }
    pop     nameAX4_5
#(js) }
    pop     nameAX4_s
    pop     nameAX4_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB4_c
    push    nameB4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB4_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput8_0 - 0
#(js) }
    sbm _castXInput8_1 - 1
#(js) }
    sbm _castXInput8_2 - 2
#(js) }
    sbm _castXInput8_s - 3
    sbm _castXInput8_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput8_0    # 0 byte of _castXoutput8
#(js) }
    var _castXoutput8_1    # 1 byte of _castXoutput8
#(js) }
    var _castXoutput8_2    # 2 byte of _castXoutput8
#(js) }
    var _castXoutput8_3    # 3 byte of _castXoutput8
#(js) }
    var _castXoutput8_4    # 4 byte of _castXoutput8
#(js) }
    var _castXoutput8_5    # 5 byte of _castXoutput8
#(js) }
    var _castXoutput8_s    # Sign of _castXoutput8
    var _castXoutput8_c    # carry of _castXoutput8 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput8_c
    push    _castXInput8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput8_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori8_0
#(js) }
    pop     ori8_1
#(js) }
    pop     ori8_2
#(js) }
    pop     ori8_s
    pop     ori8_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori8_s   
        pop     dest8_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori8_0
                pop     dest8_0
#(js) }
                push    ori8_1
                pop     dest8_1
#(js) }
                push    ori8_2
                pop     dest8_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest8_3
#(js) } 
                push    0
                pop     dest8_4
#(js) } 
                push    0
                pop     dest8_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest8_c
    push    dest8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest8_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput8_0
#(js) }
    pop     _castXoutput8_1
#(js) }
    pop     _castXoutput8_2
#(js) }
    pop     _castXoutput8_3
#(js) }
    pop     _castXoutput8_4
#(js) }
    pop     _castXoutput8_5
#(js) }
    pop     _castXoutput8_s
    pop     _castXoutput8_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput8_c
    push    _castXoutput8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput8_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX4_0
#(js) }
    pop     nameBX4_1
#(js) }
    pop     nameBX4_2
#(js) }
    pop     nameBX4_3
#(js) }
    pop     nameBX4_4
#(js) }
    pop     nameBX4_5
#(js) }
    pop     nameBX4_s
    pop     nameBX4_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX4_c
    push    nameAX4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX4_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA4_0
#(js) }
    pop     mulvvvXabsNameA4_1
#(js) }
    pop     mulvvvXabsNameA4_2
#(js) }
    pop     mulvvvXabsNameA4_3
#(js) }
    pop     mulvvvXabsNameA4_4
#(js) }
    pop     mulvvvXabsNameA4_5
#(js) }
    pop     mulvvvXabsNameA4_s
    pop     mulvvvXabsNameA4_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA4
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA4_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA4
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA4_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX4_c
    push    nameBX4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX4_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB4_0
#(js) }
    pop     mulvvvXabsNameB4_1
#(js) }
    pop     mulvvvXabsNameB4_2
#(js) }
    pop     mulvvvXabsNameB4_3
#(js) }
    pop     mulvvvXabsNameB4_4
#(js) }
    pop     mulvvvXabsNameB4_5
#(js) }
    pop     mulvvvXabsNameB4_s
    pop     mulvvvXabsNameB4_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB4
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB4_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB4
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB4_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX4_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop4
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB4_0
    bool
#(js) }
    push mulvvvXabsNameB4_1
    bool
#(js) }
    push mulvvvXabsNameB4_2
    bool
#(js) }
    push mulvvvXabsNameB4_3
    bool
#(js) }
    push mulvvvXabsNameB4_4
    bool
#(js) }
    push mulvvvXabsNameB4_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX4_c
    push    resultX4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB4_0
#(js) }
    pop     addvvXnameB4_1
#(js) }
    pop     addvvXnameB4_2
#(js) }
    pop     addvvXnameB4_3
#(js) }
    pop     addvvXnameB4_4
#(js) }
    pop     addvvXnameB4_5
#(js) }
    pop     addvvXnameB4_s
    pop     addvvXnameB4_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB4_s
    push    mulvvvXabsNameA4_s
    or
    not
    push    addvvXnameB4_s
    push    mulvvvXabsNameA4_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB4_s
        pop     resultX4_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB4_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b271
    sbm _a271 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c271
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao271
        while
            push _a271
            if
                at _a271
                    dec
                ta 
                at _b271
                    inc
                ta
                push _b271
                not
                if 
                    at _c271
                        set 1
                    ta
                fi
            else 
                at _loopao271
                    reset
                ta
            fi
        wend
        push _c271
        if
            at _a271
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_0
        push    mulvvvXabsNameA4_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b272
    sbm _a272 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c272
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao272
        while
            push _a272
            if
                at _a272
                    dec
                ta 
                at _b272
                    inc
                ta
                push _b272
                not
                if 
                    at _c272
                        set 1
                    ta
                fi
            else 
                at _loopao272
                    reset
                ta
            fi
        wend
        push _c272
        if
            at _a272
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b273
    sbm _a273 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c273
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao273
        while
            push _a273
            if
                at _a273
                    dec
                ta 
                at _b273
                    inc
                ta
                push _b273
                not
                if 
                    at _c273
                        set 1
                    ta
                fi
            else 
                at _loopao273
                    reset
                ta
            fi
        wend
        push _c273
        if
            at _a273
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_0
        add    
#(js) }
        push    addvvXnameB4_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b274
    sbm _a274 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c274
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao274
        while
            push _a274
            if
                at _a274
                    dec
                ta 
                at _b274
                    inc
                ta
                push _b274
                not
                if 
                    at _c274
                        set 1
                    ta
                fi
            else 
                at _loopao274
                    reset
                ta
            fi
        wend
        push _c274
        if
            at _a274
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_1
        push    mulvvvXabsNameA4_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b275
    sbm _a275 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c275
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao275
        while
            push _a275
            if
                at _a275
                    dec
                ta 
                at _b275
                    inc
                ta
                push _b275
                not
                if 
                    at _c275
                        set 1
                    ta
                fi
            else 
                at _loopao275
                    reset
                ta
            fi
        wend
        push _c275
        if
            at _a275
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b276
    sbm _a276 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c276
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao276
        while
            push _a276
            if
                at _a276
                    dec
                ta 
                at _b276
                    inc
                ta
                push _b276
                not
                if 
                    at _c276
                        set 1
                    ta
                fi
            else 
                at _loopao276
                    reset
                ta
            fi
        wend
        push _c276
        if
            at _a276
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_1
        add    
#(js) }
        push    addvvXnameB4_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b277
    sbm _a277 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c277
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao277
        while
            push _a277
            if
                at _a277
                    dec
                ta 
                at _b277
                    inc
                ta
                push _b277
                not
                if 
                    at _c277
                        set 1
                    ta
                fi
            else 
                at _loopao277
                    reset
                ta
            fi
        wend
        push _c277
        if
            at _a277
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_2
        push    mulvvvXabsNameA4_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b278
    sbm _a278 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c278
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao278
        while
            push _a278
            if
                at _a278
                    dec
                ta 
                at _b278
                    inc
                ta
                push _b278
                not
                if 
                    at _c278
                        set 1
                    ta
                fi
            else 
                at _loopao278
                    reset
                ta
            fi
        wend
        push _c278
        if
            at _a278
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b279
    sbm _a279 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c279
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao279
        while
            push _a279
            if
                at _a279
                    dec
                ta 
                at _b279
                    inc
                ta
                push _b279
                not
                if 
                    at _c279
                        set 1
                    ta
                fi
            else 
                at _loopao279
                    reset
                ta
            fi
        wend
        push _c279
        if
            at _a279
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_2
        add    
#(js) }
        push    addvvXnameB4_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b280
    sbm _a280 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c280
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao280
        while
            push _a280
            if
                at _a280
                    dec
                ta 
                at _b280
                    inc
                ta
                push _b280
                not
                if 
                    at _c280
                        set 1
                    ta
                fi
            else 
                at _loopao280
                    reset
                ta
            fi
        wend
        push _c280
        if
            at _a280
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_3
        push    mulvvvXabsNameA4_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b281
    sbm _a281 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c281
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao281
        while
            push _a281
            if
                at _a281
                    dec
                ta 
                at _b281
                    inc
                ta
                push _b281
                not
                if 
                    at _c281
                        set 1
                    ta
                fi
            else 
                at _loopao281
                    reset
                ta
            fi
        wend
        push _c281
        if
            at _a281
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b282
    sbm _a282 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c282
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao282
        while
            push _a282
            if
                at _a282
                    dec
                ta 
                at _b282
                    inc
                ta
                push _b282
                not
                if 
                    at _c282
                        set 1
                    ta
                fi
            else 
                at _loopao282
                    reset
                ta
            fi
        wend
        push _c282
        if
            at _a282
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_3
        add    
#(js) }
        push    addvvXnameB4_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b283
    sbm _a283 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c283
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao283
        while
            push _a283
            if
                at _a283
                    dec
                ta 
                at _b283
                    inc
                ta
                push _b283
                not
                if 
                    at _c283
                        set 1
                    ta
                fi
            else 
                at _loopao283
                    reset
                ta
            fi
        wend
        push _c283
        if
            at _a283
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_4
        push    mulvvvXabsNameA4_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b284
    sbm _a284 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c284
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao284
        while
            push _a284
            if
                at _a284
                    dec
                ta 
                at _b284
                    inc
                ta
                push _b284
                not
                if 
                    at _c284
                        set 1
                    ta
                fi
            else 
                at _loopao284
                    reset
                ta
            fi
        wend
        push _c284
        if
            at _a284
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b285
    sbm _a285 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c285
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao285
        while
            push _a285
            if
                at _a285
                    dec
                ta 
                at _b285
                    inc
                ta
                push _b285
                not
                if 
                    at _c285
                        set 1
                    ta
                fi
            else 
                at _loopao285
                    reset
                ta
            fi
        wend
        push _c285
        if
            at _a285
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_4
        add    
#(js) }
        push    addvvXnameB4_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b286
    sbm _a286 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c286
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao286
        while
            push _a286
            if
                at _a286
                    dec
                ta 
                at _b286
                    inc
                ta
                push _b286
                not
                if 
                    at _c286
                        set 1
                    ta
                fi
            else 
                at _loopao286
                    reset
                ta
            fi
        wend
        push _c286
        if
            at _a286
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_5
        push    mulvvvXabsNameA4_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b287
    sbm _a287 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c287
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao287
        while
            push _a287
            if
                at _a287
                    dec
                ta 
                at _b287
                    inc
                ta
                push _b287
                not
                if 
                    at _c287
                        set 1
                    ta
                fi
            else 
                at _loopao287
                    reset
                ta
            fi
        wend
        push _c287
        if
            at _a287
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX4_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b288
    sbm _a288 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c288
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao288
        while
            push _a288
            if
                at _a288
                    dec
                ta 
                at _b288
                    inc
                ta
                push _b288
                not
                if 
                    at _c288
                        set 1
                    ta
                fi
            else 
                at _loopao288
                    reset
                ta
            fi
        wend
        push _c288
        if
            at _a288
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX4_5
        add    
#(js) }
        pop     resultX4_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb8
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb8
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB4_5
            push    mulvvvXabsNameA4_5
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_5
                push    mulvvvXabsNameA4_5
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB4_4
            push    mulvvvXabsNameA4_4
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_4
                push    mulvvvXabsNameA4_4
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB4_3
            push    mulvvvXabsNameA4_3
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_3
                push    mulvvvXabsNameA4_3
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB4_2
            push    mulvvvXabsNameA4_2
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_2
                push    mulvvvXabsNameA4_2
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB4_1
            push    mulvvvXabsNameA4_1
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_1
                push    mulvvvXabsNameA4_1
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB4_0
            push    mulvvvXabsNameA4_0
            sup
            if  
               at _asupb8
                set 1
               ta
            else 
                push    addvvXnameB4_0
                push    mulvvvXabsNameA4_0
                diff
                if
                at _asupb8
                    reset
                ta
                else           
#(js) }
            at _aequb8
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb8
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB4_s
                pop     resultX4_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB4_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b289
    sbm _a289 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c289
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao289
        while
            push _b289
            if  
                at _b289
                    dec
                ta
                at _a289
                    dec
                ta
                push _a289
                inc
                not
                if
                    at _c289
                        set 1
                    ta
                fi 
            else
                at _loopao289
                    reset
                ta
            fi
        wend
        push _c289
        if
            at _b289
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_0
                push    mulvvvXabsNameA4_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b290
    sbm _a290 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c290
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao290
        while
            push _b290
            if  
                at _b290
                    dec
                ta
                at _a290
                    dec
                ta
                push _a290
                inc
                not
                if
                    at _c290
                        set 1
                    ta
                fi 
            else
                at _loopao290
                    reset
                ta
            fi
        wend
        push _c290
        if
            at _b290
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b291
    sbm _a291 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c291
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao291
        while
            push _b291
            if  
                at _b291
                    dec
                ta
                at _a291
                    dec
                ta
                push _a291
                inc
                not
                if
                    at _c291
                        set 1
                    ta
                fi 
            else
                at _loopao291
                    reset
                ta
            fi
        wend
        push _c291
        if
            at _b291
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_0 
                add   
#(js) }
                push    addvvXnameB4_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b292
    sbm _a292 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c292
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao292
        while
            push _b292
            if  
                at _b292
                    dec
                ta
                at _a292
                    dec
                ta
                push _a292
                inc
                not
                if
                    at _c292
                        set 1
                    ta
                fi 
            else
                at _loopao292
                    reset
                ta
            fi
        wend
        push _c292
        if
            at _b292
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_1
                push    mulvvvXabsNameA4_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b293
    sbm _a293 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c293
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao293
        while
            push _b293
            if  
                at _b293
                    dec
                ta
                at _a293
                    dec
                ta
                push _a293
                inc
                not
                if
                    at _c293
                        set 1
                    ta
                fi 
            else
                at _loopao293
                    reset
                ta
            fi
        wend
        push _c293
        if
            at _b293
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b294
    sbm _a294 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c294
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao294
        while
            push _b294
            if  
                at _b294
                    dec
                ta
                at _a294
                    dec
                ta
                push _a294
                inc
                not
                if
                    at _c294
                        set 1
                    ta
                fi 
            else
                at _loopao294
                    reset
                ta
            fi
        wend
        push _c294
        if
            at _b294
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_1 
                add   
#(js) }
                push    addvvXnameB4_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b295
    sbm _a295 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c295
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao295
        while
            push _b295
            if  
                at _b295
                    dec
                ta
                at _a295
                    dec
                ta
                push _a295
                inc
                not
                if
                    at _c295
                        set 1
                    ta
                fi 
            else
                at _loopao295
                    reset
                ta
            fi
        wend
        push _c295
        if
            at _b295
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_2
                push    mulvvvXabsNameA4_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b296
    sbm _a296 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c296
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao296
        while
            push _b296
            if  
                at _b296
                    dec
                ta
                at _a296
                    dec
                ta
                push _a296
                inc
                not
                if
                    at _c296
                        set 1
                    ta
                fi 
            else
                at _loopao296
                    reset
                ta
            fi
        wend
        push _c296
        if
            at _b296
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b297
    sbm _a297 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c297
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao297
        while
            push _b297
            if  
                at _b297
                    dec
                ta
                at _a297
                    dec
                ta
                push _a297
                inc
                not
                if
                    at _c297
                        set 1
                    ta
                fi 
            else
                at _loopao297
                    reset
                ta
            fi
        wend
        push _c297
        if
            at _b297
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_2 
                add   
#(js) }
                push    addvvXnameB4_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b298
    sbm _a298 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c298
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao298
        while
            push _b298
            if  
                at _b298
                    dec
                ta
                at _a298
                    dec
                ta
                push _a298
                inc
                not
                if
                    at _c298
                        set 1
                    ta
                fi 
            else
                at _loopao298
                    reset
                ta
            fi
        wend
        push _c298
        if
            at _b298
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_3
                push    mulvvvXabsNameA4_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b299
    sbm _a299 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c299
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao299
        while
            push _b299
            if  
                at _b299
                    dec
                ta
                at _a299
                    dec
                ta
                push _a299
                inc
                not
                if
                    at _c299
                        set 1
                    ta
                fi 
            else
                at _loopao299
                    reset
                ta
            fi
        wend
        push _c299
        if
            at _b299
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b300
    sbm _a300 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c300
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao300
        while
            push _b300
            if  
                at _b300
                    dec
                ta
                at _a300
                    dec
                ta
                push _a300
                inc
                not
                if
                    at _c300
                        set 1
                    ta
                fi 
            else
                at _loopao300
                    reset
                ta
            fi
        wend
        push _c300
        if
            at _b300
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_3 
                add   
#(js) }
                push    addvvXnameB4_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b301
    sbm _a301 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c301
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao301
        while
            push _b301
            if  
                at _b301
                    dec
                ta
                at _a301
                    dec
                ta
                push _a301
                inc
                not
                if
                    at _c301
                        set 1
                    ta
                fi 
            else
                at _loopao301
                    reset
                ta
            fi
        wend
        push _c301
        if
            at _b301
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_4
                push    mulvvvXabsNameA4_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b302
    sbm _a302 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c302
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao302
        while
            push _b302
            if  
                at _b302
                    dec
                ta
                at _a302
                    dec
                ta
                push _a302
                inc
                not
                if
                    at _c302
                        set 1
                    ta
                fi 
            else
                at _loopao302
                    reset
                ta
            fi
        wend
        push _c302
        if
            at _b302
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b303
    sbm _a303 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c303
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao303
        while
            push _b303
            if  
                at _b303
                    dec
                ta
                at _a303
                    dec
                ta
                push _a303
                inc
                not
                if
                    at _c303
                        set 1
                    ta
                fi 
            else
                at _loopao303
                    reset
                ta
            fi
        wend
        push _c303
        if
            at _b303
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_4 
                add   
#(js) }
                push    addvvXnameB4_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b304
    sbm _a304 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c304
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao304
        while
            push _b304
            if  
                at _b304
                    dec
                ta
                at _a304
                    dec
                ta
                push _a304
                inc
                not
                if
                    at _c304
                        set 1
                    ta
                fi 
            else
                at _loopao304
                    reset
                ta
            fi
        wend
        push _c304
        if
            at _b304
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_5
                push    mulvvvXabsNameA4_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b305
    sbm _a305 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c305
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao305
        while
            push _b305
            if  
                at _b305
                    dec
                ta
                at _a305
                    dec
                ta
                push _a305
                inc
                not
                if
                    at _c305
                        set 1
                    ta
                fi 
            else
                at _loopao305
                    reset
                ta
            fi
        wend
        push _c305
        if
            at _b305
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX4_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b306
    sbm _a306 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c306
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao306
        while
            push _b306
            if  
                at _b306
                    dec
                ta
                at _a306
                    dec
                ta
                push _a306
                inc
                not
                if
                    at _c306
                        set 1
                    ta
                fi 
            else
                at _loopao306
                    reset
                ta
            fi
        wend
        push _c306
        if
            at _b306
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX4_5 
                add   
#(js) }
                pop     resultX4_c
            
            else # absB >= absA : 
                push    _aequb8
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX4_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA4_s
                    pop     resultX4_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA4_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b307
    sbm _a307 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c307
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao307
        while
            push _b307
            if  
                at _b307
                    dec
                ta
                at _a307
                    dec
                ta
                push _a307
                inc
                not
                if
                    at _c307
                        set 1
                    ta
                fi 
            else
                at _loopao307
                    reset
                ta
            fi
        wend
        push _c307
        if
            at _b307
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_0
                    push    addvvXnameB4_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b308
    sbm _a308 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c308
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao308
        while
            push _b308
            if  
                at _b308
                    dec
                ta
                at _a308
                    dec
                ta
                push _a308
                inc
                not
                if
                    at _c308
                        set 1
                    ta
                fi 
            else
                at _loopao308
                    reset
                ta
            fi
        wend
        push _c308
        if
            at _b308
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b309
    sbm _a309 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c309
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao309
        while
            push _b309
            if  
                at _b309
                    dec
                ta
                at _a309
                    dec
                ta
                push _a309
                inc
                not
                if
                    at _c309
                        set 1
                    ta
                fi 
            else
                at _loopao309
                    reset
                ta
            fi
        wend
        push _c309
        if
            at _b309
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_0
                    add    
#(js) }
                    push    mulvvvXabsNameA4_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b310
    sbm _a310 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c310
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao310
        while
            push _b310
            if  
                at _b310
                    dec
                ta
                at _a310
                    dec
                ta
                push _a310
                inc
                not
                if
                    at _c310
                        set 1
                    ta
                fi 
            else
                at _loopao310
                    reset
                ta
            fi
        wend
        push _c310
        if
            at _b310
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_1
                    push    addvvXnameB4_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b311
    sbm _a311 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c311
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao311
        while
            push _b311
            if  
                at _b311
                    dec
                ta
                at _a311
                    dec
                ta
                push _a311
                inc
                not
                if
                    at _c311
                        set 1
                    ta
                fi 
            else
                at _loopao311
                    reset
                ta
            fi
        wend
        push _c311
        if
            at _b311
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b312
    sbm _a312 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c312
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao312
        while
            push _b312
            if  
                at _b312
                    dec
                ta
                at _a312
                    dec
                ta
                push _a312
                inc
                not
                if
                    at _c312
                        set 1
                    ta
                fi 
            else
                at _loopao312
                    reset
                ta
            fi
        wend
        push _c312
        if
            at _b312
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_1
                    add    
#(js) }
                    push    mulvvvXabsNameA4_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b313
    sbm _a313 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c313
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao313
        while
            push _b313
            if  
                at _b313
                    dec
                ta
                at _a313
                    dec
                ta
                push _a313
                inc
                not
                if
                    at _c313
                        set 1
                    ta
                fi 
            else
                at _loopao313
                    reset
                ta
            fi
        wend
        push _c313
        if
            at _b313
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_2
                    push    addvvXnameB4_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b314
    sbm _a314 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c314
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao314
        while
            push _b314
            if  
                at _b314
                    dec
                ta
                at _a314
                    dec
                ta
                push _a314
                inc
                not
                if
                    at _c314
                        set 1
                    ta
                fi 
            else
                at _loopao314
                    reset
                ta
            fi
        wend
        push _c314
        if
            at _b314
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b315
    sbm _a315 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c315
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao315
        while
            push _b315
            if  
                at _b315
                    dec
                ta
                at _a315
                    dec
                ta
                push _a315
                inc
                not
                if
                    at _c315
                        set 1
                    ta
                fi 
            else
                at _loopao315
                    reset
                ta
            fi
        wend
        push _c315
        if
            at _b315
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_2
                    add    
#(js) }
                    push    mulvvvXabsNameA4_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b316
    sbm _a316 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c316
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao316
        while
            push _b316
            if  
                at _b316
                    dec
                ta
                at _a316
                    dec
                ta
                push _a316
                inc
                not
                if
                    at _c316
                        set 1
                    ta
                fi 
            else
                at _loopao316
                    reset
                ta
            fi
        wend
        push _c316
        if
            at _b316
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_3
                    push    addvvXnameB4_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b317
    sbm _a317 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c317
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao317
        while
            push _b317
            if  
                at _b317
                    dec
                ta
                at _a317
                    dec
                ta
                push _a317
                inc
                not
                if
                    at _c317
                        set 1
                    ta
                fi 
            else
                at _loopao317
                    reset
                ta
            fi
        wend
        push _c317
        if
            at _b317
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b318
    sbm _a318 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c318
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao318
        while
            push _b318
            if  
                at _b318
                    dec
                ta
                at _a318
                    dec
                ta
                push _a318
                inc
                not
                if
                    at _c318
                        set 1
                    ta
                fi 
            else
                at _loopao318
                    reset
                ta
            fi
        wend
        push _c318
        if
            at _b318
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_3
                    add    
#(js) }
                    push    mulvvvXabsNameA4_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b319
    sbm _a319 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c319
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao319
        while
            push _b319
            if  
                at _b319
                    dec
                ta
                at _a319
                    dec
                ta
                push _a319
                inc
                not
                if
                    at _c319
                        set 1
                    ta
                fi 
            else
                at _loopao319
                    reset
                ta
            fi
        wend
        push _c319
        if
            at _b319
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_4
                    push    addvvXnameB4_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b320
    sbm _a320 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c320
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao320
        while
            push _b320
            if  
                at _b320
                    dec
                ta
                at _a320
                    dec
                ta
                push _a320
                inc
                not
                if
                    at _c320
                        set 1
                    ta
                fi 
            else
                at _loopao320
                    reset
                ta
            fi
        wend
        push _c320
        if
            at _b320
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b321
    sbm _a321 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c321
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao321
        while
            push _b321
            if  
                at _b321
                    dec
                ta
                at _a321
                    dec
                ta
                push _a321
                inc
                not
                if
                    at _c321
                        set 1
                    ta
                fi 
            else
                at _loopao321
                    reset
                ta
            fi
        wend
        push _c321
        if
            at _b321
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_4
                    add    
#(js) }
                    push    mulvvvXabsNameA4_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b322
    sbm _a322 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c322
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao322
        while
            push _b322
            if  
                at _b322
                    dec
                ta
                at _a322
                    dec
                ta
                push _a322
                inc
                not
                if
                    at _c322
                        set 1
                    ta
                fi 
            else
                at _loopao322
                    reset
                ta
            fi
        wend
        push _c322
        if
            at _b322
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_5
                    push    addvvXnameB4_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b323
    sbm _a323 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c323
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao323
        while
            push _b323
            if  
                at _b323
                    dec
                ta
                at _a323
                    dec
                ta
                push _a323
                inc
                not
                if
                    at _c323
                        set 1
                    ta
                fi 
            else
                at _loopao323
                    reset
                ta
            fi
        wend
        push _c323
        if
            at _b323
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX4_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b324
    sbm _a324 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c324
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao324
        while
            push _b324
            if  
                at _b324
                    dec
                ta
                at _a324
                    dec
                ta
                push _a324
                inc
                not
                if
                    at _c324
                        set 1
                    ta
                fi 
            else
                at _loopao324
                    reset
                ta
            fi
        wend
        push _c324
        if
            at _b324
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX4_5
                    add    
#(js) }
                    pop     resultX4_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB4_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB4_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB4_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB4_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB4_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB4_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop4
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA4
        push mulvvvXsB4
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX4_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX4_c
    push    resultX4_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX4_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack11_0    # 0 byte of _instack11
#(js) }
    var _instack11_1    # 1 byte of _instack11
#(js) }
    var _instack11_2    # 2 byte of _instack11
#(js) }
    var _instack11_3    # 3 byte of _instack11
#(js) }
    var _instack11_4    # 4 byte of _instack11
#(js) }
    var _instack11_5    # 5 byte of _instack11
#(js) }
    var _instack11_s    # Sign of _instack11
    var _instack11_c    # carry of _instack11 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack11_0    # 0 byte of _outstack11
#(js) }
    var _outstack11_1    # 1 byte of _outstack11
#(js) }
    var _outstack11_2    # 2 byte of _outstack11
#(js) }
    var _outstack11_s    # Sign of _outstack11
    var _outstack11_c    # carry of _outstack11 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack11_0
#(js) }
    pop     _instack11_1
#(js) }
    pop     _instack11_2
#(js) }
    pop     _instack11_3
#(js) }
    pop     _instack11_4
#(js) }
    pop     _instack11_5
#(js) }
    pop     _instack11_s
    pop     _instack11_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack11_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack11_s
    pop _outstack11_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack11_4
            pop _outstack11_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack11_3
            pop _outstack11_1
#(js) }
            push _instack11_2
            pop _outstack11_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack11_c
    push    _outstack11_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack11_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack11_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack11_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA4_0
#(js) }
    pop     nameA4_1
#(js) }
    pop     nameA4_2
#(js) }
    pop     nameA4_s
    pop     nameA4_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)
#(begin macro)                pushvX(FP,"oldIm")
    push    oldIm_c
    push    oldIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_0
#(js) }
#(end macro)                pushvX(FP,"oldIm")
#(begin macro)                pushvX(FP,"oldIm")
    push    oldIm_c
    push    oldIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_0
#(js) }
#(end macro)                pushvX(FP,"oldIm")
#(begin macro)                mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB5_0 - 0
#(js) }
    sbm nameB5_1 - 1
#(js) }
    sbm nameB5_2 - 2
#(js) }
    sbm nameB5_s - 3
    sbm nameB5_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA5_0 - 5
#(js) }
    sbm nameA5_1 - 6
#(js) }
    sbm nameA5_2 - 7
#(js) }
    sbm nameA5_s - 8
    sbm nameA5_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA5_c
    push    nameA5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA5_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput9_0 - 0
#(js) }
    sbm _castXInput9_1 - 1
#(js) }
    sbm _castXInput9_2 - 2
#(js) }
    sbm _castXInput9_s - 3
    sbm _castXInput9_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput9_0    # 0 byte of _castXoutput9
#(js) }
    var _castXoutput9_1    # 1 byte of _castXoutput9
#(js) }
    var _castXoutput9_2    # 2 byte of _castXoutput9
#(js) }
    var _castXoutput9_3    # 3 byte of _castXoutput9
#(js) }
    var _castXoutput9_4    # 4 byte of _castXoutput9
#(js) }
    var _castXoutput9_5    # 5 byte of _castXoutput9
#(js) }
    var _castXoutput9_s    # Sign of _castXoutput9
    var _castXoutput9_c    # carry of _castXoutput9 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput9_c
    push    _castXInput9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput9_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori9_0
#(js) }
    pop     ori9_1
#(js) }
    pop     ori9_2
#(js) }
    pop     ori9_s
    pop     ori9_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori9_s   
        pop     dest9_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori9_0
                pop     dest9_0
#(js) }
                push    ori9_1
                pop     dest9_1
#(js) }
                push    ori9_2
                pop     dest9_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest9_3
#(js) } 
                push    0
                pop     dest9_4
#(js) } 
                push    0
                pop     dest9_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest9_c
    push    dest9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest9_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput9_0
#(js) }
    pop     _castXoutput9_1
#(js) }
    pop     _castXoutput9_2
#(js) }
    pop     _castXoutput9_3
#(js) }
    pop     _castXoutput9_4
#(js) }
    pop     _castXoutput9_5
#(js) }
    pop     _castXoutput9_s
    pop     _castXoutput9_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput9_c
    push    _castXoutput9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput9_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX5_0
#(js) }
    pop     nameAX5_1
#(js) }
    pop     nameAX5_2
#(js) }
    pop     nameAX5_3
#(js) }
    pop     nameAX5_4
#(js) }
    pop     nameAX5_5
#(js) }
    pop     nameAX5_s
    pop     nameAX5_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB5_c
    push    nameB5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB5_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput10_0 - 0
#(js) }
    sbm _castXInput10_1 - 1
#(js) }
    sbm _castXInput10_2 - 2
#(js) }
    sbm _castXInput10_s - 3
    sbm _castXInput10_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput10_0    # 0 byte of _castXoutput10
#(js) }
    var _castXoutput10_1    # 1 byte of _castXoutput10
#(js) }
    var _castXoutput10_2    # 2 byte of _castXoutput10
#(js) }
    var _castXoutput10_3    # 3 byte of _castXoutput10
#(js) }
    var _castXoutput10_4    # 4 byte of _castXoutput10
#(js) }
    var _castXoutput10_5    # 5 byte of _castXoutput10
#(js) }
    var _castXoutput10_s    # Sign of _castXoutput10
    var _castXoutput10_c    # carry of _castXoutput10 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori10_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori10_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori10_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori10_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori10_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest10_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest10_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest10_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput10_c
    push    _castXInput10_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput10_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput10_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput10_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori10_0
#(js) }
    pop     ori10_1
#(js) }
    pop     ori10_2
#(js) }
    pop     ori10_s
    pop     ori10_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori10_s   
        pop     dest10_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori10_0
                pop     dest10_0
#(js) }
                push    ori10_1
                pop     dest10_1
#(js) }
                push    ori10_2
                pop     dest10_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest10_3
#(js) } 
                push    0
                pop     dest10_4
#(js) } 
                push    0
                pop     dest10_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest10_c
    push    dest10_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest10_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput10_0
#(js) }
    pop     _castXoutput10_1
#(js) }
    pop     _castXoutput10_2
#(js) }
    pop     _castXoutput10_3
#(js) }
    pop     _castXoutput10_4
#(js) }
    pop     _castXoutput10_5
#(js) }
    pop     _castXoutput10_s
    pop     _castXoutput10_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput10_c
    push    _castXoutput10_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput10_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX5_0
#(js) }
    pop     nameBX5_1
#(js) }
    pop     nameBX5_2
#(js) }
    pop     nameBX5_3
#(js) }
    pop     nameBX5_4
#(js) }
    pop     nameBX5_5
#(js) }
    pop     nameBX5_s
    pop     nameBX5_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX5_c
    push    nameAX5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX5_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA5_0
#(js) }
    pop     mulvvvXabsNameA5_1
#(js) }
    pop     mulvvvXabsNameA5_2
#(js) }
    pop     mulvvvXabsNameA5_3
#(js) }
    pop     mulvvvXabsNameA5_4
#(js) }
    pop     mulvvvXabsNameA5_5
#(js) }
    pop     mulvvvXabsNameA5_s
    pop     mulvvvXabsNameA5_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA5
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA5_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA5
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA5_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX5_c
    push    nameBX5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX5_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB5_0
#(js) }
    pop     mulvvvXabsNameB5_1
#(js) }
    pop     mulvvvXabsNameB5_2
#(js) }
    pop     mulvvvXabsNameB5_3
#(js) }
    pop     mulvvvXabsNameB5_4
#(js) }
    pop     mulvvvXabsNameB5_5
#(js) }
    pop     mulvvvXabsNameB5_s
    pop     mulvvvXabsNameB5_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB5
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB5_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB5
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB5_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX5_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop5
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB5_0
    bool
#(js) }
    push mulvvvXabsNameB5_1
    bool
#(js) }
    push mulvvvXabsNameB5_2
    bool
#(js) }
    push mulvvvXabsNameB5_3
    bool
#(js) }
    push mulvvvXabsNameB5_4
    bool
#(js) }
    push mulvvvXabsNameB5_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB5_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB5_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB5_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX5_c
    push    resultX5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB5_0
#(js) }
    pop     addvvXnameB5_1
#(js) }
    pop     addvvXnameB5_2
#(js) }
    pop     addvvXnameB5_3
#(js) }
    pop     addvvXnameB5_4
#(js) }
    pop     addvvXnameB5_5
#(js) }
    pop     addvvXnameB5_s
    pop     addvvXnameB5_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB5_s
    push    mulvvvXabsNameA5_s
    or
    not
    push    addvvXnameB5_s
    push    mulvvvXabsNameA5_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB5_s
        pop     resultX5_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB5_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b325
    sbm _a325 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c325
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao325
        while
            push _a325
            if
                at _a325
                    dec
                ta 
                at _b325
                    inc
                ta
                push _b325
                not
                if 
                    at _c325
                        set 1
                    ta
                fi
            else 
                at _loopao325
                    reset
                ta
            fi
        wend
        push _c325
        if
            at _a325
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_0
        push    mulvvvXabsNameA5_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b326
    sbm _a326 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c326
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao326
        while
            push _a326
            if
                at _a326
                    dec
                ta 
                at _b326
                    inc
                ta
                push _b326
                not
                if 
                    at _c326
                        set 1
                    ta
                fi
            else 
                at _loopao326
                    reset
                ta
            fi
        wend
        push _c326
        if
            at _a326
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b327
    sbm _a327 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c327
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao327
        while
            push _a327
            if
                at _a327
                    dec
                ta 
                at _b327
                    inc
                ta
                push _b327
                not
                if 
                    at _c327
                        set 1
                    ta
                fi
            else 
                at _loopao327
                    reset
                ta
            fi
        wend
        push _c327
        if
            at _a327
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_0
        add    
#(js) }
        push    addvvXnameB5_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b328
    sbm _a328 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c328
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao328
        while
            push _a328
            if
                at _a328
                    dec
                ta 
                at _b328
                    inc
                ta
                push _b328
                not
                if 
                    at _c328
                        set 1
                    ta
                fi
            else 
                at _loopao328
                    reset
                ta
            fi
        wend
        push _c328
        if
            at _a328
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_1
        push    mulvvvXabsNameA5_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b329
    sbm _a329 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c329
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao329
        while
            push _a329
            if
                at _a329
                    dec
                ta 
                at _b329
                    inc
                ta
                push _b329
                not
                if 
                    at _c329
                        set 1
                    ta
                fi
            else 
                at _loopao329
                    reset
                ta
            fi
        wend
        push _c329
        if
            at _a329
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b330
    sbm _a330 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c330
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao330
        while
            push _a330
            if
                at _a330
                    dec
                ta 
                at _b330
                    inc
                ta
                push _b330
                not
                if 
                    at _c330
                        set 1
                    ta
                fi
            else 
                at _loopao330
                    reset
                ta
            fi
        wend
        push _c330
        if
            at _a330
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_1
        add    
#(js) }
        push    addvvXnameB5_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b331
    sbm _a331 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c331
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao331
        while
            push _a331
            if
                at _a331
                    dec
                ta 
                at _b331
                    inc
                ta
                push _b331
                not
                if 
                    at _c331
                        set 1
                    ta
                fi
            else 
                at _loopao331
                    reset
                ta
            fi
        wend
        push _c331
        if
            at _a331
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_2
        push    mulvvvXabsNameA5_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b332
    sbm _a332 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c332
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao332
        while
            push _a332
            if
                at _a332
                    dec
                ta 
                at _b332
                    inc
                ta
                push _b332
                not
                if 
                    at _c332
                        set 1
                    ta
                fi
            else 
                at _loopao332
                    reset
                ta
            fi
        wend
        push _c332
        if
            at _a332
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b333
    sbm _a333 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c333
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao333
        while
            push _a333
            if
                at _a333
                    dec
                ta 
                at _b333
                    inc
                ta
                push _b333
                not
                if 
                    at _c333
                        set 1
                    ta
                fi
            else 
                at _loopao333
                    reset
                ta
            fi
        wend
        push _c333
        if
            at _a333
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_2
        add    
#(js) }
        push    addvvXnameB5_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b334
    sbm _a334 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c334
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao334
        while
            push _a334
            if
                at _a334
                    dec
                ta 
                at _b334
                    inc
                ta
                push _b334
                not
                if 
                    at _c334
                        set 1
                    ta
                fi
            else 
                at _loopao334
                    reset
                ta
            fi
        wend
        push _c334
        if
            at _a334
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_3
        push    mulvvvXabsNameA5_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b335
    sbm _a335 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c335
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao335
        while
            push _a335
            if
                at _a335
                    dec
                ta 
                at _b335
                    inc
                ta
                push _b335
                not
                if 
                    at _c335
                        set 1
                    ta
                fi
            else 
                at _loopao335
                    reset
                ta
            fi
        wend
        push _c335
        if
            at _a335
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b336
    sbm _a336 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c336
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao336
        while
            push _a336
            if
                at _a336
                    dec
                ta 
                at _b336
                    inc
                ta
                push _b336
                not
                if 
                    at _c336
                        set 1
                    ta
                fi
            else 
                at _loopao336
                    reset
                ta
            fi
        wend
        push _c336
        if
            at _a336
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_3
        add    
#(js) }
        push    addvvXnameB5_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b337
    sbm _a337 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c337
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao337
        while
            push _a337
            if
                at _a337
                    dec
                ta 
                at _b337
                    inc
                ta
                push _b337
                not
                if 
                    at _c337
                        set 1
                    ta
                fi
            else 
                at _loopao337
                    reset
                ta
            fi
        wend
        push _c337
        if
            at _a337
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_4
        push    mulvvvXabsNameA5_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b338
    sbm _a338 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c338
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao338
        while
            push _a338
            if
                at _a338
                    dec
                ta 
                at _b338
                    inc
                ta
                push _b338
                not
                if 
                    at _c338
                        set 1
                    ta
                fi
            else 
                at _loopao338
                    reset
                ta
            fi
        wend
        push _c338
        if
            at _a338
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b339
    sbm _a339 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c339
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao339
        while
            push _a339
            if
                at _a339
                    dec
                ta 
                at _b339
                    inc
                ta
                push _b339
                not
                if 
                    at _c339
                        set 1
                    ta
                fi
            else 
                at _loopao339
                    reset
                ta
            fi
        wend
        push _c339
        if
            at _a339
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_4
        add    
#(js) }
        push    addvvXnameB5_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b340
    sbm _a340 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c340
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao340
        while
            push _a340
            if
                at _a340
                    dec
                ta 
                at _b340
                    inc
                ta
                push _b340
                not
                if 
                    at _c340
                        set 1
                    ta
                fi
            else 
                at _loopao340
                    reset
                ta
            fi
        wend
        push _c340
        if
            at _a340
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_5
        push    mulvvvXabsNameA5_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b341
    sbm _a341 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c341
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao341
        while
            push _a341
            if
                at _a341
                    dec
                ta 
                at _b341
                    inc
                ta
                push _b341
                not
                if 
                    at _c341
                        set 1
                    ta
                fi
            else 
                at _loopao341
                    reset
                ta
            fi
        wend
        push _c341
        if
            at _a341
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX5_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b342
    sbm _a342 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c342
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao342
        while
            push _a342
            if
                at _a342
                    dec
                ta 
                at _b342
                    inc
                ta
                push _b342
                not
                if 
                    at _c342
                        set 1
                    ta
                fi
            else 
                at _loopao342
                    reset
                ta
            fi
        wend
        push _c342
        if
            at _a342
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX5_5
        add    
#(js) }
        pop     resultX5_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb9
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb9
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB5_5
            push    mulvvvXabsNameA5_5
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_5
                push    mulvvvXabsNameA5_5
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB5_4
            push    mulvvvXabsNameA5_4
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_4
                push    mulvvvXabsNameA5_4
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB5_3
            push    mulvvvXabsNameA5_3
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_3
                push    mulvvvXabsNameA5_3
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB5_2
            push    mulvvvXabsNameA5_2
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_2
                push    mulvvvXabsNameA5_2
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB5_1
            push    mulvvvXabsNameA5_1
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_1
                push    mulvvvXabsNameA5_1
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB5_0
            push    mulvvvXabsNameA5_0
            sup
            if  
               at _asupb9
                set 1
               ta
            else 
                push    addvvXnameB5_0
                push    mulvvvXabsNameA5_0
                diff
                if
                at _asupb9
                    reset
                ta
                else           
#(js) }
            at _aequb9
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb9
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB5_s
                pop     resultX5_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB5_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b343
    sbm _a343 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c343
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao343
        while
            push _b343
            if  
                at _b343
                    dec
                ta
                at _a343
                    dec
                ta
                push _a343
                inc
                not
                if
                    at _c343
                        set 1
                    ta
                fi 
            else
                at _loopao343
                    reset
                ta
            fi
        wend
        push _c343
        if
            at _b343
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_0
                push    mulvvvXabsNameA5_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b344
    sbm _a344 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c344
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao344
        while
            push _b344
            if  
                at _b344
                    dec
                ta
                at _a344
                    dec
                ta
                push _a344
                inc
                not
                if
                    at _c344
                        set 1
                    ta
                fi 
            else
                at _loopao344
                    reset
                ta
            fi
        wend
        push _c344
        if
            at _b344
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b345
    sbm _a345 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c345
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao345
        while
            push _b345
            if  
                at _b345
                    dec
                ta
                at _a345
                    dec
                ta
                push _a345
                inc
                not
                if
                    at _c345
                        set 1
                    ta
                fi 
            else
                at _loopao345
                    reset
                ta
            fi
        wend
        push _c345
        if
            at _b345
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_0 
                add   
#(js) }
                push    addvvXnameB5_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b346
    sbm _a346 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c346
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao346
        while
            push _b346
            if  
                at _b346
                    dec
                ta
                at _a346
                    dec
                ta
                push _a346
                inc
                not
                if
                    at _c346
                        set 1
                    ta
                fi 
            else
                at _loopao346
                    reset
                ta
            fi
        wend
        push _c346
        if
            at _b346
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_1
                push    mulvvvXabsNameA5_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b347
    sbm _a347 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c347
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao347
        while
            push _b347
            if  
                at _b347
                    dec
                ta
                at _a347
                    dec
                ta
                push _a347
                inc
                not
                if
                    at _c347
                        set 1
                    ta
                fi 
            else
                at _loopao347
                    reset
                ta
            fi
        wend
        push _c347
        if
            at _b347
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b348
    sbm _a348 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c348
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao348
        while
            push _b348
            if  
                at _b348
                    dec
                ta
                at _a348
                    dec
                ta
                push _a348
                inc
                not
                if
                    at _c348
                        set 1
                    ta
                fi 
            else
                at _loopao348
                    reset
                ta
            fi
        wend
        push _c348
        if
            at _b348
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_1 
                add   
#(js) }
                push    addvvXnameB5_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b349
    sbm _a349 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c349
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao349
        while
            push _b349
            if  
                at _b349
                    dec
                ta
                at _a349
                    dec
                ta
                push _a349
                inc
                not
                if
                    at _c349
                        set 1
                    ta
                fi 
            else
                at _loopao349
                    reset
                ta
            fi
        wend
        push _c349
        if
            at _b349
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_2
                push    mulvvvXabsNameA5_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b350
    sbm _a350 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c350
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao350
        while
            push _b350
            if  
                at _b350
                    dec
                ta
                at _a350
                    dec
                ta
                push _a350
                inc
                not
                if
                    at _c350
                        set 1
                    ta
                fi 
            else
                at _loopao350
                    reset
                ta
            fi
        wend
        push _c350
        if
            at _b350
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b351
    sbm _a351 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c351
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao351
        while
            push _b351
            if  
                at _b351
                    dec
                ta
                at _a351
                    dec
                ta
                push _a351
                inc
                not
                if
                    at _c351
                        set 1
                    ta
                fi 
            else
                at _loopao351
                    reset
                ta
            fi
        wend
        push _c351
        if
            at _b351
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_2 
                add   
#(js) }
                push    addvvXnameB5_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b352
    sbm _a352 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c352
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao352
        while
            push _b352
            if  
                at _b352
                    dec
                ta
                at _a352
                    dec
                ta
                push _a352
                inc
                not
                if
                    at _c352
                        set 1
                    ta
                fi 
            else
                at _loopao352
                    reset
                ta
            fi
        wend
        push _c352
        if
            at _b352
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_3
                push    mulvvvXabsNameA5_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b353
    sbm _a353 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c353
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao353
        while
            push _b353
            if  
                at _b353
                    dec
                ta
                at _a353
                    dec
                ta
                push _a353
                inc
                not
                if
                    at _c353
                        set 1
                    ta
                fi 
            else
                at _loopao353
                    reset
                ta
            fi
        wend
        push _c353
        if
            at _b353
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b354
    sbm _a354 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c354
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao354
        while
            push _b354
            if  
                at _b354
                    dec
                ta
                at _a354
                    dec
                ta
                push _a354
                inc
                not
                if
                    at _c354
                        set 1
                    ta
                fi 
            else
                at _loopao354
                    reset
                ta
            fi
        wend
        push _c354
        if
            at _b354
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_3 
                add   
#(js) }
                push    addvvXnameB5_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b355
    sbm _a355 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c355
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao355
        while
            push _b355
            if  
                at _b355
                    dec
                ta
                at _a355
                    dec
                ta
                push _a355
                inc
                not
                if
                    at _c355
                        set 1
                    ta
                fi 
            else
                at _loopao355
                    reset
                ta
            fi
        wend
        push _c355
        if
            at _b355
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_4
                push    mulvvvXabsNameA5_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b356
    sbm _a356 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c356
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao356
        while
            push _b356
            if  
                at _b356
                    dec
                ta
                at _a356
                    dec
                ta
                push _a356
                inc
                not
                if
                    at _c356
                        set 1
                    ta
                fi 
            else
                at _loopao356
                    reset
                ta
            fi
        wend
        push _c356
        if
            at _b356
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b357
    sbm _a357 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c357
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao357
        while
            push _b357
            if  
                at _b357
                    dec
                ta
                at _a357
                    dec
                ta
                push _a357
                inc
                not
                if
                    at _c357
                        set 1
                    ta
                fi 
            else
                at _loopao357
                    reset
                ta
            fi
        wend
        push _c357
        if
            at _b357
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_4 
                add   
#(js) }
                push    addvvXnameB5_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b358
    sbm _a358 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c358
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao358
        while
            push _b358
            if  
                at _b358
                    dec
                ta
                at _a358
                    dec
                ta
                push _a358
                inc
                not
                if
                    at _c358
                        set 1
                    ta
                fi 
            else
                at _loopao358
                    reset
                ta
            fi
        wend
        push _c358
        if
            at _b358
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_5
                push    mulvvvXabsNameA5_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b359
    sbm _a359 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c359
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao359
        while
            push _b359
            if  
                at _b359
                    dec
                ta
                at _a359
                    dec
                ta
                push _a359
                inc
                not
                if
                    at _c359
                        set 1
                    ta
                fi 
            else
                at _loopao359
                    reset
                ta
            fi
        wend
        push _c359
        if
            at _b359
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX5_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b360
    sbm _a360 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c360
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao360
        while
            push _b360
            if  
                at _b360
                    dec
                ta
                at _a360
                    dec
                ta
                push _a360
                inc
                not
                if
                    at _c360
                        set 1
                    ta
                fi 
            else
                at _loopao360
                    reset
                ta
            fi
        wend
        push _c360
        if
            at _b360
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX5_5 
                add   
#(js) }
                pop     resultX5_c
            
            else # absB >= absA : 
                push    _aequb9
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX5_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA5_s
                    pop     resultX5_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA5_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b361
    sbm _a361 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c361
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao361
        while
            push _b361
            if  
                at _b361
                    dec
                ta
                at _a361
                    dec
                ta
                push _a361
                inc
                not
                if
                    at _c361
                        set 1
                    ta
                fi 
            else
                at _loopao361
                    reset
                ta
            fi
        wend
        push _c361
        if
            at _b361
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_0
                    push    addvvXnameB5_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b362
    sbm _a362 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c362
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao362
        while
            push _b362
            if  
                at _b362
                    dec
                ta
                at _a362
                    dec
                ta
                push _a362
                inc
                not
                if
                    at _c362
                        set 1
                    ta
                fi 
            else
                at _loopao362
                    reset
                ta
            fi
        wend
        push _c362
        if
            at _b362
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b363
    sbm _a363 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c363
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao363
        while
            push _b363
            if  
                at _b363
                    dec
                ta
                at _a363
                    dec
                ta
                push _a363
                inc
                not
                if
                    at _c363
                        set 1
                    ta
                fi 
            else
                at _loopao363
                    reset
                ta
            fi
        wend
        push _c363
        if
            at _b363
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_0
                    add    
#(js) }
                    push    mulvvvXabsNameA5_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b364
    sbm _a364 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c364
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao364
        while
            push _b364
            if  
                at _b364
                    dec
                ta
                at _a364
                    dec
                ta
                push _a364
                inc
                not
                if
                    at _c364
                        set 1
                    ta
                fi 
            else
                at _loopao364
                    reset
                ta
            fi
        wend
        push _c364
        if
            at _b364
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_1
                    push    addvvXnameB5_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b365
    sbm _a365 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c365
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao365
        while
            push _b365
            if  
                at _b365
                    dec
                ta
                at _a365
                    dec
                ta
                push _a365
                inc
                not
                if
                    at _c365
                        set 1
                    ta
                fi 
            else
                at _loopao365
                    reset
                ta
            fi
        wend
        push _c365
        if
            at _b365
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b366
    sbm _a366 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c366
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao366
        while
            push _b366
            if  
                at _b366
                    dec
                ta
                at _a366
                    dec
                ta
                push _a366
                inc
                not
                if
                    at _c366
                        set 1
                    ta
                fi 
            else
                at _loopao366
                    reset
                ta
            fi
        wend
        push _c366
        if
            at _b366
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_1
                    add    
#(js) }
                    push    mulvvvXabsNameA5_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b367
    sbm _a367 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c367
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao367
        while
            push _b367
            if  
                at _b367
                    dec
                ta
                at _a367
                    dec
                ta
                push _a367
                inc
                not
                if
                    at _c367
                        set 1
                    ta
                fi 
            else
                at _loopao367
                    reset
                ta
            fi
        wend
        push _c367
        if
            at _b367
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_2
                    push    addvvXnameB5_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b368
    sbm _a368 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c368
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao368
        while
            push _b368
            if  
                at _b368
                    dec
                ta
                at _a368
                    dec
                ta
                push _a368
                inc
                not
                if
                    at _c368
                        set 1
                    ta
                fi 
            else
                at _loopao368
                    reset
                ta
            fi
        wend
        push _c368
        if
            at _b368
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b369
    sbm _a369 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c369
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao369
        while
            push _b369
            if  
                at _b369
                    dec
                ta
                at _a369
                    dec
                ta
                push _a369
                inc
                not
                if
                    at _c369
                        set 1
                    ta
                fi 
            else
                at _loopao369
                    reset
                ta
            fi
        wend
        push _c369
        if
            at _b369
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_2
                    add    
#(js) }
                    push    mulvvvXabsNameA5_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b370
    sbm _a370 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c370
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao370
        while
            push _b370
            if  
                at _b370
                    dec
                ta
                at _a370
                    dec
                ta
                push _a370
                inc
                not
                if
                    at _c370
                        set 1
                    ta
                fi 
            else
                at _loopao370
                    reset
                ta
            fi
        wend
        push _c370
        if
            at _b370
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_3
                    push    addvvXnameB5_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b371
    sbm _a371 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c371
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao371
        while
            push _b371
            if  
                at _b371
                    dec
                ta
                at _a371
                    dec
                ta
                push _a371
                inc
                not
                if
                    at _c371
                        set 1
                    ta
                fi 
            else
                at _loopao371
                    reset
                ta
            fi
        wend
        push _c371
        if
            at _b371
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b372
    sbm _a372 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c372
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao372
        while
            push _b372
            if  
                at _b372
                    dec
                ta
                at _a372
                    dec
                ta
                push _a372
                inc
                not
                if
                    at _c372
                        set 1
                    ta
                fi 
            else
                at _loopao372
                    reset
                ta
            fi
        wend
        push _c372
        if
            at _b372
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_3
                    add    
#(js) }
                    push    mulvvvXabsNameA5_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b373
    sbm _a373 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c373
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao373
        while
            push _b373
            if  
                at _b373
                    dec
                ta
                at _a373
                    dec
                ta
                push _a373
                inc
                not
                if
                    at _c373
                        set 1
                    ta
                fi 
            else
                at _loopao373
                    reset
                ta
            fi
        wend
        push _c373
        if
            at _b373
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_4
                    push    addvvXnameB5_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b374
    sbm _a374 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c374
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao374
        while
            push _b374
            if  
                at _b374
                    dec
                ta
                at _a374
                    dec
                ta
                push _a374
                inc
                not
                if
                    at _c374
                        set 1
                    ta
                fi 
            else
                at _loopao374
                    reset
                ta
            fi
        wend
        push _c374
        if
            at _b374
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b375
    sbm _a375 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c375
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao375
        while
            push _b375
            if  
                at _b375
                    dec
                ta
                at _a375
                    dec
                ta
                push _a375
                inc
                not
                if
                    at _c375
                        set 1
                    ta
                fi 
            else
                at _loopao375
                    reset
                ta
            fi
        wend
        push _c375
        if
            at _b375
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_4
                    add    
#(js) }
                    push    mulvvvXabsNameA5_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b376
    sbm _a376 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c376
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao376
        while
            push _b376
            if  
                at _b376
                    dec
                ta
                at _a376
                    dec
                ta
                push _a376
                inc
                not
                if
                    at _c376
                        set 1
                    ta
                fi 
            else
                at _loopao376
                    reset
                ta
            fi
        wend
        push _c376
        if
            at _b376
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_5
                    push    addvvXnameB5_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b377
    sbm _a377 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c377
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao377
        while
            push _b377
            if  
                at _b377
                    dec
                ta
                at _a377
                    dec
                ta
                push _a377
                inc
                not
                if
                    at _c377
                        set 1
                    ta
                fi 
            else
                at _loopao377
                    reset
                ta
            fi
        wend
        push _c377
        if
            at _b377
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX5_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b378
    sbm _a378 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c378
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao378
        while
            push _b378
            if  
                at _b378
                    dec
                ta
                at _a378
                    dec
                ta
                push _a378
                inc
                not
                if
                    at _c378
                        set 1
                    ta
                fi 
            else
                at _loopao378
                    reset
                ta
            fi
        wend
        push _c378
        if
            at _b378
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX5_5
                    add    
#(js) }
                    pop     resultX5_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB5_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB5_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB5_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB5_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB5_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB5_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop5
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA5
        push mulvvvXsB5
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX5_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX5_c
    push    resultX5_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX5_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack12_0    # 0 byte of _instack12
#(js) }
    var _instack12_1    # 1 byte of _instack12
#(js) }
    var _instack12_2    # 2 byte of _instack12
#(js) }
    var _instack12_3    # 3 byte of _instack12
#(js) }
    var _instack12_4    # 4 byte of _instack12
#(js) }
    var _instack12_5    # 5 byte of _instack12
#(js) }
    var _instack12_s    # Sign of _instack12
    var _instack12_c    # carry of _instack12 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack12_0    # 0 byte of _outstack12
#(js) }
    var _outstack12_1    # 1 byte of _outstack12
#(js) }
    var _outstack12_2    # 2 byte of _outstack12
#(js) }
    var _outstack12_s    # Sign of _outstack12
    var _outstack12_c    # carry of _outstack12 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack12_0
#(js) }
    pop     _instack12_1
#(js) }
    pop     _instack12_2
#(js) }
    pop     _instack12_3
#(js) }
    pop     _instack12_4
#(js) }
    pop     _instack12_5
#(js) }
    pop     _instack12_s
    pop     _instack12_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack12_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack12_s
    pop _outstack12_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack12_4
            pop _outstack12_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack12_3
            pop _outstack12_1
#(js) }
            push _instack12_2
            pop _outstack12_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack12_c
    push    _outstack12_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack12_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack12_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack12_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA5_0
#(js) }
    pop     nameA5_1
#(js) }
    pop     nameA5_2
#(js) }
    pop     nameA5_s
    pop     nameA5_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)
#(begin macro)                subX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv4++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm negNameB3_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm negNameB3_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB3_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB3_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB3_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)        pushvX(X,nameB)
    push    __tmp24b___c
    push    __tmp24b___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24b___0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"negNameB"+_sv4)
#(js) for (var xx=0; xx < X; xx++) {
    pop     negNameB3_0
#(js) }
    pop     negNameB3_1
#(js) }
    pop     negNameB3_2
#(js) }
    pop     negNameB3_s
    pop     negNameB3_c
#(end macro)        popvX(X,"negNameB"+_sv4)
#(begin macro)        negvX(X,"negNameB"+_sv4)
    push    negNameB3_s
    dec
    bool
    dup
    if    # if name is now negative
#(js) for (var xx = 0; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB3_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB3_1
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB3_2
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at negNameB3_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
    pop     negNameB3_s
#(end macro)        negvX(X,"negNameB"+_sv4)
#(begin macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(js) _sv3++;
    
    push    __tmp24a___s
    push    negNameB3_s
    or
    not
    push    __tmp24a___s
    push    negNameB3_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b379
    sbm _a379 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c379
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao379
        while
            push _a379
            if
                at _a379
                    dec
                ta 
                at _b379
                    inc
                ta
                push _b379
                not
                if 
                    at _c379
                        set 1
                    ta
                fi
            else 
                at _loopao379
                    reset
                ta
            fi
        wend
        push _c379
        if
            at _a379
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    negNameB3_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b380
    sbm _a380 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c380
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao380
        while
            push _a380
            if
                at _a380
                    dec
                ta 
                at _b380
                    inc
                ta
                push _b380
                not
                if 
                    at _c380
                        set 1
                    ta
                fi
            else 
                at _loopao380
                    reset
                ta
            fi
        wend
        push _c380
        if
            at _a380
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b381
    sbm _a381 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c381
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao381
        while
            push _a381
            if
                at _a381
                    dec
                ta 
                at _b381
                    inc
                ta
                push _b381
                not
                if 
                    at _c381
                        set 1
                    ta
                fi
            else 
                at _loopao381
                    reset
                ta
            fi
        wend
        push _c381
        if
            at _a381
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b382
    sbm _a382 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c382
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao382
        while
            push _a382
            if
                at _a382
                    dec
                ta 
                at _b382
                    inc
                ta
                push _b382
                not
                if 
                    at _c382
                        set 1
                    ta
                fi
            else 
                at _loopao382
                    reset
                ta
            fi
        wend
        push _c382
        if
            at _a382
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    negNameB3_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b383
    sbm _a383 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c383
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao383
        while
            push _a383
            if
                at _a383
                    dec
                ta 
                at _b383
                    inc
                ta
                push _b383
                not
                if 
                    at _c383
                        set 1
                    ta
                fi
            else 
                at _loopao383
                    reset
                ta
            fi
        wend
        push _c383
        if
            at _a383
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b384
    sbm _a384 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c384
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao384
        while
            push _a384
            if
                at _a384
                    dec
                ta 
                at _b384
                    inc
                ta
                push _b384
                not
                if 
                    at _c384
                        set 1
                    ta
                fi
            else 
                at _loopao384
                    reset
                ta
            fi
        wend
        push _c384
        if
            at _a384
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b385
    sbm _a385 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c385
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao385
        while
            push _a385
            if
                at _a385
                    dec
                ta 
                at _b385
                    inc
                ta
                push _b385
                not
                if 
                    at _c385
                        set 1
                    ta
                fi
            else 
                at _loopao385
                    reset
                ta
            fi
        wend
        push _c385
        if
            at _a385
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    negNameB3_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b386
    sbm _a386 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c386
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao386
        while
            push _a386
            if
                at _a386
                    dec
                ta 
                at _b386
                    inc
                ta
                push _b386
                not
                if 
                    at _c386
                        set 1
                    ta
                fi
            else 
                at _loopao386
                    reset
                ta
            fi
        wend
        push _c386
        if
            at _a386
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b387
    sbm _a387 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c387
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao387
        while
            push _a387
            if
                at _a387
                    dec
                ta 
                at _b387
                    inc
                ta
                push _b387
                not
                if 
                    at _c387
                        set 1
                    ta
                fi
            else 
                at _loopao387
                    reset
                ta
            fi
        wend
        push _c387
        if
            at _a387
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb10
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb10
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    negNameB3_2
            sup
            if  
               at _asupb10
                set 1
               ta
            else 
                push    __tmp24a___2
                push    negNameB3_2
                diff
                if
                at _asupb10
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    negNameB3_1
            sup
            if  
               at _asupb10
                set 1
               ta
            else 
                push    __tmp24a___1
                push    negNameB3_1
                diff
                if
                at _asupb10
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    negNameB3_0
            sup
            if  
               at _asupb10
                set 1
               ta
            else 
                push    __tmp24a___0
                push    negNameB3_0
                diff
                if
                at _asupb10
                    reset
                ta
                else           
#(js) }
            at _aequb10
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb10
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b388
    sbm _a388 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c388
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao388
        while
            push _b388
            if  
                at _b388
                    dec
                ta
                at _a388
                    dec
                ta
                push _a388
                inc
                not
                if
                    at _c388
                        set 1
                    ta
                fi 
            else
                at _loopao388
                    reset
                ta
            fi
        wend
        push _c388
        if
            at _b388
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    negNameB3_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b389
    sbm _a389 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c389
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao389
        while
            push _b389
            if  
                at _b389
                    dec
                ta
                at _a389
                    dec
                ta
                push _a389
                inc
                not
                if
                    at _c389
                        set 1
                    ta
                fi 
            else
                at _loopao389
                    reset
                ta
            fi
        wend
        push _c389
        if
            at _b389
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b390
    sbm _a390 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c390
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao390
        while
            push _b390
            if  
                at _b390
                    dec
                ta
                at _a390
                    dec
                ta
                push _a390
                inc
                not
                if
                    at _c390
                        set 1
                    ta
                fi 
            else
                at _loopao390
                    reset
                ta
            fi
        wend
        push _c390
        if
            at _b390
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b391
    sbm _a391 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c391
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao391
        while
            push _b391
            if  
                at _b391
                    dec
                ta
                at _a391
                    dec
                ta
                push _a391
                inc
                not
                if
                    at _c391
                        set 1
                    ta
                fi 
            else
                at _loopao391
                    reset
                ta
            fi
        wend
        push _c391
        if
            at _b391
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    negNameB3_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b392
    sbm _a392 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c392
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao392
        while
            push _b392
            if  
                at _b392
                    dec
                ta
                at _a392
                    dec
                ta
                push _a392
                inc
                not
                if
                    at _c392
                        set 1
                    ta
                fi 
            else
                at _loopao392
                    reset
                ta
            fi
        wend
        push _c392
        if
            at _b392
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b393
    sbm _a393 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c393
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao393
        while
            push _b393
            if  
                at _b393
                    dec
                ta
                at _a393
                    dec
                ta
                push _a393
                inc
                not
                if
                    at _c393
                        set 1
                    ta
                fi 
            else
                at _loopao393
                    reset
                ta
            fi
        wend
        push _c393
        if
            at _b393
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b394
    sbm _a394 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c394
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao394
        while
            push _b394
            if  
                at _b394
                    dec
                ta
                at _a394
                    dec
                ta
                push _a394
                inc
                not
                if
                    at _c394
                        set 1
                    ta
                fi 
            else
                at _loopao394
                    reset
                ta
            fi
        wend
        push _c394
        if
            at _b394
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    negNameB3_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b395
    sbm _a395 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c395
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao395
        while
            push _b395
            if  
                at _b395
                    dec
                ta
                at _a395
                    dec
                ta
                push _a395
                inc
                not
                if
                    at _c395
                        set 1
                    ta
                fi 
            else
                at _loopao395
                    reset
                ta
            fi
        wend
        push _c395
        if
            at _b395
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b396
    sbm _a396 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c396
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao396
        while
            push _b396
            if  
                at _b396
                    dec
                ta
                at _a396
                    dec
                ta
                push _a396
                inc
                not
                if
                    at _c396
                        set 1
                    ta
                fi 
            else
                at _loopao396
                    reset
                ta
            fi
        wend
        push _c396
        if
            at _b396
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb10
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    negNameB3_s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    negNameB3_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b397
    sbm _a397 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c397
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao397
        while
            push _b397
            if  
                at _b397
                    dec
                ta
                at _a397
                    dec
                ta
                push _a397
                inc
                not
                if
                    at _c397
                        set 1
                    ta
                fi 
            else
                at _loopao397
                    reset
                ta
            fi
        wend
        push _c397
        if
            at _b397
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b398
    sbm _a398 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c398
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao398
        while
            push _b398
            if  
                at _b398
                    dec
                ta
                at _a398
                    dec
                ta
                push _a398
                inc
                not
                if
                    at _c398
                        set 1
                    ta
                fi 
            else
                at _loopao398
                    reset
                ta
            fi
        wend
        push _c398
        if
            at _b398
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b399
    sbm _a399 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c399
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao399
        while
            push _b399
            if  
                at _b399
                    dec
                ta
                at _a399
                    dec
                ta
                push _a399
                inc
                not
                if
                    at _c399
                        set 1
                    ta
                fi 
            else
                at _loopao399
                    reset
                ta
            fi
        wend
        push _c399
        if
            at _b399
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    negNameB3_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b400
    sbm _a400 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c400
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao400
        while
            push _b400
            if  
                at _b400
                    dec
                ta
                at _a400
                    dec
                ta
                push _a400
                inc
                not
                if
                    at _c400
                        set 1
                    ta
                fi 
            else
                at _loopao400
                    reset
                ta
            fi
        wend
        push _c400
        if
            at _b400
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b401
    sbm _a401 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c401
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao401
        while
            push _b401
            if  
                at _b401
                    dec
                ta
                at _a401
                    dec
                ta
                push _a401
                inc
                not
                if
                    at _c401
                        set 1
                    ta
                fi 
            else
                at _loopao401
                    reset
                ta
            fi
        wend
        push _c401
        if
            at _b401
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b402
    sbm _a402 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c402
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao402
        while
            push _b402
            if  
                at _b402
                    dec
                ta
                at _a402
                    dec
                ta
                push _a402
                inc
                not
                if
                    at _c402
                        set 1
                    ta
                fi 
            else
                at _loopao402
                    reset
                ta
            fi
        wend
        push _c402
        if
            at _b402
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    negNameB3_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b403
    sbm _a403 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c403
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao403
        while
            push _b403
            if  
                at _b403
                    dec
                ta
                at _a403
                    dec
                ta
                push _a403
                inc
                not
                if
                    at _c403
                        set 1
                    ta
                fi 
            else
                at _loopao403
                    reset
                ta
            fi
        wend
        push _c403
        if
            at _b403
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b404
    sbm _a404 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c404
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao404
        while
            push _b404
            if  
                at _b404
                    dec
                ta
                at _a404
                    dec
                ta
                push _a404
                inc
                not
                if
                    at _c404
                        set 1
                    ta
                fi 
            else
                at _loopao404
                    reset
                ta
            fi
        wend
        push _c404
        if
            at _b404
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b405
    sbm _a405 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c405
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao405
        while
            push _b405
            if  
                at _b405
                    dec
                ta
                at _a405
                    dec
                ta
                push _a405
                inc
                not
                if
                    at _c405
                        set 1
                    ta
                fi 
            else
                at _loopao405
                    reset
                ta
            fi
        wend
        push _c405
        if
            at _b405
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)    subvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)                subX(FP)
#(begin macro)                pushvX(FP,"pr")
    push    pr_c
    push    pr_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pr_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pr_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pr_0
#(js) }
#(end macro)                pushvX(FP,"pr")
#(begin macro)                addX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv3++;
    
    push    __tmp24a___s
    push    __tmp24b___s
    or
    not
    push    __tmp24a___s
    push    __tmp24b___s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b406
    sbm _a406 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c406
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao406
        while
            push _a406
            if
                at _a406
                    dec
                ta 
                at _b406
                    inc
                ta
                push _b406
                not
                if 
                    at _c406
                        set 1
                    ta
                fi
            else 
                at _loopao406
                    reset
                ta
            fi
        wend
        push _c406
        if
            at _a406
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b407
    sbm _a407 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c407
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao407
        while
            push _a407
            if
                at _a407
                    dec
                ta 
                at _b407
                    inc
                ta
                push _b407
                not
                if 
                    at _c407
                        set 1
                    ta
                fi
            else 
                at _loopao407
                    reset
                ta
            fi
        wend
        push _c407
        if
            at _a407
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b408
    sbm _a408 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c408
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao408
        while
            push _a408
            if
                at _a408
                    dec
                ta 
                at _b408
                    inc
                ta
                push _b408
                not
                if 
                    at _c408
                        set 1
                    ta
                fi
            else 
                at _loopao408
                    reset
                ta
            fi
        wend
        push _c408
        if
            at _a408
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b409
    sbm _a409 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c409
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao409
        while
            push _a409
            if
                at _a409
                    dec
                ta 
                at _b409
                    inc
                ta
                push _b409
                not
                if 
                    at _c409
                        set 1
                    ta
                fi
            else 
                at _loopao409
                    reset
                ta
            fi
        wend
        push _c409
        if
            at _a409
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b410
    sbm _a410 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c410
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao410
        while
            push _a410
            if
                at _a410
                    dec
                ta 
                at _b410
                    inc
                ta
                push _b410
                not
                if 
                    at _c410
                        set 1
                    ta
                fi
            else 
                at _loopao410
                    reset
                ta
            fi
        wend
        push _c410
        if
            at _a410
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b411
    sbm _a411 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c411
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao411
        while
            push _a411
            if
                at _a411
                    dec
                ta 
                at _b411
                    inc
                ta
                push _b411
                not
                if 
                    at _c411
                        set 1
                    ta
                fi
            else 
                at _loopao411
                    reset
                ta
            fi
        wend
        push _c411
        if
            at _a411
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b412
    sbm _a412 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c412
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao412
        while
            push _a412
            if
                at _a412
                    dec
                ta 
                at _b412
                    inc
                ta
                push _b412
                not
                if 
                    at _c412
                        set 1
                    ta
                fi
            else 
                at _loopao412
                    reset
                ta
            fi
        wend
        push _c412
        if
            at _a412
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b413
    sbm _a413 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c413
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao413
        while
            push _a413
            if
                at _a413
                    dec
                ta 
                at _b413
                    inc
                ta
                push _b413
                not
                if 
                    at _c413
                        set 1
                    ta
                fi
            else 
                at _loopao413
                    reset
                ta
            fi
        wend
        push _c413
        if
            at _a413
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b414
    sbm _a414 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c414
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao414
        while
            push _a414
            if
                at _a414
                    dec
                ta 
                at _b414
                    inc
                ta
                push _b414
                not
                if 
                    at _c414
                        set 1
                    ta
                fi
            else 
                at _loopao414
                    reset
                ta
            fi
        wend
        push _c414
        if
            at _a414
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb11
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb11
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    __tmp24b___2
            sup
            if  
               at _asupb11
                set 1
               ta
            else 
                push    __tmp24a___2
                push    __tmp24b___2
                diff
                if
                at _asupb11
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    __tmp24b___1
            sup
            if  
               at _asupb11
                set 1
               ta
            else 
                push    __tmp24a___1
                push    __tmp24b___1
                diff
                if
                at _asupb11
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    __tmp24b___0
            sup
            if  
               at _asupb11
                set 1
               ta
            else 
                push    __tmp24a___0
                push    __tmp24b___0
                diff
                if
                at _asupb11
                    reset
                ta
                else           
#(js) }
            at _aequb11
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb11
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b415
    sbm _a415 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c415
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao415
        while
            push _b415
            if  
                at _b415
                    dec
                ta
                at _a415
                    dec
                ta
                push _a415
                inc
                not
                if
                    at _c415
                        set 1
                    ta
                fi 
            else
                at _loopao415
                    reset
                ta
            fi
        wend
        push _c415
        if
            at _b415
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b416
    sbm _a416 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c416
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao416
        while
            push _b416
            if  
                at _b416
                    dec
                ta
                at _a416
                    dec
                ta
                push _a416
                inc
                not
                if
                    at _c416
                        set 1
                    ta
                fi 
            else
                at _loopao416
                    reset
                ta
            fi
        wend
        push _c416
        if
            at _b416
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b417
    sbm _a417 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c417
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao417
        while
            push _b417
            if  
                at _b417
                    dec
                ta
                at _a417
                    dec
                ta
                push _a417
                inc
                not
                if
                    at _c417
                        set 1
                    ta
                fi 
            else
                at _loopao417
                    reset
                ta
            fi
        wend
        push _c417
        if
            at _b417
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b418
    sbm _a418 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c418
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao418
        while
            push _b418
            if  
                at _b418
                    dec
                ta
                at _a418
                    dec
                ta
                push _a418
                inc
                not
                if
                    at _c418
                        set 1
                    ta
                fi 
            else
                at _loopao418
                    reset
                ta
            fi
        wend
        push _c418
        if
            at _b418
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b419
    sbm _a419 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c419
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao419
        while
            push _b419
            if  
                at _b419
                    dec
                ta
                at _a419
                    dec
                ta
                push _a419
                inc
                not
                if
                    at _c419
                        set 1
                    ta
                fi 
            else
                at _loopao419
                    reset
                ta
            fi
        wend
        push _c419
        if
            at _b419
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b420
    sbm _a420 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c420
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao420
        while
            push _b420
            if  
                at _b420
                    dec
                ta
                at _a420
                    dec
                ta
                push _a420
                inc
                not
                if
                    at _c420
                        set 1
                    ta
                fi 
            else
                at _loopao420
                    reset
                ta
            fi
        wend
        push _c420
        if
            at _b420
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b421
    sbm _a421 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c421
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao421
        while
            push _b421
            if  
                at _b421
                    dec
                ta
                at _a421
                    dec
                ta
                push _a421
                inc
                not
                if
                    at _c421
                        set 1
                    ta
                fi 
            else
                at _loopao421
                    reset
                ta
            fi
        wend
        push _c421
        if
            at _b421
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b422
    sbm _a422 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c422
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao422
        while
            push _b422
            if  
                at _b422
                    dec
                ta
                at _a422
                    dec
                ta
                push _a422
                inc
                not
                if
                    at _c422
                        set 1
                    ta
                fi 
            else
                at _loopao422
                    reset
                ta
            fi
        wend
        push _c422
        if
            at _b422
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b423
    sbm _a423 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c423
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao423
        while
            push _b423
            if  
                at _b423
                    dec
                ta
                at _a423
                    dec
                ta
                push _a423
                inc
                not
                if
                    at _c423
                        set 1
                    ta
                fi 
            else
                at _loopao423
                    reset
                ta
            fi
        wend
        push _c423
        if
            at _b423
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb11
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    __tmp24b___s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b424
    sbm _a424 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c424
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao424
        while
            push _b424
            if  
                at _b424
                    dec
                ta
                at _a424
                    dec
                ta
                push _a424
                inc
                not
                if
                    at _c424
                        set 1
                    ta
                fi 
            else
                at _loopao424
                    reset
                ta
            fi
        wend
        push _c424
        if
            at _b424
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b425
    sbm _a425 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c425
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao425
        while
            push _b425
            if  
                at _b425
                    dec
                ta
                at _a425
                    dec
                ta
                push _a425
                inc
                not
                if
                    at _c425
                        set 1
                    ta
                fi 
            else
                at _loopao425
                    reset
                ta
            fi
        wend
        push _c425
        if
            at _b425
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b426
    sbm _a426 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c426
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao426
        while
            push _b426
            if  
                at _b426
                    dec
                ta
                at _a426
                    dec
                ta
                push _a426
                inc
                not
                if
                    at _c426
                        set 1
                    ta
                fi 
            else
                at _loopao426
                    reset
                ta
            fi
        wend
        push _c426
        if
            at _b426
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b427
    sbm _a427 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c427
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao427
        while
            push _b427
            if  
                at _b427
                    dec
                ta
                at _a427
                    dec
                ta
                push _a427
                inc
                not
                if
                    at _c427
                        set 1
                    ta
                fi 
            else
                at _loopao427
                    reset
                ta
            fi
        wend
        push _c427
        if
            at _b427
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b428
    sbm _a428 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c428
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao428
        while
            push _b428
            if  
                at _b428
                    dec
                ta
                at _a428
                    dec
                ta
                push _a428
                inc
                not
                if
                    at _c428
                        set 1
                    ta
                fi 
            else
                at _loopao428
                    reset
                ta
            fi
        wend
        push _c428
        if
            at _b428
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b429
    sbm _a429 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c429
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao429
        while
            push _b429
            if  
                at _b429
                    dec
                ta
                at _a429
                    dec
                ta
                push _a429
                inc
                not
                if
                    at _c429
                        set 1
                    ta
                fi 
            else
                at _loopao429
                    reset
                ta
            fi
        wend
        push _c429
        if
            at _b429
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b430
    sbm _a430 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c430
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao430
        while
            push _b430
            if  
                at _b430
                    dec
                ta
                at _a430
                    dec
                ta
                push _a430
                inc
                not
                if
                    at _c430
                        set 1
                    ta
                fi 
            else
                at _loopao430
                    reset
                ta
            fi
        wend
        push _c430
        if
            at _b430
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b431
    sbm _a431 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c431
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao431
        while
            push _b431
            if  
                at _b431
                    dec
                ta
                at _a431
                    dec
                ta
                push _a431
                inc
                not
                if
                    at _c431
                        set 1
                    ta
                fi 
            else
                at _loopao431
                    reset
                ta
            fi
        wend
        push _c431
        if
            at _b431
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b432
    sbm _a432 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c432
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao432
        while
            push _b432
            if  
                at _b432
                    dec
                ta
                at _a432
                    dec
                ta
                push _a432
                inc
                not
                if
                    at _c432
                        set 1
                    ta
                fi 
            else
                at _loopao432
                    reset
                ta
            fi
        wend
        push _c432
        if
            at _b432
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)                addX(FP)
#(begin macro)                popvX(FP,"newRe")
#(js) for (var xx=0; xx < X; xx++) {
    pop     newRe_0
#(js) }
    pop     newRe_1
#(js) }
    pop     newRe_2
#(js) }
    pop     newRe_s
    pop     newRe_c
#(end macro)                popvX(FP,"newRe")
            #    newIm = 2 * oldRe * oldIm + pi
#(begin macro)                pushFP(FP_I,FP_P,2)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack13_0 - 0
#(js) }
    sbm _instack13_1 - 1
#(js) }
    sbm _instack13_2 - 2
#(js) }
    sbm _instack13_s - 3
    sbm _instack13_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack13_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)                pushFP(FP_I,FP_P,2)
#(begin macro)                pushvX(FP,"oldRe")
    push    oldRe_c
    push    oldRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldRe_0
#(js) }
#(end macro)                pushvX(FP,"oldRe")
#(begin macro)                mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB6_0 - 0
#(js) }
    sbm nameB6_1 - 1
#(js) }
    sbm nameB6_2 - 2
#(js) }
    sbm nameB6_s - 3
    sbm nameB6_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA6_0 - 5
#(js) }
    sbm nameA6_1 - 6
#(js) }
    sbm nameA6_2 - 7
#(js) }
    sbm nameA6_s - 8
    sbm nameA6_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA6_c
    push    nameA6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA6_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput11_0 - 0
#(js) }
    sbm _castXInput11_1 - 1
#(js) }
    sbm _castXInput11_2 - 2
#(js) }
    sbm _castXInput11_s - 3
    sbm _castXInput11_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput11_0    # 0 byte of _castXoutput11
#(js) }
    var _castXoutput11_1    # 1 byte of _castXoutput11
#(js) }
    var _castXoutput11_2    # 2 byte of _castXoutput11
#(js) }
    var _castXoutput11_3    # 3 byte of _castXoutput11
#(js) }
    var _castXoutput11_4    # 4 byte of _castXoutput11
#(js) }
    var _castXoutput11_5    # 5 byte of _castXoutput11
#(js) }
    var _castXoutput11_s    # Sign of _castXoutput11
    var _castXoutput11_c    # carry of _castXoutput11 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori11_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori11_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori11_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori11_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori11_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest11_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest11_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest11_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput11_c
    push    _castXInput11_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput11_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput11_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput11_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori11_0
#(js) }
    pop     ori11_1
#(js) }
    pop     ori11_2
#(js) }
    pop     ori11_s
    pop     ori11_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori11_s   
        pop     dest11_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori11_0
                pop     dest11_0
#(js) }
                push    ori11_1
                pop     dest11_1
#(js) }
                push    ori11_2
                pop     dest11_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest11_3
#(js) } 
                push    0
                pop     dest11_4
#(js) } 
                push    0
                pop     dest11_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest11_c
    push    dest11_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest11_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput11_0
#(js) }
    pop     _castXoutput11_1
#(js) }
    pop     _castXoutput11_2
#(js) }
    pop     _castXoutput11_3
#(js) }
    pop     _castXoutput11_4
#(js) }
    pop     _castXoutput11_5
#(js) }
    pop     _castXoutput11_s
    pop     _castXoutput11_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput11_c
    push    _castXoutput11_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput11_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX6_0
#(js) }
    pop     nameAX6_1
#(js) }
    pop     nameAX6_2
#(js) }
    pop     nameAX6_3
#(js) }
    pop     nameAX6_4
#(js) }
    pop     nameAX6_5
#(js) }
    pop     nameAX6_s
    pop     nameAX6_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB6_c
    push    nameB6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB6_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput12_0 - 0
#(js) }
    sbm _castXInput12_1 - 1
#(js) }
    sbm _castXInput12_2 - 2
#(js) }
    sbm _castXInput12_s - 3
    sbm _castXInput12_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput12_0    # 0 byte of _castXoutput12
#(js) }
    var _castXoutput12_1    # 1 byte of _castXoutput12
#(js) }
    var _castXoutput12_2    # 2 byte of _castXoutput12
#(js) }
    var _castXoutput12_3    # 3 byte of _castXoutput12
#(js) }
    var _castXoutput12_4    # 4 byte of _castXoutput12
#(js) }
    var _castXoutput12_5    # 5 byte of _castXoutput12
#(js) }
    var _castXoutput12_s    # Sign of _castXoutput12
    var _castXoutput12_c    # carry of _castXoutput12 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori12_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori12_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori12_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori12_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori12_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest12_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest12_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest12_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput12_c
    push    _castXInput12_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput12_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput12_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput12_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori12_0
#(js) }
    pop     ori12_1
#(js) }
    pop     ori12_2
#(js) }
    pop     ori12_s
    pop     ori12_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori12_s   
        pop     dest12_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori12_0
                pop     dest12_0
#(js) }
                push    ori12_1
                pop     dest12_1
#(js) }
                push    ori12_2
                pop     dest12_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest12_3
#(js) } 
                push    0
                pop     dest12_4
#(js) } 
                push    0
                pop     dest12_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest12_c
    push    dest12_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest12_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput12_0
#(js) }
    pop     _castXoutput12_1
#(js) }
    pop     _castXoutput12_2
#(js) }
    pop     _castXoutput12_3
#(js) }
    pop     _castXoutput12_4
#(js) }
    pop     _castXoutput12_5
#(js) }
    pop     _castXoutput12_s
    pop     _castXoutput12_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput12_c
    push    _castXoutput12_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput12_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX6_0
#(js) }
    pop     nameBX6_1
#(js) }
    pop     nameBX6_2
#(js) }
    pop     nameBX6_3
#(js) }
    pop     nameBX6_4
#(js) }
    pop     nameBX6_5
#(js) }
    pop     nameBX6_s
    pop     nameBX6_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX6_c
    push    nameAX6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX6_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA6_0
#(js) }
    pop     mulvvvXabsNameA6_1
#(js) }
    pop     mulvvvXabsNameA6_2
#(js) }
    pop     mulvvvXabsNameA6_3
#(js) }
    pop     mulvvvXabsNameA6_4
#(js) }
    pop     mulvvvXabsNameA6_5
#(js) }
    pop     mulvvvXabsNameA6_s
    pop     mulvvvXabsNameA6_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA6
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA6_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA6
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA6_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX6_c
    push    nameBX6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX6_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB6_0
#(js) }
    pop     mulvvvXabsNameB6_1
#(js) }
    pop     mulvvvXabsNameB6_2
#(js) }
    pop     mulvvvXabsNameB6_3
#(js) }
    pop     mulvvvXabsNameB6_4
#(js) }
    pop     mulvvvXabsNameB6_5
#(js) }
    pop     mulvvvXabsNameB6_s
    pop     mulvvvXabsNameB6_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB6
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB6_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB6
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB6_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX6_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop6
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB6_0
    bool
#(js) }
    push mulvvvXabsNameB6_1
    bool
#(js) }
    push mulvvvXabsNameB6_2
    bool
#(js) }
    push mulvvvXabsNameB6_3
    bool
#(js) }
    push mulvvvXabsNameB6_4
    bool
#(js) }
    push mulvvvXabsNameB6_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB6_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB6_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB6_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX6_c
    push    resultX6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB6_0
#(js) }
    pop     addvvXnameB6_1
#(js) }
    pop     addvvXnameB6_2
#(js) }
    pop     addvvXnameB6_3
#(js) }
    pop     addvvXnameB6_4
#(js) }
    pop     addvvXnameB6_5
#(js) }
    pop     addvvXnameB6_s
    pop     addvvXnameB6_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB6_s
    push    mulvvvXabsNameA6_s
    or
    not
    push    addvvXnameB6_s
    push    mulvvvXabsNameA6_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB6_s
        pop     resultX6_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB6_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b433
    sbm _a433 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c433
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao433
        while
            push _a433
            if
                at _a433
                    dec
                ta 
                at _b433
                    inc
                ta
                push _b433
                not
                if 
                    at _c433
                        set 1
                    ta
                fi
            else 
                at _loopao433
                    reset
                ta
            fi
        wend
        push _c433
        if
            at _a433
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_0
        push    mulvvvXabsNameA6_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b434
    sbm _a434 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c434
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao434
        while
            push _a434
            if
                at _a434
                    dec
                ta 
                at _b434
                    inc
                ta
                push _b434
                not
                if 
                    at _c434
                        set 1
                    ta
                fi
            else 
                at _loopao434
                    reset
                ta
            fi
        wend
        push _c434
        if
            at _a434
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b435
    sbm _a435 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c435
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao435
        while
            push _a435
            if
                at _a435
                    dec
                ta 
                at _b435
                    inc
                ta
                push _b435
                not
                if 
                    at _c435
                        set 1
                    ta
                fi
            else 
                at _loopao435
                    reset
                ta
            fi
        wend
        push _c435
        if
            at _a435
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_0
        add    
#(js) }
        push    addvvXnameB6_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b436
    sbm _a436 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c436
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao436
        while
            push _a436
            if
                at _a436
                    dec
                ta 
                at _b436
                    inc
                ta
                push _b436
                not
                if 
                    at _c436
                        set 1
                    ta
                fi
            else 
                at _loopao436
                    reset
                ta
            fi
        wend
        push _c436
        if
            at _a436
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_1
        push    mulvvvXabsNameA6_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b437
    sbm _a437 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c437
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao437
        while
            push _a437
            if
                at _a437
                    dec
                ta 
                at _b437
                    inc
                ta
                push _b437
                not
                if 
                    at _c437
                        set 1
                    ta
                fi
            else 
                at _loopao437
                    reset
                ta
            fi
        wend
        push _c437
        if
            at _a437
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b438
    sbm _a438 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c438
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao438
        while
            push _a438
            if
                at _a438
                    dec
                ta 
                at _b438
                    inc
                ta
                push _b438
                not
                if 
                    at _c438
                        set 1
                    ta
                fi
            else 
                at _loopao438
                    reset
                ta
            fi
        wend
        push _c438
        if
            at _a438
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_1
        add    
#(js) }
        push    addvvXnameB6_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b439
    sbm _a439 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c439
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao439
        while
            push _a439
            if
                at _a439
                    dec
                ta 
                at _b439
                    inc
                ta
                push _b439
                not
                if 
                    at _c439
                        set 1
                    ta
                fi
            else 
                at _loopao439
                    reset
                ta
            fi
        wend
        push _c439
        if
            at _a439
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_2
        push    mulvvvXabsNameA6_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b440
    sbm _a440 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c440
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao440
        while
            push _a440
            if
                at _a440
                    dec
                ta 
                at _b440
                    inc
                ta
                push _b440
                not
                if 
                    at _c440
                        set 1
                    ta
                fi
            else 
                at _loopao440
                    reset
                ta
            fi
        wend
        push _c440
        if
            at _a440
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b441
    sbm _a441 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c441
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao441
        while
            push _a441
            if
                at _a441
                    dec
                ta 
                at _b441
                    inc
                ta
                push _b441
                not
                if 
                    at _c441
                        set 1
                    ta
                fi
            else 
                at _loopao441
                    reset
                ta
            fi
        wend
        push _c441
        if
            at _a441
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_2
        add    
#(js) }
        push    addvvXnameB6_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b442
    sbm _a442 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c442
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao442
        while
            push _a442
            if
                at _a442
                    dec
                ta 
                at _b442
                    inc
                ta
                push _b442
                not
                if 
                    at _c442
                        set 1
                    ta
                fi
            else 
                at _loopao442
                    reset
                ta
            fi
        wend
        push _c442
        if
            at _a442
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_3
        push    mulvvvXabsNameA6_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b443
    sbm _a443 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c443
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao443
        while
            push _a443
            if
                at _a443
                    dec
                ta 
                at _b443
                    inc
                ta
                push _b443
                not
                if 
                    at _c443
                        set 1
                    ta
                fi
            else 
                at _loopao443
                    reset
                ta
            fi
        wend
        push _c443
        if
            at _a443
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b444
    sbm _a444 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c444
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao444
        while
            push _a444
            if
                at _a444
                    dec
                ta 
                at _b444
                    inc
                ta
                push _b444
                not
                if 
                    at _c444
                        set 1
                    ta
                fi
            else 
                at _loopao444
                    reset
                ta
            fi
        wend
        push _c444
        if
            at _a444
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_3
        add    
#(js) }
        push    addvvXnameB6_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b445
    sbm _a445 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c445
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao445
        while
            push _a445
            if
                at _a445
                    dec
                ta 
                at _b445
                    inc
                ta
                push _b445
                not
                if 
                    at _c445
                        set 1
                    ta
                fi
            else 
                at _loopao445
                    reset
                ta
            fi
        wend
        push _c445
        if
            at _a445
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_4
        push    mulvvvXabsNameA6_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b446
    sbm _a446 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c446
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao446
        while
            push _a446
            if
                at _a446
                    dec
                ta 
                at _b446
                    inc
                ta
                push _b446
                not
                if 
                    at _c446
                        set 1
                    ta
                fi
            else 
                at _loopao446
                    reset
                ta
            fi
        wend
        push _c446
        if
            at _a446
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b447
    sbm _a447 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c447
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao447
        while
            push _a447
            if
                at _a447
                    dec
                ta 
                at _b447
                    inc
                ta
                push _b447
                not
                if 
                    at _c447
                        set 1
                    ta
                fi
            else 
                at _loopao447
                    reset
                ta
            fi
        wend
        push _c447
        if
            at _a447
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_4
        add    
#(js) }
        push    addvvXnameB6_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b448
    sbm _a448 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c448
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao448
        while
            push _a448
            if
                at _a448
                    dec
                ta 
                at _b448
                    inc
                ta
                push _b448
                not
                if 
                    at _c448
                        set 1
                    ta
                fi
            else 
                at _loopao448
                    reset
                ta
            fi
        wend
        push _c448
        if
            at _a448
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_5
        push    mulvvvXabsNameA6_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b449
    sbm _a449 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c449
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao449
        while
            push _a449
            if
                at _a449
                    dec
                ta 
                at _b449
                    inc
                ta
                push _b449
                not
                if 
                    at _c449
                        set 1
                    ta
                fi
            else 
                at _loopao449
                    reset
                ta
            fi
        wend
        push _c449
        if
            at _a449
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX6_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b450
    sbm _a450 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c450
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao450
        while
            push _a450
            if
                at _a450
                    dec
                ta 
                at _b450
                    inc
                ta
                push _b450
                not
                if 
                    at _c450
                        set 1
                    ta
                fi
            else 
                at _loopao450
                    reset
                ta
            fi
        wend
        push _c450
        if
            at _a450
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX6_5
        add    
#(js) }
        pop     resultX6_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb12
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb12
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB6_5
            push    mulvvvXabsNameA6_5
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_5
                push    mulvvvXabsNameA6_5
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB6_4
            push    mulvvvXabsNameA6_4
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_4
                push    mulvvvXabsNameA6_4
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB6_3
            push    mulvvvXabsNameA6_3
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_3
                push    mulvvvXabsNameA6_3
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB6_2
            push    mulvvvXabsNameA6_2
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_2
                push    mulvvvXabsNameA6_2
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB6_1
            push    mulvvvXabsNameA6_1
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_1
                push    mulvvvXabsNameA6_1
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB6_0
            push    mulvvvXabsNameA6_0
            sup
            if  
               at _asupb12
                set 1
               ta
            else 
                push    addvvXnameB6_0
                push    mulvvvXabsNameA6_0
                diff
                if
                at _asupb12
                    reset
                ta
                else           
#(js) }
            at _aequb12
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb12
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB6_s
                pop     resultX6_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB6_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b451
    sbm _a451 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c451
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao451
        while
            push _b451
            if  
                at _b451
                    dec
                ta
                at _a451
                    dec
                ta
                push _a451
                inc
                not
                if
                    at _c451
                        set 1
                    ta
                fi 
            else
                at _loopao451
                    reset
                ta
            fi
        wend
        push _c451
        if
            at _b451
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_0
                push    mulvvvXabsNameA6_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b452
    sbm _a452 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c452
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao452
        while
            push _b452
            if  
                at _b452
                    dec
                ta
                at _a452
                    dec
                ta
                push _a452
                inc
                not
                if
                    at _c452
                        set 1
                    ta
                fi 
            else
                at _loopao452
                    reset
                ta
            fi
        wend
        push _c452
        if
            at _b452
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b453
    sbm _a453 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c453
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao453
        while
            push _b453
            if  
                at _b453
                    dec
                ta
                at _a453
                    dec
                ta
                push _a453
                inc
                not
                if
                    at _c453
                        set 1
                    ta
                fi 
            else
                at _loopao453
                    reset
                ta
            fi
        wend
        push _c453
        if
            at _b453
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_0 
                add   
#(js) }
                push    addvvXnameB6_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b454
    sbm _a454 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c454
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao454
        while
            push _b454
            if  
                at _b454
                    dec
                ta
                at _a454
                    dec
                ta
                push _a454
                inc
                not
                if
                    at _c454
                        set 1
                    ta
                fi 
            else
                at _loopao454
                    reset
                ta
            fi
        wend
        push _c454
        if
            at _b454
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_1
                push    mulvvvXabsNameA6_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b455
    sbm _a455 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c455
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao455
        while
            push _b455
            if  
                at _b455
                    dec
                ta
                at _a455
                    dec
                ta
                push _a455
                inc
                not
                if
                    at _c455
                        set 1
                    ta
                fi 
            else
                at _loopao455
                    reset
                ta
            fi
        wend
        push _c455
        if
            at _b455
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b456
    sbm _a456 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c456
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao456
        while
            push _b456
            if  
                at _b456
                    dec
                ta
                at _a456
                    dec
                ta
                push _a456
                inc
                not
                if
                    at _c456
                        set 1
                    ta
                fi 
            else
                at _loopao456
                    reset
                ta
            fi
        wend
        push _c456
        if
            at _b456
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_1 
                add   
#(js) }
                push    addvvXnameB6_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b457
    sbm _a457 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c457
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao457
        while
            push _b457
            if  
                at _b457
                    dec
                ta
                at _a457
                    dec
                ta
                push _a457
                inc
                not
                if
                    at _c457
                        set 1
                    ta
                fi 
            else
                at _loopao457
                    reset
                ta
            fi
        wend
        push _c457
        if
            at _b457
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_2
                push    mulvvvXabsNameA6_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b458
    sbm _a458 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c458
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao458
        while
            push _b458
            if  
                at _b458
                    dec
                ta
                at _a458
                    dec
                ta
                push _a458
                inc
                not
                if
                    at _c458
                        set 1
                    ta
                fi 
            else
                at _loopao458
                    reset
                ta
            fi
        wend
        push _c458
        if
            at _b458
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b459
    sbm _a459 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c459
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao459
        while
            push _b459
            if  
                at _b459
                    dec
                ta
                at _a459
                    dec
                ta
                push _a459
                inc
                not
                if
                    at _c459
                        set 1
                    ta
                fi 
            else
                at _loopao459
                    reset
                ta
            fi
        wend
        push _c459
        if
            at _b459
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_2 
                add   
#(js) }
                push    addvvXnameB6_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b460
    sbm _a460 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c460
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao460
        while
            push _b460
            if  
                at _b460
                    dec
                ta
                at _a460
                    dec
                ta
                push _a460
                inc
                not
                if
                    at _c460
                        set 1
                    ta
                fi 
            else
                at _loopao460
                    reset
                ta
            fi
        wend
        push _c460
        if
            at _b460
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_3
                push    mulvvvXabsNameA6_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b461
    sbm _a461 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c461
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao461
        while
            push _b461
            if  
                at _b461
                    dec
                ta
                at _a461
                    dec
                ta
                push _a461
                inc
                not
                if
                    at _c461
                        set 1
                    ta
                fi 
            else
                at _loopao461
                    reset
                ta
            fi
        wend
        push _c461
        if
            at _b461
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b462
    sbm _a462 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c462
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao462
        while
            push _b462
            if  
                at _b462
                    dec
                ta
                at _a462
                    dec
                ta
                push _a462
                inc
                not
                if
                    at _c462
                        set 1
                    ta
                fi 
            else
                at _loopao462
                    reset
                ta
            fi
        wend
        push _c462
        if
            at _b462
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_3 
                add   
#(js) }
                push    addvvXnameB6_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b463
    sbm _a463 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c463
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao463
        while
            push _b463
            if  
                at _b463
                    dec
                ta
                at _a463
                    dec
                ta
                push _a463
                inc
                not
                if
                    at _c463
                        set 1
                    ta
                fi 
            else
                at _loopao463
                    reset
                ta
            fi
        wend
        push _c463
        if
            at _b463
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_4
                push    mulvvvXabsNameA6_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b464
    sbm _a464 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c464
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao464
        while
            push _b464
            if  
                at _b464
                    dec
                ta
                at _a464
                    dec
                ta
                push _a464
                inc
                not
                if
                    at _c464
                        set 1
                    ta
                fi 
            else
                at _loopao464
                    reset
                ta
            fi
        wend
        push _c464
        if
            at _b464
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b465
    sbm _a465 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c465
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao465
        while
            push _b465
            if  
                at _b465
                    dec
                ta
                at _a465
                    dec
                ta
                push _a465
                inc
                not
                if
                    at _c465
                        set 1
                    ta
                fi 
            else
                at _loopao465
                    reset
                ta
            fi
        wend
        push _c465
        if
            at _b465
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_4 
                add   
#(js) }
                push    addvvXnameB6_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b466
    sbm _a466 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c466
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao466
        while
            push _b466
            if  
                at _b466
                    dec
                ta
                at _a466
                    dec
                ta
                push _a466
                inc
                not
                if
                    at _c466
                        set 1
                    ta
                fi 
            else
                at _loopao466
                    reset
                ta
            fi
        wend
        push _c466
        if
            at _b466
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_5
                push    mulvvvXabsNameA6_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b467
    sbm _a467 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c467
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao467
        while
            push _b467
            if  
                at _b467
                    dec
                ta
                at _a467
                    dec
                ta
                push _a467
                inc
                not
                if
                    at _c467
                        set 1
                    ta
                fi 
            else
                at _loopao467
                    reset
                ta
            fi
        wend
        push _c467
        if
            at _b467
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX6_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b468
    sbm _a468 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c468
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao468
        while
            push _b468
            if  
                at _b468
                    dec
                ta
                at _a468
                    dec
                ta
                push _a468
                inc
                not
                if
                    at _c468
                        set 1
                    ta
                fi 
            else
                at _loopao468
                    reset
                ta
            fi
        wend
        push _c468
        if
            at _b468
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX6_5 
                add   
#(js) }
                pop     resultX6_c
            
            else # absB >= absA : 
                push    _aequb12
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX6_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA6_s
                    pop     resultX6_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA6_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b469
    sbm _a469 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c469
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao469
        while
            push _b469
            if  
                at _b469
                    dec
                ta
                at _a469
                    dec
                ta
                push _a469
                inc
                not
                if
                    at _c469
                        set 1
                    ta
                fi 
            else
                at _loopao469
                    reset
                ta
            fi
        wend
        push _c469
        if
            at _b469
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_0
                    push    addvvXnameB6_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b470
    sbm _a470 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c470
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao470
        while
            push _b470
            if  
                at _b470
                    dec
                ta
                at _a470
                    dec
                ta
                push _a470
                inc
                not
                if
                    at _c470
                        set 1
                    ta
                fi 
            else
                at _loopao470
                    reset
                ta
            fi
        wend
        push _c470
        if
            at _b470
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b471
    sbm _a471 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c471
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao471
        while
            push _b471
            if  
                at _b471
                    dec
                ta
                at _a471
                    dec
                ta
                push _a471
                inc
                not
                if
                    at _c471
                        set 1
                    ta
                fi 
            else
                at _loopao471
                    reset
                ta
            fi
        wend
        push _c471
        if
            at _b471
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_0
                    add    
#(js) }
                    push    mulvvvXabsNameA6_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b472
    sbm _a472 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c472
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao472
        while
            push _b472
            if  
                at _b472
                    dec
                ta
                at _a472
                    dec
                ta
                push _a472
                inc
                not
                if
                    at _c472
                        set 1
                    ta
                fi 
            else
                at _loopao472
                    reset
                ta
            fi
        wend
        push _c472
        if
            at _b472
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_1
                    push    addvvXnameB6_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b473
    sbm _a473 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c473
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao473
        while
            push _b473
            if  
                at _b473
                    dec
                ta
                at _a473
                    dec
                ta
                push _a473
                inc
                not
                if
                    at _c473
                        set 1
                    ta
                fi 
            else
                at _loopao473
                    reset
                ta
            fi
        wend
        push _c473
        if
            at _b473
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b474
    sbm _a474 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c474
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao474
        while
            push _b474
            if  
                at _b474
                    dec
                ta
                at _a474
                    dec
                ta
                push _a474
                inc
                not
                if
                    at _c474
                        set 1
                    ta
                fi 
            else
                at _loopao474
                    reset
                ta
            fi
        wend
        push _c474
        if
            at _b474
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_1
                    add    
#(js) }
                    push    mulvvvXabsNameA6_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b475
    sbm _a475 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c475
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao475
        while
            push _b475
            if  
                at _b475
                    dec
                ta
                at _a475
                    dec
                ta
                push _a475
                inc
                not
                if
                    at _c475
                        set 1
                    ta
                fi 
            else
                at _loopao475
                    reset
                ta
            fi
        wend
        push _c475
        if
            at _b475
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_2
                    push    addvvXnameB6_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b476
    sbm _a476 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c476
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao476
        while
            push _b476
            if  
                at _b476
                    dec
                ta
                at _a476
                    dec
                ta
                push _a476
                inc
                not
                if
                    at _c476
                        set 1
                    ta
                fi 
            else
                at _loopao476
                    reset
                ta
            fi
        wend
        push _c476
        if
            at _b476
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b477
    sbm _a477 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c477
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao477
        while
            push _b477
            if  
                at _b477
                    dec
                ta
                at _a477
                    dec
                ta
                push _a477
                inc
                not
                if
                    at _c477
                        set 1
                    ta
                fi 
            else
                at _loopao477
                    reset
                ta
            fi
        wend
        push _c477
        if
            at _b477
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_2
                    add    
#(js) }
                    push    mulvvvXabsNameA6_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b478
    sbm _a478 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c478
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao478
        while
            push _b478
            if  
                at _b478
                    dec
                ta
                at _a478
                    dec
                ta
                push _a478
                inc
                not
                if
                    at _c478
                        set 1
                    ta
                fi 
            else
                at _loopao478
                    reset
                ta
            fi
        wend
        push _c478
        if
            at _b478
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_3
                    push    addvvXnameB6_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b479
    sbm _a479 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c479
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao479
        while
            push _b479
            if  
                at _b479
                    dec
                ta
                at _a479
                    dec
                ta
                push _a479
                inc
                not
                if
                    at _c479
                        set 1
                    ta
                fi 
            else
                at _loopao479
                    reset
                ta
            fi
        wend
        push _c479
        if
            at _b479
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b480
    sbm _a480 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c480
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao480
        while
            push _b480
            if  
                at _b480
                    dec
                ta
                at _a480
                    dec
                ta
                push _a480
                inc
                not
                if
                    at _c480
                        set 1
                    ta
                fi 
            else
                at _loopao480
                    reset
                ta
            fi
        wend
        push _c480
        if
            at _b480
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_3
                    add    
#(js) }
                    push    mulvvvXabsNameA6_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b481
    sbm _a481 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c481
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao481
        while
            push _b481
            if  
                at _b481
                    dec
                ta
                at _a481
                    dec
                ta
                push _a481
                inc
                not
                if
                    at _c481
                        set 1
                    ta
                fi 
            else
                at _loopao481
                    reset
                ta
            fi
        wend
        push _c481
        if
            at _b481
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_4
                    push    addvvXnameB6_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b482
    sbm _a482 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c482
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao482
        while
            push _b482
            if  
                at _b482
                    dec
                ta
                at _a482
                    dec
                ta
                push _a482
                inc
                not
                if
                    at _c482
                        set 1
                    ta
                fi 
            else
                at _loopao482
                    reset
                ta
            fi
        wend
        push _c482
        if
            at _b482
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b483
    sbm _a483 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c483
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao483
        while
            push _b483
            if  
                at _b483
                    dec
                ta
                at _a483
                    dec
                ta
                push _a483
                inc
                not
                if
                    at _c483
                        set 1
                    ta
                fi 
            else
                at _loopao483
                    reset
                ta
            fi
        wend
        push _c483
        if
            at _b483
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_4
                    add    
#(js) }
                    push    mulvvvXabsNameA6_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b484
    sbm _a484 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c484
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao484
        while
            push _b484
            if  
                at _b484
                    dec
                ta
                at _a484
                    dec
                ta
                push _a484
                inc
                not
                if
                    at _c484
                        set 1
                    ta
                fi 
            else
                at _loopao484
                    reset
                ta
            fi
        wend
        push _c484
        if
            at _b484
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_5
                    push    addvvXnameB6_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b485
    sbm _a485 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c485
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao485
        while
            push _b485
            if  
                at _b485
                    dec
                ta
                at _a485
                    dec
                ta
                push _a485
                inc
                not
                if
                    at _c485
                        set 1
                    ta
                fi 
            else
                at _loopao485
                    reset
                ta
            fi
        wend
        push _c485
        if
            at _b485
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX6_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b486
    sbm _a486 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c486
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao486
        while
            push _b486
            if  
                at _b486
                    dec
                ta
                at _a486
                    dec
                ta
                push _a486
                inc
                not
                if
                    at _c486
                        set 1
                    ta
                fi 
            else
                at _loopao486
                    reset
                ta
            fi
        wend
        push _c486
        if
            at _b486
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX6_5
                    add    
#(js) }
                    pop     resultX6_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB6_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB6_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB6_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB6_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB6_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB6_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop6
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA6
        push mulvvvXsB6
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX6_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX6_c
    push    resultX6_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX6_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack14_0    # 0 byte of _instack14
#(js) }
    var _instack14_1    # 1 byte of _instack14
#(js) }
    var _instack14_2    # 2 byte of _instack14
#(js) }
    var _instack14_3    # 3 byte of _instack14
#(js) }
    var _instack14_4    # 4 byte of _instack14
#(js) }
    var _instack14_5    # 5 byte of _instack14
#(js) }
    var _instack14_s    # Sign of _instack14
    var _instack14_c    # carry of _instack14 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack14_0    # 0 byte of _outstack14
#(js) }
    var _outstack14_1    # 1 byte of _outstack14
#(js) }
    var _outstack14_2    # 2 byte of _outstack14
#(js) }
    var _outstack14_s    # Sign of _outstack14
    var _outstack14_c    # carry of _outstack14 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack14_0
#(js) }
    pop     _instack14_1
#(js) }
    pop     _instack14_2
#(js) }
    pop     _instack14_3
#(js) }
    pop     _instack14_4
#(js) }
    pop     _instack14_5
#(js) }
    pop     _instack14_s
    pop     _instack14_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack14_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack14_s
    pop _outstack14_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack14_4
            pop _outstack14_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack14_3
            pop _outstack14_1
#(js) }
            push _instack14_2
            pop _outstack14_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack14_c
    push    _outstack14_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack14_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack14_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack14_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA6_0
#(js) }
    pop     nameA6_1
#(js) }
    pop     nameA6_2
#(js) }
    pop     nameA6_s
    pop     nameA6_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)
#(begin macro)                pushvX(FP,"oldIm")
    push    oldIm_c
    push    oldIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    oldIm_0
#(js) }
#(end macro)                pushvX(FP,"oldIm")
#(begin macro)                mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB7_0 - 0
#(js) }
    sbm nameB7_1 - 1
#(js) }
    sbm nameB7_2 - 2
#(js) }
    sbm nameB7_s - 3
    sbm nameB7_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA7_0 - 5
#(js) }
    sbm nameA7_1 - 6
#(js) }
    sbm nameA7_2 - 7
#(js) }
    sbm nameA7_s - 8
    sbm nameA7_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA7_c
    push    nameA7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA7_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput13_0 - 0
#(js) }
    sbm _castXInput13_1 - 1
#(js) }
    sbm _castXInput13_2 - 2
#(js) }
    sbm _castXInput13_s - 3
    sbm _castXInput13_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput13_0    # 0 byte of _castXoutput13
#(js) }
    var _castXoutput13_1    # 1 byte of _castXoutput13
#(js) }
    var _castXoutput13_2    # 2 byte of _castXoutput13
#(js) }
    var _castXoutput13_3    # 3 byte of _castXoutput13
#(js) }
    var _castXoutput13_4    # 4 byte of _castXoutput13
#(js) }
    var _castXoutput13_5    # 5 byte of _castXoutput13
#(js) }
    var _castXoutput13_s    # Sign of _castXoutput13
    var _castXoutput13_c    # carry of _castXoutput13 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori13_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori13_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori13_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori13_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori13_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest13_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest13_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest13_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput13_c
    push    _castXInput13_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput13_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput13_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput13_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori13_0
#(js) }
    pop     ori13_1
#(js) }
    pop     ori13_2
#(js) }
    pop     ori13_s
    pop     ori13_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori13_s   
        pop     dest13_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori13_0
                pop     dest13_0
#(js) }
                push    ori13_1
                pop     dest13_1
#(js) }
                push    ori13_2
                pop     dest13_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest13_3
#(js) } 
                push    0
                pop     dest13_4
#(js) } 
                push    0
                pop     dest13_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest13_c
    push    dest13_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest13_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput13_0
#(js) }
    pop     _castXoutput13_1
#(js) }
    pop     _castXoutput13_2
#(js) }
    pop     _castXoutput13_3
#(js) }
    pop     _castXoutput13_4
#(js) }
    pop     _castXoutput13_5
#(js) }
    pop     _castXoutput13_s
    pop     _castXoutput13_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput13_c
    push    _castXoutput13_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput13_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX7_0
#(js) }
    pop     nameAX7_1
#(js) }
    pop     nameAX7_2
#(js) }
    pop     nameAX7_3
#(js) }
    pop     nameAX7_4
#(js) }
    pop     nameAX7_5
#(js) }
    pop     nameAX7_s
    pop     nameAX7_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB7_c
    push    nameB7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB7_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput14_0 - 0
#(js) }
    sbm _castXInput14_1 - 1
#(js) }
    sbm _castXInput14_2 - 2
#(js) }
    sbm _castXInput14_s - 3
    sbm _castXInput14_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput14_0    # 0 byte of _castXoutput14
#(js) }
    var _castXoutput14_1    # 1 byte of _castXoutput14
#(js) }
    var _castXoutput14_2    # 2 byte of _castXoutput14
#(js) }
    var _castXoutput14_3    # 3 byte of _castXoutput14
#(js) }
    var _castXoutput14_4    # 4 byte of _castXoutput14
#(js) }
    var _castXoutput14_5    # 5 byte of _castXoutput14
#(js) }
    var _castXoutput14_s    # Sign of _castXoutput14
    var _castXoutput14_c    # carry of _castXoutput14 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori14_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori14_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori14_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori14_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori14_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest14_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest14_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest14_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput14_c
    push    _castXInput14_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput14_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput14_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput14_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori14_0
#(js) }
    pop     ori14_1
#(js) }
    pop     ori14_2
#(js) }
    pop     ori14_s
    pop     ori14_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori14_s   
        pop     dest14_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori14_0
                pop     dest14_0
#(js) }
                push    ori14_1
                pop     dest14_1
#(js) }
                push    ori14_2
                pop     dest14_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest14_3
#(js) } 
                push    0
                pop     dest14_4
#(js) } 
                push    0
                pop     dest14_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest14_c
    push    dest14_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest14_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput14_0
#(js) }
    pop     _castXoutput14_1
#(js) }
    pop     _castXoutput14_2
#(js) }
    pop     _castXoutput14_3
#(js) }
    pop     _castXoutput14_4
#(js) }
    pop     _castXoutput14_5
#(js) }
    pop     _castXoutput14_s
    pop     _castXoutput14_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput14_c
    push    _castXoutput14_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput14_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX7_0
#(js) }
    pop     nameBX7_1
#(js) }
    pop     nameBX7_2
#(js) }
    pop     nameBX7_3
#(js) }
    pop     nameBX7_4
#(js) }
    pop     nameBX7_5
#(js) }
    pop     nameBX7_s
    pop     nameBX7_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX7_c
    push    nameAX7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX7_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA7_0
#(js) }
    pop     mulvvvXabsNameA7_1
#(js) }
    pop     mulvvvXabsNameA7_2
#(js) }
    pop     mulvvvXabsNameA7_3
#(js) }
    pop     mulvvvXabsNameA7_4
#(js) }
    pop     mulvvvXabsNameA7_5
#(js) }
    pop     mulvvvXabsNameA7_s
    pop     mulvvvXabsNameA7_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA7
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA7_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA7
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA7_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX7_c
    push    nameBX7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX7_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB7_0
#(js) }
    pop     mulvvvXabsNameB7_1
#(js) }
    pop     mulvvvXabsNameB7_2
#(js) }
    pop     mulvvvXabsNameB7_3
#(js) }
    pop     mulvvvXabsNameB7_4
#(js) }
    pop     mulvvvXabsNameB7_5
#(js) }
    pop     mulvvvXabsNameB7_s
    pop     mulvvvXabsNameB7_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB7
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB7_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB7
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB7_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX7_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop7
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB7_0
    bool
#(js) }
    push mulvvvXabsNameB7_1
    bool
#(js) }
    push mulvvvXabsNameB7_2
    bool
#(js) }
    push mulvvvXabsNameB7_3
    bool
#(js) }
    push mulvvvXabsNameB7_4
    bool
#(js) }
    push mulvvvXabsNameB7_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB7_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB7_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB7_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX7_c
    push    resultX7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB7_0
#(js) }
    pop     addvvXnameB7_1
#(js) }
    pop     addvvXnameB7_2
#(js) }
    pop     addvvXnameB7_3
#(js) }
    pop     addvvXnameB7_4
#(js) }
    pop     addvvXnameB7_5
#(js) }
    pop     addvvXnameB7_s
    pop     addvvXnameB7_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB7_s
    push    mulvvvXabsNameA7_s
    or
    not
    push    addvvXnameB7_s
    push    mulvvvXabsNameA7_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB7_s
        pop     resultX7_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB7_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b487
    sbm _a487 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c487
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao487
        while
            push _a487
            if
                at _a487
                    dec
                ta 
                at _b487
                    inc
                ta
                push _b487
                not
                if 
                    at _c487
                        set 1
                    ta
                fi
            else 
                at _loopao487
                    reset
                ta
            fi
        wend
        push _c487
        if
            at _a487
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_0
        push    mulvvvXabsNameA7_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b488
    sbm _a488 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c488
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao488
        while
            push _a488
            if
                at _a488
                    dec
                ta 
                at _b488
                    inc
                ta
                push _b488
                not
                if 
                    at _c488
                        set 1
                    ta
                fi
            else 
                at _loopao488
                    reset
                ta
            fi
        wend
        push _c488
        if
            at _a488
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b489
    sbm _a489 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c489
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao489
        while
            push _a489
            if
                at _a489
                    dec
                ta 
                at _b489
                    inc
                ta
                push _b489
                not
                if 
                    at _c489
                        set 1
                    ta
                fi
            else 
                at _loopao489
                    reset
                ta
            fi
        wend
        push _c489
        if
            at _a489
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_0
        add    
#(js) }
        push    addvvXnameB7_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b490
    sbm _a490 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c490
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao490
        while
            push _a490
            if
                at _a490
                    dec
                ta 
                at _b490
                    inc
                ta
                push _b490
                not
                if 
                    at _c490
                        set 1
                    ta
                fi
            else 
                at _loopao490
                    reset
                ta
            fi
        wend
        push _c490
        if
            at _a490
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_1
        push    mulvvvXabsNameA7_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b491
    sbm _a491 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c491
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao491
        while
            push _a491
            if
                at _a491
                    dec
                ta 
                at _b491
                    inc
                ta
                push _b491
                not
                if 
                    at _c491
                        set 1
                    ta
                fi
            else 
                at _loopao491
                    reset
                ta
            fi
        wend
        push _c491
        if
            at _a491
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b492
    sbm _a492 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c492
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao492
        while
            push _a492
            if
                at _a492
                    dec
                ta 
                at _b492
                    inc
                ta
                push _b492
                not
                if 
                    at _c492
                        set 1
                    ta
                fi
            else 
                at _loopao492
                    reset
                ta
            fi
        wend
        push _c492
        if
            at _a492
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_1
        add    
#(js) }
        push    addvvXnameB7_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b493
    sbm _a493 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c493
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao493
        while
            push _a493
            if
                at _a493
                    dec
                ta 
                at _b493
                    inc
                ta
                push _b493
                not
                if 
                    at _c493
                        set 1
                    ta
                fi
            else 
                at _loopao493
                    reset
                ta
            fi
        wend
        push _c493
        if
            at _a493
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_2
        push    mulvvvXabsNameA7_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b494
    sbm _a494 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c494
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao494
        while
            push _a494
            if
                at _a494
                    dec
                ta 
                at _b494
                    inc
                ta
                push _b494
                not
                if 
                    at _c494
                        set 1
                    ta
                fi
            else 
                at _loopao494
                    reset
                ta
            fi
        wend
        push _c494
        if
            at _a494
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b495
    sbm _a495 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c495
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao495
        while
            push _a495
            if
                at _a495
                    dec
                ta 
                at _b495
                    inc
                ta
                push _b495
                not
                if 
                    at _c495
                        set 1
                    ta
                fi
            else 
                at _loopao495
                    reset
                ta
            fi
        wend
        push _c495
        if
            at _a495
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_2
        add    
#(js) }
        push    addvvXnameB7_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b496
    sbm _a496 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c496
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao496
        while
            push _a496
            if
                at _a496
                    dec
                ta 
                at _b496
                    inc
                ta
                push _b496
                not
                if 
                    at _c496
                        set 1
                    ta
                fi
            else 
                at _loopao496
                    reset
                ta
            fi
        wend
        push _c496
        if
            at _a496
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_3
        push    mulvvvXabsNameA7_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b497
    sbm _a497 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c497
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao497
        while
            push _a497
            if
                at _a497
                    dec
                ta 
                at _b497
                    inc
                ta
                push _b497
                not
                if 
                    at _c497
                        set 1
                    ta
                fi
            else 
                at _loopao497
                    reset
                ta
            fi
        wend
        push _c497
        if
            at _a497
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b498
    sbm _a498 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c498
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao498
        while
            push _a498
            if
                at _a498
                    dec
                ta 
                at _b498
                    inc
                ta
                push _b498
                not
                if 
                    at _c498
                        set 1
                    ta
                fi
            else 
                at _loopao498
                    reset
                ta
            fi
        wend
        push _c498
        if
            at _a498
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_3
        add    
#(js) }
        push    addvvXnameB7_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b499
    sbm _a499 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c499
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao499
        while
            push _a499
            if
                at _a499
                    dec
                ta 
                at _b499
                    inc
                ta
                push _b499
                not
                if 
                    at _c499
                        set 1
                    ta
                fi
            else 
                at _loopao499
                    reset
                ta
            fi
        wend
        push _c499
        if
            at _a499
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_4
        push    mulvvvXabsNameA7_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b500
    sbm _a500 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c500
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao500
        while
            push _a500
            if
                at _a500
                    dec
                ta 
                at _b500
                    inc
                ta
                push _b500
                not
                if 
                    at _c500
                        set 1
                    ta
                fi
            else 
                at _loopao500
                    reset
                ta
            fi
        wend
        push _c500
        if
            at _a500
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b501
    sbm _a501 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c501
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao501
        while
            push _a501
            if
                at _a501
                    dec
                ta 
                at _b501
                    inc
                ta
                push _b501
                not
                if 
                    at _c501
                        set 1
                    ta
                fi
            else 
                at _loopao501
                    reset
                ta
            fi
        wend
        push _c501
        if
            at _a501
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_4
        add    
#(js) }
        push    addvvXnameB7_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b502
    sbm _a502 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c502
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao502
        while
            push _a502
            if
                at _a502
                    dec
                ta 
                at _b502
                    inc
                ta
                push _b502
                not
                if 
                    at _c502
                        set 1
                    ta
                fi
            else 
                at _loopao502
                    reset
                ta
            fi
        wend
        push _c502
        if
            at _a502
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_5
        push    mulvvvXabsNameA7_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b503
    sbm _a503 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c503
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao503
        while
            push _a503
            if
                at _a503
                    dec
                ta 
                at _b503
                    inc
                ta
                push _b503
                not
                if 
                    at _c503
                        set 1
                    ta
                fi
            else 
                at _loopao503
                    reset
                ta
            fi
        wend
        push _c503
        if
            at _a503
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX7_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b504
    sbm _a504 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c504
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao504
        while
            push _a504
            if
                at _a504
                    dec
                ta 
                at _b504
                    inc
                ta
                push _b504
                not
                if 
                    at _c504
                        set 1
                    ta
                fi
            else 
                at _loopao504
                    reset
                ta
            fi
        wend
        push _c504
        if
            at _a504
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX7_5
        add    
#(js) }
        pop     resultX7_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb13
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb13
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB7_5
            push    mulvvvXabsNameA7_5
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_5
                push    mulvvvXabsNameA7_5
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB7_4
            push    mulvvvXabsNameA7_4
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_4
                push    mulvvvXabsNameA7_4
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB7_3
            push    mulvvvXabsNameA7_3
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_3
                push    mulvvvXabsNameA7_3
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB7_2
            push    mulvvvXabsNameA7_2
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_2
                push    mulvvvXabsNameA7_2
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB7_1
            push    mulvvvXabsNameA7_1
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_1
                push    mulvvvXabsNameA7_1
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB7_0
            push    mulvvvXabsNameA7_0
            sup
            if  
               at _asupb13
                set 1
               ta
            else 
                push    addvvXnameB7_0
                push    mulvvvXabsNameA7_0
                diff
                if
                at _asupb13
                    reset
                ta
                else           
#(js) }
            at _aequb13
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb13
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB7_s
                pop     resultX7_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB7_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b505
    sbm _a505 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c505
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao505
        while
            push _b505
            if  
                at _b505
                    dec
                ta
                at _a505
                    dec
                ta
                push _a505
                inc
                not
                if
                    at _c505
                        set 1
                    ta
                fi 
            else
                at _loopao505
                    reset
                ta
            fi
        wend
        push _c505
        if
            at _b505
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_0
                push    mulvvvXabsNameA7_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b506
    sbm _a506 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c506
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao506
        while
            push _b506
            if  
                at _b506
                    dec
                ta
                at _a506
                    dec
                ta
                push _a506
                inc
                not
                if
                    at _c506
                        set 1
                    ta
                fi 
            else
                at _loopao506
                    reset
                ta
            fi
        wend
        push _c506
        if
            at _b506
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b507
    sbm _a507 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c507
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao507
        while
            push _b507
            if  
                at _b507
                    dec
                ta
                at _a507
                    dec
                ta
                push _a507
                inc
                not
                if
                    at _c507
                        set 1
                    ta
                fi 
            else
                at _loopao507
                    reset
                ta
            fi
        wend
        push _c507
        if
            at _b507
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_0 
                add   
#(js) }
                push    addvvXnameB7_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b508
    sbm _a508 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c508
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao508
        while
            push _b508
            if  
                at _b508
                    dec
                ta
                at _a508
                    dec
                ta
                push _a508
                inc
                not
                if
                    at _c508
                        set 1
                    ta
                fi 
            else
                at _loopao508
                    reset
                ta
            fi
        wend
        push _c508
        if
            at _b508
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_1
                push    mulvvvXabsNameA7_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b509
    sbm _a509 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c509
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao509
        while
            push _b509
            if  
                at _b509
                    dec
                ta
                at _a509
                    dec
                ta
                push _a509
                inc
                not
                if
                    at _c509
                        set 1
                    ta
                fi 
            else
                at _loopao509
                    reset
                ta
            fi
        wend
        push _c509
        if
            at _b509
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b510
    sbm _a510 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c510
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao510
        while
            push _b510
            if  
                at _b510
                    dec
                ta
                at _a510
                    dec
                ta
                push _a510
                inc
                not
                if
                    at _c510
                        set 1
                    ta
                fi 
            else
                at _loopao510
                    reset
                ta
            fi
        wend
        push _c510
        if
            at _b510
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_1 
                add   
#(js) }
                push    addvvXnameB7_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b511
    sbm _a511 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c511
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao511
        while
            push _b511
            if  
                at _b511
                    dec
                ta
                at _a511
                    dec
                ta
                push _a511
                inc
                not
                if
                    at _c511
                        set 1
                    ta
                fi 
            else
                at _loopao511
                    reset
                ta
            fi
        wend
        push _c511
        if
            at _b511
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_2
                push    mulvvvXabsNameA7_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b512
    sbm _a512 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c512
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao512
        while
            push _b512
            if  
                at _b512
                    dec
                ta
                at _a512
                    dec
                ta
                push _a512
                inc
                not
                if
                    at _c512
                        set 1
                    ta
                fi 
            else
                at _loopao512
                    reset
                ta
            fi
        wend
        push _c512
        if
            at _b512
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b513
    sbm _a513 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c513
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao513
        while
            push _b513
            if  
                at _b513
                    dec
                ta
                at _a513
                    dec
                ta
                push _a513
                inc
                not
                if
                    at _c513
                        set 1
                    ta
                fi 
            else
                at _loopao513
                    reset
                ta
            fi
        wend
        push _c513
        if
            at _b513
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_2 
                add   
#(js) }
                push    addvvXnameB7_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b514
    sbm _a514 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c514
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao514
        while
            push _b514
            if  
                at _b514
                    dec
                ta
                at _a514
                    dec
                ta
                push _a514
                inc
                not
                if
                    at _c514
                        set 1
                    ta
                fi 
            else
                at _loopao514
                    reset
                ta
            fi
        wend
        push _c514
        if
            at _b514
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_3
                push    mulvvvXabsNameA7_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b515
    sbm _a515 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c515
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao515
        while
            push _b515
            if  
                at _b515
                    dec
                ta
                at _a515
                    dec
                ta
                push _a515
                inc
                not
                if
                    at _c515
                        set 1
                    ta
                fi 
            else
                at _loopao515
                    reset
                ta
            fi
        wend
        push _c515
        if
            at _b515
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b516
    sbm _a516 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c516
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao516
        while
            push _b516
            if  
                at _b516
                    dec
                ta
                at _a516
                    dec
                ta
                push _a516
                inc
                not
                if
                    at _c516
                        set 1
                    ta
                fi 
            else
                at _loopao516
                    reset
                ta
            fi
        wend
        push _c516
        if
            at _b516
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_3 
                add   
#(js) }
                push    addvvXnameB7_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b517
    sbm _a517 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c517
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao517
        while
            push _b517
            if  
                at _b517
                    dec
                ta
                at _a517
                    dec
                ta
                push _a517
                inc
                not
                if
                    at _c517
                        set 1
                    ta
                fi 
            else
                at _loopao517
                    reset
                ta
            fi
        wend
        push _c517
        if
            at _b517
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_4
                push    mulvvvXabsNameA7_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b518
    sbm _a518 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c518
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao518
        while
            push _b518
            if  
                at _b518
                    dec
                ta
                at _a518
                    dec
                ta
                push _a518
                inc
                not
                if
                    at _c518
                        set 1
                    ta
                fi 
            else
                at _loopao518
                    reset
                ta
            fi
        wend
        push _c518
        if
            at _b518
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b519
    sbm _a519 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c519
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao519
        while
            push _b519
            if  
                at _b519
                    dec
                ta
                at _a519
                    dec
                ta
                push _a519
                inc
                not
                if
                    at _c519
                        set 1
                    ta
                fi 
            else
                at _loopao519
                    reset
                ta
            fi
        wend
        push _c519
        if
            at _b519
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_4 
                add   
#(js) }
                push    addvvXnameB7_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b520
    sbm _a520 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c520
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao520
        while
            push _b520
            if  
                at _b520
                    dec
                ta
                at _a520
                    dec
                ta
                push _a520
                inc
                not
                if
                    at _c520
                        set 1
                    ta
                fi 
            else
                at _loopao520
                    reset
                ta
            fi
        wend
        push _c520
        if
            at _b520
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_5
                push    mulvvvXabsNameA7_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b521
    sbm _a521 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c521
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao521
        while
            push _b521
            if  
                at _b521
                    dec
                ta
                at _a521
                    dec
                ta
                push _a521
                inc
                not
                if
                    at _c521
                        set 1
                    ta
                fi 
            else
                at _loopao521
                    reset
                ta
            fi
        wend
        push _c521
        if
            at _b521
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX7_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b522
    sbm _a522 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c522
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao522
        while
            push _b522
            if  
                at _b522
                    dec
                ta
                at _a522
                    dec
                ta
                push _a522
                inc
                not
                if
                    at _c522
                        set 1
                    ta
                fi 
            else
                at _loopao522
                    reset
                ta
            fi
        wend
        push _c522
        if
            at _b522
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX7_5 
                add   
#(js) }
                pop     resultX7_c
            
            else # absB >= absA : 
                push    _aequb13
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX7_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA7_s
                    pop     resultX7_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA7_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b523
    sbm _a523 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c523
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao523
        while
            push _b523
            if  
                at _b523
                    dec
                ta
                at _a523
                    dec
                ta
                push _a523
                inc
                not
                if
                    at _c523
                        set 1
                    ta
                fi 
            else
                at _loopao523
                    reset
                ta
            fi
        wend
        push _c523
        if
            at _b523
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_0
                    push    addvvXnameB7_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b524
    sbm _a524 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c524
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao524
        while
            push _b524
            if  
                at _b524
                    dec
                ta
                at _a524
                    dec
                ta
                push _a524
                inc
                not
                if
                    at _c524
                        set 1
                    ta
                fi 
            else
                at _loopao524
                    reset
                ta
            fi
        wend
        push _c524
        if
            at _b524
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b525
    sbm _a525 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c525
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao525
        while
            push _b525
            if  
                at _b525
                    dec
                ta
                at _a525
                    dec
                ta
                push _a525
                inc
                not
                if
                    at _c525
                        set 1
                    ta
                fi 
            else
                at _loopao525
                    reset
                ta
            fi
        wend
        push _c525
        if
            at _b525
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_0
                    add    
#(js) }
                    push    mulvvvXabsNameA7_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b526
    sbm _a526 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c526
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao526
        while
            push _b526
            if  
                at _b526
                    dec
                ta
                at _a526
                    dec
                ta
                push _a526
                inc
                not
                if
                    at _c526
                        set 1
                    ta
                fi 
            else
                at _loopao526
                    reset
                ta
            fi
        wend
        push _c526
        if
            at _b526
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_1
                    push    addvvXnameB7_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b527
    sbm _a527 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c527
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao527
        while
            push _b527
            if  
                at _b527
                    dec
                ta
                at _a527
                    dec
                ta
                push _a527
                inc
                not
                if
                    at _c527
                        set 1
                    ta
                fi 
            else
                at _loopao527
                    reset
                ta
            fi
        wend
        push _c527
        if
            at _b527
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b528
    sbm _a528 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c528
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao528
        while
            push _b528
            if  
                at _b528
                    dec
                ta
                at _a528
                    dec
                ta
                push _a528
                inc
                not
                if
                    at _c528
                        set 1
                    ta
                fi 
            else
                at _loopao528
                    reset
                ta
            fi
        wend
        push _c528
        if
            at _b528
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_1
                    add    
#(js) }
                    push    mulvvvXabsNameA7_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b529
    sbm _a529 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c529
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao529
        while
            push _b529
            if  
                at _b529
                    dec
                ta
                at _a529
                    dec
                ta
                push _a529
                inc
                not
                if
                    at _c529
                        set 1
                    ta
                fi 
            else
                at _loopao529
                    reset
                ta
            fi
        wend
        push _c529
        if
            at _b529
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_2
                    push    addvvXnameB7_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b530
    sbm _a530 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c530
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao530
        while
            push _b530
            if  
                at _b530
                    dec
                ta
                at _a530
                    dec
                ta
                push _a530
                inc
                not
                if
                    at _c530
                        set 1
                    ta
                fi 
            else
                at _loopao530
                    reset
                ta
            fi
        wend
        push _c530
        if
            at _b530
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b531
    sbm _a531 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c531
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao531
        while
            push _b531
            if  
                at _b531
                    dec
                ta
                at _a531
                    dec
                ta
                push _a531
                inc
                not
                if
                    at _c531
                        set 1
                    ta
                fi 
            else
                at _loopao531
                    reset
                ta
            fi
        wend
        push _c531
        if
            at _b531
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_2
                    add    
#(js) }
                    push    mulvvvXabsNameA7_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b532
    sbm _a532 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c532
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao532
        while
            push _b532
            if  
                at _b532
                    dec
                ta
                at _a532
                    dec
                ta
                push _a532
                inc
                not
                if
                    at _c532
                        set 1
                    ta
                fi 
            else
                at _loopao532
                    reset
                ta
            fi
        wend
        push _c532
        if
            at _b532
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_3
                    push    addvvXnameB7_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b533
    sbm _a533 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c533
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao533
        while
            push _b533
            if  
                at _b533
                    dec
                ta
                at _a533
                    dec
                ta
                push _a533
                inc
                not
                if
                    at _c533
                        set 1
                    ta
                fi 
            else
                at _loopao533
                    reset
                ta
            fi
        wend
        push _c533
        if
            at _b533
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b534
    sbm _a534 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c534
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao534
        while
            push _b534
            if  
                at _b534
                    dec
                ta
                at _a534
                    dec
                ta
                push _a534
                inc
                not
                if
                    at _c534
                        set 1
                    ta
                fi 
            else
                at _loopao534
                    reset
                ta
            fi
        wend
        push _c534
        if
            at _b534
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_3
                    add    
#(js) }
                    push    mulvvvXabsNameA7_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b535
    sbm _a535 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c535
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao535
        while
            push _b535
            if  
                at _b535
                    dec
                ta
                at _a535
                    dec
                ta
                push _a535
                inc
                not
                if
                    at _c535
                        set 1
                    ta
                fi 
            else
                at _loopao535
                    reset
                ta
            fi
        wend
        push _c535
        if
            at _b535
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_4
                    push    addvvXnameB7_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b536
    sbm _a536 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c536
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao536
        while
            push _b536
            if  
                at _b536
                    dec
                ta
                at _a536
                    dec
                ta
                push _a536
                inc
                not
                if
                    at _c536
                        set 1
                    ta
                fi 
            else
                at _loopao536
                    reset
                ta
            fi
        wend
        push _c536
        if
            at _b536
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b537
    sbm _a537 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c537
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao537
        while
            push _b537
            if  
                at _b537
                    dec
                ta
                at _a537
                    dec
                ta
                push _a537
                inc
                not
                if
                    at _c537
                        set 1
                    ta
                fi 
            else
                at _loopao537
                    reset
                ta
            fi
        wend
        push _c537
        if
            at _b537
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_4
                    add    
#(js) }
                    push    mulvvvXabsNameA7_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b538
    sbm _a538 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c538
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao538
        while
            push _b538
            if  
                at _b538
                    dec
                ta
                at _a538
                    dec
                ta
                push _a538
                inc
                not
                if
                    at _c538
                        set 1
                    ta
                fi 
            else
                at _loopao538
                    reset
                ta
            fi
        wend
        push _c538
        if
            at _b538
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_5
                    push    addvvXnameB7_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b539
    sbm _a539 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c539
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao539
        while
            push _b539
            if  
                at _b539
                    dec
                ta
                at _a539
                    dec
                ta
                push _a539
                inc
                not
                if
                    at _c539
                        set 1
                    ta
                fi 
            else
                at _loopao539
                    reset
                ta
            fi
        wend
        push _c539
        if
            at _b539
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX7_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b540
    sbm _a540 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c540
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao540
        while
            push _b540
            if  
                at _b540
                    dec
                ta
                at _a540
                    dec
                ta
                push _a540
                inc
                not
                if
                    at _c540
                        set 1
                    ta
                fi 
            else
                at _loopao540
                    reset
                ta
            fi
        wend
        push _c540
        if
            at _b540
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX7_5
                    add    
#(js) }
                    pop     resultX7_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB7_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB7_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB7_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB7_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB7_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB7_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop7
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA7
        push mulvvvXsB7
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX7_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX7_c
    push    resultX7_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX7_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack15_0    # 0 byte of _instack15
#(js) }
    var _instack15_1    # 1 byte of _instack15
#(js) }
    var _instack15_2    # 2 byte of _instack15
#(js) }
    var _instack15_3    # 3 byte of _instack15
#(js) }
    var _instack15_4    # 4 byte of _instack15
#(js) }
    var _instack15_5    # 5 byte of _instack15
#(js) }
    var _instack15_s    # Sign of _instack15
    var _instack15_c    # carry of _instack15 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack15_0    # 0 byte of _outstack15
#(js) }
    var _outstack15_1    # 1 byte of _outstack15
#(js) }
    var _outstack15_2    # 2 byte of _outstack15
#(js) }
    var _outstack15_s    # Sign of _outstack15
    var _outstack15_c    # carry of _outstack15 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack15_0
#(js) }
    pop     _instack15_1
#(js) }
    pop     _instack15_2
#(js) }
    pop     _instack15_3
#(js) }
    pop     _instack15_4
#(js) }
    pop     _instack15_5
#(js) }
    pop     _instack15_s
    pop     _instack15_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack15_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack15_s
    pop _outstack15_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack15_4
            pop _outstack15_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack15_3
            pop _outstack15_1
#(js) }
            push _instack15_2
            pop _outstack15_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack15_c
    push    _outstack15_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack15_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack15_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack15_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA7_0
#(js) }
    pop     nameA7_1
#(js) }
    pop     nameA7_2
#(js) }
    pop     nameA7_s
    pop     nameA7_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)
#(begin macro)                pushvX(FP,"pi")
    push    pi_c
    push    pi_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pi_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pi_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    pi_0
#(js) }
#(end macro)                pushvX(FP,"pi")
#(begin macro)                addX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv3++;
    
    push    __tmp24a___s
    push    __tmp24b___s
    or
    not
    push    __tmp24a___s
    push    __tmp24b___s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b541
    sbm _a541 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c541
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao541
        while
            push _a541
            if
                at _a541
                    dec
                ta 
                at _b541
                    inc
                ta
                push _b541
                not
                if 
                    at _c541
                        set 1
                    ta
                fi
            else 
                at _loopao541
                    reset
                ta
            fi
        wend
        push _c541
        if
            at _a541
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b542
    sbm _a542 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c542
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao542
        while
            push _a542
            if
                at _a542
                    dec
                ta 
                at _b542
                    inc
                ta
                push _b542
                not
                if 
                    at _c542
                        set 1
                    ta
                fi
            else 
                at _loopao542
                    reset
                ta
            fi
        wend
        push _c542
        if
            at _a542
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b543
    sbm _a543 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c543
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao543
        while
            push _a543
            if
                at _a543
                    dec
                ta 
                at _b543
                    inc
                ta
                push _b543
                not
                if 
                    at _c543
                        set 1
                    ta
                fi
            else 
                at _loopao543
                    reset
                ta
            fi
        wend
        push _c543
        if
            at _a543
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b544
    sbm _a544 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c544
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao544
        while
            push _a544
            if
                at _a544
                    dec
                ta 
                at _b544
                    inc
                ta
                push _b544
                not
                if 
                    at _c544
                        set 1
                    ta
                fi
            else 
                at _loopao544
                    reset
                ta
            fi
        wend
        push _c544
        if
            at _a544
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b545
    sbm _a545 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c545
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao545
        while
            push _a545
            if
                at _a545
                    dec
                ta 
                at _b545
                    inc
                ta
                push _b545
                not
                if 
                    at _c545
                        set 1
                    ta
                fi
            else 
                at _loopao545
                    reset
                ta
            fi
        wend
        push _c545
        if
            at _a545
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b546
    sbm _a546 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c546
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao546
        while
            push _a546
            if
                at _a546
                    dec
                ta 
                at _b546
                    inc
                ta
                push _b546
                not
                if 
                    at _c546
                        set 1
                    ta
                fi
            else 
                at _loopao546
                    reset
                ta
            fi
        wend
        push _c546
        if
            at _a546
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b547
    sbm _a547 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c547
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao547
        while
            push _a547
            if
                at _a547
                    dec
                ta 
                at _b547
                    inc
                ta
                push _b547
                not
                if 
                    at _c547
                        set 1
                    ta
                fi
            else 
                at _loopao547
                    reset
                ta
            fi
        wend
        push _c547
        if
            at _a547
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b548
    sbm _a548 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c548
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao548
        while
            push _a548
            if
                at _a548
                    dec
                ta 
                at _b548
                    inc
                ta
                push _b548
                not
                if 
                    at _c548
                        set 1
                    ta
                fi
            else 
                at _loopao548
                    reset
                ta
            fi
        wend
        push _c548
        if
            at _a548
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b549
    sbm _a549 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c549
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao549
        while
            push _a549
            if
                at _a549
                    dec
                ta 
                at _b549
                    inc
                ta
                push _b549
                not
                if 
                    at _c549
                        set 1
                    ta
                fi
            else 
                at _loopao549
                    reset
                ta
            fi
        wend
        push _c549
        if
            at _a549
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb14
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb14
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    __tmp24b___2
            sup
            if  
               at _asupb14
                set 1
               ta
            else 
                push    __tmp24a___2
                push    __tmp24b___2
                diff
                if
                at _asupb14
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    __tmp24b___1
            sup
            if  
               at _asupb14
                set 1
               ta
            else 
                push    __tmp24a___1
                push    __tmp24b___1
                diff
                if
                at _asupb14
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    __tmp24b___0
            sup
            if  
               at _asupb14
                set 1
               ta
            else 
                push    __tmp24a___0
                push    __tmp24b___0
                diff
                if
                at _asupb14
                    reset
                ta
                else           
#(js) }
            at _aequb14
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb14
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b550
    sbm _a550 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c550
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao550
        while
            push _b550
            if  
                at _b550
                    dec
                ta
                at _a550
                    dec
                ta
                push _a550
                inc
                not
                if
                    at _c550
                        set 1
                    ta
                fi 
            else
                at _loopao550
                    reset
                ta
            fi
        wend
        push _c550
        if
            at _b550
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b551
    sbm _a551 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c551
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao551
        while
            push _b551
            if  
                at _b551
                    dec
                ta
                at _a551
                    dec
                ta
                push _a551
                inc
                not
                if
                    at _c551
                        set 1
                    ta
                fi 
            else
                at _loopao551
                    reset
                ta
            fi
        wend
        push _c551
        if
            at _b551
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b552
    sbm _a552 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c552
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao552
        while
            push _b552
            if  
                at _b552
                    dec
                ta
                at _a552
                    dec
                ta
                push _a552
                inc
                not
                if
                    at _c552
                        set 1
                    ta
                fi 
            else
                at _loopao552
                    reset
                ta
            fi
        wend
        push _c552
        if
            at _b552
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b553
    sbm _a553 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c553
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao553
        while
            push _b553
            if  
                at _b553
                    dec
                ta
                at _a553
                    dec
                ta
                push _a553
                inc
                not
                if
                    at _c553
                        set 1
                    ta
                fi 
            else
                at _loopao553
                    reset
                ta
            fi
        wend
        push _c553
        if
            at _b553
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b554
    sbm _a554 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c554
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao554
        while
            push _b554
            if  
                at _b554
                    dec
                ta
                at _a554
                    dec
                ta
                push _a554
                inc
                not
                if
                    at _c554
                        set 1
                    ta
                fi 
            else
                at _loopao554
                    reset
                ta
            fi
        wend
        push _c554
        if
            at _b554
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b555
    sbm _a555 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c555
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao555
        while
            push _b555
            if  
                at _b555
                    dec
                ta
                at _a555
                    dec
                ta
                push _a555
                inc
                not
                if
                    at _c555
                        set 1
                    ta
                fi 
            else
                at _loopao555
                    reset
                ta
            fi
        wend
        push _c555
        if
            at _b555
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b556
    sbm _a556 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c556
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao556
        while
            push _b556
            if  
                at _b556
                    dec
                ta
                at _a556
                    dec
                ta
                push _a556
                inc
                not
                if
                    at _c556
                        set 1
                    ta
                fi 
            else
                at _loopao556
                    reset
                ta
            fi
        wend
        push _c556
        if
            at _b556
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b557
    sbm _a557 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c557
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao557
        while
            push _b557
            if  
                at _b557
                    dec
                ta
                at _a557
                    dec
                ta
                push _a557
                inc
                not
                if
                    at _c557
                        set 1
                    ta
                fi 
            else
                at _loopao557
                    reset
                ta
            fi
        wend
        push _c557
        if
            at _b557
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b558
    sbm _a558 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c558
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao558
        while
            push _b558
            if  
                at _b558
                    dec
                ta
                at _a558
                    dec
                ta
                push _a558
                inc
                not
                if
                    at _c558
                        set 1
                    ta
                fi 
            else
                at _loopao558
                    reset
                ta
            fi
        wend
        push _c558
        if
            at _b558
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb14
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    __tmp24b___s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b559
    sbm _a559 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c559
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao559
        while
            push _b559
            if  
                at _b559
                    dec
                ta
                at _a559
                    dec
                ta
                push _a559
                inc
                not
                if
                    at _c559
                        set 1
                    ta
                fi 
            else
                at _loopao559
                    reset
                ta
            fi
        wend
        push _c559
        if
            at _b559
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b560
    sbm _a560 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c560
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao560
        while
            push _b560
            if  
                at _b560
                    dec
                ta
                at _a560
                    dec
                ta
                push _a560
                inc
                not
                if
                    at _c560
                        set 1
                    ta
                fi 
            else
                at _loopao560
                    reset
                ta
            fi
        wend
        push _c560
        if
            at _b560
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b561
    sbm _a561 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c561
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao561
        while
            push _b561
            if  
                at _b561
                    dec
                ta
                at _a561
                    dec
                ta
                push _a561
                inc
                not
                if
                    at _c561
                        set 1
                    ta
                fi 
            else
                at _loopao561
                    reset
                ta
            fi
        wend
        push _c561
        if
            at _b561
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b562
    sbm _a562 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c562
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao562
        while
            push _b562
            if  
                at _b562
                    dec
                ta
                at _a562
                    dec
                ta
                push _a562
                inc
                not
                if
                    at _c562
                        set 1
                    ta
                fi 
            else
                at _loopao562
                    reset
                ta
            fi
        wend
        push _c562
        if
            at _b562
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b563
    sbm _a563 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c563
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao563
        while
            push _b563
            if  
                at _b563
                    dec
                ta
                at _a563
                    dec
                ta
                push _a563
                inc
                not
                if
                    at _c563
                        set 1
                    ta
                fi 
            else
                at _loopao563
                    reset
                ta
            fi
        wend
        push _c563
        if
            at _b563
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b564
    sbm _a564 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c564
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao564
        while
            push _b564
            if  
                at _b564
                    dec
                ta
                at _a564
                    dec
                ta
                push _a564
                inc
                not
                if
                    at _c564
                        set 1
                    ta
                fi 
            else
                at _loopao564
                    reset
                ta
            fi
        wend
        push _c564
        if
            at _b564
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b565
    sbm _a565 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c565
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao565
        while
            push _b565
            if  
                at _b565
                    dec
                ta
                at _a565
                    dec
                ta
                push _a565
                inc
                not
                if
                    at _c565
                        set 1
                    ta
                fi 
            else
                at _loopao565
                    reset
                ta
            fi
        wend
        push _c565
        if
            at _b565
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b566
    sbm _a566 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c566
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao566
        while
            push _b566
            if  
                at _b566
                    dec
                ta
                at _a566
                    dec
                ta
                push _a566
                inc
                not
                if
                    at _c566
                        set 1
                    ta
                fi 
            else
                at _loopao566
                    reset
                ta
            fi
        wend
        push _c566
        if
            at _b566
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b567
    sbm _a567 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c567
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao567
        while
            push _b567
            if  
                at _b567
                    dec
                ta
                at _a567
                    dec
                ta
                push _a567
                inc
                not
                if
                    at _c567
                        set 1
                    ta
                fi 
            else
                at _loopao567
                    reset
                ta
            fi
        wend
        push _c567
        if
            at _b567
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)                addX(FP)
#(begin macro)                popvX(FP,"newIm")
#(js) for (var xx=0; xx < X; xx++) {
    pop     newIm_0
#(js) }
    pop     newIm_1
#(js) }
    pop     newIm_2
#(js) }
    pop     newIm_s
    pop     newIm_c
#(end macro)                popvX(FP,"newIm")
            #    if (newRe *  newRe +  newIm * newIm) > 4 break for
                ## newRe *  newRe +  newIm * newIm
#(begin macro)                pushvX(FP,"newRe")
    push    newRe_c
    push    newRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_0
#(js) }
#(end macro)                pushvX(FP,"newRe")
#(begin macro)                pushvX(FP,"newRe")
    push    newRe_c
    push    newRe_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newRe_0
#(js) }
#(end macro)                pushvX(FP,"newRe")
#(begin macro)                mulFP(FP_I,FP_P)                
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB8_0 - 0
#(js) }
    sbm nameB8_1 - 1
#(js) }
    sbm nameB8_2 - 2
#(js) }
    sbm nameB8_s - 3
    sbm nameB8_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA8_0 - 5
#(js) }
    sbm nameA8_1 - 6
#(js) }
    sbm nameA8_2 - 7
#(js) }
    sbm nameA8_s - 8
    sbm nameA8_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA8_c
    push    nameA8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA8_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput15_0 - 0
#(js) }
    sbm _castXInput15_1 - 1
#(js) }
    sbm _castXInput15_2 - 2
#(js) }
    sbm _castXInput15_s - 3
    sbm _castXInput15_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput15_0    # 0 byte of _castXoutput15
#(js) }
    var _castXoutput15_1    # 1 byte of _castXoutput15
#(js) }
    var _castXoutput15_2    # 2 byte of _castXoutput15
#(js) }
    var _castXoutput15_3    # 3 byte of _castXoutput15
#(js) }
    var _castXoutput15_4    # 4 byte of _castXoutput15
#(js) }
    var _castXoutput15_5    # 5 byte of _castXoutput15
#(js) }
    var _castXoutput15_s    # Sign of _castXoutput15
    var _castXoutput15_c    # carry of _castXoutput15 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori15_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori15_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori15_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori15_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori15_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest15_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest15_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest15_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput15_c
    push    _castXInput15_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput15_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput15_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput15_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori15_0
#(js) }
    pop     ori15_1
#(js) }
    pop     ori15_2
#(js) }
    pop     ori15_s
    pop     ori15_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori15_s   
        pop     dest15_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori15_0
                pop     dest15_0
#(js) }
                push    ori15_1
                pop     dest15_1
#(js) }
                push    ori15_2
                pop     dest15_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest15_3
#(js) } 
                push    0
                pop     dest15_4
#(js) } 
                push    0
                pop     dest15_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest15_c
    push    dest15_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest15_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput15_0
#(js) }
    pop     _castXoutput15_1
#(js) }
    pop     _castXoutput15_2
#(js) }
    pop     _castXoutput15_3
#(js) }
    pop     _castXoutput15_4
#(js) }
    pop     _castXoutput15_5
#(js) }
    pop     _castXoutput15_s
    pop     _castXoutput15_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput15_c
    push    _castXoutput15_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput15_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX8_0
#(js) }
    pop     nameAX8_1
#(js) }
    pop     nameAX8_2
#(js) }
    pop     nameAX8_3
#(js) }
    pop     nameAX8_4
#(js) }
    pop     nameAX8_5
#(js) }
    pop     nameAX8_s
    pop     nameAX8_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB8_c
    push    nameB8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB8_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput16_0 - 0
#(js) }
    sbm _castXInput16_1 - 1
#(js) }
    sbm _castXInput16_2 - 2
#(js) }
    sbm _castXInput16_s - 3
    sbm _castXInput16_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput16_0    # 0 byte of _castXoutput16
#(js) }
    var _castXoutput16_1    # 1 byte of _castXoutput16
#(js) }
    var _castXoutput16_2    # 2 byte of _castXoutput16
#(js) }
    var _castXoutput16_3    # 3 byte of _castXoutput16
#(js) }
    var _castXoutput16_4    # 4 byte of _castXoutput16
#(js) }
    var _castXoutput16_5    # 5 byte of _castXoutput16
#(js) }
    var _castXoutput16_s    # Sign of _castXoutput16
    var _castXoutput16_c    # carry of _castXoutput16 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori16_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori16_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori16_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori16_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori16_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest16_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest16_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest16_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput16_c
    push    _castXInput16_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput16_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput16_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput16_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori16_0
#(js) }
    pop     ori16_1
#(js) }
    pop     ori16_2
#(js) }
    pop     ori16_s
    pop     ori16_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori16_s   
        pop     dest16_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori16_0
                pop     dest16_0
#(js) }
                push    ori16_1
                pop     dest16_1
#(js) }
                push    ori16_2
                pop     dest16_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest16_3
#(js) } 
                push    0
                pop     dest16_4
#(js) } 
                push    0
                pop     dest16_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest16_c
    push    dest16_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest16_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput16_0
#(js) }
    pop     _castXoutput16_1
#(js) }
    pop     _castXoutput16_2
#(js) }
    pop     _castXoutput16_3
#(js) }
    pop     _castXoutput16_4
#(js) }
    pop     _castXoutput16_5
#(js) }
    pop     _castXoutput16_s
    pop     _castXoutput16_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput16_c
    push    _castXoutput16_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput16_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX8_0
#(js) }
    pop     nameBX8_1
#(js) }
    pop     nameBX8_2
#(js) }
    pop     nameBX8_3
#(js) }
    pop     nameBX8_4
#(js) }
    pop     nameBX8_5
#(js) }
    pop     nameBX8_s
    pop     nameBX8_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX8_c
    push    nameAX8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX8_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA8_0
#(js) }
    pop     mulvvvXabsNameA8_1
#(js) }
    pop     mulvvvXabsNameA8_2
#(js) }
    pop     mulvvvXabsNameA8_3
#(js) }
    pop     mulvvvXabsNameA8_4
#(js) }
    pop     mulvvvXabsNameA8_5
#(js) }
    pop     mulvvvXabsNameA8_s
    pop     mulvvvXabsNameA8_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA8
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA8_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA8
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA8_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX8_c
    push    nameBX8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX8_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB8_0
#(js) }
    pop     mulvvvXabsNameB8_1
#(js) }
    pop     mulvvvXabsNameB8_2
#(js) }
    pop     mulvvvXabsNameB8_3
#(js) }
    pop     mulvvvXabsNameB8_4
#(js) }
    pop     mulvvvXabsNameB8_5
#(js) }
    pop     mulvvvXabsNameB8_s
    pop     mulvvvXabsNameB8_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB8
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB8_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB8
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB8_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX8_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop8
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB8_0
    bool
#(js) }
    push mulvvvXabsNameB8_1
    bool
#(js) }
    push mulvvvXabsNameB8_2
    bool
#(js) }
    push mulvvvXabsNameB8_3
    bool
#(js) }
    push mulvvvXabsNameB8_4
    bool
#(js) }
    push mulvvvXabsNameB8_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB8_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB8_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB8_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX8_c
    push    resultX8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB8_0
#(js) }
    pop     addvvXnameB8_1
#(js) }
    pop     addvvXnameB8_2
#(js) }
    pop     addvvXnameB8_3
#(js) }
    pop     addvvXnameB8_4
#(js) }
    pop     addvvXnameB8_5
#(js) }
    pop     addvvXnameB8_s
    pop     addvvXnameB8_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB8_s
    push    mulvvvXabsNameA8_s
    or
    not
    push    addvvXnameB8_s
    push    mulvvvXabsNameA8_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB8_s
        pop     resultX8_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB8_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b568
    sbm _a568 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c568
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao568
        while
            push _a568
            if
                at _a568
                    dec
                ta 
                at _b568
                    inc
                ta
                push _b568
                not
                if 
                    at _c568
                        set 1
                    ta
                fi
            else 
                at _loopao568
                    reset
                ta
            fi
        wend
        push _c568
        if
            at _a568
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_0
        push    mulvvvXabsNameA8_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b569
    sbm _a569 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c569
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao569
        while
            push _a569
            if
                at _a569
                    dec
                ta 
                at _b569
                    inc
                ta
                push _b569
                not
                if 
                    at _c569
                        set 1
                    ta
                fi
            else 
                at _loopao569
                    reset
                ta
            fi
        wend
        push _c569
        if
            at _a569
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b570
    sbm _a570 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c570
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao570
        while
            push _a570
            if
                at _a570
                    dec
                ta 
                at _b570
                    inc
                ta
                push _b570
                not
                if 
                    at _c570
                        set 1
                    ta
                fi
            else 
                at _loopao570
                    reset
                ta
            fi
        wend
        push _c570
        if
            at _a570
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_0
        add    
#(js) }
        push    addvvXnameB8_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b571
    sbm _a571 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c571
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao571
        while
            push _a571
            if
                at _a571
                    dec
                ta 
                at _b571
                    inc
                ta
                push _b571
                not
                if 
                    at _c571
                        set 1
                    ta
                fi
            else 
                at _loopao571
                    reset
                ta
            fi
        wend
        push _c571
        if
            at _a571
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_1
        push    mulvvvXabsNameA8_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b572
    sbm _a572 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c572
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao572
        while
            push _a572
            if
                at _a572
                    dec
                ta 
                at _b572
                    inc
                ta
                push _b572
                not
                if 
                    at _c572
                        set 1
                    ta
                fi
            else 
                at _loopao572
                    reset
                ta
            fi
        wend
        push _c572
        if
            at _a572
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b573
    sbm _a573 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c573
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao573
        while
            push _a573
            if
                at _a573
                    dec
                ta 
                at _b573
                    inc
                ta
                push _b573
                not
                if 
                    at _c573
                        set 1
                    ta
                fi
            else 
                at _loopao573
                    reset
                ta
            fi
        wend
        push _c573
        if
            at _a573
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_1
        add    
#(js) }
        push    addvvXnameB8_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b574
    sbm _a574 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c574
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao574
        while
            push _a574
            if
                at _a574
                    dec
                ta 
                at _b574
                    inc
                ta
                push _b574
                not
                if 
                    at _c574
                        set 1
                    ta
                fi
            else 
                at _loopao574
                    reset
                ta
            fi
        wend
        push _c574
        if
            at _a574
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_2
        push    mulvvvXabsNameA8_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b575
    sbm _a575 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c575
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao575
        while
            push _a575
            if
                at _a575
                    dec
                ta 
                at _b575
                    inc
                ta
                push _b575
                not
                if 
                    at _c575
                        set 1
                    ta
                fi
            else 
                at _loopao575
                    reset
                ta
            fi
        wend
        push _c575
        if
            at _a575
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b576
    sbm _a576 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c576
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao576
        while
            push _a576
            if
                at _a576
                    dec
                ta 
                at _b576
                    inc
                ta
                push _b576
                not
                if 
                    at _c576
                        set 1
                    ta
                fi
            else 
                at _loopao576
                    reset
                ta
            fi
        wend
        push _c576
        if
            at _a576
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_2
        add    
#(js) }
        push    addvvXnameB8_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b577
    sbm _a577 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c577
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao577
        while
            push _a577
            if
                at _a577
                    dec
                ta 
                at _b577
                    inc
                ta
                push _b577
                not
                if 
                    at _c577
                        set 1
                    ta
                fi
            else 
                at _loopao577
                    reset
                ta
            fi
        wend
        push _c577
        if
            at _a577
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_3
        push    mulvvvXabsNameA8_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b578
    sbm _a578 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c578
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao578
        while
            push _a578
            if
                at _a578
                    dec
                ta 
                at _b578
                    inc
                ta
                push _b578
                not
                if 
                    at _c578
                        set 1
                    ta
                fi
            else 
                at _loopao578
                    reset
                ta
            fi
        wend
        push _c578
        if
            at _a578
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b579
    sbm _a579 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c579
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao579
        while
            push _a579
            if
                at _a579
                    dec
                ta 
                at _b579
                    inc
                ta
                push _b579
                not
                if 
                    at _c579
                        set 1
                    ta
                fi
            else 
                at _loopao579
                    reset
                ta
            fi
        wend
        push _c579
        if
            at _a579
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_3
        add    
#(js) }
        push    addvvXnameB8_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b580
    sbm _a580 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c580
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao580
        while
            push _a580
            if
                at _a580
                    dec
                ta 
                at _b580
                    inc
                ta
                push _b580
                not
                if 
                    at _c580
                        set 1
                    ta
                fi
            else 
                at _loopao580
                    reset
                ta
            fi
        wend
        push _c580
        if
            at _a580
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_4
        push    mulvvvXabsNameA8_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b581
    sbm _a581 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c581
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao581
        while
            push _a581
            if
                at _a581
                    dec
                ta 
                at _b581
                    inc
                ta
                push _b581
                not
                if 
                    at _c581
                        set 1
                    ta
                fi
            else 
                at _loopao581
                    reset
                ta
            fi
        wend
        push _c581
        if
            at _a581
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b582
    sbm _a582 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c582
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao582
        while
            push _a582
            if
                at _a582
                    dec
                ta 
                at _b582
                    inc
                ta
                push _b582
                not
                if 
                    at _c582
                        set 1
                    ta
                fi
            else 
                at _loopao582
                    reset
                ta
            fi
        wend
        push _c582
        if
            at _a582
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_4
        add    
#(js) }
        push    addvvXnameB8_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b583
    sbm _a583 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c583
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao583
        while
            push _a583
            if
                at _a583
                    dec
                ta 
                at _b583
                    inc
                ta
                push _b583
                not
                if 
                    at _c583
                        set 1
                    ta
                fi
            else 
                at _loopao583
                    reset
                ta
            fi
        wend
        push _c583
        if
            at _a583
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_5
        push    mulvvvXabsNameA8_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b584
    sbm _a584 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c584
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao584
        while
            push _a584
            if
                at _a584
                    dec
                ta 
                at _b584
                    inc
                ta
                push _b584
                not
                if 
                    at _c584
                        set 1
                    ta
                fi
            else 
                at _loopao584
                    reset
                ta
            fi
        wend
        push _c584
        if
            at _a584
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX8_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b585
    sbm _a585 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c585
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao585
        while
            push _a585
            if
                at _a585
                    dec
                ta 
                at _b585
                    inc
                ta
                push _b585
                not
                if 
                    at _c585
                        set 1
                    ta
                fi
            else 
                at _loopao585
                    reset
                ta
            fi
        wend
        push _c585
        if
            at _a585
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX8_5
        add    
#(js) }
        pop     resultX8_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb15
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb15
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB8_5
            push    mulvvvXabsNameA8_5
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_5
                push    mulvvvXabsNameA8_5
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB8_4
            push    mulvvvXabsNameA8_4
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_4
                push    mulvvvXabsNameA8_4
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB8_3
            push    mulvvvXabsNameA8_3
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_3
                push    mulvvvXabsNameA8_3
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB8_2
            push    mulvvvXabsNameA8_2
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_2
                push    mulvvvXabsNameA8_2
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB8_1
            push    mulvvvXabsNameA8_1
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_1
                push    mulvvvXabsNameA8_1
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB8_0
            push    mulvvvXabsNameA8_0
            sup
            if  
               at _asupb15
                set 1
               ta
            else 
                push    addvvXnameB8_0
                push    mulvvvXabsNameA8_0
                diff
                if
                at _asupb15
                    reset
                ta
                else           
#(js) }
            at _aequb15
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb15
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB8_s
                pop     resultX8_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB8_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b586
    sbm _a586 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c586
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao586
        while
            push _b586
            if  
                at _b586
                    dec
                ta
                at _a586
                    dec
                ta
                push _a586
                inc
                not
                if
                    at _c586
                        set 1
                    ta
                fi 
            else
                at _loopao586
                    reset
                ta
            fi
        wend
        push _c586
        if
            at _b586
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_0
                push    mulvvvXabsNameA8_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b587
    sbm _a587 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c587
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao587
        while
            push _b587
            if  
                at _b587
                    dec
                ta
                at _a587
                    dec
                ta
                push _a587
                inc
                not
                if
                    at _c587
                        set 1
                    ta
                fi 
            else
                at _loopao587
                    reset
                ta
            fi
        wend
        push _c587
        if
            at _b587
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b588
    sbm _a588 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c588
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao588
        while
            push _b588
            if  
                at _b588
                    dec
                ta
                at _a588
                    dec
                ta
                push _a588
                inc
                not
                if
                    at _c588
                        set 1
                    ta
                fi 
            else
                at _loopao588
                    reset
                ta
            fi
        wend
        push _c588
        if
            at _b588
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_0 
                add   
#(js) }
                push    addvvXnameB8_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b589
    sbm _a589 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c589
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao589
        while
            push _b589
            if  
                at _b589
                    dec
                ta
                at _a589
                    dec
                ta
                push _a589
                inc
                not
                if
                    at _c589
                        set 1
                    ta
                fi 
            else
                at _loopao589
                    reset
                ta
            fi
        wend
        push _c589
        if
            at _b589
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_1
                push    mulvvvXabsNameA8_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b590
    sbm _a590 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c590
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao590
        while
            push _b590
            if  
                at _b590
                    dec
                ta
                at _a590
                    dec
                ta
                push _a590
                inc
                not
                if
                    at _c590
                        set 1
                    ta
                fi 
            else
                at _loopao590
                    reset
                ta
            fi
        wend
        push _c590
        if
            at _b590
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b591
    sbm _a591 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c591
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao591
        while
            push _b591
            if  
                at _b591
                    dec
                ta
                at _a591
                    dec
                ta
                push _a591
                inc
                not
                if
                    at _c591
                        set 1
                    ta
                fi 
            else
                at _loopao591
                    reset
                ta
            fi
        wend
        push _c591
        if
            at _b591
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_1 
                add   
#(js) }
                push    addvvXnameB8_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b592
    sbm _a592 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c592
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao592
        while
            push _b592
            if  
                at _b592
                    dec
                ta
                at _a592
                    dec
                ta
                push _a592
                inc
                not
                if
                    at _c592
                        set 1
                    ta
                fi 
            else
                at _loopao592
                    reset
                ta
            fi
        wend
        push _c592
        if
            at _b592
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_2
                push    mulvvvXabsNameA8_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b593
    sbm _a593 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c593
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao593
        while
            push _b593
            if  
                at _b593
                    dec
                ta
                at _a593
                    dec
                ta
                push _a593
                inc
                not
                if
                    at _c593
                        set 1
                    ta
                fi 
            else
                at _loopao593
                    reset
                ta
            fi
        wend
        push _c593
        if
            at _b593
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b594
    sbm _a594 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c594
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao594
        while
            push _b594
            if  
                at _b594
                    dec
                ta
                at _a594
                    dec
                ta
                push _a594
                inc
                not
                if
                    at _c594
                        set 1
                    ta
                fi 
            else
                at _loopao594
                    reset
                ta
            fi
        wend
        push _c594
        if
            at _b594
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_2 
                add   
#(js) }
                push    addvvXnameB8_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b595
    sbm _a595 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c595
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao595
        while
            push _b595
            if  
                at _b595
                    dec
                ta
                at _a595
                    dec
                ta
                push _a595
                inc
                not
                if
                    at _c595
                        set 1
                    ta
                fi 
            else
                at _loopao595
                    reset
                ta
            fi
        wend
        push _c595
        if
            at _b595
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_3
                push    mulvvvXabsNameA8_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b596
    sbm _a596 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c596
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao596
        while
            push _b596
            if  
                at _b596
                    dec
                ta
                at _a596
                    dec
                ta
                push _a596
                inc
                not
                if
                    at _c596
                        set 1
                    ta
                fi 
            else
                at _loopao596
                    reset
                ta
            fi
        wend
        push _c596
        if
            at _b596
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b597
    sbm _a597 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c597
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao597
        while
            push _b597
            if  
                at _b597
                    dec
                ta
                at _a597
                    dec
                ta
                push _a597
                inc
                not
                if
                    at _c597
                        set 1
                    ta
                fi 
            else
                at _loopao597
                    reset
                ta
            fi
        wend
        push _c597
        if
            at _b597
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_3 
                add   
#(js) }
                push    addvvXnameB8_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b598
    sbm _a598 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c598
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao598
        while
            push _b598
            if  
                at _b598
                    dec
                ta
                at _a598
                    dec
                ta
                push _a598
                inc
                not
                if
                    at _c598
                        set 1
                    ta
                fi 
            else
                at _loopao598
                    reset
                ta
            fi
        wend
        push _c598
        if
            at _b598
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_4
                push    mulvvvXabsNameA8_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b599
    sbm _a599 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c599
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao599
        while
            push _b599
            if  
                at _b599
                    dec
                ta
                at _a599
                    dec
                ta
                push _a599
                inc
                not
                if
                    at _c599
                        set 1
                    ta
                fi 
            else
                at _loopao599
                    reset
                ta
            fi
        wend
        push _c599
        if
            at _b599
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b600
    sbm _a600 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c600
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao600
        while
            push _b600
            if  
                at _b600
                    dec
                ta
                at _a600
                    dec
                ta
                push _a600
                inc
                not
                if
                    at _c600
                        set 1
                    ta
                fi 
            else
                at _loopao600
                    reset
                ta
            fi
        wend
        push _c600
        if
            at _b600
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_4 
                add   
#(js) }
                push    addvvXnameB8_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b601
    sbm _a601 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c601
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao601
        while
            push _b601
            if  
                at _b601
                    dec
                ta
                at _a601
                    dec
                ta
                push _a601
                inc
                not
                if
                    at _c601
                        set 1
                    ta
                fi 
            else
                at _loopao601
                    reset
                ta
            fi
        wend
        push _c601
        if
            at _b601
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_5
                push    mulvvvXabsNameA8_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b602
    sbm _a602 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c602
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao602
        while
            push _b602
            if  
                at _b602
                    dec
                ta
                at _a602
                    dec
                ta
                push _a602
                inc
                not
                if
                    at _c602
                        set 1
                    ta
                fi 
            else
                at _loopao602
                    reset
                ta
            fi
        wend
        push _c602
        if
            at _b602
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX8_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b603
    sbm _a603 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c603
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao603
        while
            push _b603
            if  
                at _b603
                    dec
                ta
                at _a603
                    dec
                ta
                push _a603
                inc
                not
                if
                    at _c603
                        set 1
                    ta
                fi 
            else
                at _loopao603
                    reset
                ta
            fi
        wend
        push _c603
        if
            at _b603
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX8_5 
                add   
#(js) }
                pop     resultX8_c
            
            else # absB >= absA : 
                push    _aequb15
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX8_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA8_s
                    pop     resultX8_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA8_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b604
    sbm _a604 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c604
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao604
        while
            push _b604
            if  
                at _b604
                    dec
                ta
                at _a604
                    dec
                ta
                push _a604
                inc
                not
                if
                    at _c604
                        set 1
                    ta
                fi 
            else
                at _loopao604
                    reset
                ta
            fi
        wend
        push _c604
        if
            at _b604
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_0
                    push    addvvXnameB8_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b605
    sbm _a605 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c605
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao605
        while
            push _b605
            if  
                at _b605
                    dec
                ta
                at _a605
                    dec
                ta
                push _a605
                inc
                not
                if
                    at _c605
                        set 1
                    ta
                fi 
            else
                at _loopao605
                    reset
                ta
            fi
        wend
        push _c605
        if
            at _b605
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b606
    sbm _a606 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c606
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao606
        while
            push _b606
            if  
                at _b606
                    dec
                ta
                at _a606
                    dec
                ta
                push _a606
                inc
                not
                if
                    at _c606
                        set 1
                    ta
                fi 
            else
                at _loopao606
                    reset
                ta
            fi
        wend
        push _c606
        if
            at _b606
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_0
                    add    
#(js) }
                    push    mulvvvXabsNameA8_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b607
    sbm _a607 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c607
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao607
        while
            push _b607
            if  
                at _b607
                    dec
                ta
                at _a607
                    dec
                ta
                push _a607
                inc
                not
                if
                    at _c607
                        set 1
                    ta
                fi 
            else
                at _loopao607
                    reset
                ta
            fi
        wend
        push _c607
        if
            at _b607
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_1
                    push    addvvXnameB8_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b608
    sbm _a608 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c608
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao608
        while
            push _b608
            if  
                at _b608
                    dec
                ta
                at _a608
                    dec
                ta
                push _a608
                inc
                not
                if
                    at _c608
                        set 1
                    ta
                fi 
            else
                at _loopao608
                    reset
                ta
            fi
        wend
        push _c608
        if
            at _b608
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b609
    sbm _a609 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c609
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao609
        while
            push _b609
            if  
                at _b609
                    dec
                ta
                at _a609
                    dec
                ta
                push _a609
                inc
                not
                if
                    at _c609
                        set 1
                    ta
                fi 
            else
                at _loopao609
                    reset
                ta
            fi
        wend
        push _c609
        if
            at _b609
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_1
                    add    
#(js) }
                    push    mulvvvXabsNameA8_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b610
    sbm _a610 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c610
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao610
        while
            push _b610
            if  
                at _b610
                    dec
                ta
                at _a610
                    dec
                ta
                push _a610
                inc
                not
                if
                    at _c610
                        set 1
                    ta
                fi 
            else
                at _loopao610
                    reset
                ta
            fi
        wend
        push _c610
        if
            at _b610
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_2
                    push    addvvXnameB8_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b611
    sbm _a611 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c611
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao611
        while
            push _b611
            if  
                at _b611
                    dec
                ta
                at _a611
                    dec
                ta
                push _a611
                inc
                not
                if
                    at _c611
                        set 1
                    ta
                fi 
            else
                at _loopao611
                    reset
                ta
            fi
        wend
        push _c611
        if
            at _b611
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b612
    sbm _a612 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c612
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao612
        while
            push _b612
            if  
                at _b612
                    dec
                ta
                at _a612
                    dec
                ta
                push _a612
                inc
                not
                if
                    at _c612
                        set 1
                    ta
                fi 
            else
                at _loopao612
                    reset
                ta
            fi
        wend
        push _c612
        if
            at _b612
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_2
                    add    
#(js) }
                    push    mulvvvXabsNameA8_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b613
    sbm _a613 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c613
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao613
        while
            push _b613
            if  
                at _b613
                    dec
                ta
                at _a613
                    dec
                ta
                push _a613
                inc
                not
                if
                    at _c613
                        set 1
                    ta
                fi 
            else
                at _loopao613
                    reset
                ta
            fi
        wend
        push _c613
        if
            at _b613
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_3
                    push    addvvXnameB8_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b614
    sbm _a614 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c614
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao614
        while
            push _b614
            if  
                at _b614
                    dec
                ta
                at _a614
                    dec
                ta
                push _a614
                inc
                not
                if
                    at _c614
                        set 1
                    ta
                fi 
            else
                at _loopao614
                    reset
                ta
            fi
        wend
        push _c614
        if
            at _b614
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b615
    sbm _a615 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c615
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao615
        while
            push _b615
            if  
                at _b615
                    dec
                ta
                at _a615
                    dec
                ta
                push _a615
                inc
                not
                if
                    at _c615
                        set 1
                    ta
                fi 
            else
                at _loopao615
                    reset
                ta
            fi
        wend
        push _c615
        if
            at _b615
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_3
                    add    
#(js) }
                    push    mulvvvXabsNameA8_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b616
    sbm _a616 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c616
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao616
        while
            push _b616
            if  
                at _b616
                    dec
                ta
                at _a616
                    dec
                ta
                push _a616
                inc
                not
                if
                    at _c616
                        set 1
                    ta
                fi 
            else
                at _loopao616
                    reset
                ta
            fi
        wend
        push _c616
        if
            at _b616
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_4
                    push    addvvXnameB8_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b617
    sbm _a617 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c617
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao617
        while
            push _b617
            if  
                at _b617
                    dec
                ta
                at _a617
                    dec
                ta
                push _a617
                inc
                not
                if
                    at _c617
                        set 1
                    ta
                fi 
            else
                at _loopao617
                    reset
                ta
            fi
        wend
        push _c617
        if
            at _b617
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b618
    sbm _a618 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c618
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao618
        while
            push _b618
            if  
                at _b618
                    dec
                ta
                at _a618
                    dec
                ta
                push _a618
                inc
                not
                if
                    at _c618
                        set 1
                    ta
                fi 
            else
                at _loopao618
                    reset
                ta
            fi
        wend
        push _c618
        if
            at _b618
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_4
                    add    
#(js) }
                    push    mulvvvXabsNameA8_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b619
    sbm _a619 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c619
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao619
        while
            push _b619
            if  
                at _b619
                    dec
                ta
                at _a619
                    dec
                ta
                push _a619
                inc
                not
                if
                    at _c619
                        set 1
                    ta
                fi 
            else
                at _loopao619
                    reset
                ta
            fi
        wend
        push _c619
        if
            at _b619
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_5
                    push    addvvXnameB8_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b620
    sbm _a620 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c620
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao620
        while
            push _b620
            if  
                at _b620
                    dec
                ta
                at _a620
                    dec
                ta
                push _a620
                inc
                not
                if
                    at _c620
                        set 1
                    ta
                fi 
            else
                at _loopao620
                    reset
                ta
            fi
        wend
        push _c620
        if
            at _b620
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX8_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b621
    sbm _a621 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c621
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao621
        while
            push _b621
            if  
                at _b621
                    dec
                ta
                at _a621
                    dec
                ta
                push _a621
                inc
                not
                if
                    at _c621
                        set 1
                    ta
                fi 
            else
                at _loopao621
                    reset
                ta
            fi
        wend
        push _c621
        if
            at _b621
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX8_5
                    add    
#(js) }
                    pop     resultX8_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB8_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB8_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB8_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB8_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB8_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB8_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop8
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA8
        push mulvvvXsB8
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX8_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX8_c
    push    resultX8_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX8_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack16_0    # 0 byte of _instack16
#(js) }
    var _instack16_1    # 1 byte of _instack16
#(js) }
    var _instack16_2    # 2 byte of _instack16
#(js) }
    var _instack16_3    # 3 byte of _instack16
#(js) }
    var _instack16_4    # 4 byte of _instack16
#(js) }
    var _instack16_5    # 5 byte of _instack16
#(js) }
    var _instack16_s    # Sign of _instack16
    var _instack16_c    # carry of _instack16 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack16_0    # 0 byte of _outstack16
#(js) }
    var _outstack16_1    # 1 byte of _outstack16
#(js) }
    var _outstack16_2    # 2 byte of _outstack16
#(js) }
    var _outstack16_s    # Sign of _outstack16
    var _outstack16_c    # carry of _outstack16 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack16_0
#(js) }
    pop     _instack16_1
#(js) }
    pop     _instack16_2
#(js) }
    pop     _instack16_3
#(js) }
    pop     _instack16_4
#(js) }
    pop     _instack16_5
#(js) }
    pop     _instack16_s
    pop     _instack16_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack16_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack16_s
    pop _outstack16_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack16_4
            pop _outstack16_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack16_3
            pop _outstack16_1
#(js) }
            push _instack16_2
            pop _outstack16_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack16_c
    push    _outstack16_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack16_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack16_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack16_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA8_0
#(js) }
    pop     nameA8_1
#(js) }
    pop     nameA8_2
#(js) }
    pop     nameA8_s
    pop     nameA8_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)                
#(begin macro)                pushvX(FP,"newIm")
    push    newIm_c
    push    newIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_0
#(js) }
#(end macro)                pushvX(FP,"newIm")
#(begin macro)                pushvX(FP,"newIm")
    push    newIm_c
    push    newIm_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    newIm_0
#(js) }
#(end macro)                pushvX(FP,"newIm")
#(begin macro)                mulFP(FP_I,FP_P)
#(js) _fp1++;
#(js) var IP ; IP = (I+P); 
#(js) var IP2 ; IP2 = 2 * IP;
#(begin macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameB9_0 - 0
#(js) }
    sbm nameB9_1 - 1
#(js) }
    sbm nameB9_2 - 2
#(js) }
    sbm nameB9_s - 3
    sbm nameB9_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameB"+_fp1,0)
#(begin macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm nameA9_0 - 5
#(js) }
    sbm nameA9_1 - 6
#(js) }
    sbm nameA9_2 - 7
#(js) }
    sbm nameA9_s - 8
    sbm nameA9_c - 9
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP, "nameA"+_fp1,1)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameAX9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameAX9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameAX9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameAX"  + _fp1)
#(begin macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm nameBX9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm nameBX9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm nameBX9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "nameBX"  + _fp1)
#(begin macro)        lvarX(IP2, "resultX" + _fp1)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm resultX9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm resultX9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm resultX9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(IP2, "resultX" + _fp1)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameA"+_fp1)
    push    nameA9_c
    push    nameA9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameA9_0
#(js) }
#(end macro)        pushvX(IP,"nameA"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput17_0 - 0
#(js) }
    sbm _castXInput17_1 - 1
#(js) }
    sbm _castXInput17_2 - 2
#(js) }
    sbm _castXInput17_s - 3
    sbm _castXInput17_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput17_0    # 0 byte of _castXoutput17
#(js) }
    var _castXoutput17_1    # 1 byte of _castXoutput17
#(js) }
    var _castXoutput17_2    # 2 byte of _castXoutput17
#(js) }
    var _castXoutput17_3    # 3 byte of _castXoutput17
#(js) }
    var _castXoutput17_4    # 4 byte of _castXoutput17
#(js) }
    var _castXoutput17_5    # 5 byte of _castXoutput17
#(js) }
    var _castXoutput17_s    # Sign of _castXoutput17
    var _castXoutput17_c    # carry of _castXoutput17 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori17_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori17_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori17_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori17_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori17_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest17_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest17_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest17_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput17_c
    push    _castXInput17_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput17_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput17_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput17_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori17_0
#(js) }
    pop     ori17_1
#(js) }
    pop     ori17_2
#(js) }
    pop     ori17_s
    pop     ori17_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori17_s   
        pop     dest17_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori17_0
                pop     dest17_0
#(js) }
                push    ori17_1
                pop     dest17_1
#(js) }
                push    ori17_2
                pop     dest17_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest17_3
#(js) } 
                push    0
                pop     dest17_4
#(js) } 
                push    0
                pop     dest17_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest17_c
    push    dest17_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest17_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput17_0
#(js) }
    pop     _castXoutput17_1
#(js) }
    pop     _castXoutput17_2
#(js) }
    pop     _castXoutput17_3
#(js) }
    pop     _castXoutput17_4
#(js) }
    pop     _castXoutput17_5
#(js) }
    pop     _castXoutput17_s
    pop     _castXoutput17_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput17_c
    push    _castXoutput17_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput17_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameAX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameAX9_0
#(js) }
    pop     nameAX9_1
#(js) }
    pop     nameAX9_2
#(js) }
    pop     nameAX9_3
#(js) }
    pop     nameAX9_4
#(js) }
    pop     nameAX9_5
#(js) }
    pop     nameAX9_s
    pop     nameAX9_c
#(end macro)        popvX(IP2,"nameAX"+_fp1)

        # upcast nameB to nameBX (from I+P to (I+P) * 2)
#(begin macro)        pushvX(IP,"nameB"+_fp1)
    push    nameB9_c
    push    nameB9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameB9_0
#(js) }
#(end macro)        pushvX(IP,"nameB"+_fp1)
#(begin macro)        castX(IP,IP2)
#(js) if (X1 != X2 && X1 > 0 && X2 > 0) {
#(js) _sv9++;
#(begin macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _castXInput18_0 - 0
#(js) }
    sbm _castXInput18_1 - 1
#(js) }
    sbm _castXInput18_2 - 2
#(js) }
    sbm _castXInput18_s - 3
    sbm _castXInput18_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(X1,"_castXInput"+_sv9,0)
#(begin macro)    varX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _castXoutput18_0    # 0 byte of _castXoutput18
#(js) }
    var _castXoutput18_1    # 1 byte of _castXoutput18
#(js) }
    var _castXoutput18_2    # 2 byte of _castXoutput18
#(js) }
    var _castXoutput18_3    # 3 byte of _castXoutput18
#(js) }
    var _castXoutput18_4    # 4 byte of _castXoutput18
#(js) }
    var _castXoutput18_5    # 5 byte of _castXoutput18
#(js) }
    var _castXoutput18_s    # Sign of _castXoutput18
    var _castXoutput18_c    # carry of _castXoutput18 
#(end macro)    varX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm ori18_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm ori18_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori18_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori18_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm ori18_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X1,"ori" + _sv9)
#(begin macro)        lvarX(X2,"dest" + _sv9)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm dest18_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm dest18_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm dest18_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X2,"dest" + _sv9)

#(begin macro)        pushvX(X1,"_castXInput"+_sv9)       
    push    _castXInput18_c
    push    _castXInput18_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput18_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput18_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXInput18_0
#(js) }
#(end macro)        pushvX(X1,"_castXInput"+_sv9)       
#(begin macro)        popvX(X1,"ori" + _sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     ori18_0
#(js) }
    pop     ori18_1
#(js) }
    pop     ori18_2
#(js) }
    pop     ori18_s
    pop     ori18_c
#(end macro)        popvX(X1,"ori" + _sv9)
        push    ori18_s   
        pop     dest18_s  # keep sign
#(js) if (X1 < X2) {
#(js) for (var xx = 0 ; xx < X1; xx++) {
                push    ori18_0
                pop     dest18_0
#(js) }
                push    ori18_1
                pop     dest18_1
#(js) }
                push    ori18_2
                pop     dest18_2
#(js) }
#(js) for (var xx = X1; xx < X2 ; xx++ ) {
                push    0
                pop     dest18_3
#(js) } 
                push    0
                pop     dest18_4
#(js) } 
                push    0
                pop     dest18_5
#(js) } 
#(js) } else { // if X1 > X2
#(begin macro)        pushvX(X2,"dest"+_sv9)
    push    dest18_c
    push    dest18_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    dest18_0
#(js) }
#(end macro)        pushvX(X2,"dest"+_sv9)
#(begin macro)        popvX(X2,"_castXoutput"+_sv9)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _castXoutput18_0
#(js) }
    pop     _castXoutput18_1
#(js) }
    pop     _castXoutput18_2
#(js) }
    pop     _castXoutput18_3
#(js) }
    pop     _castXoutput18_4
#(js) }
    pop     _castXoutput18_5
#(js) }
    pop     _castXoutput18_s
    pop     _castXoutput18_c
#(end macro)        popvX(X2,"_castXoutput"+_sv9)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(X1)
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(X1)
#(begin macro)    pushvX(X2,"_castXoutput"+_sv9) 
    push    _castXoutput18_c
    push    _castXoutput18_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _castXoutput18_0
#(js) }
#(end macro)    pushvX(X2,"_castXoutput"+_sv9) 
#(js) }
#(end macro)        castX(IP,IP2)
#(begin macro)        popvX(IP2,"nameBX"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameBX9_0
#(js) }
    pop     nameBX9_1
#(js) }
    pop     nameBX9_2
#(js) }
    pop     nameBX9_3
#(js) }
    pop     nameBX9_4
#(js) }
    pop     nameBX9_5
#(js) }
    pop     nameBX9_s
    pop     nameBX9_c
#(end macro)        popvX(IP2,"nameBX"+_fp1)
        
#(begin macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
#(js) _sv5++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameA9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameA9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameA9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        pushvX(X,nameA)
    push    nameAX9_c
    push    nameAX9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameAX9_0
#(js) }
#(end macro)        pushvX(X,nameA)
#(begin macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameA9_0
#(js) }
    pop     mulvvvXabsNameA9_1
#(js) }
    pop     mulvvvXabsNameA9_2
#(js) }
    pop     mulvvvXabsNameA9_3
#(js) }
    pop     mulvvvXabsNameA9_4
#(js) }
    pop     mulvvvXabsNameA9_5
#(js) }
    pop     mulvvvXabsNameA9_s
    pop     mulvvvXabsNameA9_c
#(end macro)        popvX(X,"mulvvvXabsNameA" + _sv5)
#(begin macro)        lvar("mulvvvXsA" + _sv5, 0)
    push 0
    sbm mulvvvXsA9
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsA" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
    push    mulvvvXabsNameA9_s
#(end macro)        pushsvX(X,"mulvvvXabsNameA" + _sv5)
        pop mulvvvXsA9
#(begin macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
    push    0
    pop     mulvvvXabsNameA9_s
#(end macro)        absvX(X,"mulvvvXabsNameA" + _sv5)   # absNameA = abs(nameA)
        
#(begin macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm mulvvvXabsNameB9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm mulvvvXabsNameB9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm mulvvvXabsNameB9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        pushvX(X,nameB)
    push    nameBX9_c
    push    nameBX9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    nameBX9_0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx=0; xx < X; xx++) {
    pop     mulvvvXabsNameB9_0
#(js) }
    pop     mulvvvXabsNameB9_1
#(js) }
    pop     mulvvvXabsNameB9_2
#(js) }
    pop     mulvvvXabsNameB9_3
#(js) }
    pop     mulvvvXabsNameB9_4
#(js) }
    pop     mulvvvXabsNameB9_5
#(js) }
    pop     mulvvvXabsNameB9_s
    pop     mulvvvXabsNameB9_c
#(end macro)        popvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)        lvar("mulvvvXsB" + _sv5, 0)
    push 0
    sbm mulvvvXsB9
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("mulvvvXsB" + _sv5, 0)
#(begin macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
    push    mulvvvXabsNameB9_s
#(end macro)        pushsvX(X,"mulvvvXabsNameB" + _sv5)
        pop mulvvvXsB9
#(begin macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
    push    0
    pop     mulvvvXabsNameB9_s
#(end macro)        absvX(X,"mulvvvXabsNameB" + _sv5)   # absNameB = abs(nameB)
        
#(begin macro)        resetvX(X,name)
    at resultX9_0
#(begin macro)        resetX(X)
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf [-]
#(js) for (var xx= 0; xx < X+1 ; xx++) {
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
    bf >[-]
#(js) }
#(end macro)        resetX(X)
    ta
#(end macro)        resetvX(X,name)

        push    1
        sbm mulvvvX_loop9
        while
#(begin macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
#(js) for (var xx = 0 ; xx < X; xx++) {
    push mulvvvXabsNameB9_0
    bool
#(js) }
    push mulvvvXabsNameB9_1
    bool
#(js) }
    push mulvvvXabsNameB9_2
    bool
#(js) }
    push mulvvvXabsNameB9_3
    bool
#(js) }
    push mulvvvXabsNameB9_4
    bool
#(js) }
    push mulvvvXabsNameB9_5
    bool
#(js) }
#(js) for (var xx = 0 ; xx < X-1; xx++) {
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
    or
#(js) }
#(end macro)            boolvX(X,"mulvvvXabsNameB" + _sv5)
            if  # absNameB is not zero
#(begin macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(js) _sv11++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm addvvXnameB9_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm addvvXnameB9_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_5
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_4
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_3
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm addvvXnameB9_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"addvvXnameB"+_sv11)
#(begin macro)    pushvX(X,name)
    push    resultX9_c
    push    resultX9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_0
#(js) }
#(end macro)    pushvX(X,name)
#(begin macro)    popvX(X,"addvvXnameB"+_sv11)
#(js) for (var xx=0; xx < X; xx++) {
    pop     addvvXnameB9_0
#(js) }
    pop     addvvXnameB9_1
#(js) }
    pop     addvvXnameB9_2
#(js) }
    pop     addvvXnameB9_3
#(js) }
    pop     addvvXnameB9_4
#(js) }
    pop     addvvXnameB9_5
#(js) }
    pop     addvvXnameB9_s
    pop     addvvXnameB9_c
#(end macro)    popvX(X,"addvvXnameB"+_sv11)
#(begin macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(js) _sv3++;
    
    push    addvvXnameB9_s
    push    mulvvvXabsNameA9_s
    or
    not
    push    addvvXnameB9_s
    push    mulvvvXabsNameA9_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    addvvXnameB9_s
        pop     resultX9_s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    addvvXnameB9_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b622
    sbm _a622 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c622
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao622
        while
            push _a622
            if
                at _a622
                    dec
                ta 
                at _b622
                    inc
                ta
                push _b622
                not
                if 
                    at _c622
                        set 1
                    ta
                fi
            else 
                at _loopao622
                    reset
                ta
            fi
        wend
        push _c622
        if
            at _a622
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_0
        push    mulvvvXabsNameA9_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b623
    sbm _a623 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c623
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao623
        while
            push _a623
            if
                at _a623
                    dec
                ta 
                at _b623
                    inc
                ta
                push _b623
                not
                if 
                    at _c623
                        set 1
                    ta
                fi
            else 
                at _loopao623
                    reset
                ta
            fi
        wend
        push _c623
        if
            at _a623
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b624
    sbm _a624 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c624
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao624
        while
            push _a624
            if
                at _a624
                    dec
                ta 
                at _b624
                    inc
                ta
                push _b624
                not
                if 
                    at _c624
                        set 1
                    ta
                fi
            else 
                at _loopao624
                    reset
                ta
            fi
        wend
        push _c624
        if
            at _a624
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_0
        add    
#(js) }
        push    addvvXnameB9_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b625
    sbm _a625 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c625
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao625
        while
            push _a625
            if
                at _a625
                    dec
                ta 
                at _b625
                    inc
                ta
                push _b625
                not
                if 
                    at _c625
                        set 1
                    ta
                fi
            else 
                at _loopao625
                    reset
                ta
            fi
        wend
        push _c625
        if
            at _a625
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_1
        push    mulvvvXabsNameA9_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b626
    sbm _a626 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c626
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao626
        while
            push _a626
            if
                at _a626
                    dec
                ta 
                at _b626
                    inc
                ta
                push _b626
                not
                if 
                    at _c626
                        set 1
                    ta
                fi
            else 
                at _loopao626
                    reset
                ta
            fi
        wend
        push _c626
        if
            at _a626
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b627
    sbm _a627 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c627
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao627
        while
            push _a627
            if
                at _a627
                    dec
                ta 
                at _b627
                    inc
                ta
                push _b627
                not
                if 
                    at _c627
                        set 1
                    ta
                fi
            else 
                at _loopao627
                    reset
                ta
            fi
        wend
        push _c627
        if
            at _a627
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_1
        add    
#(js) }
        push    addvvXnameB9_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b628
    sbm _a628 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c628
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao628
        while
            push _a628
            if
                at _a628
                    dec
                ta 
                at _b628
                    inc
                ta
                push _b628
                not
                if 
                    at _c628
                        set 1
                    ta
                fi
            else 
                at _loopao628
                    reset
                ta
            fi
        wend
        push _c628
        if
            at _a628
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_2
        push    mulvvvXabsNameA9_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b629
    sbm _a629 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c629
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao629
        while
            push _a629
            if
                at _a629
                    dec
                ta 
                at _b629
                    inc
                ta
                push _b629
                not
                if 
                    at _c629
                        set 1
                    ta
                fi
            else 
                at _loopao629
                    reset
                ta
            fi
        wend
        push _c629
        if
            at _a629
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b630
    sbm _a630 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c630
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao630
        while
            push _a630
            if
                at _a630
                    dec
                ta 
                at _b630
                    inc
                ta
                push _b630
                not
                if 
                    at _c630
                        set 1
                    ta
                fi
            else 
                at _loopao630
                    reset
                ta
            fi
        wend
        push _c630
        if
            at _a630
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_2
        add    
#(js) }
        push    addvvXnameB9_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b631
    sbm _a631 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c631
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao631
        while
            push _a631
            if
                at _a631
                    dec
                ta 
                at _b631
                    inc
                ta
                push _b631
                not
                if 
                    at _c631
                        set 1
                    ta
                fi
            else 
                at _loopao631
                    reset
                ta
            fi
        wend
        push _c631
        if
            at _a631
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_3
        push    mulvvvXabsNameA9_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b632
    sbm _a632 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c632
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao632
        while
            push _a632
            if
                at _a632
                    dec
                ta 
                at _b632
                    inc
                ta
                push _b632
                not
                if 
                    at _c632
                        set 1
                    ta
                fi
            else 
                at _loopao632
                    reset
                ta
            fi
        wend
        push _c632
        if
            at _a632
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_3
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b633
    sbm _a633 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c633
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao633
        while
            push _a633
            if
                at _a633
                    dec
                ta 
                at _b633
                    inc
                ta
                push _b633
                not
                if 
                    at _c633
                        set 1
                    ta
                fi
            else 
                at _loopao633
                    reset
                ta
            fi
        wend
        push _c633
        if
            at _a633
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_3
        add    
#(js) }
        push    addvvXnameB9_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b634
    sbm _a634 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c634
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao634
        while
            push _a634
            if
                at _a634
                    dec
                ta 
                at _b634
                    inc
                ta
                push _b634
                not
                if 
                    at _c634
                        set 1
                    ta
                fi
            else 
                at _loopao634
                    reset
                ta
            fi
        wend
        push _c634
        if
            at _a634
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_4
        push    mulvvvXabsNameA9_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b635
    sbm _a635 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c635
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao635
        while
            push _a635
            if
                at _a635
                    dec
                ta 
                at _b635
                    inc
                ta
                push _b635
                not
                if 
                    at _c635
                        set 1
                    ta
                fi
            else 
                at _loopao635
                    reset
                ta
            fi
        wend
        push _c635
        if
            at _a635
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_4
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b636
    sbm _a636 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c636
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao636
        while
            push _a636
            if
                at _a636
                    dec
                ta 
                at _b636
                    inc
                ta
                push _b636
                not
                if 
                    at _c636
                        set 1
                    ta
                fi
            else 
                at _loopao636
                    reset
                ta
            fi
        wend
        push _c636
        if
            at _a636
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_4
        add    
#(js) }
        push    addvvXnameB9_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b637
    sbm _a637 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c637
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao637
        while
            push _a637
            if
                at _a637
                    dec
                ta 
                at _b637
                    inc
                ta
                push _b637
                not
                if 
                    at _c637
                        set 1
                    ta
                fi
            else 
                at _loopao637
                    reset
                ta
            fi
        wend
        push _c637
        if
            at _a637
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_5
        push    mulvvvXabsNameA9_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b638
    sbm _a638 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c638
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao638
        while
            push _a638
            if
                at _a638
                    dec
                ta 
                at _b638
                    inc
                ta
                push _b638
                not
                if 
                    at _c638
                        set 1
                    ta
                fi
            else 
                at _loopao638
                    reset
                ta
            fi
        wend
        push _c638
        if
            at _a638
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    resultX9_5
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b639
    sbm _a639 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c639
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao639
        while
            push _a639
            if
                at _a639
                    dec
                ta 
                at _b639
                    inc
                ta
                push _b639
                not
                if 
                    at _c639
                        set 1
                    ta
                fi
            else 
                at _loopao639
                    reset
                ta
            fi
        wend
        push _c639
        if
            at _a639
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     resultX9_5
        add    
#(js) }
        pop     resultX9_c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb16
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb16
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    addvvXnameB9_5
            push    mulvvvXabsNameA9_5
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_5
                push    mulvvvXabsNameA9_5
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB9_4
            push    mulvvvXabsNameA9_4
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_4
                push    mulvvvXabsNameA9_4
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB9_3
            push    mulvvvXabsNameA9_3
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_3
                push    mulvvvXabsNameA9_3
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB9_2
            push    mulvvvXabsNameA9_2
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_2
                push    mulvvvXabsNameA9_2
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB9_1
            push    mulvvvXabsNameA9_1
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_1
                push    mulvvvXabsNameA9_1
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            push    addvvXnameB9_0
            push    mulvvvXabsNameA9_0
            sup
            if  
               at _asupb16
                set 1
               ta
            else 
                push    addvvXnameB9_0
                push    mulvvvXabsNameA9_0
                diff
                if
                at _asupb16
                    reset
                ta
                else           
#(js) }
            at _aequb16
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb16
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    addvvXnameB9_s
                pop     resultX9_s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    addvvXnameB9_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b640
    sbm _a640 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c640
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao640
        while
            push _b640
            if  
                at _b640
                    dec
                ta
                at _a640
                    dec
                ta
                push _a640
                inc
                not
                if
                    at _c640
                        set 1
                    ta
                fi 
            else
                at _loopao640
                    reset
                ta
            fi
        wend
        push _c640
        if
            at _b640
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_0
                push    mulvvvXabsNameA9_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b641
    sbm _a641 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c641
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao641
        while
            push _b641
            if  
                at _b641
                    dec
                ta
                at _a641
                    dec
                ta
                push _a641
                inc
                not
                if
                    at _c641
                        set 1
                    ta
                fi 
            else
                at _loopao641
                    reset
                ta
            fi
        wend
        push _c641
        if
            at _b641
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b642
    sbm _a642 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c642
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao642
        while
            push _b642
            if  
                at _b642
                    dec
                ta
                at _a642
                    dec
                ta
                push _a642
                inc
                not
                if
                    at _c642
                        set 1
                    ta
                fi 
            else
                at _loopao642
                    reset
                ta
            fi
        wend
        push _c642
        if
            at _b642
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_0 
                add   
#(js) }
                push    addvvXnameB9_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b643
    sbm _a643 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c643
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao643
        while
            push _b643
            if  
                at _b643
                    dec
                ta
                at _a643
                    dec
                ta
                push _a643
                inc
                not
                if
                    at _c643
                        set 1
                    ta
                fi 
            else
                at _loopao643
                    reset
                ta
            fi
        wend
        push _c643
        if
            at _b643
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_1
                push    mulvvvXabsNameA9_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b644
    sbm _a644 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c644
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao644
        while
            push _b644
            if  
                at _b644
                    dec
                ta
                at _a644
                    dec
                ta
                push _a644
                inc
                not
                if
                    at _c644
                        set 1
                    ta
                fi 
            else
                at _loopao644
                    reset
                ta
            fi
        wend
        push _c644
        if
            at _b644
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b645
    sbm _a645 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c645
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao645
        while
            push _b645
            if  
                at _b645
                    dec
                ta
                at _a645
                    dec
                ta
                push _a645
                inc
                not
                if
                    at _c645
                        set 1
                    ta
                fi 
            else
                at _loopao645
                    reset
                ta
            fi
        wend
        push _c645
        if
            at _b645
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_1 
                add   
#(js) }
                push    addvvXnameB9_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b646
    sbm _a646 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c646
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao646
        while
            push _b646
            if  
                at _b646
                    dec
                ta
                at _a646
                    dec
                ta
                push _a646
                inc
                not
                if
                    at _c646
                        set 1
                    ta
                fi 
            else
                at _loopao646
                    reset
                ta
            fi
        wend
        push _c646
        if
            at _b646
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_2
                push    mulvvvXabsNameA9_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b647
    sbm _a647 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c647
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao647
        while
            push _b647
            if  
                at _b647
                    dec
                ta
                at _a647
                    dec
                ta
                push _a647
                inc
                not
                if
                    at _c647
                        set 1
                    ta
                fi 
            else
                at _loopao647
                    reset
                ta
            fi
        wend
        push _c647
        if
            at _b647
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b648
    sbm _a648 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c648
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao648
        while
            push _b648
            if  
                at _b648
                    dec
                ta
                at _a648
                    dec
                ta
                push _a648
                inc
                not
                if
                    at _c648
                        set 1
                    ta
                fi 
            else
                at _loopao648
                    reset
                ta
            fi
        wend
        push _c648
        if
            at _b648
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_2 
                add   
#(js) }
                push    addvvXnameB9_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b649
    sbm _a649 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c649
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao649
        while
            push _b649
            if  
                at _b649
                    dec
                ta
                at _a649
                    dec
                ta
                push _a649
                inc
                not
                if
                    at _c649
                        set 1
                    ta
                fi 
            else
                at _loopao649
                    reset
                ta
            fi
        wend
        push _c649
        if
            at _b649
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_3
                push    mulvvvXabsNameA9_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b650
    sbm _a650 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c650
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao650
        while
            push _b650
            if  
                at _b650
                    dec
                ta
                at _a650
                    dec
                ta
                push _a650
                inc
                not
                if
                    at _c650
                        set 1
                    ta
                fi 
            else
                at _loopao650
                    reset
                ta
            fi
        wend
        push _c650
        if
            at _b650
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_3
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b651
    sbm _a651 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c651
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao651
        while
            push _b651
            if  
                at _b651
                    dec
                ta
                at _a651
                    dec
                ta
                push _a651
                inc
                not
                if
                    at _c651
                        set 1
                    ta
                fi 
            else
                at _loopao651
                    reset
                ta
            fi
        wend
        push _c651
        if
            at _b651
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_3 
                add   
#(js) }
                push    addvvXnameB9_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b652
    sbm _a652 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c652
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao652
        while
            push _b652
            if  
                at _b652
                    dec
                ta
                at _a652
                    dec
                ta
                push _a652
                inc
                not
                if
                    at _c652
                        set 1
                    ta
                fi 
            else
                at _loopao652
                    reset
                ta
            fi
        wend
        push _c652
        if
            at _b652
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_4
                push    mulvvvXabsNameA9_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b653
    sbm _a653 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c653
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao653
        while
            push _b653
            if  
                at _b653
                    dec
                ta
                at _a653
                    dec
                ta
                push _a653
                inc
                not
                if
                    at _c653
                        set 1
                    ta
                fi 
            else
                at _loopao653
                    reset
                ta
            fi
        wend
        push _c653
        if
            at _b653
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_4
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b654
    sbm _a654 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c654
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao654
        while
            push _b654
            if  
                at _b654
                    dec
                ta
                at _a654
                    dec
                ta
                push _a654
                inc
                not
                if
                    at _c654
                        set 1
                    ta
                fi 
            else
                at _loopao654
                    reset
                ta
            fi
        wend
        push _c654
        if
            at _b654
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_4 
                add   
#(js) }
                push    addvvXnameB9_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b655
    sbm _a655 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c655
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao655
        while
            push _b655
            if  
                at _b655
                    dec
                ta
                at _a655
                    dec
                ta
                push _a655
                inc
                not
                if
                    at _c655
                        set 1
                    ta
                fi 
            else
                at _loopao655
                    reset
                ta
            fi
        wend
        push _c655
        if
            at _b655
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_5
                push    mulvvvXabsNameA9_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b656
    sbm _a656 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c656
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao656
        while
            push _b656
            if  
                at _b656
                    dec
                ta
                at _a656
                    dec
                ta
                push _a656
                inc
                not
                if
                    at _c656
                        set 1
                    ta
                fi 
            else
                at _loopao656
                    reset
                ta
            fi
        wend
        push _c656
        if
            at _b656
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    resultX9_5
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b657
    sbm _a657 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c657
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao657
        while
            push _b657
            if  
                at _b657
                    dec
                ta
                at _a657
                    dec
                ta
                push _a657
                inc
                not
                if
                    at _c657
                        set 1
                    ta
                fi 
            else
                at _loopao657
                    reset
                ta
            fi
        wend
        push _c657
        if
            at _b657
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     resultX9_5 
                add   
#(js) }
                pop     resultX9_c
            
            else # absB >= absA : 
                push    _aequb16
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at resultX9_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    mulvvvXabsNameA9_s
                    pop     resultX9_s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    mulvvvXabsNameA9_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b658
    sbm _a658 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c658
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao658
        while
            push _b658
            if  
                at _b658
                    dec
                ta
                at _a658
                    dec
                ta
                push _a658
                inc
                not
                if
                    at _c658
                        set 1
                    ta
                fi 
            else
                at _loopao658
                    reset
                ta
            fi
        wend
        push _c658
        if
            at _b658
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_0
                    push    addvvXnameB9_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b659
    sbm _a659 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c659
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao659
        while
            push _b659
            if  
                at _b659
                    dec
                ta
                at _a659
                    dec
                ta
                push _a659
                inc
                not
                if
                    at _c659
                        set 1
                    ta
                fi 
            else
                at _loopao659
                    reset
                ta
            fi
        wend
        push _c659
        if
            at _b659
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b660
    sbm _a660 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c660
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao660
        while
            push _b660
            if  
                at _b660
                    dec
                ta
                at _a660
                    dec
                ta
                push _a660
                inc
                not
                if
                    at _c660
                        set 1
                    ta
                fi 
            else
                at _loopao660
                    reset
                ta
            fi
        wend
        push _c660
        if
            at _b660
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_0
                    add    
#(js) }
                    push    mulvvvXabsNameA9_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b661
    sbm _a661 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c661
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao661
        while
            push _b661
            if  
                at _b661
                    dec
                ta
                at _a661
                    dec
                ta
                push _a661
                inc
                not
                if
                    at _c661
                        set 1
                    ta
                fi 
            else
                at _loopao661
                    reset
                ta
            fi
        wend
        push _c661
        if
            at _b661
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_1
                    push    addvvXnameB9_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b662
    sbm _a662 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c662
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao662
        while
            push _b662
            if  
                at _b662
                    dec
                ta
                at _a662
                    dec
                ta
                push _a662
                inc
                not
                if
                    at _c662
                        set 1
                    ta
                fi 
            else
                at _loopao662
                    reset
                ta
            fi
        wend
        push _c662
        if
            at _b662
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b663
    sbm _a663 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c663
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao663
        while
            push _b663
            if  
                at _b663
                    dec
                ta
                at _a663
                    dec
                ta
                push _a663
                inc
                not
                if
                    at _c663
                        set 1
                    ta
                fi 
            else
                at _loopao663
                    reset
                ta
            fi
        wend
        push _c663
        if
            at _b663
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_1
                    add    
#(js) }
                    push    mulvvvXabsNameA9_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b664
    sbm _a664 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c664
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao664
        while
            push _b664
            if  
                at _b664
                    dec
                ta
                at _a664
                    dec
                ta
                push _a664
                inc
                not
                if
                    at _c664
                        set 1
                    ta
                fi 
            else
                at _loopao664
                    reset
                ta
            fi
        wend
        push _c664
        if
            at _b664
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_2
                    push    addvvXnameB9_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b665
    sbm _a665 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c665
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao665
        while
            push _b665
            if  
                at _b665
                    dec
                ta
                at _a665
                    dec
                ta
                push _a665
                inc
                not
                if
                    at _c665
                        set 1
                    ta
                fi 
            else
                at _loopao665
                    reset
                ta
            fi
        wend
        push _c665
        if
            at _b665
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b666
    sbm _a666 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c666
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao666
        while
            push _b666
            if  
                at _b666
                    dec
                ta
                at _a666
                    dec
                ta
                push _a666
                inc
                not
                if
                    at _c666
                        set 1
                    ta
                fi 
            else
                at _loopao666
                    reset
                ta
            fi
        wend
        push _c666
        if
            at _b666
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_2
                    add    
#(js) }
                    push    mulvvvXabsNameA9_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b667
    sbm _a667 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c667
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao667
        while
            push _b667
            if  
                at _b667
                    dec
                ta
                at _a667
                    dec
                ta
                push _a667
                inc
                not
                if
                    at _c667
                        set 1
                    ta
                fi 
            else
                at _loopao667
                    reset
                ta
            fi
        wend
        push _c667
        if
            at _b667
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_3
                    push    addvvXnameB9_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b668
    sbm _a668 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c668
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao668
        while
            push _b668
            if  
                at _b668
                    dec
                ta
                at _a668
                    dec
                ta
                push _a668
                inc
                not
                if
                    at _c668
                        set 1
                    ta
                fi 
            else
                at _loopao668
                    reset
                ta
            fi
        wend
        push _c668
        if
            at _b668
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_3
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b669
    sbm _a669 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c669
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao669
        while
            push _b669
            if  
                at _b669
                    dec
                ta
                at _a669
                    dec
                ta
                push _a669
                inc
                not
                if
                    at _c669
                        set 1
                    ta
                fi 
            else
                at _loopao669
                    reset
                ta
            fi
        wend
        push _c669
        if
            at _b669
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_3
                    add    
#(js) }
                    push    mulvvvXabsNameA9_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b670
    sbm _a670 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c670
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao670
        while
            push _b670
            if  
                at _b670
                    dec
                ta
                at _a670
                    dec
                ta
                push _a670
                inc
                not
                if
                    at _c670
                        set 1
                    ta
                fi 
            else
                at _loopao670
                    reset
                ta
            fi
        wend
        push _c670
        if
            at _b670
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_4
                    push    addvvXnameB9_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b671
    sbm _a671 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c671
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao671
        while
            push _b671
            if  
                at _b671
                    dec
                ta
                at _a671
                    dec
                ta
                push _a671
                inc
                not
                if
                    at _c671
                        set 1
                    ta
                fi 
            else
                at _loopao671
                    reset
                ta
            fi
        wend
        push _c671
        if
            at _b671
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_4
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b672
    sbm _a672 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c672
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao672
        while
            push _b672
            if  
                at _b672
                    dec
                ta
                at _a672
                    dec
                ta
                push _a672
                inc
                not
                if
                    at _c672
                        set 1
                    ta
                fi 
            else
                at _loopao672
                    reset
                ta
            fi
        wend
        push _c672
        if
            at _b672
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_4
                    add    
#(js) }
                    push    mulvvvXabsNameA9_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b673
    sbm _a673 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c673
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao673
        while
            push _b673
            if  
                at _b673
                    dec
                ta
                at _a673
                    dec
                ta
                push _a673
                inc
                not
                if
                    at _c673
                        set 1
                    ta
                fi 
            else
                at _loopao673
                    reset
                ta
            fi
        wend
        push _c673
        if
            at _b673
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_5
                    push    addvvXnameB9_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b674
    sbm _a674 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c674
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao674
        while
            push _b674
            if  
                at _b674
                    dec
                ta
                at _a674
                    dec
                ta
                push _a674
                inc
                not
                if
                    at _c674
                        set 1
                    ta
                fi 
            else
                at _loopao674
                    reset
                ta
            fi
        wend
        push _c674
        if
            at _b674
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    resultX9_5
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b675
    sbm _a675 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c675
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao675
        while
            push _b675
            if  
                at _b675
                    dec
                ta
                at _a675
                    dec
                ta
                push _a675
                inc
                not
                if
                    at _c675
                        set 1
                    ta
                fi 
            else
                at _loopao675
                    reset
                ta
            fi
        wend
        push _c675
        if
            at _b675
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     resultX9_5
                    add    
#(js) }
                    pop     resultX9_c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,name, "addvvXnameB"+_sv11, nameA)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)                addvvX(X,name,"mulvvvXabsNameA" + _sv5)
#(begin macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
#(begin macro)    if_equal(name +"_s",1)  # negative number
    push mulvvvXabsNameB9_s
    push 1
    equal
    if
#(end macro)    if_equal(name +"_s",1)  # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_1
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_1
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_2
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_2
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_3
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_3
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_4
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_4
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_5
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push mulvvvXabsNameB9_5
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at mulvvvXabsNameB9_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
            fi
#(js) }        
    else    # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_1
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_1
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_2
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_2
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_3
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_3
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_4
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_4
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvXabsNameB9_5
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push mulvvvXabsNameB9_5
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,-1)
    at mulvvvXabsNameB9_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 1
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,-1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
#(end macro)                decvX(X,"mulvvvXabsNameB" + _sv5)
            else 
#(begin macro)                at_reset("mulvvvX_loop"+_sv5)
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at mulvvvX_loop9
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("mulvvvX_loop"+_sv5)
            fi
        wend        
        # resolve sign
        push mulvvvXsA9
        push mulvvvXsB9
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
#(begin macro)            at_set(name +"_s",1)
#(begin macro)    at_2("set",a,b)
    at resultX9_s
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)            at_set(name +"_s",1)
        fi        
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        mulvvvX(IP2,"resultX"+_fp1, "nameAX"+_fp1, "nameBX"+_fp1)
        
#(begin macro)        pushvX(IP2,"resultX"+_fp1)
    push    resultX9_c
    push    resultX9_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_5
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_3
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    resultX9_0
#(js) }
#(end macro)        pushvX(IP2,"resultX"+_fp1)
#(begin macro)        castFP(I+I,P+P, I,P)
#(js) _sv8++; 
#(js) var I1P1; I1P1 = I1+P1;
#(js) var I2P2; I2P2 = I2+P2;
#(begin macro)    varX(I1P1,"_instack" +_sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _instack17_0    # 0 byte of _instack17
#(js) }
    var _instack17_1    # 1 byte of _instack17
#(js) }
    var _instack17_2    # 2 byte of _instack17
#(js) }
    var _instack17_3    # 3 byte of _instack17
#(js) }
    var _instack17_4    # 4 byte of _instack17
#(js) }
    var _instack17_5    # 5 byte of _instack17
#(js) }
    var _instack17_s    # Sign of _instack17
    var _instack17_c    # carry of _instack17 
#(end macro)    varX(I1P1,"_instack" +_sv8)
#(begin macro)    varX(I2P2,"_outstack" + _sv8)
#(js) for (var xx=0 ; xx < X ; xx++) {
    var _outstack17_0    # 0 byte of _outstack17
#(js) }
    var _outstack17_1    # 1 byte of _outstack17
#(js) }
    var _outstack17_2    # 2 byte of _outstack17
#(js) }
    var _outstack17_s    # Sign of _outstack17
    var _outstack17_c    # carry of _outstack17 
#(end macro)    varX(I2P2,"_outstack" + _sv8)
    
#(begin macro)    popvX(I1P1,"_instack" + _sv8)
#(js) for (var xx=0; xx < X; xx++) {
    pop     _instack17_0
#(js) }
    pop     _instack17_1
#(js) }
    pop     _instack17_2
#(js) }
    pop     _instack17_3
#(js) }
    pop     _instack17_4
#(js) }
    pop     _instack17_5
#(js) }
    pop     _instack17_s
    pop     _instack17_c
#(end macro)    popvX(I1P1,"_instack" + _sv8)
    # reset outstack
#(begin macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    at _outstack17_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(I2P2, "_outstack" +_sv8, 0)
    # sign
    push _instack17_s
    pop _outstack17_s
    # integer part
#(js) if (I1 >= I2) {
#(js) for (var xx = 0 ; xx < I2; xx++) {
            push _instack17_4
            pop _outstack17_2
#(js) }
#(js) } else { // I1 < I2
    # fract part
#(js) if (P1 >= P2) {
#(js) for (var xx = 0 ; xx <P2; xx++) {
            push _instack17_3
            pop _outstack17_1
#(js) }
            push _instack17_2
            pop _outstack17_0
#(js) }
#(js) } else { // P1 < P2
#(begin macro)    pushvX(I2P2,"_outstack" + _sv8)
    push    _outstack17_c
    push    _outstack17_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack17_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack17_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    _outstack17_0
#(js) }
#(end macro)    pushvX(I2P2,"_outstack" + _sv8)
#(end macro)        castFP(I+I,P+P, I,P)
#(begin macro)        popvX(IP,"nameA"+_fp1)
#(js) for (var xx=0; xx < X; xx++) {
    pop     nameA9_0
#(js) }
    pop     nameA9_1
#(js) }
    pop     nameA9_2
#(js) }
    pop     nameA9_s
    pop     nameA9_c
#(end macro)        popvX(IP,"nameA"+_fp1)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(begin macro)    dropX(IP) # drop nameB
#(js) for (var xx = 0; xx < X+2 ; xx++) {
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
    drop
#(js) }
#(end macro)    dropX(IP) # drop nameB
#(end macro)                mulFP(FP_I,FP_P)
#(begin macro)                addX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(js) _sv3++;
    
    push    __tmp24a___s
    push    __tmp24b___s
    or
    not
    push    __tmp24a___s
    push    __tmp24b___s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24a___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24a___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b676
    sbm _a676 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c676
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao676
        while
            push _a676
            if
                at _a676
                    dec
                ta 
                at _b676
                    inc
                ta
                push _b676
                not
                if 
                    at _c676
                        set 1
                    ta
                fi
            else 
                at _loopao676
                    reset
                ta
            fi
        wend
        push _c676
        if
            at _a676
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b677
    sbm _a677 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c677
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao677
        while
            push _a677
            if
                at _a677
                    dec
                ta 
                at _b677
                    inc
                ta
                push _b677
                not
                if 
                    at _c677
                        set 1
                    ta
                fi
            else 
                at _loopao677
                    reset
                ta
            fi
        wend
        push _c677
        if
            at _a677
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b678
    sbm _a678 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c678
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao678
        while
            push _a678
            if
                at _a678
                    dec
                ta 
                at _b678
                    inc
                ta
                push _b678
                not
                if 
                    at _c678
                        set 1
                    ta
                fi
            else 
                at _loopao678
                    reset
                ta
            fi
        wend
        push _c678
        if
            at _a678
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24a___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b679
    sbm _a679 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c679
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao679
        while
            push _a679
            if
                at _a679
                    dec
                ta 
                at _b679
                    inc
                ta
                push _b679
                not
                if 
                    at _c679
                        set 1
                    ta
                fi
            else 
                at _loopao679
                    reset
                ta
            fi
        wend
        push _c679
        if
            at _a679
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b680
    sbm _a680 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c680
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao680
        while
            push _a680
            if
                at _a680
                    dec
                ta 
                at _b680
                    inc
                ta
                push _b680
                not
                if 
                    at _c680
                        set 1
                    ta
                fi
            else 
                at _loopao680
                    reset
                ta
            fi
        wend
        push _c680
        if
            at _a680
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b681
    sbm _a681 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c681
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao681
        while
            push _a681
            if
                at _a681
                    dec
                ta 
                at _b681
                    inc
                ta
                push _b681
                not
                if 
                    at _c681
                        set 1
                    ta
                fi
            else 
                at _loopao681
                    reset
                ta
            fi
        wend
        push _c681
        if
            at _a681
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24a___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b682
    sbm _a682 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c682
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao682
        while
            push _a682
            if
                at _a682
                    dec
                ta 
                at _b682
                    inc
                ta
                push _b682
                not
                if 
                    at _c682
                        set 1
                    ta
                fi
            else 
                at _loopao682
                    reset
                ta
            fi
        wend
        push _c682
        if
            at _a682
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b683
    sbm _a683 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c683
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao683
        while
            push _a683
            if
                at _a683
                    dec
                ta 
                at _b683
                    inc
                ta
                push _b683
                not
                if 
                    at _c683
                        set 1
                    ta
                fi
            else 
                at _loopao683
                    reset
                ta
            fi
        wend
        push _c683
        if
            at _a683
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b684
    sbm _a684 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c684
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao684
        while
            push _a684
            if
                at _a684
                    dec
                ta 
                at _b684
                    inc
                ta
                push _b684
                not
                if 
                    at _c684
                        set 1
                    ta
                fi
            else 
                at _loopao684
                    reset
                ta
            fi
        wend
        push _c684
        if
            at _a684
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb17
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb17
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24a___2
            push    __tmp24b___2
            sup
            if  
               at _asupb17
                set 1
               ta
            else 
                push    __tmp24a___2
                push    __tmp24b___2
                diff
                if
                at _asupb17
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___1
            push    __tmp24b___1
            sup
            if  
               at _asupb17
                set 1
               ta
            else 
                push    __tmp24a___1
                push    __tmp24b___1
                diff
                if
                at _asupb17
                    reset
                ta
                else           
#(js) }
            push    __tmp24a___0
            push    __tmp24b___0
            sup
            if  
               at _asupb17
                set 1
               ta
            else 
                push    __tmp24a___0
                push    __tmp24b___0
                diff
                if
                at _asupb17
                    reset
                ta
                else           
#(js) }
            at _aequb17
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb17
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24a___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24a___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b685
    sbm _a685 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c685
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao685
        while
            push _b685
            if  
                at _b685
                    dec
                ta
                at _a685
                    dec
                ta
                push _a685
                inc
                not
                if
                    at _c685
                        set 1
                    ta
                fi 
            else
                at _loopao685
                    reset
                ta
            fi
        wend
        push _c685
        if
            at _b685
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b686
    sbm _a686 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c686
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao686
        while
            push _b686
            if  
                at _b686
                    dec
                ta
                at _a686
                    dec
                ta
                push _a686
                inc
                not
                if
                    at _c686
                        set 1
                    ta
                fi 
            else
                at _loopao686
                    reset
                ta
            fi
        wend
        push _c686
        if
            at _b686
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b687
    sbm _a687 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c687
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao687
        while
            push _b687
            if  
                at _b687
                    dec
                ta
                at _a687
                    dec
                ta
                push _a687
                inc
                not
                if
                    at _c687
                        set 1
                    ta
                fi 
            else
                at _loopao687
                    reset
                ta
            fi
        wend
        push _c687
        if
            at _b687
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24a___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b688
    sbm _a688 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c688
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao688
        while
            push _b688
            if  
                at _b688
                    dec
                ta
                at _a688
                    dec
                ta
                push _a688
                inc
                not
                if
                    at _c688
                        set 1
                    ta
                fi 
            else
                at _loopao688
                    reset
                ta
            fi
        wend
        push _c688
        if
            at _b688
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b689
    sbm _a689 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c689
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao689
        while
            push _b689
            if  
                at _b689
                    dec
                ta
                at _a689
                    dec
                ta
                push _a689
                inc
                not
                if
                    at _c689
                        set 1
                    ta
                fi 
            else
                at _loopao689
                    reset
                ta
            fi
        wend
        push _c689
        if
            at _b689
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b690
    sbm _a690 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c690
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao690
        while
            push _b690
            if  
                at _b690
                    dec
                ta
                at _a690
                    dec
                ta
                push _a690
                inc
                not
                if
                    at _c690
                        set 1
                    ta
                fi 
            else
                at _loopao690
                    reset
                ta
            fi
        wend
        push _c690
        if
            at _b690
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24a___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b691
    sbm _a691 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c691
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao691
        while
            push _b691
            if  
                at _b691
                    dec
                ta
                at _a691
                    dec
                ta
                push _a691
                inc
                not
                if
                    at _c691
                        set 1
                    ta
                fi 
            else
                at _loopao691
                    reset
                ta
            fi
        wend
        push _c691
        if
            at _b691
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b692
    sbm _a692 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c692
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao692
        while
            push _b692
            if  
                at _b692
                    dec
                ta
                at _a692
                    dec
                ta
                push _a692
                inc
                not
                if
                    at _c692
                        set 1
                    ta
                fi 
            else
                at _loopao692
                    reset
                ta
            fi
        wend
        push _c692
        if
            at _b692
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b693
    sbm _a693 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c693
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao693
        while
            push _b693
            if  
                at _b693
                    dec
                ta
                at _a693
                    dec
                ta
                push _a693
                inc
                not
                if
                    at _c693
                        set 1
                    ta
                fi 
            else
                at _loopao693
                    reset
                ta
            fi
        wend
        push _c693
        if
            at _b693
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb17
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    __tmp24b___s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b694
    sbm _a694 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c694
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao694
        while
            push _b694
            if  
                at _b694
                    dec
                ta
                at _a694
                    dec
                ta
                push _a694
                inc
                not
                if
                    at _c694
                        set 1
                    ta
                fi 
            else
                at _loopao694
                    reset
                ta
            fi
        wend
        push _c694
        if
            at _b694
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24a___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b695
    sbm _a695 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c695
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao695
        while
            push _b695
            if  
                at _b695
                    dec
                ta
                at _a695
                    dec
                ta
                push _a695
                inc
                not
                if
                    at _c695
                        set 1
                    ta
                fi 
            else
                at _loopao695
                    reset
                ta
            fi
        wend
        push _c695
        if
            at _b695
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b696
    sbm _a696 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c696
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao696
        while
            push _b696
            if  
                at _b696
                    dec
                ta
                at _a696
                    dec
                ta
                push _a696
                inc
                not
                if
                    at _c696
                        set 1
                    ta
                fi 
            else
                at _loopao696
                    reset
                ta
            fi
        wend
        push _c696
        if
            at _b696
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b697
    sbm _a697 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c697
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao697
        while
            push _b697
            if  
                at _b697
                    dec
                ta
                at _a697
                    dec
                ta
                push _a697
                inc
                not
                if
                    at _c697
                        set 1
                    ta
                fi 
            else
                at _loopao697
                    reset
                ta
            fi
        wend
        push _c697
        if
            at _b697
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24a___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b698
    sbm _a698 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c698
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao698
        while
            push _b698
            if  
                at _b698
                    dec
                ta
                at _a698
                    dec
                ta
                push _a698
                inc
                not
                if
                    at _c698
                        set 1
                    ta
                fi 
            else
                at _loopao698
                    reset
                ta
            fi
        wend
        push _c698
        if
            at _b698
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b699
    sbm _a699 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c699
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao699
        while
            push _b699
            if  
                at _b699
                    dec
                ta
                at _a699
                    dec
                ta
                push _a699
                inc
                not
                if
                    at _c699
                        set 1
                    ta
                fi 
            else
                at _loopao699
                    reset
                ta
            fi
        wend
        push _c699
        if
            at _b699
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b700
    sbm _a700 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c700
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao700
        while
            push _b700
            if  
                at _b700
                    dec
                ta
                at _a700
                    dec
                ta
                push _a700
                inc
                not
                if
                    at _c700
                        set 1
                    ta
                fi 
            else
                at _loopao700
                    reset
                ta
            fi
        wend
        push _c700
        if
            at _b700
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24a___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b701
    sbm _a701 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c701
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao701
        while
            push _b701
            if  
                at _b701
                    dec
                ta
                at _a701
                    dec
                ta
                push _a701
                inc
                not
                if
                    at _c701
                        set 1
                    ta
                fi 
            else
                at _loopao701
                    reset
                ta
            fi
        wend
        push _c701
        if
            at _b701
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b702
    sbm _a702 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c702
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao702
        while
            push _b702
            if  
                at _b702
                    dec
                ta
                at _a702
                    dec
                ta
                push _a702
                inc
                not
                if
                    at _c702
                        set 1
                    ta
                fi 
            else
                at _loopao702
                    reset
                ta
            fi
        wend
        push _c702
        if
            at _b702
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)    addvvvX(X,"__tmp" + _xbits + "c__", "__tmp" + _xbits + "a__", "__tmp" + _xbits + "b__")
#(begin macro)    pushvX(X,"__tmp" + _xbits + "c__")
    push    __tmp24c___c
    push    __tmp24c___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24c___0
#(js) }
#(end macro)    pushvX(X,"__tmp" + _xbits + "c__")
#(end macro)                addX(FP)
                ## if stack FP > 4 break               
#(begin macro)                pushFP(FP_I,FP_P, 4)
#(begin macro)    pushX(I+P,0)
    push    0
    push    0
#(js) var absImmValue; absImmValue = immValue>=0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    push    0
#(js) }
#(end macro)    pushX(I+P,0)
#(begin macro)    setFP(I,P,immValue) 
#(js) _sv8++; 
#(js) var IP; IP = I+P;
#(js) var _sign = immValue >=0?0:1;
#(js) var _abs = immValue>=0?immValue:-immValue;
#(js) var _int; _int = _abs | 0;
#(js) var _fra; _fra = ((_abs - _int) * Math.pow(256,P)) | 0;
#(js) var _fp; _fp = _int * Math.pow(256,P) + _fra;
#(js) if (_sign ==1) _fp = -_fp;
#(begin macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    sbmX2(X,name,backward,0)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _instack18_0 - 0
#(js) }
    sbm _instack18_1 - 1
#(js) }
    sbm _instack18_2 - 2
#(js) }
    sbm _instack18_s - 3
    sbm _instack18_c - 4
#(end macro)    sbmX2(X,name,backward,0)
#(end macro)    sbmX(IP,"_instack"+_sv8,0)
#(begin macro)    setvX(IP,"_instack"+_sv8, _fp)
    at _instack18_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    4
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(IP,"_instack"+_sv8, _fp)
#(end macro)    setFP(I,P,immValue) 
#(end macro)                pushFP(FP_I,FP_P, 4)
#(begin macro)                supX(FP)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    popvX(X,"__tmp" + _xbits + "b__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24b___0
#(js) }
    pop     __tmp24b___1
#(js) }
    pop     __tmp24b___2
#(js) }
    pop     __tmp24b___s
    pop     __tmp24b___c
#(end macro)    popvX(X,"__tmp" + _xbits + "b__")
#(begin macro)    popvX(X,"__tmp" + _xbits + "a__")
#(js) for (var xx=0; xx < X; xx++) {
    pop     __tmp24a___0
#(js) }
    pop     __tmp24a___1
#(js) }
    pop     __tmp24a___2
#(js) }
    pop     __tmp24a___s
    pop     __tmp24a___c
#(end macro)    popvX(X,"__tmp" + _xbits + "a__")
#(begin macro)    supvvX(X,"__tmp" + _xbits + "a__","__tmp" + _xbits + "b__")
#(begin macro)    infvvX(X,nameB, nameA)
#(js) var _xbits; _xbits = X * 8;
#(begin macro)    subvvvX(X,"__tmp" + _xbits + "c__", nameA, nameB)
#(js) _sv4++;
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)    lvar(name + "_c",0)
    push 0
    sbm negNameB4_c
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_c",0)
#(begin macro)    lvar(name + "_s",0)
    push 0
    sbm negNameB4_s
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_s",0)
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB4_2
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB4_1
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(begin macro)    lvar(name + "_"+ xx1,0)
    push 0
    sbm negNameB4_0
#(js) __scope[__scope.length-1]++; 
#(end macro)    lvar(name + "_"+ xx1,0)
#(js) }
#(end macro)        lvarX(X,"negNameB"+_sv4)
#(begin macro)        pushvX(X,nameB)
    push    __tmp24a___c
    push    __tmp24a___s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24a___2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24a___1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    __tmp24a___0
#(js) }
#(end macro)        pushvX(X,nameB)
#(begin macro)        popvX(X,"negNameB"+_sv4)
#(js) for (var xx=0; xx < X; xx++) {
    pop     negNameB4_0
#(js) }
    pop     negNameB4_1
#(js) }
    pop     negNameB4_2
#(js) }
    pop     negNameB4_s
    pop     negNameB4_c
#(end macro)        popvX(X,"negNameB"+_sv4)
#(begin macro)        negvX(X,"negNameB"+_sv4)
    push    negNameB4_s
    dec
    bool
    dup
    if    # if name is now negative
#(js) for (var xx = 0; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB4_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB4_1
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)        if_equal(name +"_"+xx, 0)
    push negNameB4_2
    push 0
    equal
    if
#(end macro)        if_equal(name +"_"+xx, 0)
#(js) }
#(begin macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at negNameB4_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset(name + "_s")   # set sign to positive if name==0
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
        fi
#(js) }
        fi
#(js) }
    fi
    pop     negNameB4_s
#(end macro)        negvX(X,"negNameB"+_sv4)
#(begin macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(js) _sv3++;
    
    push    __tmp24b___s
    push    negNameB4_s
    or
    not
    push    __tmp24b___s
    push    negNameB4_s
    and
    or
    if      # nameA and nameB are both positive or negative
        push    __tmp24b___s
        pop     __tmp24c___s    # name has same sign of nameA and nameB
        push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
        push    __tmp24b___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b703
    sbm _a703 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c703
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao703
        while
            push _a703
            if
                at _a703
                    dec
                ta 
                at _b703
                    inc
                ta
                push _b703
                not
                if 
                    at _c703
                        set 1
                    ta
                fi
            else 
                at _loopao703
                    reset
                ta
            fi
        wend
        push _c703
        if
            at _a703
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        push    negNameB4_0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b704
    sbm _a704 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c704
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao704
        while
            push _a704
            if
                at _a704
                    dec
                ta 
                at _b704
                    inc
                ta
                push _b704
                not
                if 
                    at _c704
                        set 1
                    ta
                fi
            else 
                at _loopao704
                    reset
                ta
            fi
        wend
        push _c704
        if
            at _a704
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___0
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b705
    sbm _a705 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c705
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao705
        while
            push _a705
            if
                at _a705
                    dec
                ta 
                at _b705
                    inc
                ta
                push _b705
                not
                if 
                    at _c705
                        set 1
                    ta
                fi
            else 
                at _loopao705
                    reset
                ta
            fi
        wend
        push _c705
        if
            at _a705
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___0
        add    
#(js) }
        push    __tmp24b___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b706
    sbm _a706 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c706
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao706
        while
            push _a706
            if
                at _a706
                    dec
                ta 
                at _b706
                    inc
                ta
                push _b706
                not
                if 
                    at _c706
                        set 1
                    ta
                fi
            else 
                at _loopao706
                    reset
                ta
            fi
        wend
        push _c706
        if
            at _a706
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        push    negNameB4_1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b707
    sbm _a707 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c707
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao707
        while
            push _a707
            if
                at _a707
                    dec
                ta 
                at _b707
                    inc
                ta
                push _b707
                not
                if 
                    at _c707
                        set 1
                    ta
                fi
            else 
                at _loopao707
                    reset
                ta
            fi
        wend
        push _c707
        if
            at _a707
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___1
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b708
    sbm _a708 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c708
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao708
        while
            push _a708
            if
                at _a708
                    dec
                ta 
                at _b708
                    inc
                ta
                push _b708
                not
                if 
                    at _c708
                        set 1
                    ta
                fi
            else 
                at _loopao708
                    reset
                ta
            fi
        wend
        push _c708
        if
            at _a708
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___1
        add    
#(js) }
        push    __tmp24b___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b709
    sbm _a709 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c709
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao709
        while
            push _a709
            if
                at _a709
                    dec
                ta 
                at _b709
                    inc
                ta
                push _b709
                not
                if 
                    at _c709
                        set 1
                    ta
                fi
            else 
                at _loopao709
                    reset
                ta
            fi
        wend
        push _c709
        if
            at _a709
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        push    negNameB4_2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b710
    sbm _a710 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c710
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao710
        while
            push _a710
            if
                at _a710
                    dec
                ta 
                at _b710
                    inc
                ta
                push _b710
                not
                if 
                    at _c710
                        set 1
                    ta
                fi
            else 
                at _loopao710
                    reset
                ta
            fi
        wend
        push _c710
        if
            at _a710
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        push    __tmp24c___2
#(begin macro)        addof()
#(js) _sv10++;
    sbm _b711
    sbm _a711 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c711
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao711
        while
            push _a711
            if
                at _a711
                    dec
                ta 
                at _b711
                    inc
                ta
                push _b711
                not
                if 
                    at _c711
                        set 1
                    ta
                fi
            else 
                at _loopao711
                    reset
                ta
            fi
        wend
        push _c711
        if
            at _a711
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)        addof()
        pop     __tmp24c___2
        add    
#(js) }
        pop     __tmp24c___c
    else  # nameA has a different sign of nameB
#(begin macro)        scope_begin()
#(js) __scope.push(0);
#(end macro)        scope_begin()
#(begin macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
    push 0
    sbm _asupb18
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_asupb"+_sv3,0)  # by default absA is not sup to absB
#(begin macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
    push 0
    sbm _aequb18
#(js) __scope[__scope.length-1]++; 
#(end macro)            lvar("_aequb"+_sv3,0)  # by default absA is not equal to absB 
#(js) for (var xx = X-1 ; xx >=0; xx--) {
            push    __tmp24b___2
            push    negNameB4_2
            sup
            if  
               at _asupb18
                set 1
               ta
            else 
                push    __tmp24b___2
                push    negNameB4_2
                diff
                if
                at _asupb18
                    reset
                ta
                else           
#(js) }
            push    __tmp24b___1
            push    negNameB4_1
            sup
            if  
               at _asupb18
                set 1
               ta
            else 
                push    __tmp24b___1
                push    negNameB4_1
                diff
                if
                at _asupb18
                    reset
                ta
                else           
#(js) }
            push    __tmp24b___0
            push    negNameB4_0
            sup
            if  
               at _asupb18
                set 1
               ta
            else 
                push    __tmp24b___0
                push    negNameB4_0
                diff
                if
                at _asupb18
                    reset
                ta
                else           
#(js) }
            at _aequb18
                set 1
            ta
#(js) for (var xx = 0 ; xx < X ; xx++) {
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            fi
            fi
#(js) }
            push _asupb18
            if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    __tmp24b___s
                pop     __tmp24c___s    # name has same sign of nameA 
                push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                push    __tmp24b___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b712
    sbm _a712 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c712
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao712
        while
            push _b712
            if  
                at _b712
                    dec
                ta
                at _a712
                    dec
                ta
                push _a712
                inc
                not
                if
                    at _c712
                        set 1
                    ta
                fi 
            else
                at _loopao712
                    reset
                ta
            fi
        wend
        push _c712
        if
            at _b712
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0
                push    negNameB4_0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b713
    sbm _a713 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c713
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao713
        while
            push _b713
            if  
                at _b713
                    dec
                ta
                at _a713
                    dec
                ta
                push _a713
                inc
                not
                if
                    at _c713
                        set 1
                    ta
                fi 
            else
                at _loopao713
                    reset
                ta
            fi
        wend
        push _c713
        if
            at _b713
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___0
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b714
    sbm _a714 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c714
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao714
        while
            push _b714
            if  
                at _b714
                    dec
                ta
                at _a714
                    dec
                ta
                push _a714
                inc
                not
                if
                    at _c714
                        set 1
                    ta
                fi 
            else
                at _loopao714
                    reset
                ta
            fi
        wend
        push _c714
        if
            at _b714
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___0 
                add   
#(js) }
                push    __tmp24b___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b715
    sbm _a715 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c715
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao715
        while
            push _b715
            if  
                at _b715
                    dec
                ta
                at _a715
                    dec
                ta
                push _a715
                inc
                not
                if
                    at _c715
                        set 1
                    ta
                fi 
            else
                at _loopao715
                    reset
                ta
            fi
        wend
        push _c715
        if
            at _b715
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1
                push    negNameB4_1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b716
    sbm _a716 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c716
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao716
        while
            push _b716
            if  
                at _b716
                    dec
                ta
                at _a716
                    dec
                ta
                push _a716
                inc
                not
                if
                    at _c716
                        set 1
                    ta
                fi 
            else
                at _loopao716
                    reset
                ta
            fi
        wend
        push _c716
        if
            at _b716
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___1
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b717
    sbm _a717 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c717
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao717
        while
            push _b717
            if  
                at _b717
                    dec
                ta
                at _a717
                    dec
                ta
                push _a717
                inc
                not
                if
                    at _c717
                        set 1
                    ta
                fi 
            else
                at _loopao717
                    reset
                ta
            fi
        wend
        push _c717
        if
            at _b717
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___1 
                add   
#(js) }
                push    __tmp24b___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b718
    sbm _a718 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c718
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao718
        while
            push _b718
            if  
                at _b718
                    dec
                ta
                at _a718
                    dec
                ta
                push _a718
                inc
                not
                if
                    at _c718
                        set 1
                    ta
                fi 
            else
                at _loopao718
                    reset
                ta
            fi
        wend
        push _c718
        if
            at _b718
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2
                push    negNameB4_2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b719
    sbm _a719 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c719
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao719
        while
            push _b719
            if  
                at _b719
                    dec
                ta
                at _a719
                    dec
                ta
                push _a719
                inc
                not
                if
                    at _c719
                        set 1
                    ta
                fi 
            else
                at _loopao719
                    reset
                ta
            fi
        wend
        push _c719
        if
            at _b719
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                push    __tmp24c___2
                swap
#(begin macro)                subof()
#(js) _sv10++;
    sbm _b720
    sbm _a720 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c720
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao720
        while
            push _b720
            if  
                at _b720
                    dec
                ta
                at _a720
                    dec
                ta
                push _a720
                inc
                not
                if
                    at _c720
                        set 1
                    ta
                fi 
            else
                at _loopao720
                    reset
                ta
            fi
        wend
        push _c720
        if
            at _b720
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                subof()
                pop     __tmp24c___2 
                add   
#(js) }
                pop     __tmp24c___c
            
            else # absB >= absA : 
                push    _aequb18
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                    #print("absA == absB\n")
#(begin macro)                    setvX(X,name,0) 
    at __tmp24c___0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)                    setvX(X,name,0) 
                else # absA < absB : do   absB-absA with sign of B
                    #print("absA < absB\n")
                    push    negNameB4_s
                    pop     __tmp24c___s    # name has same sign of nameB
                    push    0
#(js) for (var xx = 0 ; xx < X; xx++) {
                    push    negNameB4_0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b721
    sbm _a721 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c721
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao721
        while
            push _b721
            if  
                at _b721
                    dec
                ta
                at _a721
                    dec
                ta
                push _a721
                inc
                not
                if
                    at _c721
                        set 1
                    ta
                fi 
            else
                at _loopao721
                    reset
                ta
            fi
        wend
        push _c721
        if
            at _b721
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    push    __tmp24b___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b722
    sbm _a722 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c722
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao722
        while
            push _b722
            if  
                at _b722
                    dec
                ta
                at _a722
                    dec
                ta
                push _a722
                inc
                not
                if
                    at _c722
                        set 1
                    ta
                fi 
            else
                at _loopao722
                    reset
                ta
            fi
        wend
        push _c722
        if
            at _b722
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___0
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b723
    sbm _a723 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c723
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao723
        while
            push _b723
            if  
                at _b723
                    dec
                ta
                at _a723
                    dec
                ta
                push _a723
                inc
                not
                if
                    at _c723
                        set 1
                    ta
                fi 
            else
                at _loopao723
                    reset
                ta
            fi
        wend
        push _c723
        if
            at _b723
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___0
                    add    
#(js) }
                    push    negNameB4_1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b724
    sbm _a724 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c724
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao724
        while
            push _b724
            if  
                at _b724
                    dec
                ta
                at _a724
                    dec
                ta
                push _a724
                inc
                not
                if
                    at _c724
                        set 1
                    ta
                fi 
            else
                at _loopao724
                    reset
                ta
            fi
        wend
        push _c724
        if
            at _b724
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    push    __tmp24b___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b725
    sbm _a725 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c725
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao725
        while
            push _b725
            if  
                at _b725
                    dec
                ta
                at _a725
                    dec
                ta
                push _a725
                inc
                not
                if
                    at _c725
                        set 1
                    ta
                fi 
            else
                at _loopao725
                    reset
                ta
            fi
        wend
        push _c725
        if
            at _b725
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___1
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b726
    sbm _a726 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c726
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao726
        while
            push _b726
            if  
                at _b726
                    dec
                ta
                at _a726
                    dec
                ta
                push _a726
                inc
                not
                if
                    at _c726
                        set 1
                    ta
                fi 
            else
                at _loopao726
                    reset
                ta
            fi
        wend
        push _c726
        if
            at _b726
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___1
                    add    
#(js) }
                    push    negNameB4_2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b727
    sbm _a727 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c727
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao727
        while
            push _b727
            if  
                at _b727
                    dec
                ta
                at _a727
                    dec
                ta
                push _a727
                inc
                not
                if
                    at _c727
                        set 1
                    ta
                fi 
            else
                at _loopao727
                    reset
                ta
            fi
        wend
        push _c727
        if
            at _b727
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    push    __tmp24b___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b728
    sbm _a728 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c728
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao728
        while
            push _b728
            if  
                at _b728
                    dec
                ta
                at _a728
                    dec
                ta
                push _a728
                inc
                not
                if
                    at _c728
                        set 1
                    ta
                fi 
            else
                at _loopao728
                    reset
                ta
            fi
        wend
        push _c728
        if
            at _b728
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    push    __tmp24c___2
                    swap
#(begin macro)                    subof()
#(js) _sv10++;
    sbm _b729
    sbm _a729 - 1
#(begin macro)    scope_begin()
#(js) __scope.push(0);
#(end macro)    scope_begin()
#(begin macro)        lvar("_c"+_sv10,0)
    push 0
    sbm _c729
#(js) __scope[__scope.length-1]++; 
#(end macro)        lvar("_c"+_sv10,0)
        push 1
        sbm _loopao729
        while
            push _b729
            if  
                at _b729
                    dec
                ta
                at _a729
                    dec
                ta
                push _a729
                inc
                not
                if
                    at _c729
                        set 1
                    ta
                fi 
            else
                at _loopao729
                    reset
                ta
            fi
        wend
        push _c729
        if
            at _b729
                set 1
            ta
        fi
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
    swap
#(end macro)                    subof()
                    pop     __tmp24c___2
                    add    
#(js) }
                    pop     __tmp24c___c
                fi 
            fi            
#(begin macro)        scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)        scope_end()
    fi    
#(end macro)        addvvvX(X,name,nameA,"negNameB"+_sv4)
#(begin macro)    scope_end()
#(js) if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
    drop
#(js) } 
#(js) if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
#(end macro)    scope_end()
#(end macro)    subvvvX(X,"__tmp" + _xbits + "c__", nameA, nameB)
    push __tmp24c___s
#(end macro)    infvvX(X,nameB, nameA)
#(end macro)    supvvX(X,"__tmp" + _xbits + "a__","__tmp" + _xbits + "b__")
#(end macro)                supX(FP)
                if
#(begin macro)                    at_reset("loop")
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at loop
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                    at_reset("loop")
                else                                
#(begin macro)                    at_inc("i")
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at i
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)                    at_inc("i")
                fi
            else
#(begin macro)                at_reset("loop")
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at loop
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)                at_reset("loop")
            fi
        # }
        wend
        # if (i >= maxIte) black point (inside mandel)
#(begin macro)        if_equal("i", maxIte)
    push i
    push 26
    equal
    if
#(end macro)        if_equal("i", maxIte)
#(begin macro)            print("*")
    push    0
#(js) var __prev; __prev = 0;
#(js) for (var istr=0; istr < aString.length ; istr++) {
#(js) var __ascii; __ascii = aString[istr].charCodeAt(0);
#(js) var __move; __move = __ascii - __prev;
#(js) var __dist ; __dist = (__move > 0)?__move:-__move;
#(js) if (__dist < __ascii) { // shorter to move
    set     42    
#(js) }
    out             # '*'
#(js) __prev  = __ascii;
#(js) }
    drop
#(end macro)            print("*")
        # else // outside mandel
        else
#(begin macro)            print(".")
    push    0
#(js) var __prev; __prev = 0;
#(js) for (var istr=0; istr < aString.length ; istr++) {
#(js) var __ascii; __ascii = aString[istr].charCodeAt(0);
#(js) var __move; __move = __ascii - __prev;
#(js) var __dist ; __dist = (__move > 0)?__move:-__move;
#(js) if (__dist < __ascii) { // shorter to move
    set     46    
#(js) }
    out             # '.'
#(js) __prev  = __ascii;
#(js) }
    drop
#(end macro)            print(".")
        fi
        # x++
#(begin macro)        pushvX(FP,"x")
    push    x_c
    push    x_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    x_0
#(js) }
#(end macro)        pushvX(FP,"x")
#(begin macro)        incFP(FP_I,FP_P)
#(js) _fp2++;
#(begin macro)    sbmX2(I,"_incFPinput"+_fp2,0,P)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _incFPinput1_0 - 2
#(js) }
    sbm _incFPinput1_s - 3
    sbm _incFPinput1_c - 4
#(end macro)    sbmX2(I,"_incFPinput"+_fp2,0,P)
#    pushvX(I,"_incFPinput"+_fp2)
#    incX(I)
#    popvX(I,"_incFPinput"+_fp2)
    

#(begin macro)    incvX(I,"_incFPinput"+_fp2)
#(begin macro)    if_equal(name +"_s",0)  # positive number
    push _incFPinput1_s
    push 0
    equal
    if
#(end macro)    if_equal(name +"_s",0)  # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput1_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push _incFPinput1_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at _incFPinput1_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
    else    # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput1_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push _incFPinput1_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,1)
    at _incFPinput1_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
#(begin macro)        fixsvX(X,name)    
    push    _incFPinput1_s
    if    # if name is negative
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_" + xx, 0)
    push _incFPinput1_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_" + xx, 0)
#(js) }
#(begin macro)            at_reset(name + "_s")   # set sign to positive
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput1_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)            at_reset(name + "_s")   # set sign to positive
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
    fi
#(end macro)        fixsvX(X,name)    
    fi
#(end macro)    incvX(I,"_incFPinput"+_fp2)
#(end macro)        incFP(FP_I,FP_P)
#(begin macro)        popvX(FP,"x")
#(js) for (var xx=0; xx < X; xx++) {
    pop     x_0
#(js) }
    pop     x_1
#(js) }
    pop     x_2
#(js) }
    pop     x_s
    pop     x_c
#(end macro)        popvX(FP,"x")
        # addvvvX(FP,"x","x","ONE")
    endloop
    # x = 0
#(begin macro)    setvX(FP,"x",0)
    at x_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    0
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)    setvX(FP,"x",0)
    # y++
#(begin macro)    pushvX(FP,"y")
    push    y_c
    push    y_s
#(js) for (var xx =0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_2
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_1
#(js) }
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
    push    y_0
#(js) }
#(end macro)    pushvX(FP,"y")
#(begin macro)    incFP(FP_I,FP_P)
#(js) _fp2++;
#(begin macro)    sbmX2(I,"_incFPinput"+_fp2,0,P)
#(js) for (var xx=0; xx <X ; xx++) {
    sbm _incFPinput2_0 - 2
#(js) }
    sbm _incFPinput2_s - 3
    sbm _incFPinput2_c - 4
#(end macro)    sbmX2(I,"_incFPinput"+_fp2,0,P)
#    pushvX(I,"_incFPinput"+_fp2)
#    incX(I)
#    popvX(I,"_incFPinput"+_fp2)
    

#(begin macro)    incvX(I,"_incFPinput"+_fp2)
#(begin macro)    if_equal(name +"_s",0)  # positive number
    push _incFPinput2_s
    push 0
    equal
    if
#(end macro)    if_equal(name +"_s",0)  # positive number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)            at_inc(name + "_" + xx)
#(begin macro)    at_1("inc",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput2_0
    inc 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("inc",a)
#(end macro)            at_inc(name + "_" + xx)
#(begin macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
    push _incFPinput2_0
    push 0
    equal
    if
#(end macro)            if_equal( name + "_" + xx,0) # reach zero (roll over)
#(js) }
#(begin macro)           setcvX(X, name) ## set carry (overflow)
#(begin macro)    at_set(name+"_c",1)
#(begin macro)    at_2("set",a,b)
    at _incFPinput2_c
    set 1
    ta
#(end macro)    at_2("set",a,b)
#(end macro)    at_set(name+"_c",1)
#(end macro)           setcvX(X, name) ## set carry (overflow)
#(js) for (var xx=0; xx < X; xx++) {
            fi
#(js) }        
    else    # negative number
#(js) for (var xx=0; xx < X; xx++) {
#(begin macro)        at_dec(name + "_" + xx)
#(begin macro)    at_1("dec",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput2_0
    dec 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("dec",a)
#(end macro)        at_dec(name + "_" + xx)
#(begin macro)        if_equal(name +"_" + xx,255) # reduced
    push _incFPinput2_0
    push 255
    equal
    if
#(end macro)        if_equal(name +"_" + xx,255) # reduced
#(js) }
#(begin macro)        setvX(X,name,1)
    at _incFPinput2_0
#(begin macro)        setX(X,immValue)
#(js) for (var xx=0; xx < X+1; xx++) {
    bf <
#(js) }
    bf <
#(js) }
    reset
    bf  >
    set 0
#(js) var absImmValue ; absImmValue = immValue>0?immValue:-immValue;
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(js) var xx1; xx1 = X-xx-1; // X-1 to 0
#(js) absImmValue = absImmValue % Math.pow(256,xx1+1);
    bf >
    set    1
#(js) }
#(end macro)        setX(X,immValue)
    ta
#(end macro)        setvX(X,name,1)
#(js) for (var xx=0; xx < X; xx++) {
        fi
#(js) }
#(begin macro)        fixsvX(X,name)    
    push    _incFPinput2_s
    if    # if name is negative
#(js) for (var xx = 0 ; xx < X ; xx++) {
#(begin macro)        if_equal(name +"_" + xx, 0)
    push _incFPinput2_0
    push 0
    equal
    if
#(end macro)        if_equal(name +"_" + xx, 0)
#(js) }
#(begin macro)            at_reset(name + "_s")   # set sign to positive
#(begin macro)    at_1("reset",a)
#(begin macro)    at_2(ope,a,"")
    at _incFPinput2_s
    reset 
    ta
#(end macro)    at_2(ope,a,"")
#(end macro)    at_1("reset",a)
#(end macro)            at_reset(name + "_s")   # set sign to positive
#(js) for (var xx = 0 ; xx < X ; xx++) {
        fi
#(js) }
    fi
#(end macro)        fixsvX(X,name)    
    fi
#(end macro)    incvX(I,"_incFPinput"+_fp2)
#(end macro)    incFP(FP_I,FP_P)
#(begin macro)    popvX(FP,"y")
#(js) for (var xx=0; xx < X; xx++) {
    pop     y_0
#(js) }
    pop     y_1
#(js) }
    pop     y_2
#(js) }
    pop     y_s
    pop     y_c
#(end macro)    popvX(FP,"y")
    #  addvvvX(FP,"y","y","ONE")
#(begin macro)    print("\n")
    push    0
#(js) var __prev; __prev = 0;
#(js) for (var istr=0; istr < aString.length ; istr++) {
#(js) var __ascii; __ascii = aString[istr].charCodeAt(0);
#(js) var __move; __move = __ascii - __prev;
#(js) var __dist ; __dist = (__move > 0)?__move:-__move;
#(js) if (__dist < __ascii) { // shorter to move
    set     10    
#(js) }
    out             # 
#(js) __prev  = __ascii;
#(js) }
    drop
#(end macro)    print("\n")
endloop  


