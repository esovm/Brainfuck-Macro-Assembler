# ASCII Mandelbrot attempt
# inspired by C code at https://stackoverflow.com/questions/16124127/improvement-to-my-mandelbrot-set-code
#(begin include)../include/macro.inc
# Common macros
# scope variables


# macro scope_begin : start a new scope for local variable (usage of macro lvar)

# macro scope_end : end a scope , then drop scoped local variables (drop) (usage of lvar)

# macro lvar(vname,value) : declare  in scope, a local variable named vname with an assigned value (stored in stack)

# macro if_diff(a,b) : if (a != b) {

# macro if_equal(a,b) : if (a == b) {

# macro if_sup(a,b) : if (a > b) {

# macro if_inf(a,b) : if (a < b) {

# macro if_supequal(a,b) : if (a >= b) {

# macro if_infequal(a,b) : if (a <= b) {

# macro at_2

# macro at_1

# macro at_reset(a) : a=0

# macro at_inc(a) : a++

# macro at_dec(a) : a--

# macro at_in(a)  : a= readchar()

# macro at_out(a) : write(a)

# macro at_add(a,b) : a += b (immediate)

# macro at_sub(a,b) : a -= b (immediate)

# macro at_set(a,b) : a = b (immediate)





# macro popouthexa() : from head of stack value (from 0 to 15) write out hexa (from 0 to 9 and A to F)

# macro popout8hexa() : from head of stack the 8 bit value is write out in hexa

# macro print(aString) : print out a string
#(end include)../include/macro.inc
#(begin include)../include/fpnumber.inc
# fix point number
#(begin include)signedX.inc
# X bytes : X*8 bits signed integer :

# macro varX(name) :declare global X * 8 bits

# macro lvarX(X,name) : declare local X * 8 bits

# macro fixsvX(X,name) : be sure that name is positive if equal to zero

# macro fixsX(X) : be sure to have sign to zero if X*8 bits head of stack value is zero


# macro pushvX(X,name) : push X*8 bits name on stack

# macro pushX(X,immValue) : push immediate X*8 bits value on the stack

# macro dupX(X) : duplicate X * 8 bits value on stack

# macro pushsvX(X,name) : push the sign of the X*8 bits variable 'name'

# macro pushcvX(X,name) : push the carry of the X*8 bits variable 'name'

# macro popvX(X,name) : pop the stack to the X*8 bits variable 'name'

# macro popsvX(X,name) : pop the sign(8 bits 0/1) to the X*8 bits variable 'name'

# macro popcvX(X,name) : pop the carry(8 bit 0/1) to the X*8 bits variable 'name'

# macro negvX(X,name) : name = -name

# macro absvX(X,name) : name = abs(name)

# macro absX(X) : X*8 bits head of stack = abs(X*8 bits head of stack)

# macro negX(X) : X*8 bits head of stack = - (X*8 bits head of stack)

# macro setcX(X) : set 1 to X*8 bits head of stack carry

# macro setcvX(X,name) : set 1 to X*8 bits variable 'name' carry

# macro clearcX(X) : set 0 to 8*X bits head of stack carry

# macro clearcvX(X,name) : set 0 to X*8 bits variable 'name' carry

# macro dropX(X) : drop 8*X bits value from stack

# macro resetX(X) : reset X*8 bits value of the head of stack

# macro resetvX(X,name) : reset X*8 bits variable 'name'

# macro setX(X,immValue) : set X*8 bits value on the head of stack

# macro setvX(X,name, immValue) : set X*8 bits immediate value to a X*8 bits variable 'name'


# macro boolvX(X,name) : push on stack the bool(name) X*8 bits

# macro boolX(X) : same as 'bool' but with a X*8 bits value on stack


# macro incvX(X,name) : name = name +1 (X*8 bits)

# macro incX(X) : X*8 bits head of stack value incremented

# macro decvX(X,name) : name-- (X*8 bits)

# macro decX(X) : X*8 bits head of stack value decrement

# macro addviX(X,name, immValue) : name += immediate value

# macro addiX(X,immValue) : X*8 bits head of stack value += immediate value

# macro subviX(X,name, immValue) : name -= immediate value

# macro subiX(X,immValue) : X*8 bits head of stack value -= immediate value

#macro addof() : push A, push B , replaced by Carry, A+B

# macro subof() : push A, push B , replaced by Carry, A-B

# macro addvvvX(X,name, nameA, nameB) : name = nameA + nameB


# macro addvvX(X,name, nameA) : name += nameA

# macro addvX(X,nameA) : head stack += nameA

# macro addX(X) : stack-1 = stack-1 + stack ; stack--

# macro subvvvX(X,name, nameA, nameB) : name = nameA - nameB

# macro subvvX(X,name, nameA) : name -= nameA

# macro subvX(X,nameB) : head stack -= nameB

# macro subX(X) : stack-1 = stack-1 - stack ; stack--

# macro mulvvvX(X,name, nameA, nameB) : name = nameA * nameB

# macro mulvvX(X,name, nameB) : name *= nameB

# macro mulvX(X,name) : head of stack *= name

# macro mulX(X) : stack-1 = stack-1 * stack : stack--

# macro equalvvX(X,nameA, nameB) : push 1 if NameA == NameB , push 0 otherwise

# macro equalX(X) : same as "equal" but with X*8 bits value in stack

# macro diffvvX(X,nameA, nameB) : push 1 if Name != NameB , push 0 otherwise

# macro diffX(X) : same as "diff" but with X*8 bits value in stack

# macro supequalvvX(X,nameA, nameB) : push 1 if nameA >= nameB push 0 otherwise

# macro supequalX(X) : push 1 if stack-1 >= stack , push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro infvvX(X,nameA, nameB) : push 1 if nameA < nameB push 0 otherwise

# macro infX(X) : push 1 if stack-1 < stack, push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro infequalvvX(X,nameA, nameB) : push 1 if nameA <= nameB push 0 otherwise

# macro infequalX(X) : push 1 if stack-1 <= stack, push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro supvvX(X,nameA , nameB) : push 1 if nameA > nameB push 0 otherwise

# macro supX(X) : push 1 if stack-1 > stack, push 0 otherwise : after dropped 2 X*8 bits value from stack

# macro divvvvvX(X,nameAdivB, nameAmodB, nameA, nameB) : nameAdivB = nameA div nameB ; nameAmodB = nameA mod nameB

# macro divvvX(X,nameA, nameB) : Push 2 X*8 bits values  : stack-1 = nameA mod nameB ; stack = nameA div nameB

# macro divX(X) : stack-1 == A , stack == B ; stack-1 = A mod B , stack = A div B


# macro castX(X1,X2) : transform stack X1*8 bits value to X2*8 bits value

# macro sbmX2(X,name,backward,offset) : sbm a X*8 bit head of stack - (backward X*8 bits value+ offset)

# macro sbmX(X,name,backward) : sbm a X*8 bit head of stack - (backward X*8 bits value)


# upcast macro






# downcast macro








# macro writeX(X,name) : print out the decimal value (signed)

# macro printhexaX(X,name) : print the X*8 bit variable in hexadecimal


# declare temporary X*8 bits value used for signedX.inc macros
#(end include)signedX.inc

# macro add 2 fixed point number (I+P)*8 bits in stack

# macro sub 2 fixed point number (I+P)*8 bits in stack



# macro setFP(I,P,immValue) : set fixed point head of stack I,P (I+P)*8 bits with immediate value

# macro pushFP(I,P,immValue) : push immediate fixed point number onto the stack

# macro castFP(I1,P1,I2,P2) : transform head of Stack Fixed point number I1,P1 (I1+P1* 8 bits) into a Fixed point number I2,P2 (I2+P2*8 bits)

# macro integerFP(I,P) : transform head of stack fixed point number I,P (I+P)*8 bits , into a signed integer I*8bits

# macro fract(I,P) : retrieve the fractional part of head of stack fixed point number I,P (I+P)*8 bits, into a signed integer P*8 bits

# macro mul 2 fixed point number (I+P)*8 bits in stack

#(end include)../include/fpnumber.inc


# 8.16 fixed number
## 8 = 1*8 bits
## 16 = 2*8 bits
# FP_I + FP_P
## 1+2 = 3 : 24 bits

#(begin macro)varX(FP,"pr")  # pixel real
var pr_0    # 0 byte of pr
var pr_1    # 1 byte of pr
var pr_2    # 2 byte of pr
var pr_s    # Sign of pr
var pr_c    # carry of pr
#(end macro)varX(FP,"pr")  # pixel real
#(begin macro)varX(FP,"pi")  # pixel imaginary
var pi_0    # 0 byte of pi
var pi_1    # 1 byte of pi
var pi_2    # 2 byte of pi
var pi_s    # Sign of pi
var pi_c    # carry of pi
#(end macro)varX(FP,"pi")  # pixel imaginary
#(begin macro)varX(FP,"x")    # screen coordinate horizontal
var x_0    # 0 byte of x
var x_1    # 1 byte of x
var x_2    # 2 byte of x
var x_s    # Sign of x
var x_c    # carry of x
#(end macro)varX(FP,"x")    # screen coordinate horizontal
#(begin macro)varX(FP,"y")    # screen coordinate vertical
var y_0    # 0 byte of y
var y_1    # 1 byte of y
var y_2    # 2 byte of y
var y_s    # Sign of y
var y_c    # carry of y
#(end macro)varX(FP,"y")    # screen coordinate vertical
#(begin macro)varX(FP,"newRe")
var newRe_0    # 0 byte of newRe
var newRe_1    # 1 byte of newRe
var newRe_2    # 2 byte of newRe
var newRe_s    # Sign of newRe
var newRe_c    # carry of newRe
#(end macro)varX(FP,"newRe")
#(begin macro)varX(FP,"newIm")
var newIm_0    # 0 byte of newIm
var newIm_1    # 1 byte of newIm
var newIm_2    # 2 byte of newIm
var newIm_s    # Sign of newIm
var newIm_c    # carry of newIm
#(end macro)varX(FP,"newIm")
#(begin macro)varX(FP,"oldRe")
var oldRe_0    # 0 byte of oldRe
var oldRe_1    # 1 byte of oldRe
var oldRe_2    # 2 byte of oldRe
var oldRe_s    # Sign of oldRe
var oldRe_c    # carry of oldRe
#(end macro)varX(FP,"oldRe")
#(begin macro)varX(FP,"oldIm")
var oldIm_0    # 0 byte of oldIm
var oldIm_1    # 1 byte of oldIm
var oldIm_2    # 2 byte of oldIm
var oldIm_s    # Sign of oldIm
var oldIm_c    # carry of oldIm
#(end macro)varX(FP,"oldIm")
# varX(FP,"ONE")
var     i

#(begin macro)declareTmpX(FP)
var  _stringDecimal24_*8

#(end macro)declareTmpX(FP)
#(begin macro)declareTmpX(FP*2)
var  _stringDecimal48_*15

#(end macro)declareTmpX(FP*2)

# pushFP(FP_I,FP_P,1)
# popvX(FP,"ONE")          # ONE = 1.0

push    40
loop
  push    80
  loop
    # pr = 1.5 *(x - halfW) * oneOnHalfZoomW + moveX
    #(begin macro)pushFP(FP_I,FP_P,1.5)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack1_0 - 0
    sbm _setFPinstack1_1 - 1
    sbm _setFPinstack1_2 - 2
    sbm _setFPinstack1_s - 3
    sbm _setFPinstack1_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack1_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    1
      bf >
      set    128
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,1.5)
    #(begin macro)pushvX(FP,"x")
    push    x_c
    push    x_s
    push    x_2
    push    x_1
    push    x_0
    #(end macro)pushvX(FP,"x")
    #(begin macro)pushFP(FP_I,FP_P, halfW)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack2_0 - 0
    sbm _setFPinstack2_1 - 1
    sbm _setFPinstack2_2 - 2
    sbm _setFPinstack2_s - 3
    sbm _setFPinstack2_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack2_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    40
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P, halfW)
    #(begin macro)subX(FP)
    #(begin macro)sbmX(X, "_subXName" + _subX, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _subXName1_0 - 5
    sbm _subXName1_1 - 6
    sbm _subXName1_2 - 7
    sbm _subXName1_s - 8
    sbm _subXName1_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_subXName" + _subX, 1)
    #(begin macro)sbmX(X,"_subXNameB" + _subX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _subXNameB1_0 - 0
    sbm _subXNameB1_1 - 1
    sbm _subXNameB1_2 - 2
    sbm _subXNameB1_s - 3
    sbm _subXNameB1_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X,"_subXNameB" + _subX, 0)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_subXNameA" + _subX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _subXNameA1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _subXNameA1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_subXNameA" + _subX)
    #(begin macro)pushvX(X,"_subXName" + _subX)
    push    _subXName1_c
    push    _subXName1_s
    push    _subXName1_2
    push    _subXName1_1
    push    _subXName1_0
    #(end macro)pushvX(X,"_subXName" + _subX)
    #(begin macro)popvX(X,"_subXNameA" + _subX)
    pop     _subXNameA1_0
    pop     _subXNameA1_1
    pop     _subXNameA1_2
    pop     _subXNameA1_s
    pop     _subXNameA1_c
    #(end macro)popvX(X,"_subXNameA" + _subX)
    #(begin macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_negNameB" + _subvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _negNameB1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _negNameB1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_negNameB" + _subvvvX)
    #(begin macro)pushvX(X,nameB)
    push    _subXNameB1_c
    push    _subXNameB1_s
    push    _subXNameB1_2
    push    _subXNameB1_1
    push    _subXNameB1_0
    #(end macro)pushvX(X,nameB)
    #(begin macro)popvX(X,"_negNameB" + _subvvvX)
    pop     _negNameB1_0
    pop     _negNameB1_1
    pop     _negNameB1_2
    pop     _negNameB1_s
    pop     _negNameB1_c
    #(end macro)popvX(X,"_negNameB" + _subvvvX)
    #(begin macro)negvX(X,"_negNameB" + _subvvvX)
    push    _negNameB1_s
    dec
    bool
    dup
    if    # if name is now negative
      #(begin macro)if_equal(name +"_"+xx, 0)
      push _negNameB1_0
      push 0
      equal
      if
        #(end macro)if_equal(name +"_"+xx, 0)
        #(begin macro)if_equal(name +"_"+xx, 0)
        push _negNameB1_1
        push 0
        equal
        if
          #(end macro)if_equal(name +"_"+xx, 0)
          #(begin macro)if_equal(name +"_"+xx, 0)
          push _negNameB1_2
          push 0
          equal
          if
            #(end macro)if_equal(name +"_"+xx, 0)
            #(begin macro)at_reset(name + "_s")   # set sign to positive if name==0
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _negNameB1_s
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset(name + "_s")   # set sign to positive if name==0
          fi
        fi
      fi
    fi
    pop     _negNameB1_s
    #(end macro)negvX(X,"_negNameB" + _subvvvX)
    #(begin macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
    push    _subXNameA1_s
    push    _negNameB1_s
    or
    not
    push    _subXNameA1_s
    push    _negNameB1_s
    and
    or
    if      # nameA and nameB are both positive or negative
      push    _subXNameA1_s
      pop     _subXName1_s    # name has same sign of nameA and nameB
      push    0
      push    _subXNameA1_0
      #(begin macro)addof()
      sbm _addofb1
      sbm _addofa1 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc1
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao1
      while
        push _addofa1
        if
          at _addofa1
            dec
          ta
          at _addofb1
            inc
          ta
          push _addofb1
          not
          if
            at _addofc1
              set 1
            ta
          fi
        else
          at _loopao1
            reset
          ta
        fi
      wend
      push _addofc1
      if
        at _addofa1
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_0
      push    _negNameB1_0
      #(begin macro)addof()
      sbm _addofb2
      sbm _addofa2 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc2
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao2
      while
        push _addofa2
        if
          at _addofa2
            dec
          ta
          at _addofb2
            inc
          ta
          push _addofb2
          not
          if
            at _addofc2
              set 1
            ta
          fi
        else
          at _loopao2
            reset
          ta
        fi
      wend
      push _addofc2
      if
        at _addofa2
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName1_0
      #(begin macro)addof()
      sbm _addofb3
      sbm _addofa3 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc3
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao3
      while
        push _addofa3
        if
          at _addofa3
            dec
          ta
          at _addofb3
            inc
          ta
          push _addofb3
          not
          if
            at _addofc3
              set 1
            ta
          fi
        else
          at _loopao3
            reset
          ta
        fi
      wend
      push _addofc3
      if
        at _addofa3
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_0
      add
      push    _subXNameA1_1
      #(begin macro)addof()
      sbm _addofb4
      sbm _addofa4 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc4
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao4
      while
        push _addofa4
        if
          at _addofa4
            dec
          ta
          at _addofb4
            inc
          ta
          push _addofb4
          not
          if
            at _addofc4
              set 1
            ta
          fi
        else
          at _loopao4
            reset
          ta
        fi
      wend
      push _addofc4
      if
        at _addofa4
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_1
      push    _negNameB1_1
      #(begin macro)addof()
      sbm _addofb5
      sbm _addofa5 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc5
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao5
      while
        push _addofa5
        if
          at _addofa5
            dec
          ta
          at _addofb5
            inc
          ta
          push _addofb5
          not
          if
            at _addofc5
              set 1
            ta
          fi
        else
          at _loopao5
            reset
          ta
        fi
      wend
      push _addofc5
      if
        at _addofa5
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName1_1
      #(begin macro)addof()
      sbm _addofb6
      sbm _addofa6 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc6
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao6
      while
        push _addofa6
        if
          at _addofa6
            dec
          ta
          at _addofb6
            inc
          ta
          push _addofb6
          not
          if
            at _addofc6
              set 1
            ta
          fi
        else
          at _loopao6
            reset
          ta
        fi
      wend
      push _addofc6
      if
        at _addofa6
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_1
      add
      push    _subXNameA1_2
      #(begin macro)addof()
      sbm _addofb7
      sbm _addofa7 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc7
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao7
      while
        push _addofa7
        if
          at _addofa7
            dec
          ta
          at _addofb7
            inc
          ta
          push _addofb7
          not
          if
            at _addofc7
              set 1
            ta
          fi
        else
          at _loopao7
            reset
          ta
        fi
      wend
      push _addofc7
      if
        at _addofa7
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_2
      push    _negNameB1_2
      #(begin macro)addof()
      sbm _addofb8
      sbm _addofa8 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc8
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao8
      while
        push _addofa8
        if
          at _addofa8
            dec
          ta
          at _addofb8
            inc
          ta
          push _addofb8
          not
          if
            at _addofc8
              set 1
            ta
          fi
        else
          at _loopao8
            reset
          ta
        fi
      wend
      push _addofc8
      if
        at _addofa8
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName1_2
      #(begin macro)addof()
      sbm _addofb9
      sbm _addofa9 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc9
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao9
      while
        push _addofa9
        if
          at _addofa9
            dec
          ta
          at _addofb9
            inc
          ta
          push _addofb9
          not
          if
            at _addofc9
              set 1
            ta
          fi
        else
          at _loopao9
            reset
          ta
        fi
      wend
      push _addofc9
      if
        at _addofa9
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName1_2
      add
      pop     _subXName1_c
    else  # nameA has a different sign of nameB
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      push 0
      sbm _asupb1
      #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push 0
      sbm _aequb1
      #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push    _subXNameA1_2
      push    _negNameB1_2
      sup
      if
        at _asupb1
          set 1
        ta
      else
        push    _subXNameA1_2
        push    _negNameB1_2
        diff
        if
          at _asupb1
            reset
          ta
        else
          push    _subXNameA1_1
          push    _negNameB1_1
          sup
          if
            at _asupb1
              set 1
            ta
          else
            push    _subXNameA1_1
            push    _negNameB1_1
            diff
            if
              at _asupb1
                reset
              ta
            else
              push    _subXNameA1_0
              push    _negNameB1_0
              sup
              if
                at _asupb1
                  set 1
                ta
              else
                push    _subXNameA1_0
                push    _negNameB1_0
                diff
                if
                  at _asupb1
                    reset
                  ta
                else
                  at _aequb1
                    set 1
                  ta
                fi
              fi
            fi
          fi
        fi
      fi
      push _asupb1
      if  # absA > absB : do  absA-absB with sign of A
        # print("absA > absB\n")
        push    _subXNameA1_s
        pop     _subXName1_s    # name has same sign of nameA
        
        push    0
        sbm     _addvvvXCarry1
        push    _subXNameA1_0
        push    _negNameB1_0
        #(begin macro)subof()
        sbm _subofb1
        sbm _subofa1 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc1
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso1
        while
          push _subofb1
          if
            at _subofb1
              dec
            ta
            at _subofa1
              dec
            ta
            push _subofa1
            inc
            not
            if
              at _subofc1
                set 1
              ta
            fi
          else
            at _loopso1
              reset
            ta
          fi
        wend
        push _subofc1
        if
          at _subofb1
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry1
        #(begin macro)subof()
        sbm _subofb2
        sbm _subofa2 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc2
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso2
        while
          push _subofb2
          if
            at _subofb2
              dec
            ta
            at _subofa2
              dec
            ta
            push _subofa2
            inc
            not
            if
              at _subofc2
                set 1
              ta
            fi
          else
            at _loopso2
              reset
            ta
          fi
        wend
        push _subofc2
        if
          at _subofb2
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName1_0
        add
        pop     _addvvvXCarry1
        push    _subXNameA1_1
        push    _negNameB1_1
        #(begin macro)subof()
        sbm _subofb3
        sbm _subofa3 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc3
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso3
        while
          push _subofb3
          if
            at _subofb3
              dec
            ta
            at _subofa3
              dec
            ta
            push _subofa3
            inc
            not
            if
              at _subofc3
                set 1
              ta
            fi
          else
            at _loopso3
              reset
            ta
          fi
        wend
        push _subofc3
        if
          at _subofb3
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry1
        #(begin macro)subof()
        sbm _subofb4
        sbm _subofa4 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc4
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso4
        while
          push _subofb4
          if
            at _subofb4
              dec
            ta
            at _subofa4
              dec
            ta
            push _subofa4
            inc
            not
            if
              at _subofc4
                set 1
              ta
            fi
          else
            at _loopso4
              reset
            ta
          fi
        wend
        push _subofc4
        if
          at _subofb4
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName1_1
        add
        pop     _addvvvXCarry1
        push    _subXNameA1_2
        push    _negNameB1_2
        #(begin macro)subof()
        sbm _subofb5
        sbm _subofa5 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc5
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso5
        while
          push _subofb5
          if
            at _subofb5
              dec
            ta
            at _subofa5
              dec
            ta
            push _subofa5
            inc
            not
            if
              at _subofc5
                set 1
              ta
            fi
          else
            at _loopso5
              reset
            ta
          fi
        wend
        push _subofc5
        if
          at _subofb5
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry1
        #(begin macro)subof()
        sbm _subofb6
        sbm _subofa6 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc6
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso6
        while
          push _subofb6
          if
            at _subofb6
              dec
            ta
            at _subofa6
              dec
            ta
            push _subofa6
            inc
            not
            if
              at _subofc6
                set 1
              ta
            fi
          else
            at _loopso6
              reset
            ta
          fi
        wend
        push _subofc6
        if
          at _subofb6
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName1_2
        add
        pop     _addvvvXCarry1
        pop     _subXName1_c
      else # absB >= absA :
        push    _aequb1
        if # absA == absB , then name =0 (opposite sign then sum is zero)
          #print("absA == absB\n")
          #(begin macro)setvX(X,name,0)
          at _subXName1_0
            #(begin macro)setX(X,immValue)
            bf <
            bf <
            bf <
            bf <
            reset
            bf  >
            set 0
            bf >
            set    0
            bf >
            set    0
            bf >
            set    0
            #(end macro)setX(X,immValue)
          ta
          #(end macro)setvX(X,name,0)
        else # absA < absB : do   absB-absA with sign of B
          #print("absA < absB\n")
          push    _negNameB1_s
          pop     _subXName1_s    # name has same sign of nameB
          
          push    0
          sbm     _addvvvXCarry1
          push    _negNameB1_0
          push    _subXNameA1_0
          #(begin macro)subof()
          sbm _subofb7
          sbm _subofa7 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc7
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso7
          while
            push _subofb7
            if
              at _subofb7
                dec
              ta
              at _subofa7
                dec
              ta
              push _subofa7
              inc
              not
              if
                at _subofc7
                  set 1
                ta
              fi
            else
              at _loopso7
                reset
              ta
            fi
          wend
          push _subofc7
          if
            at _subofb7
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry1
          #(begin macro)subof()
          sbm _subofb8
          sbm _subofa8 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc8
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso8
          while
            push _subofb8
            if
              at _subofb8
                dec
              ta
              at _subofa8
                dec
              ta
              push _subofa8
              inc
              not
              if
                at _subofc8
                  set 1
                ta
              fi
            else
              at _loopso8
                reset
              ta
            fi
          wend
          push _subofc8
          if
            at _subofb8
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName1_0
          add
          pop     _addvvvXCarry1
          push    _negNameB1_1
          push    _subXNameA1_1
          #(begin macro)subof()
          sbm _subofb9
          sbm _subofa9 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc9
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso9
          while
            push _subofb9
            if
              at _subofb9
                dec
              ta
              at _subofa9
                dec
              ta
              push _subofa9
              inc
              not
              if
                at _subofc9
                  set 1
                ta
              fi
            else
              at _loopso9
                reset
              ta
            fi
          wend
          push _subofc9
          if
            at _subofb9
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry1
          #(begin macro)subof()
          sbm _subofb10
          sbm _subofa10 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc10
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso10
          while
            push _subofb10
            if
              at _subofb10
                dec
              ta
              at _subofa10
                dec
              ta
              push _subofa10
              inc
              not
              if
                at _subofc10
                  set 1
                ta
              fi
            else
              at _loopso10
                reset
              ta
            fi
          wend
          push _subofc10
          if
            at _subofb10
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName1_1
          add
          pop     _addvvvXCarry1
          push    _negNameB1_2
          push    _subXNameA1_2
          #(begin macro)subof()
          sbm _subofb11
          sbm _subofa11 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc11
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso11
          while
            push _subofb11
            if
              at _subofb11
                dec
              ta
              at _subofa11
                dec
              ta
              push _subofa11
              inc
              not
              if
                at _subofc11
                  set 1
                ta
              fi
            else
              at _loopso11
                reset
              ta
            fi
          wend
          push _subofc11
          if
            at _subofb11
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry1
          #(begin macro)subof()
          sbm _subofb12
          sbm _subofa12 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc12
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso12
          while
            push _subofb12
            if
              at _subofb12
                dec
              ta
              at _subofa12
                dec
              ta
              push _subofa12
              inc
              not
              if
                at _subofc12
                  set 1
                ta
              fi
            else
              at _loopso12
                reset
              ta
            fi
          wend
          push _subofc12
          if
            at _subofb12
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName1_2
          add
          pop     _addvvvXCarry1
          pop     _subXName1_c
        fi
      fi
      #(begin macro)scope_end()
      drop
      drop
      #(end macro)scope_end()
    fi
    #(end macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(end macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X)
    #(end macro)subX(FP)
    #(begin macro)mulFP(FP_I,FP_P)
    #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameB1_0 - 0
    sbm _mulFPnameB1_1 - 1
    sbm _mulFPnameB1_2 - 2
    sbm _mulFPnameB1_s - 3
    sbm _mulFPnameB1_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameA1_0 - 5
    sbm _mulFPnameA1_1 - 6
    sbm _mulFPnameA1_2 - 7
    sbm _mulFPnameA1_s - 8
    sbm _mulFPnameA1_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameAX1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameAX1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameBX1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameBX1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPresultX1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPresultX1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    
    # upcast nameA to nameAX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    push    _mulFPnameA1_c
    push    _mulFPnameA1_s
    push    _mulFPnameA1_2
    push    _mulFPnameA1_1
    push    _mulFPnameA1_0
    #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput1_0 - 0
    sbm _castXInput1_1 - 1
    sbm _castXInput1_2 - 2
    sbm _castXInput1_s - 3
    sbm _castXInput1_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput1_0    # 0 byte of _castXoutput1
    var _castXoutput1_1    # 1 byte of _castXoutput1
    var _castXoutput1_2    # 2 byte of _castXoutput1
    var _castXoutput1_3    # 3 byte of _castXoutput1
    var _castXoutput1_4    # 4 byte of _castXoutput1
    var _castXoutput1_5    # 5 byte of _castXoutput1
    var _castXoutput1_s    # Sign of _castXoutput1
    var _castXoutput1_c    # carry of _castXoutput1
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput1_c
    push    _castXInput1_s
    push    _castXInput1_2
    push    _castXInput1_1
    push    _castXInput1_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori1_0
    pop     _castXori1_1
    pop     _castXori1_2
    pop     _castXori1_s
    pop     _castXori1_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori1_s
    pop     _castXdest1_s  # keep sign
    push    _castXori1_0
    pop     _castXdest1_0
    push    _castXori1_1
    pop     _castXdest1_1
    push    _castXori1_2
    pop     _castXdest1_2
    push    0
    pop     _castXdest1_3
    push    0
    pop     _castXdest1_4
    push    0
    pop     _castXdest1_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest1_c
    push    _castXdest1_s
    push    _castXdest1_5
    push    _castXdest1_4
    push    _castXdest1_3
    push    _castXdest1_2
    push    _castXdest1_1
    push    _castXdest1_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput1_0
    pop     _castXoutput1_1
    pop     _castXoutput1_2
    pop     _castXoutput1_3
    pop     _castXoutput1_4
    pop     _castXoutput1_5
    pop     _castXoutput1_s
    pop     _castXoutput1_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput1_c
    push    _castXoutput1_s
    push    _castXoutput1_5
    push    _castXoutput1_4
    push    _castXoutput1_3
    push    _castXoutput1_2
    push    _castXoutput1_1
    push    _castXoutput1_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    pop     _mulFPnameAX1_0
    pop     _mulFPnameAX1_1
    pop     _mulFPnameAX1_2
    pop     _mulFPnameAX1_3
    pop     _mulFPnameAX1_4
    pop     _mulFPnameAX1_5
    pop     _mulFPnameAX1_s
    pop     _mulFPnameAX1_c
    #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    
    # upcast nameB to nameBX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    push    _mulFPnameB1_c
    push    _mulFPnameB1_s
    push    _mulFPnameB1_2
    push    _mulFPnameB1_1
    push    _mulFPnameB1_0
    #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput2_0 - 0
    sbm _castXInput2_1 - 1
    sbm _castXInput2_2 - 2
    sbm _castXInput2_s - 3
    sbm _castXInput2_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput2_0    # 0 byte of _castXoutput2
    var _castXoutput2_1    # 1 byte of _castXoutput2
    var _castXoutput2_2    # 2 byte of _castXoutput2
    var _castXoutput2_3    # 3 byte of _castXoutput2
    var _castXoutput2_4    # 4 byte of _castXoutput2
    var _castXoutput2_5    # 5 byte of _castXoutput2
    var _castXoutput2_s    # Sign of _castXoutput2
    var _castXoutput2_c    # carry of _castXoutput2
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput2_c
    push    _castXInput2_s
    push    _castXInput2_2
    push    _castXInput2_1
    push    _castXInput2_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori2_0
    pop     _castXori2_1
    pop     _castXori2_2
    pop     _castXori2_s
    pop     _castXori2_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori2_s
    pop     _castXdest2_s  # keep sign
    push    _castXori2_0
    pop     _castXdest2_0
    push    _castXori2_1
    pop     _castXdest2_1
    push    _castXori2_2
    pop     _castXdest2_2
    push    0
    pop     _castXdest2_3
    push    0
    pop     _castXdest2_4
    push    0
    pop     _castXdest2_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest2_c
    push    _castXdest2_s
    push    _castXdest2_5
    push    _castXdest2_4
    push    _castXdest2_3
    push    _castXdest2_2
    push    _castXdest2_1
    push    _castXdest2_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput2_0
    pop     _castXoutput2_1
    pop     _castXoutput2_2
    pop     _castXoutput2_3
    pop     _castXoutput2_4
    pop     _castXoutput2_5
    pop     _castXoutput2_s
    pop     _castXoutput2_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput2_c
    push    _castXoutput2_s
    push    _castXoutput2_5
    push    _castXoutput2_4
    push    _castXoutput2_3
    push    _castXoutput2_2
    push    _castXoutput2_1
    push    _castXoutput2_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    pop     _mulFPnameBX1_0
    pop     _mulFPnameBX1_1
    pop     _mulFPnameBX1_2
    pop     _mulFPnameBX1_3
    pop     _mulFPnameBX1_4
    pop     _mulFPnameBX1_5
    pop     _mulFPnameBX1_s
    pop     _mulFPnameBX1_c
    #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    
    #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameA1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameA1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)pushvX(X,nameA)
    push    _mulFPnameAX1_c
    push    _mulFPnameAX1_s
    push    _mulFPnameAX1_5
    push    _mulFPnameAX1_4
    push    _mulFPnameAX1_3
    push    _mulFPnameAX1_2
    push    _mulFPnameAX1_1
    push    _mulFPnameAX1_0
    #(end macro)pushvX(X,nameA)
    #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop     _mulvvvXabsNameA1_0
    pop     _mulvvvXabsNameA1_1
    pop     _mulvvvXabsNameA1_2
    pop     _mulvvvXabsNameA1_3
    pop     _mulvvvXabsNameA1_4
    pop     _mulvvvXabsNameA1_5
    pop     _mulvvvXabsNameA1_s
    pop     _mulvvvXabsNameA1_c
    #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsA1
    #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    push    _mulvvvXabsNameA1_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop _mulvvvXsA1
    #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    push    0
    pop     _mulvvvXabsNameA1_s
    #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    
    #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameB1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameB1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)pushvX(X,nameB)
    push    _mulFPnameBX1_c
    push    _mulFPnameBX1_s
    push    _mulFPnameBX1_5
    push    _mulFPnameBX1_4
    push    _mulFPnameBX1_3
    push    _mulFPnameBX1_2
    push    _mulFPnameBX1_1
    push    _mulFPnameBX1_0
    #(end macro)pushvX(X,nameB)
    #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop     _mulvvvXabsNameB1_0
    pop     _mulvvvXabsNameB1_1
    pop     _mulvvvXabsNameB1_2
    pop     _mulvvvXabsNameB1_3
    pop     _mulvvvXabsNameB1_4
    pop     _mulvvvXabsNameB1_5
    pop     _mulvvvXabsNameB1_s
    pop     _mulvvvXabsNameB1_c
    #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsB1
    #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    push    _mulvvvXabsNameB1_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop _mulvvvXsB1
    #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    push    0
    pop     _mulvvvXabsNameB1_s
    #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    
    #(begin macro)resetvX(X,name)
    at _mulFPresultX1_0
      #(begin macro)resetX(X)
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf [-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      #(end macro)resetX(X)
    ta
    #(end macro)resetvX(X,name)
    
    push    1
    sbm _mulvvvX_loop1
    while
      #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      push _mulvvvXabsNameB1_0
      bool
      push _mulvvvXabsNameB1_1
      bool
      push _mulvvvXabsNameB1_2
      bool
      push _mulvvvXabsNameB1_3
      bool
      push _mulvvvXabsNameB1_4
      bool
      push _mulvvvXabsNameB1_5
      bool
      or
      or
      or
      or
      or
      #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      if  # absNameB is not zero
        #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addvvXnameB1_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addvvXnameB1_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB1_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)pushvX(X,name)
        push    _mulFPresultX1_c
        push    _mulFPresultX1_s
        push    _mulFPresultX1_5
        push    _mulFPresultX1_4
        push    _mulFPresultX1_3
        push    _mulFPresultX1_2
        push    _mulFPresultX1_1
        push    _mulFPresultX1_0
        #(end macro)pushvX(X,name)
        #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
        pop     _addvvXnameB1_0
        pop     _addvvXnameB1_1
        pop     _addvvXnameB1_2
        pop     _addvvXnameB1_3
        pop     _addvvXnameB1_4
        pop     _addvvXnameB1_5
        pop     _addvvXnameB1_s
        pop     _addvvXnameB1_c
        #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        push    _addvvXnameB1_s
        push    _mulvvvXabsNameA1_s
        or
        not
        push    _addvvXnameB1_s
        push    _mulvvvXabsNameA1_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addvvXnameB1_s
          pop     _mulFPresultX1_s    # name has same sign of nameA and nameB
          push    0
          push    _addvvXnameB1_0
          #(begin macro)addof()
          sbm _addofb10
          sbm _addofa10 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc10
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao10
          while
            push _addofa10
            if
              at _addofa10
                dec
              ta
              at _addofb10
                inc
              ta
              push _addofb10
              not
              if
                at _addofc10
                  set 1
                ta
              fi
            else
              at _loopao10
                reset
              ta
            fi
          wend
          push _addofc10
          if
            at _addofa10
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_0
          push    _mulvvvXabsNameA1_0
          #(begin macro)addof()
          sbm _addofb11
          sbm _addofa11 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc11
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao11
          while
            push _addofa11
            if
              at _addofa11
                dec
              ta
              at _addofb11
                inc
              ta
              push _addofb11
              not
              if
                at _addofc11
                  set 1
                ta
              fi
            else
              at _loopao11
                reset
              ta
            fi
          wend
          push _addofc11
          if
            at _addofa11
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_0
          #(begin macro)addof()
          sbm _addofb12
          sbm _addofa12 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc12
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao12
          while
            push _addofa12
            if
              at _addofa12
                dec
              ta
              at _addofb12
                inc
              ta
              push _addofb12
              not
              if
                at _addofc12
                  set 1
                ta
              fi
            else
              at _loopao12
                reset
              ta
            fi
          wend
          push _addofc12
          if
            at _addofa12
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_0
          add
          push    _addvvXnameB1_1
          #(begin macro)addof()
          sbm _addofb13
          sbm _addofa13 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc13
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao13
          while
            push _addofa13
            if
              at _addofa13
                dec
              ta
              at _addofb13
                inc
              ta
              push _addofb13
              not
              if
                at _addofc13
                  set 1
                ta
              fi
            else
              at _loopao13
                reset
              ta
            fi
          wend
          push _addofc13
          if
            at _addofa13
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_1
          push    _mulvvvXabsNameA1_1
          #(begin macro)addof()
          sbm _addofb14
          sbm _addofa14 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc14
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao14
          while
            push _addofa14
            if
              at _addofa14
                dec
              ta
              at _addofb14
                inc
              ta
              push _addofb14
              not
              if
                at _addofc14
                  set 1
                ta
              fi
            else
              at _loopao14
                reset
              ta
            fi
          wend
          push _addofc14
          if
            at _addofa14
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_1
          #(begin macro)addof()
          sbm _addofb15
          sbm _addofa15 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc15
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao15
          while
            push _addofa15
            if
              at _addofa15
                dec
              ta
              at _addofb15
                inc
              ta
              push _addofb15
              not
              if
                at _addofc15
                  set 1
                ta
              fi
            else
              at _loopao15
                reset
              ta
            fi
          wend
          push _addofc15
          if
            at _addofa15
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_1
          add
          push    _addvvXnameB1_2
          #(begin macro)addof()
          sbm _addofb16
          sbm _addofa16 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc16
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao16
          while
            push _addofa16
            if
              at _addofa16
                dec
              ta
              at _addofb16
                inc
              ta
              push _addofb16
              not
              if
                at _addofc16
                  set 1
                ta
              fi
            else
              at _loopao16
                reset
              ta
            fi
          wend
          push _addofc16
          if
            at _addofa16
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_2
          push    _mulvvvXabsNameA1_2
          #(begin macro)addof()
          sbm _addofb17
          sbm _addofa17 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc17
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao17
          while
            push _addofa17
            if
              at _addofa17
                dec
              ta
              at _addofb17
                inc
              ta
              push _addofb17
              not
              if
                at _addofc17
                  set 1
                ta
              fi
            else
              at _loopao17
                reset
              ta
            fi
          wend
          push _addofc17
          if
            at _addofa17
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_2
          #(begin macro)addof()
          sbm _addofb18
          sbm _addofa18 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc18
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao18
          while
            push _addofa18
            if
              at _addofa18
                dec
              ta
              at _addofb18
                inc
              ta
              push _addofb18
              not
              if
                at _addofc18
                  set 1
                ta
              fi
            else
              at _loopao18
                reset
              ta
            fi
          wend
          push _addofc18
          if
            at _addofa18
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_2
          add
          push    _addvvXnameB1_3
          #(begin macro)addof()
          sbm _addofb19
          sbm _addofa19 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc19
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao19
          while
            push _addofa19
            if
              at _addofa19
                dec
              ta
              at _addofb19
                inc
              ta
              push _addofb19
              not
              if
                at _addofc19
                  set 1
                ta
              fi
            else
              at _loopao19
                reset
              ta
            fi
          wend
          push _addofc19
          if
            at _addofa19
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_3
          push    _mulvvvXabsNameA1_3
          #(begin macro)addof()
          sbm _addofb20
          sbm _addofa20 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc20
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao20
          while
            push _addofa20
            if
              at _addofa20
                dec
              ta
              at _addofb20
                inc
              ta
              push _addofb20
              not
              if
                at _addofc20
                  set 1
                ta
              fi
            else
              at _loopao20
                reset
              ta
            fi
          wend
          push _addofc20
          if
            at _addofa20
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_3
          #(begin macro)addof()
          sbm _addofb21
          sbm _addofa21 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc21
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao21
          while
            push _addofa21
            if
              at _addofa21
                dec
              ta
              at _addofb21
                inc
              ta
              push _addofb21
              not
              if
                at _addofc21
                  set 1
                ta
              fi
            else
              at _loopao21
                reset
              ta
            fi
          wend
          push _addofc21
          if
            at _addofa21
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_3
          add
          push    _addvvXnameB1_4
          #(begin macro)addof()
          sbm _addofb22
          sbm _addofa22 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc22
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao22
          while
            push _addofa22
            if
              at _addofa22
                dec
              ta
              at _addofb22
                inc
              ta
              push _addofb22
              not
              if
                at _addofc22
                  set 1
                ta
              fi
            else
              at _loopao22
                reset
              ta
            fi
          wend
          push _addofc22
          if
            at _addofa22
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_4
          push    _mulvvvXabsNameA1_4
          #(begin macro)addof()
          sbm _addofb23
          sbm _addofa23 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc23
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao23
          while
            push _addofa23
            if
              at _addofa23
                dec
              ta
              at _addofb23
                inc
              ta
              push _addofb23
              not
              if
                at _addofc23
                  set 1
                ta
              fi
            else
              at _loopao23
                reset
              ta
            fi
          wend
          push _addofc23
          if
            at _addofa23
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_4
          #(begin macro)addof()
          sbm _addofb24
          sbm _addofa24 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc24
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao24
          while
            push _addofa24
            if
              at _addofa24
                dec
              ta
              at _addofb24
                inc
              ta
              push _addofb24
              not
              if
                at _addofc24
                  set 1
                ta
              fi
            else
              at _loopao24
                reset
              ta
            fi
          wend
          push _addofc24
          if
            at _addofa24
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_4
          add
          push    _addvvXnameB1_5
          #(begin macro)addof()
          sbm _addofb25
          sbm _addofa25 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc25
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao25
          while
            push _addofa25
            if
              at _addofa25
                dec
              ta
              at _addofb25
                inc
              ta
              push _addofb25
              not
              if
                at _addofc25
                  set 1
                ta
              fi
            else
              at _loopao25
                reset
              ta
            fi
          wend
          push _addofc25
          if
            at _addofa25
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_5
          push    _mulvvvXabsNameA1_5
          #(begin macro)addof()
          sbm _addofb26
          sbm _addofa26 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc26
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao26
          while
            push _addofa26
            if
              at _addofa26
                dec
              ta
              at _addofb26
                inc
              ta
              push _addofb26
              not
              if
                at _addofc26
                  set 1
                ta
              fi
            else
              at _loopao26
                reset
              ta
            fi
          wend
          push _addofc26
          if
            at _addofa26
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX1_5
          #(begin macro)addof()
          sbm _addofb27
          sbm _addofa27 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc27
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao27
          while
            push _addofa27
            if
              at _addofa27
                dec
              ta
              at _addofb27
                inc
              ta
              push _addofb27
              not
              if
                at _addofc27
                  set 1
                ta
              fi
            else
              at _loopao27
                reset
              ta
            fi
          wend
          push _addofc27
          if
            at _addofa27
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX1_5
          add
          pop     _mulFPresultX1_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb2
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb2
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addvvXnameB1_5
          push    _mulvvvXabsNameA1_5
          sup
          if
            at _asupb2
              set 1
            ta
          else
            push    _addvvXnameB1_5
            push    _mulvvvXabsNameA1_5
            diff
            if
              at _asupb2
                reset
              ta
            else
              push    _addvvXnameB1_4
              push    _mulvvvXabsNameA1_4
              sup
              if
                at _asupb2
                  set 1
                ta
              else
                push    _addvvXnameB1_4
                push    _mulvvvXabsNameA1_4
                diff
                if
                  at _asupb2
                    reset
                  ta
                else
                  push    _addvvXnameB1_3
                  push    _mulvvvXabsNameA1_3
                  sup
                  if
                    at _asupb2
                      set 1
                    ta
                  else
                    push    _addvvXnameB1_3
                    push    _mulvvvXabsNameA1_3
                    diff
                    if
                      at _asupb2
                        reset
                      ta
                    else
                      push    _addvvXnameB1_2
                      push    _mulvvvXabsNameA1_2
                      sup
                      if
                        at _asupb2
                          set 1
                        ta
                      else
                        push    _addvvXnameB1_2
                        push    _mulvvvXabsNameA1_2
                        diff
                        if
                          at _asupb2
                            reset
                          ta
                        else
                          push    _addvvXnameB1_1
                          push    _mulvvvXabsNameA1_1
                          sup
                          if
                            at _asupb2
                              set 1
                            ta
                          else
                            push    _addvvXnameB1_1
                            push    _mulvvvXabsNameA1_1
                            diff
                            if
                              at _asupb2
                                reset
                              ta
                            else
                              push    _addvvXnameB1_0
                              push    _mulvvvXabsNameA1_0
                              sup
                              if
                                at _asupb2
                                  set 1
                                ta
                              else
                                push    _addvvXnameB1_0
                                push    _mulvvvXabsNameA1_0
                                diff
                                if
                                  at _asupb2
                                    reset
                                  ta
                                else
                                  at _aequb2
                                    set 1
                                  ta
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb2
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addvvXnameB1_s
            pop     _mulFPresultX1_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry2
            push    _addvvXnameB1_0
            push    _mulvvvXabsNameA1_0
            #(begin macro)subof()
            sbm _subofb13
            sbm _subofa13 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc13
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso13
            while
              push _subofb13
              if
                at _subofb13
                  dec
                ta
                at _subofa13
                  dec
                ta
                push _subofa13
                inc
                not
                if
                  at _subofc13
                    set 1
                  ta
                fi
              else
                at _loopso13
                  reset
                ta
              fi
            wend
            push _subofc13
            if
              at _subofb13
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb14
            sbm _subofa14 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc14
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso14
            while
              push _subofb14
              if
                at _subofb14
                  dec
                ta
                at _subofa14
                  dec
                ta
                push _subofa14
                inc
                not
                if
                  at _subofc14
                    set 1
                  ta
                fi
              else
                at _loopso14
                  reset
                ta
              fi
            wend
            push _subofc14
            if
              at _subofb14
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_0
            add
            pop     _addvvvXCarry2
            push    _addvvXnameB1_1
            push    _mulvvvXabsNameA1_1
            #(begin macro)subof()
            sbm _subofb15
            sbm _subofa15 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc15
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso15
            while
              push _subofb15
              if
                at _subofb15
                  dec
                ta
                at _subofa15
                  dec
                ta
                push _subofa15
                inc
                not
                if
                  at _subofc15
                    set 1
                  ta
                fi
              else
                at _loopso15
                  reset
                ta
              fi
            wend
            push _subofc15
            if
              at _subofb15
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb16
            sbm _subofa16 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc16
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso16
            while
              push _subofb16
              if
                at _subofb16
                  dec
                ta
                at _subofa16
                  dec
                ta
                push _subofa16
                inc
                not
                if
                  at _subofc16
                    set 1
                  ta
                fi
              else
                at _loopso16
                  reset
                ta
              fi
            wend
            push _subofc16
            if
              at _subofb16
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_1
            add
            pop     _addvvvXCarry2
            push    _addvvXnameB1_2
            push    _mulvvvXabsNameA1_2
            #(begin macro)subof()
            sbm _subofb17
            sbm _subofa17 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc17
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso17
            while
              push _subofb17
              if
                at _subofb17
                  dec
                ta
                at _subofa17
                  dec
                ta
                push _subofa17
                inc
                not
                if
                  at _subofc17
                    set 1
                  ta
                fi
              else
                at _loopso17
                  reset
                ta
              fi
            wend
            push _subofc17
            if
              at _subofb17
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb18
            sbm _subofa18 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc18
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso18
            while
              push _subofb18
              if
                at _subofb18
                  dec
                ta
                at _subofa18
                  dec
                ta
                push _subofa18
                inc
                not
                if
                  at _subofc18
                    set 1
                  ta
                fi
              else
                at _loopso18
                  reset
                ta
              fi
            wend
            push _subofc18
            if
              at _subofb18
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_2
            add
            pop     _addvvvXCarry2
            push    _addvvXnameB1_3
            push    _mulvvvXabsNameA1_3
            #(begin macro)subof()
            sbm _subofb19
            sbm _subofa19 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc19
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso19
            while
              push _subofb19
              if
                at _subofb19
                  dec
                ta
                at _subofa19
                  dec
                ta
                push _subofa19
                inc
                not
                if
                  at _subofc19
                    set 1
                  ta
                fi
              else
                at _loopso19
                  reset
                ta
              fi
            wend
            push _subofc19
            if
              at _subofb19
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb20
            sbm _subofa20 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc20
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso20
            while
              push _subofb20
              if
                at _subofb20
                  dec
                ta
                at _subofa20
                  dec
                ta
                push _subofa20
                inc
                not
                if
                  at _subofc20
                    set 1
                  ta
                fi
              else
                at _loopso20
                  reset
                ta
              fi
            wend
            push _subofc20
            if
              at _subofb20
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_3
            add
            pop     _addvvvXCarry2
            push    _addvvXnameB1_4
            push    _mulvvvXabsNameA1_4
            #(begin macro)subof()
            sbm _subofb21
            sbm _subofa21 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc21
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso21
            while
              push _subofb21
              if
                at _subofb21
                  dec
                ta
                at _subofa21
                  dec
                ta
                push _subofa21
                inc
                not
                if
                  at _subofc21
                    set 1
                  ta
                fi
              else
                at _loopso21
                  reset
                ta
              fi
            wend
            push _subofc21
            if
              at _subofb21
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb22
            sbm _subofa22 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc22
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso22
            while
              push _subofb22
              if
                at _subofb22
                  dec
                ta
                at _subofa22
                  dec
                ta
                push _subofa22
                inc
                not
                if
                  at _subofc22
                    set 1
                  ta
                fi
              else
                at _loopso22
                  reset
                ta
              fi
            wend
            push _subofc22
            if
              at _subofb22
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_4
            add
            pop     _addvvvXCarry2
            push    _addvvXnameB1_5
            push    _mulvvvXabsNameA1_5
            #(begin macro)subof()
            sbm _subofb23
            sbm _subofa23 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc23
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso23
            while
              push _subofb23
              if
                at _subofb23
                  dec
                ta
                at _subofa23
                  dec
                ta
                push _subofa23
                inc
                not
                if
                  at _subofc23
                    set 1
                  ta
                fi
              else
                at _loopso23
                  reset
                ta
              fi
            wend
            push _subofc23
            if
              at _subofb23
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry2
            #(begin macro)subof()
            sbm _subofb24
            sbm _subofa24 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc24
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso24
            while
              push _subofb24
              if
                at _subofb24
                  dec
                ta
                at _subofa24
                  dec
                ta
                push _subofa24
                inc
                not
                if
                  at _subofc24
                    set 1
                  ta
                fi
              else
                at _loopso24
                  reset
                ta
              fi
            wend
            push _subofc24
            if
              at _subofb24
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX1_5
            add
            pop     _addvvvXCarry2
            pop     _mulFPresultX1_c
          else # absB >= absA :
            push    _aequb2
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _mulFPresultX1_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _mulvvvXabsNameA1_s
              pop     _mulFPresultX1_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry2
              push    _mulvvvXabsNameA1_0
              push    _addvvXnameB1_0
              #(begin macro)subof()
              sbm _subofb25
              sbm _subofa25 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc25
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso25
              while
                push _subofb25
                if
                  at _subofb25
                    dec
                  ta
                  at _subofa25
                    dec
                  ta
                  push _subofa25
                  inc
                  not
                  if
                    at _subofc25
                      set 1
                    ta
                  fi
                else
                  at _loopso25
                    reset
                  ta
                fi
              wend
              push _subofc25
              if
                at _subofb25
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb26
              sbm _subofa26 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc26
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso26
              while
                push _subofb26
                if
                  at _subofb26
                    dec
                  ta
                  at _subofa26
                    dec
                  ta
                  push _subofa26
                  inc
                  not
                  if
                    at _subofc26
                      set 1
                    ta
                  fi
                else
                  at _loopso26
                    reset
                  ta
                fi
              wend
              push _subofc26
              if
                at _subofb26
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_0
              add
              pop     _addvvvXCarry2
              push    _mulvvvXabsNameA1_1
              push    _addvvXnameB1_1
              #(begin macro)subof()
              sbm _subofb27
              sbm _subofa27 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc27
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso27
              while
                push _subofb27
                if
                  at _subofb27
                    dec
                  ta
                  at _subofa27
                    dec
                  ta
                  push _subofa27
                  inc
                  not
                  if
                    at _subofc27
                      set 1
                    ta
                  fi
                else
                  at _loopso27
                    reset
                  ta
                fi
              wend
              push _subofc27
              if
                at _subofb27
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb28
              sbm _subofa28 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc28
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso28
              while
                push _subofb28
                if
                  at _subofb28
                    dec
                  ta
                  at _subofa28
                    dec
                  ta
                  push _subofa28
                  inc
                  not
                  if
                    at _subofc28
                      set 1
                    ta
                  fi
                else
                  at _loopso28
                    reset
                  ta
                fi
              wend
              push _subofc28
              if
                at _subofb28
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_1
              add
              pop     _addvvvXCarry2
              push    _mulvvvXabsNameA1_2
              push    _addvvXnameB1_2
              #(begin macro)subof()
              sbm _subofb29
              sbm _subofa29 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc29
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso29
              while
                push _subofb29
                if
                  at _subofb29
                    dec
                  ta
                  at _subofa29
                    dec
                  ta
                  push _subofa29
                  inc
                  not
                  if
                    at _subofc29
                      set 1
                    ta
                  fi
                else
                  at _loopso29
                    reset
                  ta
                fi
              wend
              push _subofc29
              if
                at _subofb29
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb30
              sbm _subofa30 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc30
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso30
              while
                push _subofb30
                if
                  at _subofb30
                    dec
                  ta
                  at _subofa30
                    dec
                  ta
                  push _subofa30
                  inc
                  not
                  if
                    at _subofc30
                      set 1
                    ta
                  fi
                else
                  at _loopso30
                    reset
                  ta
                fi
              wend
              push _subofc30
              if
                at _subofb30
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_2
              add
              pop     _addvvvXCarry2
              push    _mulvvvXabsNameA1_3
              push    _addvvXnameB1_3
              #(begin macro)subof()
              sbm _subofb31
              sbm _subofa31 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc31
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso31
              while
                push _subofb31
                if
                  at _subofb31
                    dec
                  ta
                  at _subofa31
                    dec
                  ta
                  push _subofa31
                  inc
                  not
                  if
                    at _subofc31
                      set 1
                    ta
                  fi
                else
                  at _loopso31
                    reset
                  ta
                fi
              wend
              push _subofc31
              if
                at _subofb31
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb32
              sbm _subofa32 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc32
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso32
              while
                push _subofb32
                if
                  at _subofb32
                    dec
                  ta
                  at _subofa32
                    dec
                  ta
                  push _subofa32
                  inc
                  not
                  if
                    at _subofc32
                      set 1
                    ta
                  fi
                else
                  at _loopso32
                    reset
                  ta
                fi
              wend
              push _subofc32
              if
                at _subofb32
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_3
              add
              pop     _addvvvXCarry2
              push    _mulvvvXabsNameA1_4
              push    _addvvXnameB1_4
              #(begin macro)subof()
              sbm _subofb33
              sbm _subofa33 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc33
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso33
              while
                push _subofb33
                if
                  at _subofb33
                    dec
                  ta
                  at _subofa33
                    dec
                  ta
                  push _subofa33
                  inc
                  not
                  if
                    at _subofc33
                      set 1
                    ta
                  fi
                else
                  at _loopso33
                    reset
                  ta
                fi
              wend
              push _subofc33
              if
                at _subofb33
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb34
              sbm _subofa34 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc34
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso34
              while
                push _subofb34
                if
                  at _subofb34
                    dec
                  ta
                  at _subofa34
                    dec
                  ta
                  push _subofa34
                  inc
                  not
                  if
                    at _subofc34
                      set 1
                    ta
                  fi
                else
                  at _loopso34
                    reset
                  ta
                fi
              wend
              push _subofc34
              if
                at _subofb34
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_4
              add
              pop     _addvvvXCarry2
              push    _mulvvvXabsNameA1_5
              push    _addvvXnameB1_5
              #(begin macro)subof()
              sbm _subofb35
              sbm _subofa35 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc35
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso35
              while
                push _subofb35
                if
                  at _subofb35
                    dec
                  ta
                  at _subofa35
                    dec
                  ta
                  push _subofa35
                  inc
                  not
                  if
                    at _subofc35
                      set 1
                    ta
                  fi
                else
                  at _loopso35
                    reset
                  ta
                fi
              wend
              push _subofc35
              if
                at _subofb35
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry2
              #(begin macro)subof()
              sbm _subofb36
              sbm _subofa36 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc36
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso36
              while
                push _subofb36
                if
                  at _subofb36
                    dec
                  ta
                  at _subofa36
                    dec
                  ta
                  push _subofa36
                  inc
                  not
                  if
                    at _subofc36
                      set 1
                    ta
                  fi
                else
                  at _loopso36
                    reset
                  ta
                fi
              wend
              push _subofc36
              if
                at _subofb36
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX1_5
              add
              pop     _addvvvXCarry2
              pop     _mulFPresultX1_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)if_equal(name +"_s",1)  # negative number
        push _mulvvvXabsNameB1_s
        push 1
        equal
        if
          #(end macro)if_equal(name +"_s",1)  # negative number
          #(begin macro)at_inc(name + "_" + xx)
          #(begin macro)at_1("inc",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB1_0
            inc 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("inc",a)
          #(end macro)at_inc(name + "_" + xx)
          #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
          push _mulvvvXabsNameB1_0
          push 0
          equal
          if
            #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            #(begin macro)at_inc(name + "_" + xx)
            #(begin macro)at_1("inc",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB1_1
              inc 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("inc",a)
            #(end macro)at_inc(name + "_" + xx)
            #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            push _mulvvvXabsNameB1_1
            push 0
            equal
            if
              #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB1_2
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB1_2
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB1_3
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB1_3
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB1_4
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB1_4
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB1_5
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB1_5
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)setcvX(X, name) ## set carry (overflow)
                      #(begin macro)at_set(name+"_c",1)
                      #(begin macro)at_2("set",a,b)
                      at _mulvvvXabsNameB1_c
                        set 1
                      ta
                      #(end macro)at_2("set",a,b)
                      #(end macro)at_set(name+"_c",1)
                      #(end macro)setcvX(X, name) ## set carry (overflow)
                    fi
                  fi
                fi
              fi
            fi
          fi
        else    # positive number
          #(begin macro)at_dec(name + "_" + xx)
          #(begin macro)at_1("dec",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB1_0
            dec 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("dec",a)
          #(end macro)at_dec(name + "_" + xx)
          #(begin macro)if_equal(name +"_" + xx,255) # reduced
          push _mulvvvXabsNameB1_0
          push 255
          equal
          if
            #(end macro)if_equal(name +"_" + xx,255) # reduced
            #(begin macro)at_dec(name + "_" + xx)
            #(begin macro)at_1("dec",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB1_1
              dec 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("dec",a)
            #(end macro)at_dec(name + "_" + xx)
            #(begin macro)if_equal(name +"_" + xx,255) # reduced
            push _mulvvvXabsNameB1_1
            push 255
            equal
            if
              #(end macro)if_equal(name +"_" + xx,255) # reduced
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB1_2
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB1_2
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB1_3
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB1_3
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB1_4
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB1_4
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB1_5
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB1_5
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)setvX(X,name,-1)
                      at _mulvvvXabsNameB1_0
                        #(begin macro)setX(X,immValue)
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        reset
                        bf  >
                        set 1
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    1
                        #(end macro)setX(X,immValue)
                      ta
                      #(end macro)setvX(X,name,-1)
                    fi
                  fi
                fi
              fi
            fi
          fi
        fi
        #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      else
        #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
        #(begin macro)at_1("reset",a)
        #(begin macro)at_2(ope,a,"")
        at _mulvvvX_loop1
          reset 
        ta
        #(end macro)at_2(ope,a,"")
        #(end macro)at_1("reset",a)
        #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
      fi
    wend
    # resolve sign
    push _mulvvvXsA1
    push _mulvvvXsB1
    diff    # if sign(nameA) <> sign(nameB) then name is negative
    if
      #(begin macro)at_set(name +"_s",1)
      #(begin macro)at_2("set",a,b)
      at _mulFPresultX1_s
        set 1
      ta
      #(end macro)at_2("set",a,b)
      #(end macro)at_set(name +"_s",1)
    fi
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    
    #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    push    _mulFPresultX1_c
    push    _mulFPresultX1_s
    push    _mulFPresultX1_5
    push    _mulFPresultX1_4
    push    _mulFPresultX1_3
    push    _mulFPresultX1_2
    push    _mulFPresultX1_1
    push    _mulFPresultX1_0
    #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    #(begin macro)castFP(I+I,P+P, I,P)
    #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
    var _castFPinstack1_0    # 0 byte of _castFPinstack1
    var _castFPinstack1_1    # 1 byte of _castFPinstack1
    var _castFPinstack1_2    # 2 byte of _castFPinstack1
    var _castFPinstack1_3    # 3 byte of _castFPinstack1
    var _castFPinstack1_4    # 4 byte of _castFPinstack1
    var _castFPinstack1_5    # 5 byte of _castFPinstack1
    var _castFPinstack1_s    # Sign of _castFPinstack1
    var _castFPinstack1_c    # carry of _castFPinstack1
    #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
    #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
    var _castFPoutstack1_0    # 0 byte of _castFPoutstack1
    var _castFPoutstack1_1    # 1 byte of _castFPoutstack1
    var _castFPoutstack1_2    # 2 byte of _castFPoutstack1
    var _castFPoutstack1_s    # Sign of _castFPoutstack1
    var _castFPoutstack1_c    # carry of _castFPoutstack1
    #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
    
    #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
    pop     _castFPinstack1_0
    pop     _castFPinstack1_1
    pop     _castFPinstack1_2
    pop     _castFPinstack1_3
    pop     _castFPinstack1_4
    pop     _castFPinstack1_5
    pop     _castFPinstack1_s
    pop     _castFPinstack1_c
    #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
    # reset outstack
    #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    at _castFPoutstack1_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    # sign
    push _castFPinstack1_s
    pop _castFPoutstack1_s
    # integer part
    push _castFPinstack1_4
    pop _castFPoutstack1_2
    # fract part
    push _castFPinstack1_3
    pop _castFPoutstack1_1
    push _castFPinstack1_2
    pop _castFPoutstack1_0
    #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    push    _castFPoutstack1_c
    push    _castFPoutstack1_s
    push    _castFPoutstack1_2
    push    _castFPoutstack1_1
    push    _castFPoutstack1_0
    #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    #(end macro)castFP(I+I,P+P, I,P)
    #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
    pop     _mulFPnameA1_0
    pop     _mulFPnameA1_1
    pop     _mulFPnameA1_2
    pop     _mulFPnameA1_s
    pop     _mulFPnameA1_c
    #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(IP) # drop nameB
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(IP) # drop nameB
    #(end macro)mulFP(FP_I,FP_P)
    #(begin macro)pushFP(FP_I,FP_P,oneOnHalfZoomW)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack3_0 - 0
    sbm _setFPinstack3_1 - 1
    sbm _setFPinstack3_2 - 2
    sbm _setFPinstack3_s - 3
    sbm _setFPinstack3_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack3_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    160
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,oneOnHalfZoomW)
    #(begin macro)mulFP(FP_I,FP_P)
    #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameB2_0 - 0
    sbm _mulFPnameB2_1 - 1
    sbm _mulFPnameB2_2 - 2
    sbm _mulFPnameB2_s - 3
    sbm _mulFPnameB2_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameA2_0 - 5
    sbm _mulFPnameA2_1 - 6
    sbm _mulFPnameA2_2 - 7
    sbm _mulFPnameA2_s - 8
    sbm _mulFPnameA2_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameAX2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameAX2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameBX2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameBX2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPresultX2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPresultX2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    
    # upcast nameA to nameAX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    push    _mulFPnameA2_c
    push    _mulFPnameA2_s
    push    _mulFPnameA2_2
    push    _mulFPnameA2_1
    push    _mulFPnameA2_0
    #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput3_0 - 0
    sbm _castXInput3_1 - 1
    sbm _castXInput3_2 - 2
    sbm _castXInput3_s - 3
    sbm _castXInput3_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput3_0    # 0 byte of _castXoutput3
    var _castXoutput3_1    # 1 byte of _castXoutput3
    var _castXoutput3_2    # 2 byte of _castXoutput3
    var _castXoutput3_3    # 3 byte of _castXoutput3
    var _castXoutput3_4    # 4 byte of _castXoutput3
    var _castXoutput3_5    # 5 byte of _castXoutput3
    var _castXoutput3_s    # Sign of _castXoutput3
    var _castXoutput3_c    # carry of _castXoutput3
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput3_c
    push    _castXInput3_s
    push    _castXInput3_2
    push    _castXInput3_1
    push    _castXInput3_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori3_0
    pop     _castXori3_1
    pop     _castXori3_2
    pop     _castXori3_s
    pop     _castXori3_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori3_s
    pop     _castXdest3_s  # keep sign
    push    _castXori3_0
    pop     _castXdest3_0
    push    _castXori3_1
    pop     _castXdest3_1
    push    _castXori3_2
    pop     _castXdest3_2
    push    0
    pop     _castXdest3_3
    push    0
    pop     _castXdest3_4
    push    0
    pop     _castXdest3_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest3_c
    push    _castXdest3_s
    push    _castXdest3_5
    push    _castXdest3_4
    push    _castXdest3_3
    push    _castXdest3_2
    push    _castXdest3_1
    push    _castXdest3_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput3_0
    pop     _castXoutput3_1
    pop     _castXoutput3_2
    pop     _castXoutput3_3
    pop     _castXoutput3_4
    pop     _castXoutput3_5
    pop     _castXoutput3_s
    pop     _castXoutput3_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput3_c
    push    _castXoutput3_s
    push    _castXoutput3_5
    push    _castXoutput3_4
    push    _castXoutput3_3
    push    _castXoutput3_2
    push    _castXoutput3_1
    push    _castXoutput3_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    pop     _mulFPnameAX2_0
    pop     _mulFPnameAX2_1
    pop     _mulFPnameAX2_2
    pop     _mulFPnameAX2_3
    pop     _mulFPnameAX2_4
    pop     _mulFPnameAX2_5
    pop     _mulFPnameAX2_s
    pop     _mulFPnameAX2_c
    #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    
    # upcast nameB to nameBX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    push    _mulFPnameB2_c
    push    _mulFPnameB2_s
    push    _mulFPnameB2_2
    push    _mulFPnameB2_1
    push    _mulFPnameB2_0
    #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput4_0 - 0
    sbm _castXInput4_1 - 1
    sbm _castXInput4_2 - 2
    sbm _castXInput4_s - 3
    sbm _castXInput4_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput4_0    # 0 byte of _castXoutput4
    var _castXoutput4_1    # 1 byte of _castXoutput4
    var _castXoutput4_2    # 2 byte of _castXoutput4
    var _castXoutput4_3    # 3 byte of _castXoutput4
    var _castXoutput4_4    # 4 byte of _castXoutput4
    var _castXoutput4_5    # 5 byte of _castXoutput4
    var _castXoutput4_s    # Sign of _castXoutput4
    var _castXoutput4_c    # carry of _castXoutput4
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori4_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori4_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori4_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori4_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori4_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest4_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest4_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest4_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput4_c
    push    _castXInput4_s
    push    _castXInput4_2
    push    _castXInput4_1
    push    _castXInput4_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori4_0
    pop     _castXori4_1
    pop     _castXori4_2
    pop     _castXori4_s
    pop     _castXori4_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori4_s
    pop     _castXdest4_s  # keep sign
    push    _castXori4_0
    pop     _castXdest4_0
    push    _castXori4_1
    pop     _castXdest4_1
    push    _castXori4_2
    pop     _castXdest4_2
    push    0
    pop     _castXdest4_3
    push    0
    pop     _castXdest4_4
    push    0
    pop     _castXdest4_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest4_c
    push    _castXdest4_s
    push    _castXdest4_5
    push    _castXdest4_4
    push    _castXdest4_3
    push    _castXdest4_2
    push    _castXdest4_1
    push    _castXdest4_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput4_0
    pop     _castXoutput4_1
    pop     _castXoutput4_2
    pop     _castXoutput4_3
    pop     _castXoutput4_4
    pop     _castXoutput4_5
    pop     _castXoutput4_s
    pop     _castXoutput4_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput4_c
    push    _castXoutput4_s
    push    _castXoutput4_5
    push    _castXoutput4_4
    push    _castXoutput4_3
    push    _castXoutput4_2
    push    _castXoutput4_1
    push    _castXoutput4_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    pop     _mulFPnameBX2_0
    pop     _mulFPnameBX2_1
    pop     _mulFPnameBX2_2
    pop     _mulFPnameBX2_3
    pop     _mulFPnameBX2_4
    pop     _mulFPnameBX2_5
    pop     _mulFPnameBX2_s
    pop     _mulFPnameBX2_c
    #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    
    #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameA2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameA2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)pushvX(X,nameA)
    push    _mulFPnameAX2_c
    push    _mulFPnameAX2_s
    push    _mulFPnameAX2_5
    push    _mulFPnameAX2_4
    push    _mulFPnameAX2_3
    push    _mulFPnameAX2_2
    push    _mulFPnameAX2_1
    push    _mulFPnameAX2_0
    #(end macro)pushvX(X,nameA)
    #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop     _mulvvvXabsNameA2_0
    pop     _mulvvvXabsNameA2_1
    pop     _mulvvvXabsNameA2_2
    pop     _mulvvvXabsNameA2_3
    pop     _mulvvvXabsNameA2_4
    pop     _mulvvvXabsNameA2_5
    pop     _mulvvvXabsNameA2_s
    pop     _mulvvvXabsNameA2_c
    #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsA2
    #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    push    _mulvvvXabsNameA2_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop _mulvvvXsA2
    #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    push    0
    pop     _mulvvvXabsNameA2_s
    #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    
    #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameB2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameB2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)pushvX(X,nameB)
    push    _mulFPnameBX2_c
    push    _mulFPnameBX2_s
    push    _mulFPnameBX2_5
    push    _mulFPnameBX2_4
    push    _mulFPnameBX2_3
    push    _mulFPnameBX2_2
    push    _mulFPnameBX2_1
    push    _mulFPnameBX2_0
    #(end macro)pushvX(X,nameB)
    #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop     _mulvvvXabsNameB2_0
    pop     _mulvvvXabsNameB2_1
    pop     _mulvvvXabsNameB2_2
    pop     _mulvvvXabsNameB2_3
    pop     _mulvvvXabsNameB2_4
    pop     _mulvvvXabsNameB2_5
    pop     _mulvvvXabsNameB2_s
    pop     _mulvvvXabsNameB2_c
    #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsB2
    #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    push    _mulvvvXabsNameB2_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop _mulvvvXsB2
    #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    push    0
    pop     _mulvvvXabsNameB2_s
    #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    
    #(begin macro)resetvX(X,name)
    at _mulFPresultX2_0
      #(begin macro)resetX(X)
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf [-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      #(end macro)resetX(X)
    ta
    #(end macro)resetvX(X,name)
    
    push    1
    sbm _mulvvvX_loop2
    while
      #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      push _mulvvvXabsNameB2_0
      bool
      push _mulvvvXabsNameB2_1
      bool
      push _mulvvvXabsNameB2_2
      bool
      push _mulvvvXabsNameB2_3
      bool
      push _mulvvvXabsNameB2_4
      bool
      push _mulvvvXabsNameB2_5
      bool
      or
      or
      or
      or
      or
      #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      if  # absNameB is not zero
        #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addvvXnameB2_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addvvXnameB2_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB2_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)pushvX(X,name)
        push    _mulFPresultX2_c
        push    _mulFPresultX2_s
        push    _mulFPresultX2_5
        push    _mulFPresultX2_4
        push    _mulFPresultX2_3
        push    _mulFPresultX2_2
        push    _mulFPresultX2_1
        push    _mulFPresultX2_0
        #(end macro)pushvX(X,name)
        #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
        pop     _addvvXnameB2_0
        pop     _addvvXnameB2_1
        pop     _addvvXnameB2_2
        pop     _addvvXnameB2_3
        pop     _addvvXnameB2_4
        pop     _addvvXnameB2_5
        pop     _addvvXnameB2_s
        pop     _addvvXnameB2_c
        #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        push    _addvvXnameB2_s
        push    _mulvvvXabsNameA2_s
        or
        not
        push    _addvvXnameB2_s
        push    _mulvvvXabsNameA2_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addvvXnameB2_s
          pop     _mulFPresultX2_s    # name has same sign of nameA and nameB
          push    0
          push    _addvvXnameB2_0
          #(begin macro)addof()
          sbm _addofb28
          sbm _addofa28 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc28
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao28
          while
            push _addofa28
            if
              at _addofa28
                dec
              ta
              at _addofb28
                inc
              ta
              push _addofb28
              not
              if
                at _addofc28
                  set 1
                ta
              fi
            else
              at _loopao28
                reset
              ta
            fi
          wend
          push _addofc28
          if
            at _addofa28
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_0
          push    _mulvvvXabsNameA2_0
          #(begin macro)addof()
          sbm _addofb29
          sbm _addofa29 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc29
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao29
          while
            push _addofa29
            if
              at _addofa29
                dec
              ta
              at _addofb29
                inc
              ta
              push _addofb29
              not
              if
                at _addofc29
                  set 1
                ta
              fi
            else
              at _loopao29
                reset
              ta
            fi
          wend
          push _addofc29
          if
            at _addofa29
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_0
          #(begin macro)addof()
          sbm _addofb30
          sbm _addofa30 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc30
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao30
          while
            push _addofa30
            if
              at _addofa30
                dec
              ta
              at _addofb30
                inc
              ta
              push _addofb30
              not
              if
                at _addofc30
                  set 1
                ta
              fi
            else
              at _loopao30
                reset
              ta
            fi
          wend
          push _addofc30
          if
            at _addofa30
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_0
          add
          push    _addvvXnameB2_1
          #(begin macro)addof()
          sbm _addofb31
          sbm _addofa31 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc31
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao31
          while
            push _addofa31
            if
              at _addofa31
                dec
              ta
              at _addofb31
                inc
              ta
              push _addofb31
              not
              if
                at _addofc31
                  set 1
                ta
              fi
            else
              at _loopao31
                reset
              ta
            fi
          wend
          push _addofc31
          if
            at _addofa31
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_1
          push    _mulvvvXabsNameA2_1
          #(begin macro)addof()
          sbm _addofb32
          sbm _addofa32 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc32
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao32
          while
            push _addofa32
            if
              at _addofa32
                dec
              ta
              at _addofb32
                inc
              ta
              push _addofb32
              not
              if
                at _addofc32
                  set 1
                ta
              fi
            else
              at _loopao32
                reset
              ta
            fi
          wend
          push _addofc32
          if
            at _addofa32
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_1
          #(begin macro)addof()
          sbm _addofb33
          sbm _addofa33 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc33
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao33
          while
            push _addofa33
            if
              at _addofa33
                dec
              ta
              at _addofb33
                inc
              ta
              push _addofb33
              not
              if
                at _addofc33
                  set 1
                ta
              fi
            else
              at _loopao33
                reset
              ta
            fi
          wend
          push _addofc33
          if
            at _addofa33
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_1
          add
          push    _addvvXnameB2_2
          #(begin macro)addof()
          sbm _addofb34
          sbm _addofa34 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc34
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao34
          while
            push _addofa34
            if
              at _addofa34
                dec
              ta
              at _addofb34
                inc
              ta
              push _addofb34
              not
              if
                at _addofc34
                  set 1
                ta
              fi
            else
              at _loopao34
                reset
              ta
            fi
          wend
          push _addofc34
          if
            at _addofa34
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_2
          push    _mulvvvXabsNameA2_2
          #(begin macro)addof()
          sbm _addofb35
          sbm _addofa35 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc35
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao35
          while
            push _addofa35
            if
              at _addofa35
                dec
              ta
              at _addofb35
                inc
              ta
              push _addofb35
              not
              if
                at _addofc35
                  set 1
                ta
              fi
            else
              at _loopao35
                reset
              ta
            fi
          wend
          push _addofc35
          if
            at _addofa35
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_2
          #(begin macro)addof()
          sbm _addofb36
          sbm _addofa36 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc36
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao36
          while
            push _addofa36
            if
              at _addofa36
                dec
              ta
              at _addofb36
                inc
              ta
              push _addofb36
              not
              if
                at _addofc36
                  set 1
                ta
              fi
            else
              at _loopao36
                reset
              ta
            fi
          wend
          push _addofc36
          if
            at _addofa36
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_2
          add
          push    _addvvXnameB2_3
          #(begin macro)addof()
          sbm _addofb37
          sbm _addofa37 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc37
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao37
          while
            push _addofa37
            if
              at _addofa37
                dec
              ta
              at _addofb37
                inc
              ta
              push _addofb37
              not
              if
                at _addofc37
                  set 1
                ta
              fi
            else
              at _loopao37
                reset
              ta
            fi
          wend
          push _addofc37
          if
            at _addofa37
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_3
          push    _mulvvvXabsNameA2_3
          #(begin macro)addof()
          sbm _addofb38
          sbm _addofa38 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc38
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao38
          while
            push _addofa38
            if
              at _addofa38
                dec
              ta
              at _addofb38
                inc
              ta
              push _addofb38
              not
              if
                at _addofc38
                  set 1
                ta
              fi
            else
              at _loopao38
                reset
              ta
            fi
          wend
          push _addofc38
          if
            at _addofa38
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_3
          #(begin macro)addof()
          sbm _addofb39
          sbm _addofa39 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc39
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao39
          while
            push _addofa39
            if
              at _addofa39
                dec
              ta
              at _addofb39
                inc
              ta
              push _addofb39
              not
              if
                at _addofc39
                  set 1
                ta
              fi
            else
              at _loopao39
                reset
              ta
            fi
          wend
          push _addofc39
          if
            at _addofa39
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_3
          add
          push    _addvvXnameB2_4
          #(begin macro)addof()
          sbm _addofb40
          sbm _addofa40 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc40
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao40
          while
            push _addofa40
            if
              at _addofa40
                dec
              ta
              at _addofb40
                inc
              ta
              push _addofb40
              not
              if
                at _addofc40
                  set 1
                ta
              fi
            else
              at _loopao40
                reset
              ta
            fi
          wend
          push _addofc40
          if
            at _addofa40
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_4
          push    _mulvvvXabsNameA2_4
          #(begin macro)addof()
          sbm _addofb41
          sbm _addofa41 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc41
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao41
          while
            push _addofa41
            if
              at _addofa41
                dec
              ta
              at _addofb41
                inc
              ta
              push _addofb41
              not
              if
                at _addofc41
                  set 1
                ta
              fi
            else
              at _loopao41
                reset
              ta
            fi
          wend
          push _addofc41
          if
            at _addofa41
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_4
          #(begin macro)addof()
          sbm _addofb42
          sbm _addofa42 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc42
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao42
          while
            push _addofa42
            if
              at _addofa42
                dec
              ta
              at _addofb42
                inc
              ta
              push _addofb42
              not
              if
                at _addofc42
                  set 1
                ta
              fi
            else
              at _loopao42
                reset
              ta
            fi
          wend
          push _addofc42
          if
            at _addofa42
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_4
          add
          push    _addvvXnameB2_5
          #(begin macro)addof()
          sbm _addofb43
          sbm _addofa43 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc43
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao43
          while
            push _addofa43
            if
              at _addofa43
                dec
              ta
              at _addofb43
                inc
              ta
              push _addofb43
              not
              if
                at _addofc43
                  set 1
                ta
              fi
            else
              at _loopao43
                reset
              ta
            fi
          wend
          push _addofc43
          if
            at _addofa43
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_5
          push    _mulvvvXabsNameA2_5
          #(begin macro)addof()
          sbm _addofb44
          sbm _addofa44 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc44
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao44
          while
            push _addofa44
            if
              at _addofa44
                dec
              ta
              at _addofb44
                inc
              ta
              push _addofb44
              not
              if
                at _addofc44
                  set 1
                ta
              fi
            else
              at _loopao44
                reset
              ta
            fi
          wend
          push _addofc44
          if
            at _addofa44
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX2_5
          #(begin macro)addof()
          sbm _addofb45
          sbm _addofa45 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc45
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao45
          while
            push _addofa45
            if
              at _addofa45
                dec
              ta
              at _addofb45
                inc
              ta
              push _addofb45
              not
              if
                at _addofc45
                  set 1
                ta
              fi
            else
              at _loopao45
                reset
              ta
            fi
          wend
          push _addofc45
          if
            at _addofa45
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX2_5
          add
          pop     _mulFPresultX2_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb3
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb3
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addvvXnameB2_5
          push    _mulvvvXabsNameA2_5
          sup
          if
            at _asupb3
              set 1
            ta
          else
            push    _addvvXnameB2_5
            push    _mulvvvXabsNameA2_5
            diff
            if
              at _asupb3
                reset
              ta
            else
              push    _addvvXnameB2_4
              push    _mulvvvXabsNameA2_4
              sup
              if
                at _asupb3
                  set 1
                ta
              else
                push    _addvvXnameB2_4
                push    _mulvvvXabsNameA2_4
                diff
                if
                  at _asupb3
                    reset
                  ta
                else
                  push    _addvvXnameB2_3
                  push    _mulvvvXabsNameA2_3
                  sup
                  if
                    at _asupb3
                      set 1
                    ta
                  else
                    push    _addvvXnameB2_3
                    push    _mulvvvXabsNameA2_3
                    diff
                    if
                      at _asupb3
                        reset
                      ta
                    else
                      push    _addvvXnameB2_2
                      push    _mulvvvXabsNameA2_2
                      sup
                      if
                        at _asupb3
                          set 1
                        ta
                      else
                        push    _addvvXnameB2_2
                        push    _mulvvvXabsNameA2_2
                        diff
                        if
                          at _asupb3
                            reset
                          ta
                        else
                          push    _addvvXnameB2_1
                          push    _mulvvvXabsNameA2_1
                          sup
                          if
                            at _asupb3
                              set 1
                            ta
                          else
                            push    _addvvXnameB2_1
                            push    _mulvvvXabsNameA2_1
                            diff
                            if
                              at _asupb3
                                reset
                              ta
                            else
                              push    _addvvXnameB2_0
                              push    _mulvvvXabsNameA2_0
                              sup
                              if
                                at _asupb3
                                  set 1
                                ta
                              else
                                push    _addvvXnameB2_0
                                push    _mulvvvXabsNameA2_0
                                diff
                                if
                                  at _asupb3
                                    reset
                                  ta
                                else
                                  at _aequb3
                                    set 1
                                  ta
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb3
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addvvXnameB2_s
            pop     _mulFPresultX2_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry3
            push    _addvvXnameB2_0
            push    _mulvvvXabsNameA2_0
            #(begin macro)subof()
            sbm _subofb37
            sbm _subofa37 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc37
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso37
            while
              push _subofb37
              if
                at _subofb37
                  dec
                ta
                at _subofa37
                  dec
                ta
                push _subofa37
                inc
                not
                if
                  at _subofc37
                    set 1
                  ta
                fi
              else
                at _loopso37
                  reset
                ta
              fi
            wend
            push _subofc37
            if
              at _subofb37
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb38
            sbm _subofa38 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc38
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso38
            while
              push _subofb38
              if
                at _subofb38
                  dec
                ta
                at _subofa38
                  dec
                ta
                push _subofa38
                inc
                not
                if
                  at _subofc38
                    set 1
                  ta
                fi
              else
                at _loopso38
                  reset
                ta
              fi
            wend
            push _subofc38
            if
              at _subofb38
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_0
            add
            pop     _addvvvXCarry3
            push    _addvvXnameB2_1
            push    _mulvvvXabsNameA2_1
            #(begin macro)subof()
            sbm _subofb39
            sbm _subofa39 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc39
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso39
            while
              push _subofb39
              if
                at _subofb39
                  dec
                ta
                at _subofa39
                  dec
                ta
                push _subofa39
                inc
                not
                if
                  at _subofc39
                    set 1
                  ta
                fi
              else
                at _loopso39
                  reset
                ta
              fi
            wend
            push _subofc39
            if
              at _subofb39
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb40
            sbm _subofa40 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc40
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso40
            while
              push _subofb40
              if
                at _subofb40
                  dec
                ta
                at _subofa40
                  dec
                ta
                push _subofa40
                inc
                not
                if
                  at _subofc40
                    set 1
                  ta
                fi
              else
                at _loopso40
                  reset
                ta
              fi
            wend
            push _subofc40
            if
              at _subofb40
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_1
            add
            pop     _addvvvXCarry3
            push    _addvvXnameB2_2
            push    _mulvvvXabsNameA2_2
            #(begin macro)subof()
            sbm _subofb41
            sbm _subofa41 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc41
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso41
            while
              push _subofb41
              if
                at _subofb41
                  dec
                ta
                at _subofa41
                  dec
                ta
                push _subofa41
                inc
                not
                if
                  at _subofc41
                    set 1
                  ta
                fi
              else
                at _loopso41
                  reset
                ta
              fi
            wend
            push _subofc41
            if
              at _subofb41
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb42
            sbm _subofa42 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc42
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso42
            while
              push _subofb42
              if
                at _subofb42
                  dec
                ta
                at _subofa42
                  dec
                ta
                push _subofa42
                inc
                not
                if
                  at _subofc42
                    set 1
                  ta
                fi
              else
                at _loopso42
                  reset
                ta
              fi
            wend
            push _subofc42
            if
              at _subofb42
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_2
            add
            pop     _addvvvXCarry3
            push    _addvvXnameB2_3
            push    _mulvvvXabsNameA2_3
            #(begin macro)subof()
            sbm _subofb43
            sbm _subofa43 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc43
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso43
            while
              push _subofb43
              if
                at _subofb43
                  dec
                ta
                at _subofa43
                  dec
                ta
                push _subofa43
                inc
                not
                if
                  at _subofc43
                    set 1
                  ta
                fi
              else
                at _loopso43
                  reset
                ta
              fi
            wend
            push _subofc43
            if
              at _subofb43
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb44
            sbm _subofa44 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc44
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso44
            while
              push _subofb44
              if
                at _subofb44
                  dec
                ta
                at _subofa44
                  dec
                ta
                push _subofa44
                inc
                not
                if
                  at _subofc44
                    set 1
                  ta
                fi
              else
                at _loopso44
                  reset
                ta
              fi
            wend
            push _subofc44
            if
              at _subofb44
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_3
            add
            pop     _addvvvXCarry3
            push    _addvvXnameB2_4
            push    _mulvvvXabsNameA2_4
            #(begin macro)subof()
            sbm _subofb45
            sbm _subofa45 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc45
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso45
            while
              push _subofb45
              if
                at _subofb45
                  dec
                ta
                at _subofa45
                  dec
                ta
                push _subofa45
                inc
                not
                if
                  at _subofc45
                    set 1
                  ta
                fi
              else
                at _loopso45
                  reset
                ta
              fi
            wend
            push _subofc45
            if
              at _subofb45
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb46
            sbm _subofa46 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc46
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso46
            while
              push _subofb46
              if
                at _subofb46
                  dec
                ta
                at _subofa46
                  dec
                ta
                push _subofa46
                inc
                not
                if
                  at _subofc46
                    set 1
                  ta
                fi
              else
                at _loopso46
                  reset
                ta
              fi
            wend
            push _subofc46
            if
              at _subofb46
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_4
            add
            pop     _addvvvXCarry3
            push    _addvvXnameB2_5
            push    _mulvvvXabsNameA2_5
            #(begin macro)subof()
            sbm _subofb47
            sbm _subofa47 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc47
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso47
            while
              push _subofb47
              if
                at _subofb47
                  dec
                ta
                at _subofa47
                  dec
                ta
                push _subofa47
                inc
                not
                if
                  at _subofc47
                    set 1
                  ta
                fi
              else
                at _loopso47
                  reset
                ta
              fi
            wend
            push _subofc47
            if
              at _subofb47
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry3
            #(begin macro)subof()
            sbm _subofb48
            sbm _subofa48 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc48
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso48
            while
              push _subofb48
              if
                at _subofb48
                  dec
                ta
                at _subofa48
                  dec
                ta
                push _subofa48
                inc
                not
                if
                  at _subofc48
                    set 1
                  ta
                fi
              else
                at _loopso48
                  reset
                ta
              fi
            wend
            push _subofc48
            if
              at _subofb48
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX2_5
            add
            pop     _addvvvXCarry3
            pop     _mulFPresultX2_c
          else # absB >= absA :
            push    _aequb3
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _mulFPresultX2_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _mulvvvXabsNameA2_s
              pop     _mulFPresultX2_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry3
              push    _mulvvvXabsNameA2_0
              push    _addvvXnameB2_0
              #(begin macro)subof()
              sbm _subofb49
              sbm _subofa49 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc49
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso49
              while
                push _subofb49
                if
                  at _subofb49
                    dec
                  ta
                  at _subofa49
                    dec
                  ta
                  push _subofa49
                  inc
                  not
                  if
                    at _subofc49
                      set 1
                    ta
                  fi
                else
                  at _loopso49
                    reset
                  ta
                fi
              wend
              push _subofc49
              if
                at _subofb49
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb50
              sbm _subofa50 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc50
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso50
              while
                push _subofb50
                if
                  at _subofb50
                    dec
                  ta
                  at _subofa50
                    dec
                  ta
                  push _subofa50
                  inc
                  not
                  if
                    at _subofc50
                      set 1
                    ta
                  fi
                else
                  at _loopso50
                    reset
                  ta
                fi
              wend
              push _subofc50
              if
                at _subofb50
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_0
              add
              pop     _addvvvXCarry3
              push    _mulvvvXabsNameA2_1
              push    _addvvXnameB2_1
              #(begin macro)subof()
              sbm _subofb51
              sbm _subofa51 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc51
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso51
              while
                push _subofb51
                if
                  at _subofb51
                    dec
                  ta
                  at _subofa51
                    dec
                  ta
                  push _subofa51
                  inc
                  not
                  if
                    at _subofc51
                      set 1
                    ta
                  fi
                else
                  at _loopso51
                    reset
                  ta
                fi
              wend
              push _subofc51
              if
                at _subofb51
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb52
              sbm _subofa52 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc52
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso52
              while
                push _subofb52
                if
                  at _subofb52
                    dec
                  ta
                  at _subofa52
                    dec
                  ta
                  push _subofa52
                  inc
                  not
                  if
                    at _subofc52
                      set 1
                    ta
                  fi
                else
                  at _loopso52
                    reset
                  ta
                fi
              wend
              push _subofc52
              if
                at _subofb52
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_1
              add
              pop     _addvvvXCarry3
              push    _mulvvvXabsNameA2_2
              push    _addvvXnameB2_2
              #(begin macro)subof()
              sbm _subofb53
              sbm _subofa53 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc53
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso53
              while
                push _subofb53
                if
                  at _subofb53
                    dec
                  ta
                  at _subofa53
                    dec
                  ta
                  push _subofa53
                  inc
                  not
                  if
                    at _subofc53
                      set 1
                    ta
                  fi
                else
                  at _loopso53
                    reset
                  ta
                fi
              wend
              push _subofc53
              if
                at _subofb53
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb54
              sbm _subofa54 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc54
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso54
              while
                push _subofb54
                if
                  at _subofb54
                    dec
                  ta
                  at _subofa54
                    dec
                  ta
                  push _subofa54
                  inc
                  not
                  if
                    at _subofc54
                      set 1
                    ta
                  fi
                else
                  at _loopso54
                    reset
                  ta
                fi
              wend
              push _subofc54
              if
                at _subofb54
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_2
              add
              pop     _addvvvXCarry3
              push    _mulvvvXabsNameA2_3
              push    _addvvXnameB2_3
              #(begin macro)subof()
              sbm _subofb55
              sbm _subofa55 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc55
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso55
              while
                push _subofb55
                if
                  at _subofb55
                    dec
                  ta
                  at _subofa55
                    dec
                  ta
                  push _subofa55
                  inc
                  not
                  if
                    at _subofc55
                      set 1
                    ta
                  fi
                else
                  at _loopso55
                    reset
                  ta
                fi
              wend
              push _subofc55
              if
                at _subofb55
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb56
              sbm _subofa56 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc56
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso56
              while
                push _subofb56
                if
                  at _subofb56
                    dec
                  ta
                  at _subofa56
                    dec
                  ta
                  push _subofa56
                  inc
                  not
                  if
                    at _subofc56
                      set 1
                    ta
                  fi
                else
                  at _loopso56
                    reset
                  ta
                fi
              wend
              push _subofc56
              if
                at _subofb56
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_3
              add
              pop     _addvvvXCarry3
              push    _mulvvvXabsNameA2_4
              push    _addvvXnameB2_4
              #(begin macro)subof()
              sbm _subofb57
              sbm _subofa57 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc57
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso57
              while
                push _subofb57
                if
                  at _subofb57
                    dec
                  ta
                  at _subofa57
                    dec
                  ta
                  push _subofa57
                  inc
                  not
                  if
                    at _subofc57
                      set 1
                    ta
                  fi
                else
                  at _loopso57
                    reset
                  ta
                fi
              wend
              push _subofc57
              if
                at _subofb57
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb58
              sbm _subofa58 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc58
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso58
              while
                push _subofb58
                if
                  at _subofb58
                    dec
                  ta
                  at _subofa58
                    dec
                  ta
                  push _subofa58
                  inc
                  not
                  if
                    at _subofc58
                      set 1
                    ta
                  fi
                else
                  at _loopso58
                    reset
                  ta
                fi
              wend
              push _subofc58
              if
                at _subofb58
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_4
              add
              pop     _addvvvXCarry3
              push    _mulvvvXabsNameA2_5
              push    _addvvXnameB2_5
              #(begin macro)subof()
              sbm _subofb59
              sbm _subofa59 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc59
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso59
              while
                push _subofb59
                if
                  at _subofb59
                    dec
                  ta
                  at _subofa59
                    dec
                  ta
                  push _subofa59
                  inc
                  not
                  if
                    at _subofc59
                      set 1
                    ta
                  fi
                else
                  at _loopso59
                    reset
                  ta
                fi
              wend
              push _subofc59
              if
                at _subofb59
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry3
              #(begin macro)subof()
              sbm _subofb60
              sbm _subofa60 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc60
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso60
              while
                push _subofb60
                if
                  at _subofb60
                    dec
                  ta
                  at _subofa60
                    dec
                  ta
                  push _subofa60
                  inc
                  not
                  if
                    at _subofc60
                      set 1
                    ta
                  fi
                else
                  at _loopso60
                    reset
                  ta
                fi
              wend
              push _subofc60
              if
                at _subofb60
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX2_5
              add
              pop     _addvvvXCarry3
              pop     _mulFPresultX2_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)if_equal(name +"_s",1)  # negative number
        push _mulvvvXabsNameB2_s
        push 1
        equal
        if
          #(end macro)if_equal(name +"_s",1)  # negative number
          #(begin macro)at_inc(name + "_" + xx)
          #(begin macro)at_1("inc",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB2_0
            inc 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("inc",a)
          #(end macro)at_inc(name + "_" + xx)
          #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
          push _mulvvvXabsNameB2_0
          push 0
          equal
          if
            #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            #(begin macro)at_inc(name + "_" + xx)
            #(begin macro)at_1("inc",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB2_1
              inc 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("inc",a)
            #(end macro)at_inc(name + "_" + xx)
            #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            push _mulvvvXabsNameB2_1
            push 0
            equal
            if
              #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB2_2
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB2_2
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB2_3
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB2_3
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB2_4
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB2_4
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB2_5
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB2_5
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)setcvX(X, name) ## set carry (overflow)
                      #(begin macro)at_set(name+"_c",1)
                      #(begin macro)at_2("set",a,b)
                      at _mulvvvXabsNameB2_c
                        set 1
                      ta
                      #(end macro)at_2("set",a,b)
                      #(end macro)at_set(name+"_c",1)
                      #(end macro)setcvX(X, name) ## set carry (overflow)
                    fi
                  fi
                fi
              fi
            fi
          fi
        else    # positive number
          #(begin macro)at_dec(name + "_" + xx)
          #(begin macro)at_1("dec",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB2_0
            dec 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("dec",a)
          #(end macro)at_dec(name + "_" + xx)
          #(begin macro)if_equal(name +"_" + xx,255) # reduced
          push _mulvvvXabsNameB2_0
          push 255
          equal
          if
            #(end macro)if_equal(name +"_" + xx,255) # reduced
            #(begin macro)at_dec(name + "_" + xx)
            #(begin macro)at_1("dec",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB2_1
              dec 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("dec",a)
            #(end macro)at_dec(name + "_" + xx)
            #(begin macro)if_equal(name +"_" + xx,255) # reduced
            push _mulvvvXabsNameB2_1
            push 255
            equal
            if
              #(end macro)if_equal(name +"_" + xx,255) # reduced
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB2_2
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB2_2
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB2_3
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB2_3
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB2_4
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB2_4
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB2_5
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB2_5
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)setvX(X,name,-1)
                      at _mulvvvXabsNameB2_0
                        #(begin macro)setX(X,immValue)
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        reset
                        bf  >
                        set 1
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    1
                        #(end macro)setX(X,immValue)
                      ta
                      #(end macro)setvX(X,name,-1)
                    fi
                  fi
                fi
              fi
            fi
          fi
        fi
        #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      else
        #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
        #(begin macro)at_1("reset",a)
        #(begin macro)at_2(ope,a,"")
        at _mulvvvX_loop2
          reset 
        ta
        #(end macro)at_2(ope,a,"")
        #(end macro)at_1("reset",a)
        #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
      fi
    wend
    # resolve sign
    push _mulvvvXsA2
    push _mulvvvXsB2
    diff    # if sign(nameA) <> sign(nameB) then name is negative
    if
      #(begin macro)at_set(name +"_s",1)
      #(begin macro)at_2("set",a,b)
      at _mulFPresultX2_s
        set 1
      ta
      #(end macro)at_2("set",a,b)
      #(end macro)at_set(name +"_s",1)
    fi
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    
    #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    push    _mulFPresultX2_c
    push    _mulFPresultX2_s
    push    _mulFPresultX2_5
    push    _mulFPresultX2_4
    push    _mulFPresultX2_3
    push    _mulFPresultX2_2
    push    _mulFPresultX2_1
    push    _mulFPresultX2_0
    #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    #(begin macro)castFP(I+I,P+P, I,P)
    #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
    var _castFPinstack2_0    # 0 byte of _castFPinstack2
    var _castFPinstack2_1    # 1 byte of _castFPinstack2
    var _castFPinstack2_2    # 2 byte of _castFPinstack2
    var _castFPinstack2_3    # 3 byte of _castFPinstack2
    var _castFPinstack2_4    # 4 byte of _castFPinstack2
    var _castFPinstack2_5    # 5 byte of _castFPinstack2
    var _castFPinstack2_s    # Sign of _castFPinstack2
    var _castFPinstack2_c    # carry of _castFPinstack2
    #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
    #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
    var _castFPoutstack2_0    # 0 byte of _castFPoutstack2
    var _castFPoutstack2_1    # 1 byte of _castFPoutstack2
    var _castFPoutstack2_2    # 2 byte of _castFPoutstack2
    var _castFPoutstack2_s    # Sign of _castFPoutstack2
    var _castFPoutstack2_c    # carry of _castFPoutstack2
    #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
    
    #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
    pop     _castFPinstack2_0
    pop     _castFPinstack2_1
    pop     _castFPinstack2_2
    pop     _castFPinstack2_3
    pop     _castFPinstack2_4
    pop     _castFPinstack2_5
    pop     _castFPinstack2_s
    pop     _castFPinstack2_c
    #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
    # reset outstack
    #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    at _castFPoutstack2_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    # sign
    push _castFPinstack2_s
    pop _castFPoutstack2_s
    # integer part
    push _castFPinstack2_4
    pop _castFPoutstack2_2
    # fract part
    push _castFPinstack2_3
    pop _castFPoutstack2_1
    push _castFPinstack2_2
    pop _castFPoutstack2_0
    #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    push    _castFPoutstack2_c
    push    _castFPoutstack2_s
    push    _castFPoutstack2_2
    push    _castFPoutstack2_1
    push    _castFPoutstack2_0
    #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    #(end macro)castFP(I+I,P+P, I,P)
    #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
    pop     _mulFPnameA2_0
    pop     _mulFPnameA2_1
    pop     _mulFPnameA2_2
    pop     _mulFPnameA2_s
    pop     _mulFPnameA2_c
    #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(IP) # drop nameB
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(IP) # drop nameB
    #(end macro)mulFP(FP_I,FP_P)
    #(begin macro)pushFP(FP_I,FP_P,moveX)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack4_0 - 0
    sbm _setFPinstack4_1 - 1
    sbm _setFPinstack4_2 - 2
    sbm _setFPinstack4_s - 3
    sbm _setFPinstack4_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack4_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 1
      bf >
      set    0
      bf >
      set    128
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,moveX)
    #(begin macro)addX(FP)
    #(begin macro)sbmX(X, "_addXName"+ _addX, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _addXName1_0 - 5
    sbm _addXName1_1 - 6
    sbm _addXName1_2 - 7
    sbm _addXName1_s - 8
    sbm _addXName1_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_addXName"+ _addX, 1)
    #(begin macro)sbmX(X, "_addXNameB"+ _addX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _addXNameB1_0 - 0
    sbm _addXNameB1_1 - 1
    sbm _addXNameB1_2 - 2
    sbm _addXNameB1_s - 3
    sbm _addXNameB1_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_addXNameB"+ _addX, 0)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_addXNameA"+_addX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _addXNameA1_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _addXNameA1_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA1_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA1_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA1_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_addXNameA"+_addX)
    #(begin macro)pushvX(X,"_addXName"+_addX)
    push    _addXName1_c
    push    _addXName1_s
    push    _addXName1_2
    push    _addXName1_1
    push    _addXName1_0
    #(end macro)pushvX(X,"_addXName"+_addX)
    #(begin macro)popvX(X,"_addXNameA"+_addX)
    pop     _addXNameA1_0
    pop     _addXNameA1_1
    pop     _addXNameA1_2
    pop     _addXNameA1_s
    pop     _addXNameA1_c
    #(end macro)popvX(X,"_addXNameA"+_addX)
    #(begin macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
    push    _addXNameA1_s
    push    _addXNameB1_s
    or
    not
    push    _addXNameA1_s
    push    _addXNameB1_s
    and
    or
    if      # nameA and nameB are both positive or negative
      push    _addXNameA1_s
      pop     _addXName1_s    # name has same sign of nameA and nameB
      push    0
      push    _addXNameA1_0
      #(begin macro)addof()
      sbm _addofb46
      sbm _addofa46 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc46
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao46
      while
        push _addofa46
        if
          at _addofa46
            dec
          ta
          at _addofb46
            inc
          ta
          push _addofb46
          not
          if
            at _addofc46
              set 1
            ta
          fi
        else
          at _loopao46
            reset
          ta
        fi
      wend
      push _addofc46
      if
        at _addofa46
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_0
      push    _addXNameB1_0
      #(begin macro)addof()
      sbm _addofb47
      sbm _addofa47 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc47
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao47
      while
        push _addofa47
        if
          at _addofa47
            dec
          ta
          at _addofb47
            inc
          ta
          push _addofb47
          not
          if
            at _addofc47
              set 1
            ta
          fi
        else
          at _loopao47
            reset
          ta
        fi
      wend
      push _addofc47
      if
        at _addofa47
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName1_0
      #(begin macro)addof()
      sbm _addofb48
      sbm _addofa48 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc48
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao48
      while
        push _addofa48
        if
          at _addofa48
            dec
          ta
          at _addofb48
            inc
          ta
          push _addofb48
          not
          if
            at _addofc48
              set 1
            ta
          fi
        else
          at _loopao48
            reset
          ta
        fi
      wend
      push _addofc48
      if
        at _addofa48
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_0
      add
      push    _addXNameA1_1
      #(begin macro)addof()
      sbm _addofb49
      sbm _addofa49 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc49
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao49
      while
        push _addofa49
        if
          at _addofa49
            dec
          ta
          at _addofb49
            inc
          ta
          push _addofb49
          not
          if
            at _addofc49
              set 1
            ta
          fi
        else
          at _loopao49
            reset
          ta
        fi
      wend
      push _addofc49
      if
        at _addofa49
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_1
      push    _addXNameB1_1
      #(begin macro)addof()
      sbm _addofb50
      sbm _addofa50 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc50
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao50
      while
        push _addofa50
        if
          at _addofa50
            dec
          ta
          at _addofb50
            inc
          ta
          push _addofb50
          not
          if
            at _addofc50
              set 1
            ta
          fi
        else
          at _loopao50
            reset
          ta
        fi
      wend
      push _addofc50
      if
        at _addofa50
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName1_1
      #(begin macro)addof()
      sbm _addofb51
      sbm _addofa51 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc51
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao51
      while
        push _addofa51
        if
          at _addofa51
            dec
          ta
          at _addofb51
            inc
          ta
          push _addofb51
          not
          if
            at _addofc51
              set 1
            ta
          fi
        else
          at _loopao51
            reset
          ta
        fi
      wend
      push _addofc51
      if
        at _addofa51
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_1
      add
      push    _addXNameA1_2
      #(begin macro)addof()
      sbm _addofb52
      sbm _addofa52 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc52
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao52
      while
        push _addofa52
        if
          at _addofa52
            dec
          ta
          at _addofb52
            inc
          ta
          push _addofb52
          not
          if
            at _addofc52
              set 1
            ta
          fi
        else
          at _loopao52
            reset
          ta
        fi
      wend
      push _addofc52
      if
        at _addofa52
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_2
      push    _addXNameB1_2
      #(begin macro)addof()
      sbm _addofb53
      sbm _addofa53 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc53
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao53
      while
        push _addofa53
        if
          at _addofa53
            dec
          ta
          at _addofb53
            inc
          ta
          push _addofb53
          not
          if
            at _addofc53
              set 1
            ta
          fi
        else
          at _loopao53
            reset
          ta
        fi
      wend
      push _addofc53
      if
        at _addofa53
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName1_2
      #(begin macro)addof()
      sbm _addofb54
      sbm _addofa54 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc54
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao54
      while
        push _addofa54
        if
          at _addofa54
            dec
          ta
          at _addofb54
            inc
          ta
          push _addofb54
          not
          if
            at _addofc54
              set 1
            ta
          fi
        else
          at _loopao54
            reset
          ta
        fi
      wend
      push _addofc54
      if
        at _addofa54
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName1_2
      add
      pop     _addXName1_c
    else  # nameA has a different sign of nameB
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      push 0
      sbm _asupb4
      #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push 0
      sbm _aequb4
      #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push    _addXNameA1_2
      push    _addXNameB1_2
      sup
      if
        at _asupb4
          set 1
        ta
      else
        push    _addXNameA1_2
        push    _addXNameB1_2
        diff
        if
          at _asupb4
            reset
          ta
        else
          push    _addXNameA1_1
          push    _addXNameB1_1
          sup
          if
            at _asupb4
              set 1
            ta
          else
            push    _addXNameA1_1
            push    _addXNameB1_1
            diff
            if
              at _asupb4
                reset
              ta
            else
              push    _addXNameA1_0
              push    _addXNameB1_0
              sup
              if
                at _asupb4
                  set 1
                ta
              else
                push    _addXNameA1_0
                push    _addXNameB1_0
                diff
                if
                  at _asupb4
                    reset
                  ta
                else
                  at _aequb4
                    set 1
                  ta
                fi
              fi
            fi
          fi
        fi
      fi
      push _asupb4
      if  # absA > absB : do  absA-absB with sign of A
        # print("absA > absB\n")
        push    _addXNameA1_s
        pop     _addXName1_s    # name has same sign of nameA
        
        push    0
        sbm     _addvvvXCarry4
        push    _addXNameA1_0
        push    _addXNameB1_0
        #(begin macro)subof()
        sbm _subofb61
        sbm _subofa61 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc61
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso61
        while
          push _subofb61
          if
            at _subofb61
              dec
            ta
            at _subofa61
              dec
            ta
            push _subofa61
            inc
            not
            if
              at _subofc61
                set 1
              ta
            fi
          else
            at _loopso61
              reset
            ta
          fi
        wend
        push _subofc61
        if
          at _subofb61
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry4
        #(begin macro)subof()
        sbm _subofb62
        sbm _subofa62 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc62
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso62
        while
          push _subofb62
          if
            at _subofb62
              dec
            ta
            at _subofa62
              dec
            ta
            push _subofa62
            inc
            not
            if
              at _subofc62
                set 1
              ta
            fi
          else
            at _loopso62
              reset
            ta
          fi
        wend
        push _subofc62
        if
          at _subofb62
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName1_0
        add
        pop     _addvvvXCarry4
        push    _addXNameA1_1
        push    _addXNameB1_1
        #(begin macro)subof()
        sbm _subofb63
        sbm _subofa63 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc63
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso63
        while
          push _subofb63
          if
            at _subofb63
              dec
            ta
            at _subofa63
              dec
            ta
            push _subofa63
            inc
            not
            if
              at _subofc63
                set 1
              ta
            fi
          else
            at _loopso63
              reset
            ta
          fi
        wend
        push _subofc63
        if
          at _subofb63
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry4
        #(begin macro)subof()
        sbm _subofb64
        sbm _subofa64 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc64
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso64
        while
          push _subofb64
          if
            at _subofb64
              dec
            ta
            at _subofa64
              dec
            ta
            push _subofa64
            inc
            not
            if
              at _subofc64
                set 1
              ta
            fi
          else
            at _loopso64
              reset
            ta
          fi
        wend
        push _subofc64
        if
          at _subofb64
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName1_1
        add
        pop     _addvvvXCarry4
        push    _addXNameA1_2
        push    _addXNameB1_2
        #(begin macro)subof()
        sbm _subofb65
        sbm _subofa65 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc65
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso65
        while
          push _subofb65
          if
            at _subofb65
              dec
            ta
            at _subofa65
              dec
            ta
            push _subofa65
            inc
            not
            if
              at _subofc65
                set 1
              ta
            fi
          else
            at _loopso65
              reset
            ta
          fi
        wend
        push _subofc65
        if
          at _subofb65
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry4
        #(begin macro)subof()
        sbm _subofb66
        sbm _subofa66 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc66
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso66
        while
          push _subofb66
          if
            at _subofb66
              dec
            ta
            at _subofa66
              dec
            ta
            push _subofa66
            inc
            not
            if
              at _subofc66
                set 1
              ta
            fi
          else
            at _loopso66
              reset
            ta
          fi
        wend
        push _subofc66
        if
          at _subofb66
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName1_2
        add
        pop     _addvvvXCarry4
        pop     _addXName1_c
      else # absB >= absA :
        push    _aequb4
        if # absA == absB , then name =0 (opposite sign then sum is zero)
          #print("absA == absB\n")
          #(begin macro)setvX(X,name,0)
          at _addXName1_0
            #(begin macro)setX(X,immValue)
            bf <
            bf <
            bf <
            bf <
            reset
            bf  >
            set 0
            bf >
            set    0
            bf >
            set    0
            bf >
            set    0
            #(end macro)setX(X,immValue)
          ta
          #(end macro)setvX(X,name,0)
        else # absA < absB : do   absB-absA with sign of B
          #print("absA < absB\n")
          push    _addXNameB1_s
          pop     _addXName1_s    # name has same sign of nameB
          
          push    0
          sbm     _addvvvXCarry4
          push    _addXNameB1_0
          push    _addXNameA1_0
          #(begin macro)subof()
          sbm _subofb67
          sbm _subofa67 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc67
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso67
          while
            push _subofb67
            if
              at _subofb67
                dec
              ta
              at _subofa67
                dec
              ta
              push _subofa67
              inc
              not
              if
                at _subofc67
                  set 1
                ta
              fi
            else
              at _loopso67
                reset
              ta
            fi
          wend
          push _subofc67
          if
            at _subofb67
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry4
          #(begin macro)subof()
          sbm _subofb68
          sbm _subofa68 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc68
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso68
          while
            push _subofb68
            if
              at _subofb68
                dec
              ta
              at _subofa68
                dec
              ta
              push _subofa68
              inc
              not
              if
                at _subofc68
                  set 1
                ta
              fi
            else
              at _loopso68
                reset
              ta
            fi
          wend
          push _subofc68
          if
            at _subofb68
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName1_0
          add
          pop     _addvvvXCarry4
          push    _addXNameB1_1
          push    _addXNameA1_1
          #(begin macro)subof()
          sbm _subofb69
          sbm _subofa69 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc69
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso69
          while
            push _subofb69
            if
              at _subofb69
                dec
              ta
              at _subofa69
                dec
              ta
              push _subofa69
              inc
              not
              if
                at _subofc69
                  set 1
                ta
              fi
            else
              at _loopso69
                reset
              ta
            fi
          wend
          push _subofc69
          if
            at _subofb69
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry4
          #(begin macro)subof()
          sbm _subofb70
          sbm _subofa70 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc70
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso70
          while
            push _subofb70
            if
              at _subofb70
                dec
              ta
              at _subofa70
                dec
              ta
              push _subofa70
              inc
              not
              if
                at _subofc70
                  set 1
                ta
              fi
            else
              at _loopso70
                reset
              ta
            fi
          wend
          push _subofc70
          if
            at _subofb70
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName1_1
          add
          pop     _addvvvXCarry4
          push    _addXNameB1_2
          push    _addXNameA1_2
          #(begin macro)subof()
          sbm _subofb71
          sbm _subofa71 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc71
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso71
          while
            push _subofb71
            if
              at _subofb71
                dec
              ta
              at _subofa71
                dec
              ta
              push _subofa71
              inc
              not
              if
                at _subofc71
                  set 1
                ta
              fi
            else
              at _loopso71
                reset
              ta
            fi
          wend
          push _subofc71
          if
            at _subofb71
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry4
          #(begin macro)subof()
          sbm _subofb72
          sbm _subofa72 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc72
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso72
          while
            push _subofb72
            if
              at _subofb72
                dec
              ta
              at _subofa72
                dec
              ta
              push _subofa72
              inc
              not
              if
                at _subofc72
                  set 1
                ta
              fi
            else
              at _loopso72
                reset
              ta
            fi
          wend
          push _subofc72
          if
            at _subofb72
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName1_2
          add
          pop     _addvvvXCarry4
          pop     _addXName1_c
        fi
      fi
      #(begin macro)scope_end()
      drop
      drop
      #(end macro)scope_end()
    fi
    #(end macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X)
    #(end macro)addX(FP)
    #(begin macro)popvX(FP,"pr")
    pop     pr_0
    pop     pr_1
    pop     pr_2
    pop     pr_s
    pop     pr_c
    #(end macro)popvX(FP,"pr")
    # pi = (y - halfH) * oneOnHalfZoomH + moveY
    #(begin macro)pushvX(FP,"y")
    push    y_c
    push    y_s
    push    y_2
    push    y_1
    push    y_0
    #(end macro)pushvX(FP,"y")
    #(begin macro)pushFP(FP_I,FP_P,halfH)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack5_0 - 0
    sbm _setFPinstack5_1 - 1
    sbm _setFPinstack5_2 - 2
    sbm _setFPinstack5_s - 3
    sbm _setFPinstack5_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack5_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    20
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,halfH)
    #(begin macro)subX(FP)
    #(begin macro)sbmX(X, "_subXName" + _subX, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _subXName2_0 - 5
    sbm _subXName2_1 - 6
    sbm _subXName2_2 - 7
    sbm _subXName2_s - 8
    sbm _subXName2_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_subXName" + _subX, 1)
    #(begin macro)sbmX(X,"_subXNameB" + _subX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _subXNameB2_0 - 0
    sbm _subXNameB2_1 - 1
    sbm _subXNameB2_2 - 2
    sbm _subXNameB2_s - 3
    sbm _subXNameB2_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X,"_subXNameB" + _subX, 0)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_subXNameA" + _subX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _subXNameA2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _subXNameA2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _subXNameA2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_subXNameA" + _subX)
    #(begin macro)pushvX(X,"_subXName" + _subX)
    push    _subXName2_c
    push    _subXName2_s
    push    _subXName2_2
    push    _subXName2_1
    push    _subXName2_0
    #(end macro)pushvX(X,"_subXName" + _subX)
    #(begin macro)popvX(X,"_subXNameA" + _subX)
    pop     _subXNameA2_0
    pop     _subXNameA2_1
    pop     _subXNameA2_2
    pop     _subXNameA2_s
    pop     _subXNameA2_c
    #(end macro)popvX(X,"_subXNameA" + _subX)
    #(begin macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_negNameB" + _subvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _negNameB2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _negNameB2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _negNameB2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_negNameB" + _subvvvX)
    #(begin macro)pushvX(X,nameB)
    push    _subXNameB2_c
    push    _subXNameB2_s
    push    _subXNameB2_2
    push    _subXNameB2_1
    push    _subXNameB2_0
    #(end macro)pushvX(X,nameB)
    #(begin macro)popvX(X,"_negNameB" + _subvvvX)
    pop     _negNameB2_0
    pop     _negNameB2_1
    pop     _negNameB2_2
    pop     _negNameB2_s
    pop     _negNameB2_c
    #(end macro)popvX(X,"_negNameB" + _subvvvX)
    #(begin macro)negvX(X,"_negNameB" + _subvvvX)
    push    _negNameB2_s
    dec
    bool
    dup
    if    # if name is now negative
      #(begin macro)if_equal(name +"_"+xx, 0)
      push _negNameB2_0
      push 0
      equal
      if
        #(end macro)if_equal(name +"_"+xx, 0)
        #(begin macro)if_equal(name +"_"+xx, 0)
        push _negNameB2_1
        push 0
        equal
        if
          #(end macro)if_equal(name +"_"+xx, 0)
          #(begin macro)if_equal(name +"_"+xx, 0)
          push _negNameB2_2
          push 0
          equal
          if
            #(end macro)if_equal(name +"_"+xx, 0)
            #(begin macro)at_reset(name + "_s")   # set sign to positive if name==0
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _negNameB2_s
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset(name + "_s")   # set sign to positive if name==0
          fi
        fi
      fi
    fi
    pop     _negNameB2_s
    #(end macro)negvX(X,"_negNameB" + _subvvvX)
    #(begin macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
    push    _subXNameA2_s
    push    _negNameB2_s
    or
    not
    push    _subXNameA2_s
    push    _negNameB2_s
    and
    or
    if      # nameA and nameB are both positive or negative
      push    _subXNameA2_s
      pop     _subXName2_s    # name has same sign of nameA and nameB
      push    0
      push    _subXNameA2_0
      #(begin macro)addof()
      sbm _addofb55
      sbm _addofa55 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc55
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao55
      while
        push _addofa55
        if
          at _addofa55
            dec
          ta
          at _addofb55
            inc
          ta
          push _addofb55
          not
          if
            at _addofc55
              set 1
            ta
          fi
        else
          at _loopao55
            reset
          ta
        fi
      wend
      push _addofc55
      if
        at _addofa55
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_0
      push    _negNameB2_0
      #(begin macro)addof()
      sbm _addofb56
      sbm _addofa56 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc56
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao56
      while
        push _addofa56
        if
          at _addofa56
            dec
          ta
          at _addofb56
            inc
          ta
          push _addofb56
          not
          if
            at _addofc56
              set 1
            ta
          fi
        else
          at _loopao56
            reset
          ta
        fi
      wend
      push _addofc56
      if
        at _addofa56
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName2_0
      #(begin macro)addof()
      sbm _addofb57
      sbm _addofa57 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc57
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao57
      while
        push _addofa57
        if
          at _addofa57
            dec
          ta
          at _addofb57
            inc
          ta
          push _addofb57
          not
          if
            at _addofc57
              set 1
            ta
          fi
        else
          at _loopao57
            reset
          ta
        fi
      wend
      push _addofc57
      if
        at _addofa57
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_0
      add
      push    _subXNameA2_1
      #(begin macro)addof()
      sbm _addofb58
      sbm _addofa58 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc58
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao58
      while
        push _addofa58
        if
          at _addofa58
            dec
          ta
          at _addofb58
            inc
          ta
          push _addofb58
          not
          if
            at _addofc58
              set 1
            ta
          fi
        else
          at _loopao58
            reset
          ta
        fi
      wend
      push _addofc58
      if
        at _addofa58
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_1
      push    _negNameB2_1
      #(begin macro)addof()
      sbm _addofb59
      sbm _addofa59 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc59
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao59
      while
        push _addofa59
        if
          at _addofa59
            dec
          ta
          at _addofb59
            inc
          ta
          push _addofb59
          not
          if
            at _addofc59
              set 1
            ta
          fi
        else
          at _loopao59
            reset
          ta
        fi
      wend
      push _addofc59
      if
        at _addofa59
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName2_1
      #(begin macro)addof()
      sbm _addofb60
      sbm _addofa60 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc60
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao60
      while
        push _addofa60
        if
          at _addofa60
            dec
          ta
          at _addofb60
            inc
          ta
          push _addofb60
          not
          if
            at _addofc60
              set 1
            ta
          fi
        else
          at _loopao60
            reset
          ta
        fi
      wend
      push _addofc60
      if
        at _addofa60
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_1
      add
      push    _subXNameA2_2
      #(begin macro)addof()
      sbm _addofb61
      sbm _addofa61 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc61
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao61
      while
        push _addofa61
        if
          at _addofa61
            dec
          ta
          at _addofb61
            inc
          ta
          push _addofb61
          not
          if
            at _addofc61
              set 1
            ta
          fi
        else
          at _loopao61
            reset
          ta
        fi
      wend
      push _addofc61
      if
        at _addofa61
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_2
      push    _negNameB2_2
      #(begin macro)addof()
      sbm _addofb62
      sbm _addofa62 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc62
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao62
      while
        push _addofa62
        if
          at _addofa62
            dec
          ta
          at _addofb62
            inc
          ta
          push _addofb62
          not
          if
            at _addofc62
              set 1
            ta
          fi
        else
          at _loopao62
            reset
          ta
        fi
      wend
      push _addofc62
      if
        at _addofa62
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _subXName2_2
      #(begin macro)addof()
      sbm _addofb63
      sbm _addofa63 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc63
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao63
      while
        push _addofa63
        if
          at _addofa63
            dec
          ta
          at _addofb63
            inc
          ta
          push _addofb63
          not
          if
            at _addofc63
              set 1
            ta
          fi
        else
          at _loopao63
            reset
          ta
        fi
      wend
      push _addofc63
      if
        at _addofa63
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _subXName2_2
      add
      pop     _subXName2_c
    else  # nameA has a different sign of nameB
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      push 0
      sbm _asupb5
      #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push 0
      sbm _aequb5
      #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push    _subXNameA2_2
      push    _negNameB2_2
      sup
      if
        at _asupb5
          set 1
        ta
      else
        push    _subXNameA2_2
        push    _negNameB2_2
        diff
        if
          at _asupb5
            reset
          ta
        else
          push    _subXNameA2_1
          push    _negNameB2_1
          sup
          if
            at _asupb5
              set 1
            ta
          else
            push    _subXNameA2_1
            push    _negNameB2_1
            diff
            if
              at _asupb5
                reset
              ta
            else
              push    _subXNameA2_0
              push    _negNameB2_0
              sup
              if
                at _asupb5
                  set 1
                ta
              else
                push    _subXNameA2_0
                push    _negNameB2_0
                diff
                if
                  at _asupb5
                    reset
                  ta
                else
                  at _aequb5
                    set 1
                  ta
                fi
              fi
            fi
          fi
        fi
      fi
      push _asupb5
      if  # absA > absB : do  absA-absB with sign of A
        # print("absA > absB\n")
        push    _subXNameA2_s
        pop     _subXName2_s    # name has same sign of nameA
        
        push    0
        sbm     _addvvvXCarry5
        push    _subXNameA2_0
        push    _negNameB2_0
        #(begin macro)subof()
        sbm _subofb73
        sbm _subofa73 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc73
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso73
        while
          push _subofb73
          if
            at _subofb73
              dec
            ta
            at _subofa73
              dec
            ta
            push _subofa73
            inc
            not
            if
              at _subofc73
                set 1
              ta
            fi
          else
            at _loopso73
              reset
            ta
          fi
        wend
        push _subofc73
        if
          at _subofb73
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry5
        #(begin macro)subof()
        sbm _subofb74
        sbm _subofa74 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc74
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso74
        while
          push _subofb74
          if
            at _subofb74
              dec
            ta
            at _subofa74
              dec
            ta
            push _subofa74
            inc
            not
            if
              at _subofc74
                set 1
              ta
            fi
          else
            at _loopso74
              reset
            ta
          fi
        wend
        push _subofc74
        if
          at _subofb74
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName2_0
        add
        pop     _addvvvXCarry5
        push    _subXNameA2_1
        push    _negNameB2_1
        #(begin macro)subof()
        sbm _subofb75
        sbm _subofa75 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc75
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso75
        while
          push _subofb75
          if
            at _subofb75
              dec
            ta
            at _subofa75
              dec
            ta
            push _subofa75
            inc
            not
            if
              at _subofc75
                set 1
              ta
            fi
          else
            at _loopso75
              reset
            ta
          fi
        wend
        push _subofc75
        if
          at _subofb75
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry5
        #(begin macro)subof()
        sbm _subofb76
        sbm _subofa76 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc76
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso76
        while
          push _subofb76
          if
            at _subofb76
              dec
            ta
            at _subofa76
              dec
            ta
            push _subofa76
            inc
            not
            if
              at _subofc76
                set 1
              ta
            fi
          else
            at _loopso76
              reset
            ta
          fi
        wend
        push _subofc76
        if
          at _subofb76
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName2_1
        add
        pop     _addvvvXCarry5
        push    _subXNameA2_2
        push    _negNameB2_2
        #(begin macro)subof()
        sbm _subofb77
        sbm _subofa77 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc77
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso77
        while
          push _subofb77
          if
            at _subofb77
              dec
            ta
            at _subofa77
              dec
            ta
            push _subofa77
            inc
            not
            if
              at _subofc77
                set 1
              ta
            fi
          else
            at _loopso77
              reset
            ta
          fi
        wend
        push _subofc77
        if
          at _subofb77
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry5
        #(begin macro)subof()
        sbm _subofb78
        sbm _subofa78 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc78
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso78
        while
          push _subofb78
          if
            at _subofb78
              dec
            ta
            at _subofa78
              dec
            ta
            push _subofa78
            inc
            not
            if
              at _subofc78
                set 1
              ta
            fi
          else
            at _loopso78
              reset
            ta
          fi
        wend
        push _subofc78
        if
          at _subofb78
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _subXName2_2
        add
        pop     _addvvvXCarry5
        pop     _subXName2_c
      else # absB >= absA :
        push    _aequb5
        if # absA == absB , then name =0 (opposite sign then sum is zero)
          #print("absA == absB\n")
          #(begin macro)setvX(X,name,0)
          at _subXName2_0
            #(begin macro)setX(X,immValue)
            bf <
            bf <
            bf <
            bf <
            reset
            bf  >
            set 0
            bf >
            set    0
            bf >
            set    0
            bf >
            set    0
            #(end macro)setX(X,immValue)
          ta
          #(end macro)setvX(X,name,0)
        else # absA < absB : do   absB-absA with sign of B
          #print("absA < absB\n")
          push    _negNameB2_s
          pop     _subXName2_s    # name has same sign of nameB
          
          push    0
          sbm     _addvvvXCarry5
          push    _negNameB2_0
          push    _subXNameA2_0
          #(begin macro)subof()
          sbm _subofb79
          sbm _subofa79 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc79
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso79
          while
            push _subofb79
            if
              at _subofb79
                dec
              ta
              at _subofa79
                dec
              ta
              push _subofa79
              inc
              not
              if
                at _subofc79
                  set 1
                ta
              fi
            else
              at _loopso79
                reset
              ta
            fi
          wend
          push _subofc79
          if
            at _subofb79
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry5
          #(begin macro)subof()
          sbm _subofb80
          sbm _subofa80 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc80
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso80
          while
            push _subofb80
            if
              at _subofb80
                dec
              ta
              at _subofa80
                dec
              ta
              push _subofa80
              inc
              not
              if
                at _subofc80
                  set 1
                ta
              fi
            else
              at _loopso80
                reset
              ta
            fi
          wend
          push _subofc80
          if
            at _subofb80
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName2_0
          add
          pop     _addvvvXCarry5
          push    _negNameB2_1
          push    _subXNameA2_1
          #(begin macro)subof()
          sbm _subofb81
          sbm _subofa81 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc81
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso81
          while
            push _subofb81
            if
              at _subofb81
                dec
              ta
              at _subofa81
                dec
              ta
              push _subofa81
              inc
              not
              if
                at _subofc81
                  set 1
                ta
              fi
            else
              at _loopso81
                reset
              ta
            fi
          wend
          push _subofc81
          if
            at _subofb81
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry5
          #(begin macro)subof()
          sbm _subofb82
          sbm _subofa82 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc82
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso82
          while
            push _subofb82
            if
              at _subofb82
                dec
              ta
              at _subofa82
                dec
              ta
              push _subofa82
              inc
              not
              if
                at _subofc82
                  set 1
                ta
              fi
            else
              at _loopso82
                reset
              ta
            fi
          wend
          push _subofc82
          if
            at _subofb82
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName2_1
          add
          pop     _addvvvXCarry5
          push    _negNameB2_2
          push    _subXNameA2_2
          #(begin macro)subof()
          sbm _subofb83
          sbm _subofa83 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc83
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso83
          while
            push _subofb83
            if
              at _subofb83
                dec
              ta
              at _subofa83
                dec
              ta
              push _subofa83
              inc
              not
              if
                at _subofc83
                  set 1
                ta
              fi
            else
              at _loopso83
                reset
              ta
            fi
          wend
          push _subofc83
          if
            at _subofb83
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry5
          #(begin macro)subof()
          sbm _subofb84
          sbm _subofa84 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc84
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso84
          while
            push _subofb84
            if
              at _subofb84
                dec
              ta
              at _subofa84
                dec
              ta
              push _subofa84
              inc
              not
              if
                at _subofc84
                  set 1
                ta
              fi
            else
              at _loopso84
                reset
              ta
            fi
          wend
          push _subofc84
          if
            at _subofb84
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _subXName2_2
          add
          pop     _addvvvXCarry5
          pop     _subXName2_c
        fi
      fi
      #(begin macro)scope_end()
      drop
      drop
      #(end macro)scope_end()
    fi
    #(end macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(end macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X)
    #(end macro)subX(FP)
    #(begin macro)pushFP(FP_I,FP_P,oneOnHalfZoomW)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack6_0 - 0
    sbm _setFPinstack6_1 - 1
    sbm _setFPinstack6_2 - 2
    sbm _setFPinstack6_s - 3
    sbm _setFPinstack6_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack6_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    160
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,oneOnHalfZoomW)
    #(begin macro)mulFP(FP_I,FP_P)
    #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameB3_0 - 0
    sbm _mulFPnameB3_1 - 1
    sbm _mulFPnameB3_2 - 2
    sbm _mulFPnameB3_s - 3
    sbm _mulFPnameB3_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
    #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _mulFPnameA3_0 - 5
    sbm _mulFPnameA3_1 - 6
    sbm _mulFPnameA3_2 - 7
    sbm _mulFPnameA3_s - 8
    sbm _mulFPnameA3_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameAX3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameAX3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameAX3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPnameBX3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPnameBX3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPnameBX3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
    #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulFPresultX3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulFPresultX3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulFPresultX3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
    
    # upcast nameA to nameAX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    push    _mulFPnameA3_c
    push    _mulFPnameA3_s
    push    _mulFPnameA3_2
    push    _mulFPnameA3_1
    push    _mulFPnameA3_0
    #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput5_0 - 0
    sbm _castXInput5_1 - 1
    sbm _castXInput5_2 - 2
    sbm _castXInput5_s - 3
    sbm _castXInput5_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput5_0    # 0 byte of _castXoutput5
    var _castXoutput5_1    # 1 byte of _castXoutput5
    var _castXoutput5_2    # 2 byte of _castXoutput5
    var _castXoutput5_3    # 3 byte of _castXoutput5
    var _castXoutput5_4    # 4 byte of _castXoutput5
    var _castXoutput5_5    # 5 byte of _castXoutput5
    var _castXoutput5_s    # Sign of _castXoutput5
    var _castXoutput5_c    # carry of _castXoutput5
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori5_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori5_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori5_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori5_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori5_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest5_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest5_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest5_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput5_c
    push    _castXInput5_s
    push    _castXInput5_2
    push    _castXInput5_1
    push    _castXInput5_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori5_0
    pop     _castXori5_1
    pop     _castXori5_2
    pop     _castXori5_s
    pop     _castXori5_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori5_s
    pop     _castXdest5_s  # keep sign
    push    _castXori5_0
    pop     _castXdest5_0
    push    _castXori5_1
    pop     _castXdest5_1
    push    _castXori5_2
    pop     _castXdest5_2
    push    0
    pop     _castXdest5_3
    push    0
    pop     _castXdest5_4
    push    0
    pop     _castXdest5_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest5_c
    push    _castXdest5_s
    push    _castXdest5_5
    push    _castXdest5_4
    push    _castXdest5_3
    push    _castXdest5_2
    push    _castXdest5_1
    push    _castXdest5_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput5_0
    pop     _castXoutput5_1
    pop     _castXoutput5_2
    pop     _castXoutput5_3
    pop     _castXoutput5_4
    pop     _castXoutput5_5
    pop     _castXoutput5_s
    pop     _castXoutput5_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput5_c
    push    _castXoutput5_s
    push    _castXoutput5_5
    push    _castXoutput5_4
    push    _castXoutput5_3
    push    _castXoutput5_2
    push    _castXoutput5_1
    push    _castXoutput5_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    pop     _mulFPnameAX3_0
    pop     _mulFPnameAX3_1
    pop     _mulFPnameAX3_2
    pop     _mulFPnameAX3_3
    pop     _mulFPnameAX3_4
    pop     _mulFPnameAX3_5
    pop     _mulFPnameAX3_s
    pop     _mulFPnameAX3_c
    #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
    
    # upcast nameB to nameBX (from I+P to (I+P) * 2)
    #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    push    _mulFPnameB3_c
    push    _mulFPnameB3_s
    push    _mulFPnameB3_2
    push    _mulFPnameB3_1
    push    _mulFPnameB3_0
    #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
    #(begin macro)castX(IP,IP2)
    #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _castXInput6_0 - 0
    sbm _castXInput6_1 - 1
    sbm _castXInput6_2 - 2
    sbm _castXInput6_s - 3
    sbm _castXInput6_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
    #(begin macro)varX(X2,"_castXoutput" + _castX)
    var _castXoutput6_0    # 0 byte of _castXoutput6
    var _castXoutput6_1    # 1 byte of _castXoutput6
    var _castXoutput6_2    # 2 byte of _castXoutput6
    var _castXoutput6_3    # 3 byte of _castXoutput6
    var _castXoutput6_4    # 4 byte of _castXoutput6
    var _castXoutput6_5    # 5 byte of _castXoutput6
    var _castXoutput6_s    # Sign of _castXoutput6
    var _castXoutput6_c    # carry of _castXoutput6
    #(end macro)varX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXori6_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXori6_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori6_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori6_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXori6_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X1,"_castXori" + _castX)
    #(begin macro)lvarX(X2,"_castXdest" + _castX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _castXdest6_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _castXdest6_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _castXdest6_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X2,"_castXdest" + _castX)
    
    #(begin macro)pushvX(X1,"_castXInput"+_castX)
    push    _castXInput6_c
    push    _castXInput6_s
    push    _castXInput6_2
    push    _castXInput6_1
    push    _castXInput6_0
    #(end macro)pushvX(X1,"_castXInput"+_castX)
    #(begin macro)popvX(X1,"_castXori" + _castX)
    pop     _castXori6_0
    pop     _castXori6_1
    pop     _castXori6_2
    pop     _castXori6_s
    pop     _castXori6_c
    #(end macro)popvX(X1,"_castXori" + _castX)
    push    _castXori6_s
    pop     _castXdest6_s  # keep sign
    push    _castXori6_0
    pop     _castXdest6_0
    push    _castXori6_1
    pop     _castXdest6_1
    push    _castXori6_2
    pop     _castXdest6_2
    push    0
    pop     _castXdest6_3
    push    0
    pop     _castXdest6_4
    push    0
    pop     _castXdest6_5
    #(begin macro)pushvX(X2,"_castXdest" + _castX)
    push    _castXdest6_c
    push    _castXdest6_s
    push    _castXdest6_5
    push    _castXdest6_4
    push    _castXdest6_3
    push    _castXdest6_2
    push    _castXdest6_1
    push    _castXdest6_0
    #(end macro)pushvX(X2,"_castXdest" + _castX)
    #(begin macro)popvX(X2,"_castXoutput" + _castX)
    pop     _castXoutput6_0
    pop     _castXoutput6_1
    pop     _castXoutput6_2
    pop     _castXoutput6_3
    pop     _castXoutput6_4
    pop     _castXoutput6_5
    pop     _castXoutput6_s
    pop     _castXoutput6_c
    #(end macro)popvX(X2,"_castXoutput" + _castX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X1)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X1)
    #(begin macro)pushvX(X2,"_castXoutput" + _castX)
    push    _castXoutput6_c
    push    _castXoutput6_s
    push    _castXoutput6_5
    push    _castXoutput6_4
    push    _castXoutput6_3
    push    _castXoutput6_2
    push    _castXoutput6_1
    push    _castXoutput6_0
    #(end macro)pushvX(X2,"_castXoutput" + _castX)
    #(end macro)castX(IP,IP2)
    #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    pop     _mulFPnameBX3_0
    pop     _mulFPnameBX3_1
    pop     _mulFPnameBX3_2
    pop     _mulFPnameBX3_3
    pop     _mulFPnameBX3_4
    pop     _mulFPnameBX3_5
    pop     _mulFPnameBX3_s
    pop     _mulFPnameBX3_c
    #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
    
    #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameA3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameA3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameA3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)pushvX(X,nameA)
    push    _mulFPnameAX3_c
    push    _mulFPnameAX3_s
    push    _mulFPnameAX3_5
    push    _mulFPnameAX3_4
    push    _mulFPnameAX3_3
    push    _mulFPnameAX3_2
    push    _mulFPnameAX3_1
    push    _mulFPnameAX3_0
    #(end macro)pushvX(X,nameA)
    #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop     _mulvvvXabsNameA3_0
    pop     _mulvvvXabsNameA3_1
    pop     _mulvvvXabsNameA3_2
    pop     _mulvvvXabsNameA3_3
    pop     _mulvvvXabsNameA3_4
    pop     _mulvvvXabsNameA3_5
    pop     _mulvvvXabsNameA3_s
    pop     _mulvvvXabsNameA3_c
    #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsA3
    #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    push    _mulvvvXabsNameA3_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
    pop _mulvvvXsA3
    #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    push    0
    pop     _mulvvvXabsNameA3_s
    #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
    
    #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _mulvvvXabsNameB3_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _mulvvvXabsNameB3_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_5
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_4
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_3
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _mulvvvXabsNameB3_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)pushvX(X,nameB)
    push    _mulFPnameBX3_c
    push    _mulFPnameBX3_s
    push    _mulFPnameBX3_5
    push    _mulFPnameBX3_4
    push    _mulFPnameBX3_3
    push    _mulFPnameBX3_2
    push    _mulFPnameBX3_1
    push    _mulFPnameBX3_0
    #(end macro)pushvX(X,nameB)
    #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop     _mulvvvXabsNameB3_0
    pop     _mulvvvXabsNameB3_1
    pop     _mulvvvXabsNameB3_2
    pop     _mulvvvXabsNameB3_3
    pop     _mulvvvXabsNameB3_4
    pop     _mulvvvXabsNameB3_5
    pop     _mulvvvXabsNameB3_s
    pop     _mulvvvXabsNameB3_c
    #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    push 0
    sbm _mulvvvXsB3
    #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
    #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    push    _mulvvvXabsNameB3_s
    #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
    pop _mulvvvXsB3
    #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    push    0
    pop     _mulvvvXabsNameB3_s
    #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
    
    #(begin macro)resetvX(X,name)
    at _mulFPresultX3_0
      #(begin macro)resetX(X)
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf <
      bf [-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      bf >[-]
      #(end macro)resetX(X)
    ta
    #(end macro)resetvX(X,name)
    
    push    1
    sbm _mulvvvX_loop3
    while
      #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      push _mulvvvXabsNameB3_0
      bool
      push _mulvvvXabsNameB3_1
      bool
      push _mulvvvXabsNameB3_2
      bool
      push _mulvvvXabsNameB3_3
      bool
      push _mulvvvXabsNameB3_4
      bool
      push _mulvvvXabsNameB3_5
      bool
      or
      or
      or
      or
      or
      #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      if  # absNameB is not zero
        #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addvvXnameB3_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addvvXnameB3_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addvvXnameB3_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)pushvX(X,name)
        push    _mulFPresultX3_c
        push    _mulFPresultX3_s
        push    _mulFPresultX3_5
        push    _mulFPresultX3_4
        push    _mulFPresultX3_3
        push    _mulFPresultX3_2
        push    _mulFPresultX3_1
        push    _mulFPresultX3_0
        #(end macro)pushvX(X,name)
        #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
        pop     _addvvXnameB3_0
        pop     _addvvXnameB3_1
        pop     _addvvXnameB3_2
        pop     _addvvXnameB3_3
        pop     _addvvXnameB3_4
        pop     _addvvXnameB3_5
        pop     _addvvXnameB3_s
        pop     _addvvXnameB3_c
        #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
        #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        push    _addvvXnameB3_s
        push    _mulvvvXabsNameA3_s
        or
        not
        push    _addvvXnameB3_s
        push    _mulvvvXabsNameA3_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addvvXnameB3_s
          pop     _mulFPresultX3_s    # name has same sign of nameA and nameB
          push    0
          push    _addvvXnameB3_0
          #(begin macro)addof()
          sbm _addofb64
          sbm _addofa64 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc64
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao64
          while
            push _addofa64
            if
              at _addofa64
                dec
              ta
              at _addofb64
                inc
              ta
              push _addofb64
              not
              if
                at _addofc64
                  set 1
                ta
              fi
            else
              at _loopao64
                reset
              ta
            fi
          wend
          push _addofc64
          if
            at _addofa64
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_0
          push    _mulvvvXabsNameA3_0
          #(begin macro)addof()
          sbm _addofb65
          sbm _addofa65 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc65
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao65
          while
            push _addofa65
            if
              at _addofa65
                dec
              ta
              at _addofb65
                inc
              ta
              push _addofb65
              not
              if
                at _addofc65
                  set 1
                ta
              fi
            else
              at _loopao65
                reset
              ta
            fi
          wend
          push _addofc65
          if
            at _addofa65
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_0
          #(begin macro)addof()
          sbm _addofb66
          sbm _addofa66 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc66
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao66
          while
            push _addofa66
            if
              at _addofa66
                dec
              ta
              at _addofb66
                inc
              ta
              push _addofb66
              not
              if
                at _addofc66
                  set 1
                ta
              fi
            else
              at _loopao66
                reset
              ta
            fi
          wend
          push _addofc66
          if
            at _addofa66
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_0
          add
          push    _addvvXnameB3_1
          #(begin macro)addof()
          sbm _addofb67
          sbm _addofa67 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc67
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao67
          while
            push _addofa67
            if
              at _addofa67
                dec
              ta
              at _addofb67
                inc
              ta
              push _addofb67
              not
              if
                at _addofc67
                  set 1
                ta
              fi
            else
              at _loopao67
                reset
              ta
            fi
          wend
          push _addofc67
          if
            at _addofa67
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_1
          push    _mulvvvXabsNameA3_1
          #(begin macro)addof()
          sbm _addofb68
          sbm _addofa68 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc68
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao68
          while
            push _addofa68
            if
              at _addofa68
                dec
              ta
              at _addofb68
                inc
              ta
              push _addofb68
              not
              if
                at _addofc68
                  set 1
                ta
              fi
            else
              at _loopao68
                reset
              ta
            fi
          wend
          push _addofc68
          if
            at _addofa68
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_1
          #(begin macro)addof()
          sbm _addofb69
          sbm _addofa69 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc69
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao69
          while
            push _addofa69
            if
              at _addofa69
                dec
              ta
              at _addofb69
                inc
              ta
              push _addofb69
              not
              if
                at _addofc69
                  set 1
                ta
              fi
            else
              at _loopao69
                reset
              ta
            fi
          wend
          push _addofc69
          if
            at _addofa69
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_1
          add
          push    _addvvXnameB3_2
          #(begin macro)addof()
          sbm _addofb70
          sbm _addofa70 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc70
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao70
          while
            push _addofa70
            if
              at _addofa70
                dec
              ta
              at _addofb70
                inc
              ta
              push _addofb70
              not
              if
                at _addofc70
                  set 1
                ta
              fi
            else
              at _loopao70
                reset
              ta
            fi
          wend
          push _addofc70
          if
            at _addofa70
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_2
          push    _mulvvvXabsNameA3_2
          #(begin macro)addof()
          sbm _addofb71
          sbm _addofa71 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc71
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao71
          while
            push _addofa71
            if
              at _addofa71
                dec
              ta
              at _addofb71
                inc
              ta
              push _addofb71
              not
              if
                at _addofc71
                  set 1
                ta
              fi
            else
              at _loopao71
                reset
              ta
            fi
          wend
          push _addofc71
          if
            at _addofa71
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_2
          #(begin macro)addof()
          sbm _addofb72
          sbm _addofa72 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc72
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao72
          while
            push _addofa72
            if
              at _addofa72
                dec
              ta
              at _addofb72
                inc
              ta
              push _addofb72
              not
              if
                at _addofc72
                  set 1
                ta
              fi
            else
              at _loopao72
                reset
              ta
            fi
          wend
          push _addofc72
          if
            at _addofa72
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_2
          add
          push    _addvvXnameB3_3
          #(begin macro)addof()
          sbm _addofb73
          sbm _addofa73 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc73
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao73
          while
            push _addofa73
            if
              at _addofa73
                dec
              ta
              at _addofb73
                inc
              ta
              push _addofb73
              not
              if
                at _addofc73
                  set 1
                ta
              fi
            else
              at _loopao73
                reset
              ta
            fi
          wend
          push _addofc73
          if
            at _addofa73
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_3
          push    _mulvvvXabsNameA3_3
          #(begin macro)addof()
          sbm _addofb74
          sbm _addofa74 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc74
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao74
          while
            push _addofa74
            if
              at _addofa74
                dec
              ta
              at _addofb74
                inc
              ta
              push _addofb74
              not
              if
                at _addofc74
                  set 1
                ta
              fi
            else
              at _loopao74
                reset
              ta
            fi
          wend
          push _addofc74
          if
            at _addofa74
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_3
          #(begin macro)addof()
          sbm _addofb75
          sbm _addofa75 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc75
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao75
          while
            push _addofa75
            if
              at _addofa75
                dec
              ta
              at _addofb75
                inc
              ta
              push _addofb75
              not
              if
                at _addofc75
                  set 1
                ta
              fi
            else
              at _loopao75
                reset
              ta
            fi
          wend
          push _addofc75
          if
            at _addofa75
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_3
          add
          push    _addvvXnameB3_4
          #(begin macro)addof()
          sbm _addofb76
          sbm _addofa76 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc76
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao76
          while
            push _addofa76
            if
              at _addofa76
                dec
              ta
              at _addofb76
                inc
              ta
              push _addofb76
              not
              if
                at _addofc76
                  set 1
                ta
              fi
            else
              at _loopao76
                reset
              ta
            fi
          wend
          push _addofc76
          if
            at _addofa76
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_4
          push    _mulvvvXabsNameA3_4
          #(begin macro)addof()
          sbm _addofb77
          sbm _addofa77 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc77
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao77
          while
            push _addofa77
            if
              at _addofa77
                dec
              ta
              at _addofb77
                inc
              ta
              push _addofb77
              not
              if
                at _addofc77
                  set 1
                ta
              fi
            else
              at _loopao77
                reset
              ta
            fi
          wend
          push _addofc77
          if
            at _addofa77
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_4
          #(begin macro)addof()
          sbm _addofb78
          sbm _addofa78 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc78
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao78
          while
            push _addofa78
            if
              at _addofa78
                dec
              ta
              at _addofb78
                inc
              ta
              push _addofb78
              not
              if
                at _addofc78
                  set 1
                ta
              fi
            else
              at _loopao78
                reset
              ta
            fi
          wend
          push _addofc78
          if
            at _addofa78
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_4
          add
          push    _addvvXnameB3_5
          #(begin macro)addof()
          sbm _addofb79
          sbm _addofa79 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc79
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao79
          while
            push _addofa79
            if
              at _addofa79
                dec
              ta
              at _addofb79
                inc
              ta
              push _addofb79
              not
              if
                at _addofc79
                  set 1
                ta
              fi
            else
              at _loopao79
                reset
              ta
            fi
          wend
          push _addofc79
          if
            at _addofa79
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_5
          push    _mulvvvXabsNameA3_5
          #(begin macro)addof()
          sbm _addofb80
          sbm _addofa80 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc80
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao80
          while
            push _addofa80
            if
              at _addofa80
                dec
              ta
              at _addofb80
                inc
              ta
              push _addofb80
              not
              if
                at _addofc80
                  set 1
                ta
              fi
            else
              at _loopao80
                reset
              ta
            fi
          wend
          push _addofc80
          if
            at _addofa80
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _mulFPresultX3_5
          #(begin macro)addof()
          sbm _addofb81
          sbm _addofa81 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc81
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao81
          while
            push _addofa81
            if
              at _addofa81
                dec
              ta
              at _addofb81
                inc
              ta
              push _addofb81
              not
              if
                at _addofc81
                  set 1
                ta
              fi
            else
              at _loopao81
                reset
              ta
            fi
          wend
          push _addofc81
          if
            at _addofa81
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _mulFPresultX3_5
          add
          pop     _mulFPresultX3_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb6
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb6
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addvvXnameB3_5
          push    _mulvvvXabsNameA3_5
          sup
          if
            at _asupb6
              set 1
            ta
          else
            push    _addvvXnameB3_5
            push    _mulvvvXabsNameA3_5
            diff
            if
              at _asupb6
                reset
              ta
            else
              push    _addvvXnameB3_4
              push    _mulvvvXabsNameA3_4
              sup
              if
                at _asupb6
                  set 1
                ta
              else
                push    _addvvXnameB3_4
                push    _mulvvvXabsNameA3_4
                diff
                if
                  at _asupb6
                    reset
                  ta
                else
                  push    _addvvXnameB3_3
                  push    _mulvvvXabsNameA3_3
                  sup
                  if
                    at _asupb6
                      set 1
                    ta
                  else
                    push    _addvvXnameB3_3
                    push    _mulvvvXabsNameA3_3
                    diff
                    if
                      at _asupb6
                        reset
                      ta
                    else
                      push    _addvvXnameB3_2
                      push    _mulvvvXabsNameA3_2
                      sup
                      if
                        at _asupb6
                          set 1
                        ta
                      else
                        push    _addvvXnameB3_2
                        push    _mulvvvXabsNameA3_2
                        diff
                        if
                          at _asupb6
                            reset
                          ta
                        else
                          push    _addvvXnameB3_1
                          push    _mulvvvXabsNameA3_1
                          sup
                          if
                            at _asupb6
                              set 1
                            ta
                          else
                            push    _addvvXnameB3_1
                            push    _mulvvvXabsNameA3_1
                            diff
                            if
                              at _asupb6
                                reset
                              ta
                            else
                              push    _addvvXnameB3_0
                              push    _mulvvvXabsNameA3_0
                              sup
                              if
                                at _asupb6
                                  set 1
                                ta
                              else
                                push    _addvvXnameB3_0
                                push    _mulvvvXabsNameA3_0
                                diff
                                if
                                  at _asupb6
                                    reset
                                  ta
                                else
                                  at _aequb6
                                    set 1
                                  ta
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb6
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addvvXnameB3_s
            pop     _mulFPresultX3_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry6
            push    _addvvXnameB3_0
            push    _mulvvvXabsNameA3_0
            #(begin macro)subof()
            sbm _subofb85
            sbm _subofa85 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc85
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso85
            while
              push _subofb85
              if
                at _subofb85
                  dec
                ta
                at _subofa85
                  dec
                ta
                push _subofa85
                inc
                not
                if
                  at _subofc85
                    set 1
                  ta
                fi
              else
                at _loopso85
                  reset
                ta
              fi
            wend
            push _subofc85
            if
              at _subofb85
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb86
            sbm _subofa86 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc86
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso86
            while
              push _subofb86
              if
                at _subofb86
                  dec
                ta
                at _subofa86
                  dec
                ta
                push _subofa86
                inc
                not
                if
                  at _subofc86
                    set 1
                  ta
                fi
              else
                at _loopso86
                  reset
                ta
              fi
            wend
            push _subofc86
            if
              at _subofb86
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_0
            add
            pop     _addvvvXCarry6
            push    _addvvXnameB3_1
            push    _mulvvvXabsNameA3_1
            #(begin macro)subof()
            sbm _subofb87
            sbm _subofa87 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc87
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso87
            while
              push _subofb87
              if
                at _subofb87
                  dec
                ta
                at _subofa87
                  dec
                ta
                push _subofa87
                inc
                not
                if
                  at _subofc87
                    set 1
                  ta
                fi
              else
                at _loopso87
                  reset
                ta
              fi
            wend
            push _subofc87
            if
              at _subofb87
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb88
            sbm _subofa88 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc88
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso88
            while
              push _subofb88
              if
                at _subofb88
                  dec
                ta
                at _subofa88
                  dec
                ta
                push _subofa88
                inc
                not
                if
                  at _subofc88
                    set 1
                  ta
                fi
              else
                at _loopso88
                  reset
                ta
              fi
            wend
            push _subofc88
            if
              at _subofb88
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_1
            add
            pop     _addvvvXCarry6
            push    _addvvXnameB3_2
            push    _mulvvvXabsNameA3_2
            #(begin macro)subof()
            sbm _subofb89
            sbm _subofa89 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc89
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso89
            while
              push _subofb89
              if
                at _subofb89
                  dec
                ta
                at _subofa89
                  dec
                ta
                push _subofa89
                inc
                not
                if
                  at _subofc89
                    set 1
                  ta
                fi
              else
                at _loopso89
                  reset
                ta
              fi
            wend
            push _subofc89
            if
              at _subofb89
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb90
            sbm _subofa90 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc90
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso90
            while
              push _subofb90
              if
                at _subofb90
                  dec
                ta
                at _subofa90
                  dec
                ta
                push _subofa90
                inc
                not
                if
                  at _subofc90
                    set 1
                  ta
                fi
              else
                at _loopso90
                  reset
                ta
              fi
            wend
            push _subofc90
            if
              at _subofb90
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_2
            add
            pop     _addvvvXCarry6
            push    _addvvXnameB3_3
            push    _mulvvvXabsNameA3_3
            #(begin macro)subof()
            sbm _subofb91
            sbm _subofa91 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc91
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso91
            while
              push _subofb91
              if
                at _subofb91
                  dec
                ta
                at _subofa91
                  dec
                ta
                push _subofa91
                inc
                not
                if
                  at _subofc91
                    set 1
                  ta
                fi
              else
                at _loopso91
                  reset
                ta
              fi
            wend
            push _subofc91
            if
              at _subofb91
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb92
            sbm _subofa92 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc92
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso92
            while
              push _subofb92
              if
                at _subofb92
                  dec
                ta
                at _subofa92
                  dec
                ta
                push _subofa92
                inc
                not
                if
                  at _subofc92
                    set 1
                  ta
                fi
              else
                at _loopso92
                  reset
                ta
              fi
            wend
            push _subofc92
            if
              at _subofb92
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_3
            add
            pop     _addvvvXCarry6
            push    _addvvXnameB3_4
            push    _mulvvvXabsNameA3_4
            #(begin macro)subof()
            sbm _subofb93
            sbm _subofa93 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc93
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso93
            while
              push _subofb93
              if
                at _subofb93
                  dec
                ta
                at _subofa93
                  dec
                ta
                push _subofa93
                inc
                not
                if
                  at _subofc93
                    set 1
                  ta
                fi
              else
                at _loopso93
                  reset
                ta
              fi
            wend
            push _subofc93
            if
              at _subofb93
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb94
            sbm _subofa94 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc94
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso94
            while
              push _subofb94
              if
                at _subofb94
                  dec
                ta
                at _subofa94
                  dec
                ta
                push _subofa94
                inc
                not
                if
                  at _subofc94
                    set 1
                  ta
                fi
              else
                at _loopso94
                  reset
                ta
              fi
            wend
            push _subofc94
            if
              at _subofb94
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_4
            add
            pop     _addvvvXCarry6
            push    _addvvXnameB3_5
            push    _mulvvvXabsNameA3_5
            #(begin macro)subof()
            sbm _subofb95
            sbm _subofa95 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc95
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso95
            while
              push _subofb95
              if
                at _subofb95
                  dec
                ta
                at _subofa95
                  dec
                ta
                push _subofa95
                inc
                not
                if
                  at _subofc95
                    set 1
                  ta
                fi
              else
                at _loopso95
                  reset
                ta
              fi
            wend
            push _subofc95
            if
              at _subofb95
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry6
            #(begin macro)subof()
            sbm _subofb96
            sbm _subofa96 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc96
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso96
            while
              push _subofb96
              if
                at _subofb96
                  dec
                ta
                at _subofa96
                  dec
                ta
                push _subofa96
                inc
                not
                if
                  at _subofc96
                    set 1
                  ta
                fi
              else
                at _loopso96
                  reset
                ta
              fi
            wend
            push _subofc96
            if
              at _subofb96
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _mulFPresultX3_5
            add
            pop     _addvvvXCarry6
            pop     _mulFPresultX3_c
          else # absB >= absA :
            push    _aequb6
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _mulFPresultX3_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _mulvvvXabsNameA3_s
              pop     _mulFPresultX3_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry6
              push    _mulvvvXabsNameA3_0
              push    _addvvXnameB3_0
              #(begin macro)subof()
              sbm _subofb97
              sbm _subofa97 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc97
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso97
              while
                push _subofb97
                if
                  at _subofb97
                    dec
                  ta
                  at _subofa97
                    dec
                  ta
                  push _subofa97
                  inc
                  not
                  if
                    at _subofc97
                      set 1
                    ta
                  fi
                else
                  at _loopso97
                    reset
                  ta
                fi
              wend
              push _subofc97
              if
                at _subofb97
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb98
              sbm _subofa98 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc98
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso98
              while
                push _subofb98
                if
                  at _subofb98
                    dec
                  ta
                  at _subofa98
                    dec
                  ta
                  push _subofa98
                  inc
                  not
                  if
                    at _subofc98
                      set 1
                    ta
                  fi
                else
                  at _loopso98
                    reset
                  ta
                fi
              wend
              push _subofc98
              if
                at _subofb98
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_0
              add
              pop     _addvvvXCarry6
              push    _mulvvvXabsNameA3_1
              push    _addvvXnameB3_1
              #(begin macro)subof()
              sbm _subofb99
              sbm _subofa99 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc99
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso99
              while
                push _subofb99
                if
                  at _subofb99
                    dec
                  ta
                  at _subofa99
                    dec
                  ta
                  push _subofa99
                  inc
                  not
                  if
                    at _subofc99
                      set 1
                    ta
                  fi
                else
                  at _loopso99
                    reset
                  ta
                fi
              wend
              push _subofc99
              if
                at _subofb99
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb100
              sbm _subofa100 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc100
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso100
              while
                push _subofb100
                if
                  at _subofb100
                    dec
                  ta
                  at _subofa100
                    dec
                  ta
                  push _subofa100
                  inc
                  not
                  if
                    at _subofc100
                      set 1
                    ta
                  fi
                else
                  at _loopso100
                    reset
                  ta
                fi
              wend
              push _subofc100
              if
                at _subofb100
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_1
              add
              pop     _addvvvXCarry6
              push    _mulvvvXabsNameA3_2
              push    _addvvXnameB3_2
              #(begin macro)subof()
              sbm _subofb101
              sbm _subofa101 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc101
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso101
              while
                push _subofb101
                if
                  at _subofb101
                    dec
                  ta
                  at _subofa101
                    dec
                  ta
                  push _subofa101
                  inc
                  not
                  if
                    at _subofc101
                      set 1
                    ta
                  fi
                else
                  at _loopso101
                    reset
                  ta
                fi
              wend
              push _subofc101
              if
                at _subofb101
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb102
              sbm _subofa102 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc102
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso102
              while
                push _subofb102
                if
                  at _subofb102
                    dec
                  ta
                  at _subofa102
                    dec
                  ta
                  push _subofa102
                  inc
                  not
                  if
                    at _subofc102
                      set 1
                    ta
                  fi
                else
                  at _loopso102
                    reset
                  ta
                fi
              wend
              push _subofc102
              if
                at _subofb102
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_2
              add
              pop     _addvvvXCarry6
              push    _mulvvvXabsNameA3_3
              push    _addvvXnameB3_3
              #(begin macro)subof()
              sbm _subofb103
              sbm _subofa103 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc103
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso103
              while
                push _subofb103
                if
                  at _subofb103
                    dec
                  ta
                  at _subofa103
                    dec
                  ta
                  push _subofa103
                  inc
                  not
                  if
                    at _subofc103
                      set 1
                    ta
                  fi
                else
                  at _loopso103
                    reset
                  ta
                fi
              wend
              push _subofc103
              if
                at _subofb103
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb104
              sbm _subofa104 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc104
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso104
              while
                push _subofb104
                if
                  at _subofb104
                    dec
                  ta
                  at _subofa104
                    dec
                  ta
                  push _subofa104
                  inc
                  not
                  if
                    at _subofc104
                      set 1
                    ta
                  fi
                else
                  at _loopso104
                    reset
                  ta
                fi
              wend
              push _subofc104
              if
                at _subofb104
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_3
              add
              pop     _addvvvXCarry6
              push    _mulvvvXabsNameA3_4
              push    _addvvXnameB3_4
              #(begin macro)subof()
              sbm _subofb105
              sbm _subofa105 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc105
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso105
              while
                push _subofb105
                if
                  at _subofb105
                    dec
                  ta
                  at _subofa105
                    dec
                  ta
                  push _subofa105
                  inc
                  not
                  if
                    at _subofc105
                      set 1
                    ta
                  fi
                else
                  at _loopso105
                    reset
                  ta
                fi
              wend
              push _subofc105
              if
                at _subofb105
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb106
              sbm _subofa106 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc106
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso106
              while
                push _subofb106
                if
                  at _subofb106
                    dec
                  ta
                  at _subofa106
                    dec
                  ta
                  push _subofa106
                  inc
                  not
                  if
                    at _subofc106
                      set 1
                    ta
                  fi
                else
                  at _loopso106
                    reset
                  ta
                fi
              wend
              push _subofc106
              if
                at _subofb106
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_4
              add
              pop     _addvvvXCarry6
              push    _mulvvvXabsNameA3_5
              push    _addvvXnameB3_5
              #(begin macro)subof()
              sbm _subofb107
              sbm _subofa107 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc107
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso107
              while
                push _subofb107
                if
                  at _subofb107
                    dec
                  ta
                  at _subofa107
                    dec
                  ta
                  push _subofa107
                  inc
                  not
                  if
                    at _subofc107
                      set 1
                    ta
                  fi
                else
                  at _loopso107
                    reset
                  ta
                fi
              wend
              push _subofc107
              if
                at _subofb107
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry6
              #(begin macro)subof()
              sbm _subofb108
              sbm _subofa108 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc108
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso108
              while
                push _subofb108
                if
                  at _subofb108
                    dec
                  ta
                  at _subofa108
                    dec
                  ta
                  push _subofa108
                  inc
                  not
                  if
                    at _subofc108
                      set 1
                    ta
                  fi
                else
                  at _loopso108
                    reset
                  ta
                fi
              wend
              push _subofc108
              if
                at _subofb108
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _mulFPresultX3_5
              add
              pop     _addvvvXCarry6
              pop     _mulFPresultX3_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)if_equal(name +"_s",1)  # negative number
        push _mulvvvXabsNameB3_s
        push 1
        equal
        if
          #(end macro)if_equal(name +"_s",1)  # negative number
          #(begin macro)at_inc(name + "_" + xx)
          #(begin macro)at_1("inc",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB3_0
            inc 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("inc",a)
          #(end macro)at_inc(name + "_" + xx)
          #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
          push _mulvvvXabsNameB3_0
          push 0
          equal
          if
            #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            #(begin macro)at_inc(name + "_" + xx)
            #(begin macro)at_1("inc",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB3_1
              inc 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("inc",a)
            #(end macro)at_inc(name + "_" + xx)
            #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
            push _mulvvvXabsNameB3_1
            push 0
            equal
            if
              #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB3_2
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB3_2
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB3_3
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB3_3
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB3_4
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB3_4
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB3_5
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB3_5
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)setcvX(X, name) ## set carry (overflow)
                      #(begin macro)at_set(name+"_c",1)
                      #(begin macro)at_2("set",a,b)
                      at _mulvvvXabsNameB3_c
                        set 1
                      ta
                      #(end macro)at_2("set",a,b)
                      #(end macro)at_set(name+"_c",1)
                      #(end macro)setcvX(X, name) ## set carry (overflow)
                    fi
                  fi
                fi
              fi
            fi
          fi
        else    # positive number
          #(begin macro)at_dec(name + "_" + xx)
          #(begin macro)at_1("dec",a)
          #(begin macro)at_2(ope,a,"")
          at _mulvvvXabsNameB3_0
            dec 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("dec",a)
          #(end macro)at_dec(name + "_" + xx)
          #(begin macro)if_equal(name +"_" + xx,255) # reduced
          push _mulvvvXabsNameB3_0
          push 255
          equal
          if
            #(end macro)if_equal(name +"_" + xx,255) # reduced
            #(begin macro)at_dec(name + "_" + xx)
            #(begin macro)at_1("dec",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvXabsNameB3_1
              dec 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("dec",a)
            #(end macro)at_dec(name + "_" + xx)
            #(begin macro)if_equal(name +"_" + xx,255) # reduced
            push _mulvvvXabsNameB3_1
            push 255
            equal
            if
              #(end macro)if_equal(name +"_" + xx,255) # reduced
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB3_2
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB3_2
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB3_3
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB3_3
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB3_4
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB3_4
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB3_5
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB3_5
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)setvX(X,name,-1)
                      at _mulvvvXabsNameB3_0
                        #(begin macro)setX(X,immValue)
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        bf <
                        reset
                        bf  >
                        set 1
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    0
                        bf >
                        set    1
                        #(end macro)setX(X,immValue)
                      ta
                      #(end macro)setvX(X,name,-1)
                    fi
                  fi
                fi
              fi
            fi
          fi
        fi
        #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
      else
        #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
        #(begin macro)at_1("reset",a)
        #(begin macro)at_2(ope,a,"")
        at _mulvvvX_loop3
          reset 
        ta
        #(end macro)at_2(ope,a,"")
        #(end macro)at_1("reset",a)
        #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
      fi
    wend
    # resolve sign
    push _mulvvvXsA3
    push _mulvvvXsB3
    diff    # if sign(nameA) <> sign(nameB) then name is negative
    if
      #(begin macro)at_set(name +"_s",1)
      #(begin macro)at_2("set",a,b)
      at _mulFPresultX3_s
        set 1
      ta
      #(end macro)at_2("set",a,b)
      #(end macro)at_set(name +"_s",1)
    fi
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
    
    #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    push    _mulFPresultX3_c
    push    _mulFPresultX3_s
    push    _mulFPresultX3_5
    push    _mulFPresultX3_4
    push    _mulFPresultX3_3
    push    _mulFPresultX3_2
    push    _mulFPresultX3_1
    push    _mulFPresultX3_0
    #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
    #(begin macro)castFP(I+I,P+P, I,P)
    #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
    var _castFPinstack3_0    # 0 byte of _castFPinstack3
    var _castFPinstack3_1    # 1 byte of _castFPinstack3
    var _castFPinstack3_2    # 2 byte of _castFPinstack3
    var _castFPinstack3_3    # 3 byte of _castFPinstack3
    var _castFPinstack3_4    # 4 byte of _castFPinstack3
    var _castFPinstack3_5    # 5 byte of _castFPinstack3
    var _castFPinstack3_s    # Sign of _castFPinstack3
    var _castFPinstack3_c    # carry of _castFPinstack3
    #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
    #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
    var _castFPoutstack3_0    # 0 byte of _castFPoutstack3
    var _castFPoutstack3_1    # 1 byte of _castFPoutstack3
    var _castFPoutstack3_2    # 2 byte of _castFPoutstack3
    var _castFPoutstack3_s    # Sign of _castFPoutstack3
    var _castFPoutstack3_c    # carry of _castFPoutstack3
    #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
    
    #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
    pop     _castFPinstack3_0
    pop     _castFPinstack3_1
    pop     _castFPinstack3_2
    pop     _castFPinstack3_3
    pop     _castFPinstack3_4
    pop     _castFPinstack3_5
    pop     _castFPinstack3_s
    pop     _castFPinstack3_c
    #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
    # reset outstack
    #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    at _castFPoutstack3_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
    # sign
    push _castFPinstack3_s
    pop _castFPoutstack3_s
    # integer part
    push _castFPinstack3_4
    pop _castFPoutstack3_2
    # fract part
    push _castFPinstack3_3
    pop _castFPoutstack3_1
    push _castFPinstack3_2
    pop _castFPoutstack3_0
    #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    push    _castFPoutstack3_c
    push    _castFPoutstack3_s
    push    _castFPoutstack3_2
    push    _castFPoutstack3_1
    push    _castFPoutstack3_0
    #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
    #(end macro)castFP(I+I,P+P, I,P)
    #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
    pop     _mulFPnameA3_0
    pop     _mulFPnameA3_1
    pop     _mulFPnameA3_2
    pop     _mulFPnameA3_s
    pop     _mulFPnameA3_c
    #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(IP) # drop nameB
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(IP) # drop nameB
    #(end macro)mulFP(FP_I,FP_P)
    #(begin macro)pushFP(FP_I,FP_P,moveX)
    #(begin macro)pushX(I+P,0)
    push    0
    push    0
    push    0
    push    0
    push    0
    #(end macro)pushX(I+P,0)
    #(begin macro)setFP(I,P,immValue)
    #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _setFPinstack7_0 - 0
    sbm _setFPinstack7_1 - 1
    sbm _setFPinstack7_2 - 2
    sbm _setFPinstack7_s - 3
    sbm _setFPinstack7_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
    #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    at _setFPinstack7_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 1
      bf >
      set    0
      bf >
      set    128
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
    #(end macro)setFP(I,P,immValue)
    #(end macro)pushFP(FP_I,FP_P,moveX)
    #(begin macro)addX(FP)
    #(begin macro)sbmX(X, "_addXName"+ _addX, 1)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _addXName2_0 - 5
    sbm _addXName2_1 - 6
    sbm _addXName2_2 - 7
    sbm _addXName2_s - 8
    sbm _addXName2_c - 9
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_addXName"+ _addX, 1)
    #(begin macro)sbmX(X, "_addXNameB"+ _addX, 0)
    #(begin macro)sbmX2(X,name,backward,0)
    sbm _addXNameB2_0 - 0
    sbm _addXNameB2_1 - 1
    sbm _addXNameB2_2 - 2
    sbm _addXNameB2_s - 3
    sbm _addXNameB2_c - 4
    #(end macro)sbmX2(X,name,backward,0)
    #(end macro)sbmX(X, "_addXNameB"+ _addX, 0)
    #(begin macro)scope_begin()
    #(end macro)scope_begin()
    #(begin macro)lvarX(X,"_addXNameA"+_addX)
    #(begin macro)lvar(name + "_c",0)
    push 0
    sbm _addXNameA2_c
    #(end macro)lvar(name + "_c",0)
    #(begin macro)lvar(name + "_s",0)
    push 0
    sbm _addXNameA2_s
    #(end macro)lvar(name + "_s",0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA2_2
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA2_1
    #(end macro)lvar(name + "_"+ xx1,0)
    #(begin macro)lvar(name + "_"+ xx1,0)
    push 0
    sbm _addXNameA2_0
    #(end macro)lvar(name + "_"+ xx1,0)
    #(end macro)lvarX(X,"_addXNameA"+_addX)
    #(begin macro)pushvX(X,"_addXName"+_addX)
    push    _addXName2_c
    push    _addXName2_s
    push    _addXName2_2
    push    _addXName2_1
    push    _addXName2_0
    #(end macro)pushvX(X,"_addXName"+_addX)
    #(begin macro)popvX(X,"_addXNameA"+_addX)
    pop     _addXNameA2_0
    pop     _addXNameA2_1
    pop     _addXNameA2_2
    pop     _addXNameA2_s
    pop     _addXNameA2_c
    #(end macro)popvX(X,"_addXNameA"+_addX)
    #(begin macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
    push    _addXNameA2_s
    push    _addXNameB2_s
    or
    not
    push    _addXNameA2_s
    push    _addXNameB2_s
    and
    or
    if      # nameA and nameB are both positive or negative
      push    _addXNameA2_s
      pop     _addXName2_s    # name has same sign of nameA and nameB
      push    0
      push    _addXNameA2_0
      #(begin macro)addof()
      sbm _addofb82
      sbm _addofa82 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc82
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao82
      while
        push _addofa82
        if
          at _addofa82
            dec
          ta
          at _addofb82
            inc
          ta
          push _addofb82
          not
          if
            at _addofc82
              set 1
            ta
          fi
        else
          at _loopao82
            reset
          ta
        fi
      wend
      push _addofc82
      if
        at _addofa82
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_0
      push    _addXNameB2_0
      #(begin macro)addof()
      sbm _addofb83
      sbm _addofa83 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc83
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao83
      while
        push _addofa83
        if
          at _addofa83
            dec
          ta
          at _addofb83
            inc
          ta
          push _addofb83
          not
          if
            at _addofc83
              set 1
            ta
          fi
        else
          at _loopao83
            reset
          ta
        fi
      wend
      push _addofc83
      if
        at _addofa83
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName2_0
      #(begin macro)addof()
      sbm _addofb84
      sbm _addofa84 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc84
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao84
      while
        push _addofa84
        if
          at _addofa84
            dec
          ta
          at _addofb84
            inc
          ta
          push _addofb84
          not
          if
            at _addofc84
              set 1
            ta
          fi
        else
          at _loopao84
            reset
          ta
        fi
      wend
      push _addofc84
      if
        at _addofa84
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_0
      add
      push    _addXNameA2_1
      #(begin macro)addof()
      sbm _addofb85
      sbm _addofa85 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc85
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao85
      while
        push _addofa85
        if
          at _addofa85
            dec
          ta
          at _addofb85
            inc
          ta
          push _addofb85
          not
          if
            at _addofc85
              set 1
            ta
          fi
        else
          at _loopao85
            reset
          ta
        fi
      wend
      push _addofc85
      if
        at _addofa85
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_1
      push    _addXNameB2_1
      #(begin macro)addof()
      sbm _addofb86
      sbm _addofa86 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc86
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao86
      while
        push _addofa86
        if
          at _addofa86
            dec
          ta
          at _addofb86
            inc
          ta
          push _addofb86
          not
          if
            at _addofc86
              set 1
            ta
          fi
        else
          at _loopao86
            reset
          ta
        fi
      wend
      push _addofc86
      if
        at _addofa86
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName2_1
      #(begin macro)addof()
      sbm _addofb87
      sbm _addofa87 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc87
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao87
      while
        push _addofa87
        if
          at _addofa87
            dec
          ta
          at _addofb87
            inc
          ta
          push _addofb87
          not
          if
            at _addofc87
              set 1
            ta
          fi
        else
          at _loopao87
            reset
          ta
        fi
      wend
      push _addofc87
      if
        at _addofa87
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_1
      add
      push    _addXNameA2_2
      #(begin macro)addof()
      sbm _addofb88
      sbm _addofa88 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc88
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao88
      while
        push _addofa88
        if
          at _addofa88
            dec
          ta
          at _addofb88
            inc
          ta
          push _addofb88
          not
          if
            at _addofc88
              set 1
            ta
          fi
        else
          at _loopao88
            reset
          ta
        fi
      wend
      push _addofc88
      if
        at _addofa88
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_2
      push    _addXNameB2_2
      #(begin macro)addof()
      sbm _addofb89
      sbm _addofa89 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc89
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao89
      while
        push _addofa89
        if
          at _addofa89
            dec
          ta
          at _addofb89
            inc
          ta
          push _addofb89
          not
          if
            at _addofc89
              set 1
            ta
          fi
        else
          at _loopao89
            reset
          ta
        fi
      wend
      push _addofc89
      if
        at _addofa89
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      push    _addXName2_2
      #(begin macro)addof()
      sbm _addofb90
      sbm _addofa90 - 1
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_addofc"+_addof ,0)
      push 0
      sbm _addofc90
      #(end macro)lvar("_addofc"+_addof ,0)
      push 1
      sbm _loopao90
      while
        push _addofa90
        if
          at _addofa90
            dec
          ta
          at _addofb90
            inc
          ta
          push _addofb90
          not
          if
            at _addofc90
              set 1
            ta
          fi
        else
          at _loopao90
            reset
          ta
        fi
      wend
      push _addofc90
      if
        at _addofa90
          set 1
        ta
      fi
      #(begin macro)scope_end()
      drop
      #(end macro)scope_end()
      #(end macro)addof()
      pop     _addXName2_2
      add
      pop     _addXName2_c
    else  # nameA has a different sign of nameB
      #(begin macro)scope_begin()
      #(end macro)scope_begin()
      #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      push 0
      sbm _asupb7
      #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
      #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push 0
      sbm _aequb7
      #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
      push    _addXNameA2_2
      push    _addXNameB2_2
      sup
      if
        at _asupb7
          set 1
        ta
      else
        push    _addXNameA2_2
        push    _addXNameB2_2
        diff
        if
          at _asupb7
            reset
          ta
        else
          push    _addXNameA2_1
          push    _addXNameB2_1
          sup
          if
            at _asupb7
              set 1
            ta
          else
            push    _addXNameA2_1
            push    _addXNameB2_1
            diff
            if
              at _asupb7
                reset
              ta
            else
              push    _addXNameA2_0
              push    _addXNameB2_0
              sup
              if
                at _asupb7
                  set 1
                ta
              else
                push    _addXNameA2_0
                push    _addXNameB2_0
                diff
                if
                  at _asupb7
                    reset
                  ta
                else
                  at _aequb7
                    set 1
                  ta
                fi
              fi
            fi
          fi
        fi
      fi
      push _asupb7
      if  # absA > absB : do  absA-absB with sign of A
        # print("absA > absB\n")
        push    _addXNameA2_s
        pop     _addXName2_s    # name has same sign of nameA
        
        push    0
        sbm     _addvvvXCarry7
        push    _addXNameA2_0
        push    _addXNameB2_0
        #(begin macro)subof()
        sbm _subofb109
        sbm _subofa109 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc109
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso109
        while
          push _subofb109
          if
            at _subofb109
              dec
            ta
            at _subofa109
              dec
            ta
            push _subofa109
            inc
            not
            if
              at _subofc109
                set 1
              ta
            fi
          else
            at _loopso109
              reset
            ta
          fi
        wend
        push _subofc109
        if
          at _subofb109
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry7
        #(begin macro)subof()
        sbm _subofb110
        sbm _subofa110 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc110
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso110
        while
          push _subofb110
          if
            at _subofb110
              dec
            ta
            at _subofa110
              dec
            ta
            push _subofa110
            inc
            not
            if
              at _subofc110
                set 1
              ta
            fi
          else
            at _loopso110
              reset
            ta
          fi
        wend
        push _subofc110
        if
          at _subofb110
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName2_0
        add
        pop     _addvvvXCarry7
        push    _addXNameA2_1
        push    _addXNameB2_1
        #(begin macro)subof()
        sbm _subofb111
        sbm _subofa111 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc111
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso111
        while
          push _subofb111
          if
            at _subofb111
              dec
            ta
            at _subofa111
              dec
            ta
            push _subofa111
            inc
            not
            if
              at _subofc111
                set 1
              ta
            fi
          else
            at _loopso111
              reset
            ta
          fi
        wend
        push _subofc111
        if
          at _subofb111
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry7
        #(begin macro)subof()
        sbm _subofb112
        sbm _subofa112 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc112
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso112
        while
          push _subofb112
          if
            at _subofb112
              dec
            ta
            at _subofa112
              dec
            ta
            push _subofa112
            inc
            not
            if
              at _subofc112
                set 1
              ta
            fi
          else
            at _loopso112
              reset
            ta
          fi
        wend
        push _subofc112
        if
          at _subofb112
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName2_1
        add
        pop     _addvvvXCarry7
        push    _addXNameA2_2
        push    _addXNameB2_2
        #(begin macro)subof()
        sbm _subofb113
        sbm _subofa113 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc113
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso113
        while
          push _subofb113
          if
            at _subofb113
              dec
            ta
            at _subofa113
              dec
            ta
            push _subofa113
            inc
            not
            if
              at _subofc113
                set 1
              ta
            fi
          else
            at _loopso113
              reset
            ta
          fi
        wend
        push _subofc113
        if
          at _subofb113
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        push    _addvvvXCarry7
        #(begin macro)subof()
        sbm _subofb114
        sbm _subofa114 - 1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvar("_subofc"+_subof ,0)
        push 0
        sbm _subofc114
        #(end macro)lvar("_subofc"+_subof ,0)
        push 1
        sbm _loopso114
        while
          push _subofb114
          if
            at _subofb114
              dec
            ta
            at _subofa114
              dec
            ta
            push _subofa114
            inc
            not
            if
              at _subofc114
                set 1
              ta
            fi
          else
            at _loopso114
              reset
            ta
          fi
        wend
        push _subofc114
        if
          at _subofb114
            set 1
          ta
        fi
        #(begin macro)scope_end()
        drop
        #(end macro)scope_end()
        swap
        #(end macro)subof()
        pop     _addXName2_2
        add
        pop     _addvvvXCarry7
        pop     _addXName2_c
      else # absB >= absA :
        push    _aequb7
        if # absA == absB , then name =0 (opposite sign then sum is zero)
          #print("absA == absB\n")
          #(begin macro)setvX(X,name,0)
          at _addXName2_0
            #(begin macro)setX(X,immValue)
            bf <
            bf <
            bf <
            bf <
            reset
            bf  >
            set 0
            bf >
            set    0
            bf >
            set    0
            bf >
            set    0
            #(end macro)setX(X,immValue)
          ta
          #(end macro)setvX(X,name,0)
        else # absA < absB : do   absB-absA with sign of B
          #print("absA < absB\n")
          push    _addXNameB2_s
          pop     _addXName2_s    # name has same sign of nameB
          
          push    0
          sbm     _addvvvXCarry7
          push    _addXNameB2_0
          push    _addXNameA2_0
          #(begin macro)subof()
          sbm _subofb115
          sbm _subofa115 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc115
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso115
          while
            push _subofb115
            if
              at _subofb115
                dec
              ta
              at _subofa115
                dec
              ta
              push _subofa115
              inc
              not
              if
                at _subofc115
                  set 1
                ta
              fi
            else
              at _loopso115
                reset
              ta
            fi
          wend
          push _subofc115
          if
            at _subofb115
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry7
          #(begin macro)subof()
          sbm _subofb116
          sbm _subofa116 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc116
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso116
          while
            push _subofb116
            if
              at _subofb116
                dec
              ta
              at _subofa116
                dec
              ta
              push _subofa116
              inc
              not
              if
                at _subofc116
                  set 1
                ta
              fi
            else
              at _loopso116
                reset
              ta
            fi
          wend
          push _subofc116
          if
            at _subofb116
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName2_0
          add
          pop     _addvvvXCarry7
          push    _addXNameB2_1
          push    _addXNameA2_1
          #(begin macro)subof()
          sbm _subofb117
          sbm _subofa117 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc117
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso117
          while
            push _subofb117
            if
              at _subofb117
                dec
              ta
              at _subofa117
                dec
              ta
              push _subofa117
              inc
              not
              if
                at _subofc117
                  set 1
                ta
              fi
            else
              at _loopso117
                reset
              ta
            fi
          wend
          push _subofc117
          if
            at _subofb117
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry7
          #(begin macro)subof()
          sbm _subofb118
          sbm _subofa118 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc118
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso118
          while
            push _subofb118
            if
              at _subofb118
                dec
              ta
              at _subofa118
                dec
              ta
              push _subofa118
              inc
              not
              if
                at _subofc118
                  set 1
                ta
              fi
            else
              at _loopso118
                reset
              ta
            fi
          wend
          push _subofc118
          if
            at _subofb118
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName2_1
          add
          pop     _addvvvXCarry7
          push    _addXNameB2_2
          push    _addXNameA2_2
          #(begin macro)subof()
          sbm _subofb119
          sbm _subofa119 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc119
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso119
          while
            push _subofb119
            if
              at _subofb119
                dec
              ta
              at _subofa119
                dec
              ta
              push _subofa119
              inc
              not
              if
                at _subofc119
                  set 1
                ta
              fi
            else
              at _loopso119
                reset
              ta
            fi
          wend
          push _subofc119
          if
            at _subofb119
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          push    _addvvvXCarry7
          #(begin macro)subof()
          sbm _subofb120
          sbm _subofa120 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_subofc"+_subof ,0)
          push 0
          sbm _subofc120
          #(end macro)lvar("_subofc"+_subof ,0)
          push 1
          sbm _loopso120
          while
            push _subofb120
            if
              at _subofb120
                dec
              ta
              at _subofa120
                dec
              ta
              push _subofa120
              inc
              not
              if
                at _subofc120
                  set 1
                ta
              fi
            else
              at _loopso120
                reset
              ta
            fi
          wend
          push _subofc120
          if
            at _subofb120
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          swap
          #(end macro)subof()
          pop     _addXName2_2
          add
          pop     _addvvvXCarry7
          pop     _addXName2_c
        fi
      fi
      #(begin macro)scope_end()
      drop
      drop
      #(end macro)scope_end()
    fi
    #(end macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
    #(begin macro)scope_end()
    drop
    drop
    drop
    drop
    drop
    #(end macro)scope_end()
    #(begin macro)dropX(X)
    drop
    drop
    drop
    drop
    drop
    #(end macro)dropX(X)
    #(end macro)addX(FP)
    #(begin macro)popvX(FP,"pi")
    pop     pi_0
    pop     pi_1
    pop     pi_2
    pop     pi_s
    pop     pi_c
    #(end macro)popvX(FP,"pi")
    # newRe = 0
    #(begin macro)setvX(FP,"newRe",0)
    at newRe_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(FP,"newRe",0)
    # newIm = 0
    #(begin macro)setvX(FP,"newIm",0)
    at newIm_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(FP,"newIm",0)
    # oldRe = 0
    #(begin macro)setvX(FP,"oldRe",0)
    at oldRe_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(FP,"oldRe",0)
    # oldIm = 0
    #(begin macro)setvX(FP,"oldIm",0)
    at oldIm_0
      #(begin macro)setX(X,immValue)
      bf <
      bf <
      bf <
      bf <
      reset
      bf  >
      set 0
      bf >
      set    0
      bf >
      set    0
      bf >
      set    0
      #(end macro)setX(X,immValue)
    ta
    #(end macro)setvX(FP,"oldIm",0)
    # i = 0
    #(begin macro)at_reset("i")
    #(begin macro)at_1("reset",a)
    #(begin macro)at_2(ope,a,"")
    at i
      reset 
    ta
    #(end macro)at_2(ope,a,"")
    #(end macro)at_1("reset",a)
    #(end macro)at_reset("i")
    # for (i =0 ; i < maxIte; i++) {
    push    1
    sbm     loop
    while
      #(begin macro)if_inf("i",maxIte)
      push i
      push 26
      inf
      if
        #(end macro)if_inf("i",maxIte)
        #    oldRe = newRe
        #(begin macro)pushvX(FP,"newRe")
        push    newRe_c
        push    newRe_s
        push    newRe_2
        push    newRe_1
        push    newRe_0
        #(end macro)pushvX(FP,"newRe")
        #(begin macro)popvX(FP,"oldRe")
        pop     oldRe_0
        pop     oldRe_1
        pop     oldRe_2
        pop     oldRe_s
        pop     oldRe_c
        #(end macro)popvX(FP,"oldRe")
        #    oldIm = newIm
        #(begin macro)pushvX(FP,"newIm")
        push    newIm_c
        push    newIm_s
        push    newIm_2
        push    newIm_1
        push    newIm_0
        #(end macro)pushvX(FP,"newIm")
        #(begin macro)popvX(FP,"oldIm")
        pop     oldIm_0
        pop     oldIm_1
        pop     oldIm_2
        pop     oldIm_s
        pop     oldIm_c
        #(end macro)popvX(FP,"oldIm")
        #    newRe = oldRe * oldRe - oldIm * oldIm + pr
        #(begin macro)pushvX(FP,"oldRe")
        push    oldRe_c
        push    oldRe_s
        push    oldRe_2
        push    oldRe_1
        push    oldRe_0
        #(end macro)pushvX(FP,"oldRe")
        #(begin macro)pushvX(FP,"oldRe")
        push    oldRe_c
        push    oldRe_s
        push    oldRe_2
        push    oldRe_1
        push    oldRe_0
        #(end macro)pushvX(FP,"oldRe")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB4_0 - 0
        sbm _mulFPnameB4_1 - 1
        sbm _mulFPnameB4_2 - 2
        sbm _mulFPnameB4_s - 3
        sbm _mulFPnameB4_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA4_0 - 5
        sbm _mulFPnameA4_1 - 6
        sbm _mulFPnameA4_2 - 7
        sbm _mulFPnameA4_s - 8
        sbm _mulFPnameA4_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA4_c
        push    _mulFPnameA4_s
        push    _mulFPnameA4_2
        push    _mulFPnameA4_1
        push    _mulFPnameA4_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput7_0 - 0
        sbm _castXInput7_1 - 1
        sbm _castXInput7_2 - 2
        sbm _castXInput7_s - 3
        sbm _castXInput7_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput7_0    # 0 byte of _castXoutput7
        var _castXoutput7_1    # 1 byte of _castXoutput7
        var _castXoutput7_2    # 2 byte of _castXoutput7
        var _castXoutput7_3    # 3 byte of _castXoutput7
        var _castXoutput7_4    # 4 byte of _castXoutput7
        var _castXoutput7_5    # 5 byte of _castXoutput7
        var _castXoutput7_s    # Sign of _castXoutput7
        var _castXoutput7_c    # carry of _castXoutput7
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput7_c
        push    _castXInput7_s
        push    _castXInput7_2
        push    _castXInput7_1
        push    _castXInput7_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori7_0
        pop     _castXori7_1
        pop     _castXori7_2
        pop     _castXori7_s
        pop     _castXori7_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori7_s
        pop     _castXdest7_s  # keep sign
        push    _castXori7_0
        pop     _castXdest7_0
        push    _castXori7_1
        pop     _castXdest7_1
        push    _castXori7_2
        pop     _castXdest7_2
        push    0
        pop     _castXdest7_3
        push    0
        pop     _castXdest7_4
        push    0
        pop     _castXdest7_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest7_c
        push    _castXdest7_s
        push    _castXdest7_5
        push    _castXdest7_4
        push    _castXdest7_3
        push    _castXdest7_2
        push    _castXdest7_1
        push    _castXdest7_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput7_0
        pop     _castXoutput7_1
        pop     _castXoutput7_2
        pop     _castXoutput7_3
        pop     _castXoutput7_4
        pop     _castXoutput7_5
        pop     _castXoutput7_s
        pop     _castXoutput7_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput7_c
        push    _castXoutput7_s
        push    _castXoutput7_5
        push    _castXoutput7_4
        push    _castXoutput7_3
        push    _castXoutput7_2
        push    _castXoutput7_1
        push    _castXoutput7_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX4_0
        pop     _mulFPnameAX4_1
        pop     _mulFPnameAX4_2
        pop     _mulFPnameAX4_3
        pop     _mulFPnameAX4_4
        pop     _mulFPnameAX4_5
        pop     _mulFPnameAX4_s
        pop     _mulFPnameAX4_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB4_c
        push    _mulFPnameB4_s
        push    _mulFPnameB4_2
        push    _mulFPnameB4_1
        push    _mulFPnameB4_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput8_0 - 0
        sbm _castXInput8_1 - 1
        sbm _castXInput8_2 - 2
        sbm _castXInput8_s - 3
        sbm _castXInput8_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput8_0    # 0 byte of _castXoutput8
        var _castXoutput8_1    # 1 byte of _castXoutput8
        var _castXoutput8_2    # 2 byte of _castXoutput8
        var _castXoutput8_3    # 3 byte of _castXoutput8
        var _castXoutput8_4    # 4 byte of _castXoutput8
        var _castXoutput8_5    # 5 byte of _castXoutput8
        var _castXoutput8_s    # Sign of _castXoutput8
        var _castXoutput8_c    # carry of _castXoutput8
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput8_c
        push    _castXInput8_s
        push    _castXInput8_2
        push    _castXInput8_1
        push    _castXInput8_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori8_0
        pop     _castXori8_1
        pop     _castXori8_2
        pop     _castXori8_s
        pop     _castXori8_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori8_s
        pop     _castXdest8_s  # keep sign
        push    _castXori8_0
        pop     _castXdest8_0
        push    _castXori8_1
        pop     _castXdest8_1
        push    _castXori8_2
        pop     _castXdest8_2
        push    0
        pop     _castXdest8_3
        push    0
        pop     _castXdest8_4
        push    0
        pop     _castXdest8_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest8_c
        push    _castXdest8_s
        push    _castXdest8_5
        push    _castXdest8_4
        push    _castXdest8_3
        push    _castXdest8_2
        push    _castXdest8_1
        push    _castXdest8_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput8_0
        pop     _castXoutput8_1
        pop     _castXoutput8_2
        pop     _castXoutput8_3
        pop     _castXoutput8_4
        pop     _castXoutput8_5
        pop     _castXoutput8_s
        pop     _castXoutput8_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput8_c
        push    _castXoutput8_s
        push    _castXoutput8_5
        push    _castXoutput8_4
        push    _castXoutput8_3
        push    _castXoutput8_2
        push    _castXoutput8_1
        push    _castXoutput8_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX4_0
        pop     _mulFPnameBX4_1
        pop     _mulFPnameBX4_2
        pop     _mulFPnameBX4_3
        pop     _mulFPnameBX4_4
        pop     _mulFPnameBX4_5
        pop     _mulFPnameBX4_s
        pop     _mulFPnameBX4_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX4_c
        push    _mulFPnameAX4_s
        push    _mulFPnameAX4_5
        push    _mulFPnameAX4_4
        push    _mulFPnameAX4_3
        push    _mulFPnameAX4_2
        push    _mulFPnameAX4_1
        push    _mulFPnameAX4_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA4_0
        pop     _mulvvvXabsNameA4_1
        pop     _mulvvvXabsNameA4_2
        pop     _mulvvvXabsNameA4_3
        pop     _mulvvvXabsNameA4_4
        pop     _mulvvvXabsNameA4_5
        pop     _mulvvvXabsNameA4_s
        pop     _mulvvvXabsNameA4_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA4
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA4_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA4
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA4_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX4_c
        push    _mulFPnameBX4_s
        push    _mulFPnameBX4_5
        push    _mulFPnameBX4_4
        push    _mulFPnameBX4_3
        push    _mulFPnameBX4_2
        push    _mulFPnameBX4_1
        push    _mulFPnameBX4_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB4_0
        pop     _mulvvvXabsNameB4_1
        pop     _mulvvvXabsNameB4_2
        pop     _mulvvvXabsNameB4_3
        pop     _mulvvvXabsNameB4_4
        pop     _mulvvvXabsNameB4_5
        pop     _mulvvvXabsNameB4_s
        pop     _mulvvvXabsNameB4_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB4
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB4_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB4
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB4_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX4_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop4
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB4_0
          bool
          push _mulvvvXabsNameB4_1
          bool
          push _mulvvvXabsNameB4_2
          bool
          push _mulvvvXabsNameB4_3
          bool
          push _mulvvvXabsNameB4_4
          bool
          push _mulvvvXabsNameB4_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB4_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB4_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB4_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX4_c
            push    _mulFPresultX4_s
            push    _mulFPresultX4_5
            push    _mulFPresultX4_4
            push    _mulFPresultX4_3
            push    _mulFPresultX4_2
            push    _mulFPresultX4_1
            push    _mulFPresultX4_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB4_0
            pop     _addvvXnameB4_1
            pop     _addvvXnameB4_2
            pop     _addvvXnameB4_3
            pop     _addvvXnameB4_4
            pop     _addvvXnameB4_5
            pop     _addvvXnameB4_s
            pop     _addvvXnameB4_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB4_s
            push    _mulvvvXabsNameA4_s
            or
            not
            push    _addvvXnameB4_s
            push    _mulvvvXabsNameA4_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB4_s
              pop     _mulFPresultX4_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB4_0
              #(begin macro)addof()
              sbm _addofb91
              sbm _addofa91 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc91
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao91
              while
                push _addofa91
                if
                  at _addofa91
                    dec
                  ta
                  at _addofb91
                    inc
                  ta
                  push _addofb91
                  not
                  if
                    at _addofc91
                      set 1
                    ta
                  fi
                else
                  at _loopao91
                    reset
                  ta
                fi
              wend
              push _addofc91
              if
                at _addofa91
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_0
              push    _mulvvvXabsNameA4_0
              #(begin macro)addof()
              sbm _addofb92
              sbm _addofa92 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc92
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao92
              while
                push _addofa92
                if
                  at _addofa92
                    dec
                  ta
                  at _addofb92
                    inc
                  ta
                  push _addofb92
                  not
                  if
                    at _addofc92
                      set 1
                    ta
                  fi
                else
                  at _loopao92
                    reset
                  ta
                fi
              wend
              push _addofc92
              if
                at _addofa92
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_0
              #(begin macro)addof()
              sbm _addofb93
              sbm _addofa93 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc93
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao93
              while
                push _addofa93
                if
                  at _addofa93
                    dec
                  ta
                  at _addofb93
                    inc
                  ta
                  push _addofb93
                  not
                  if
                    at _addofc93
                      set 1
                    ta
                  fi
                else
                  at _loopao93
                    reset
                  ta
                fi
              wend
              push _addofc93
              if
                at _addofa93
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_0
              add
              push    _addvvXnameB4_1
              #(begin macro)addof()
              sbm _addofb94
              sbm _addofa94 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc94
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao94
              while
                push _addofa94
                if
                  at _addofa94
                    dec
                  ta
                  at _addofb94
                    inc
                  ta
                  push _addofb94
                  not
                  if
                    at _addofc94
                      set 1
                    ta
                  fi
                else
                  at _loopao94
                    reset
                  ta
                fi
              wend
              push _addofc94
              if
                at _addofa94
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_1
              push    _mulvvvXabsNameA4_1
              #(begin macro)addof()
              sbm _addofb95
              sbm _addofa95 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc95
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao95
              while
                push _addofa95
                if
                  at _addofa95
                    dec
                  ta
                  at _addofb95
                    inc
                  ta
                  push _addofb95
                  not
                  if
                    at _addofc95
                      set 1
                    ta
                  fi
                else
                  at _loopao95
                    reset
                  ta
                fi
              wend
              push _addofc95
              if
                at _addofa95
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_1
              #(begin macro)addof()
              sbm _addofb96
              sbm _addofa96 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc96
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao96
              while
                push _addofa96
                if
                  at _addofa96
                    dec
                  ta
                  at _addofb96
                    inc
                  ta
                  push _addofb96
                  not
                  if
                    at _addofc96
                      set 1
                    ta
                  fi
                else
                  at _loopao96
                    reset
                  ta
                fi
              wend
              push _addofc96
              if
                at _addofa96
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_1
              add
              push    _addvvXnameB4_2
              #(begin macro)addof()
              sbm _addofb97
              sbm _addofa97 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc97
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao97
              while
                push _addofa97
                if
                  at _addofa97
                    dec
                  ta
                  at _addofb97
                    inc
                  ta
                  push _addofb97
                  not
                  if
                    at _addofc97
                      set 1
                    ta
                  fi
                else
                  at _loopao97
                    reset
                  ta
                fi
              wend
              push _addofc97
              if
                at _addofa97
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_2
              push    _mulvvvXabsNameA4_2
              #(begin macro)addof()
              sbm _addofb98
              sbm _addofa98 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc98
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao98
              while
                push _addofa98
                if
                  at _addofa98
                    dec
                  ta
                  at _addofb98
                    inc
                  ta
                  push _addofb98
                  not
                  if
                    at _addofc98
                      set 1
                    ta
                  fi
                else
                  at _loopao98
                    reset
                  ta
                fi
              wend
              push _addofc98
              if
                at _addofa98
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_2
              #(begin macro)addof()
              sbm _addofb99
              sbm _addofa99 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc99
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao99
              while
                push _addofa99
                if
                  at _addofa99
                    dec
                  ta
                  at _addofb99
                    inc
                  ta
                  push _addofb99
                  not
                  if
                    at _addofc99
                      set 1
                    ta
                  fi
                else
                  at _loopao99
                    reset
                  ta
                fi
              wend
              push _addofc99
              if
                at _addofa99
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_2
              add
              push    _addvvXnameB4_3
              #(begin macro)addof()
              sbm _addofb100
              sbm _addofa100 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc100
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao100
              while
                push _addofa100
                if
                  at _addofa100
                    dec
                  ta
                  at _addofb100
                    inc
                  ta
                  push _addofb100
                  not
                  if
                    at _addofc100
                      set 1
                    ta
                  fi
                else
                  at _loopao100
                    reset
                  ta
                fi
              wend
              push _addofc100
              if
                at _addofa100
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_3
              push    _mulvvvXabsNameA4_3
              #(begin macro)addof()
              sbm _addofb101
              sbm _addofa101 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc101
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao101
              while
                push _addofa101
                if
                  at _addofa101
                    dec
                  ta
                  at _addofb101
                    inc
                  ta
                  push _addofb101
                  not
                  if
                    at _addofc101
                      set 1
                    ta
                  fi
                else
                  at _loopao101
                    reset
                  ta
                fi
              wend
              push _addofc101
              if
                at _addofa101
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_3
              #(begin macro)addof()
              sbm _addofb102
              sbm _addofa102 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc102
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao102
              while
                push _addofa102
                if
                  at _addofa102
                    dec
                  ta
                  at _addofb102
                    inc
                  ta
                  push _addofb102
                  not
                  if
                    at _addofc102
                      set 1
                    ta
                  fi
                else
                  at _loopao102
                    reset
                  ta
                fi
              wend
              push _addofc102
              if
                at _addofa102
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_3
              add
              push    _addvvXnameB4_4
              #(begin macro)addof()
              sbm _addofb103
              sbm _addofa103 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc103
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao103
              while
                push _addofa103
                if
                  at _addofa103
                    dec
                  ta
                  at _addofb103
                    inc
                  ta
                  push _addofb103
                  not
                  if
                    at _addofc103
                      set 1
                    ta
                  fi
                else
                  at _loopao103
                    reset
                  ta
                fi
              wend
              push _addofc103
              if
                at _addofa103
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_4
              push    _mulvvvXabsNameA4_4
              #(begin macro)addof()
              sbm _addofb104
              sbm _addofa104 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc104
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao104
              while
                push _addofa104
                if
                  at _addofa104
                    dec
                  ta
                  at _addofb104
                    inc
                  ta
                  push _addofb104
                  not
                  if
                    at _addofc104
                      set 1
                    ta
                  fi
                else
                  at _loopao104
                    reset
                  ta
                fi
              wend
              push _addofc104
              if
                at _addofa104
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_4
              #(begin macro)addof()
              sbm _addofb105
              sbm _addofa105 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc105
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao105
              while
                push _addofa105
                if
                  at _addofa105
                    dec
                  ta
                  at _addofb105
                    inc
                  ta
                  push _addofb105
                  not
                  if
                    at _addofc105
                      set 1
                    ta
                  fi
                else
                  at _loopao105
                    reset
                  ta
                fi
              wend
              push _addofc105
              if
                at _addofa105
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_4
              add
              push    _addvvXnameB4_5
              #(begin macro)addof()
              sbm _addofb106
              sbm _addofa106 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc106
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao106
              while
                push _addofa106
                if
                  at _addofa106
                    dec
                  ta
                  at _addofb106
                    inc
                  ta
                  push _addofb106
                  not
                  if
                    at _addofc106
                      set 1
                    ta
                  fi
                else
                  at _loopao106
                    reset
                  ta
                fi
              wend
              push _addofc106
              if
                at _addofa106
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_5
              push    _mulvvvXabsNameA4_5
              #(begin macro)addof()
              sbm _addofb107
              sbm _addofa107 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc107
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao107
              while
                push _addofa107
                if
                  at _addofa107
                    dec
                  ta
                  at _addofb107
                    inc
                  ta
                  push _addofb107
                  not
                  if
                    at _addofc107
                      set 1
                    ta
                  fi
                else
                  at _loopao107
                    reset
                  ta
                fi
              wend
              push _addofc107
              if
                at _addofa107
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX4_5
              #(begin macro)addof()
              sbm _addofb108
              sbm _addofa108 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc108
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao108
              while
                push _addofa108
                if
                  at _addofa108
                    dec
                  ta
                  at _addofb108
                    inc
                  ta
                  push _addofb108
                  not
                  if
                    at _addofc108
                      set 1
                    ta
                  fi
                else
                  at _loopao108
                    reset
                  ta
                fi
              wend
              push _addofc108
              if
                at _addofa108
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX4_5
              add
              pop     _mulFPresultX4_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb8
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb8
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB4_5
              push    _mulvvvXabsNameA4_5
              sup
              if
                at _asupb8
                  set 1
                ta
              else
                push    _addvvXnameB4_5
                push    _mulvvvXabsNameA4_5
                diff
                if
                  at _asupb8
                    reset
                  ta
                else
                  push    _addvvXnameB4_4
                  push    _mulvvvXabsNameA4_4
                  sup
                  if
                    at _asupb8
                      set 1
                    ta
                  else
                    push    _addvvXnameB4_4
                    push    _mulvvvXabsNameA4_4
                    diff
                    if
                      at _asupb8
                        reset
                      ta
                    else
                      push    _addvvXnameB4_3
                      push    _mulvvvXabsNameA4_3
                      sup
                      if
                        at _asupb8
                          set 1
                        ta
                      else
                        push    _addvvXnameB4_3
                        push    _mulvvvXabsNameA4_3
                        diff
                        if
                          at _asupb8
                            reset
                          ta
                        else
                          push    _addvvXnameB4_2
                          push    _mulvvvXabsNameA4_2
                          sup
                          if
                            at _asupb8
                              set 1
                            ta
                          else
                            push    _addvvXnameB4_2
                            push    _mulvvvXabsNameA4_2
                            diff
                            if
                              at _asupb8
                                reset
                              ta
                            else
                              push    _addvvXnameB4_1
                              push    _mulvvvXabsNameA4_1
                              sup
                              if
                                at _asupb8
                                  set 1
                                ta
                              else
                                push    _addvvXnameB4_1
                                push    _mulvvvXabsNameA4_1
                                diff
                                if
                                  at _asupb8
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB4_0
                                  push    _mulvvvXabsNameA4_0
                                  sup
                                  if
                                    at _asupb8
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB4_0
                                    push    _mulvvvXabsNameA4_0
                                    diff
                                    if
                                      at _asupb8
                                        reset
                                      ta
                                    else
                                      at _aequb8
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb8
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB4_s
                pop     _mulFPresultX4_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry8
                push    _addvvXnameB4_0
                push    _mulvvvXabsNameA4_0
                #(begin macro)subof()
                sbm _subofb121
                sbm _subofa121 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc121
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso121
                while
                  push _subofb121
                  if
                    at _subofb121
                      dec
                    ta
                    at _subofa121
                      dec
                    ta
                    push _subofa121
                    inc
                    not
                    if
                      at _subofc121
                        set 1
                      ta
                    fi
                  else
                    at _loopso121
                      reset
                    ta
                  fi
                wend
                push _subofc121
                if
                  at _subofb121
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb122
                sbm _subofa122 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc122
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso122
                while
                  push _subofb122
                  if
                    at _subofb122
                      dec
                    ta
                    at _subofa122
                      dec
                    ta
                    push _subofa122
                    inc
                    not
                    if
                      at _subofc122
                        set 1
                      ta
                    fi
                  else
                    at _loopso122
                      reset
                    ta
                  fi
                wend
                push _subofc122
                if
                  at _subofb122
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_0
                add
                pop     _addvvvXCarry8
                push    _addvvXnameB4_1
                push    _mulvvvXabsNameA4_1
                #(begin macro)subof()
                sbm _subofb123
                sbm _subofa123 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc123
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso123
                while
                  push _subofb123
                  if
                    at _subofb123
                      dec
                    ta
                    at _subofa123
                      dec
                    ta
                    push _subofa123
                    inc
                    not
                    if
                      at _subofc123
                        set 1
                      ta
                    fi
                  else
                    at _loopso123
                      reset
                    ta
                  fi
                wend
                push _subofc123
                if
                  at _subofb123
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb124
                sbm _subofa124 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc124
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso124
                while
                  push _subofb124
                  if
                    at _subofb124
                      dec
                    ta
                    at _subofa124
                      dec
                    ta
                    push _subofa124
                    inc
                    not
                    if
                      at _subofc124
                        set 1
                      ta
                    fi
                  else
                    at _loopso124
                      reset
                    ta
                  fi
                wend
                push _subofc124
                if
                  at _subofb124
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_1
                add
                pop     _addvvvXCarry8
                push    _addvvXnameB4_2
                push    _mulvvvXabsNameA4_2
                #(begin macro)subof()
                sbm _subofb125
                sbm _subofa125 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc125
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso125
                while
                  push _subofb125
                  if
                    at _subofb125
                      dec
                    ta
                    at _subofa125
                      dec
                    ta
                    push _subofa125
                    inc
                    not
                    if
                      at _subofc125
                        set 1
                      ta
                    fi
                  else
                    at _loopso125
                      reset
                    ta
                  fi
                wend
                push _subofc125
                if
                  at _subofb125
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb126
                sbm _subofa126 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc126
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso126
                while
                  push _subofb126
                  if
                    at _subofb126
                      dec
                    ta
                    at _subofa126
                      dec
                    ta
                    push _subofa126
                    inc
                    not
                    if
                      at _subofc126
                        set 1
                      ta
                    fi
                  else
                    at _loopso126
                      reset
                    ta
                  fi
                wend
                push _subofc126
                if
                  at _subofb126
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_2
                add
                pop     _addvvvXCarry8
                push    _addvvXnameB4_3
                push    _mulvvvXabsNameA4_3
                #(begin macro)subof()
                sbm _subofb127
                sbm _subofa127 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc127
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso127
                while
                  push _subofb127
                  if
                    at _subofb127
                      dec
                    ta
                    at _subofa127
                      dec
                    ta
                    push _subofa127
                    inc
                    not
                    if
                      at _subofc127
                        set 1
                      ta
                    fi
                  else
                    at _loopso127
                      reset
                    ta
                  fi
                wend
                push _subofc127
                if
                  at _subofb127
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb128
                sbm _subofa128 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc128
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso128
                while
                  push _subofb128
                  if
                    at _subofb128
                      dec
                    ta
                    at _subofa128
                      dec
                    ta
                    push _subofa128
                    inc
                    not
                    if
                      at _subofc128
                        set 1
                      ta
                    fi
                  else
                    at _loopso128
                      reset
                    ta
                  fi
                wend
                push _subofc128
                if
                  at _subofb128
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_3
                add
                pop     _addvvvXCarry8
                push    _addvvXnameB4_4
                push    _mulvvvXabsNameA4_4
                #(begin macro)subof()
                sbm _subofb129
                sbm _subofa129 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc129
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso129
                while
                  push _subofb129
                  if
                    at _subofb129
                      dec
                    ta
                    at _subofa129
                      dec
                    ta
                    push _subofa129
                    inc
                    not
                    if
                      at _subofc129
                        set 1
                      ta
                    fi
                  else
                    at _loopso129
                      reset
                    ta
                  fi
                wend
                push _subofc129
                if
                  at _subofb129
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb130
                sbm _subofa130 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc130
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso130
                while
                  push _subofb130
                  if
                    at _subofb130
                      dec
                    ta
                    at _subofa130
                      dec
                    ta
                    push _subofa130
                    inc
                    not
                    if
                      at _subofc130
                        set 1
                      ta
                    fi
                  else
                    at _loopso130
                      reset
                    ta
                  fi
                wend
                push _subofc130
                if
                  at _subofb130
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_4
                add
                pop     _addvvvXCarry8
                push    _addvvXnameB4_5
                push    _mulvvvXabsNameA4_5
                #(begin macro)subof()
                sbm _subofb131
                sbm _subofa131 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc131
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso131
                while
                  push _subofb131
                  if
                    at _subofb131
                      dec
                    ta
                    at _subofa131
                      dec
                    ta
                    push _subofa131
                    inc
                    not
                    if
                      at _subofc131
                        set 1
                      ta
                    fi
                  else
                    at _loopso131
                      reset
                    ta
                  fi
                wend
                push _subofc131
                if
                  at _subofb131
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry8
                #(begin macro)subof()
                sbm _subofb132
                sbm _subofa132 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc132
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso132
                while
                  push _subofb132
                  if
                    at _subofb132
                      dec
                    ta
                    at _subofa132
                      dec
                    ta
                    push _subofa132
                    inc
                    not
                    if
                      at _subofc132
                        set 1
                      ta
                    fi
                  else
                    at _loopso132
                      reset
                    ta
                  fi
                wend
                push _subofc132
                if
                  at _subofb132
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX4_5
                add
                pop     _addvvvXCarry8
                pop     _mulFPresultX4_c
              else # absB >= absA :
                push    _aequb8
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX4_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA4_s
                  pop     _mulFPresultX4_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_0
                  push    _addvvXnameB4_0
                  #(begin macro)subof()
                  sbm _subofb133
                  sbm _subofa133 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc133
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso133
                  while
                    push _subofb133
                    if
                      at _subofb133
                        dec
                      ta
                      at _subofa133
                        dec
                      ta
                      push _subofa133
                      inc
                      not
                      if
                        at _subofc133
                          set 1
                        ta
                      fi
                    else
                      at _loopso133
                        reset
                      ta
                    fi
                  wend
                  push _subofc133
                  if
                    at _subofb133
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb134
                  sbm _subofa134 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc134
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso134
                  while
                    push _subofb134
                    if
                      at _subofb134
                        dec
                      ta
                      at _subofa134
                        dec
                      ta
                      push _subofa134
                      inc
                      not
                      if
                        at _subofc134
                          set 1
                        ta
                      fi
                    else
                      at _loopso134
                        reset
                      ta
                    fi
                  wend
                  push _subofc134
                  if
                    at _subofb134
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_0
                  add
                  pop     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_1
                  push    _addvvXnameB4_1
                  #(begin macro)subof()
                  sbm _subofb135
                  sbm _subofa135 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc135
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso135
                  while
                    push _subofb135
                    if
                      at _subofb135
                        dec
                      ta
                      at _subofa135
                        dec
                      ta
                      push _subofa135
                      inc
                      not
                      if
                        at _subofc135
                          set 1
                        ta
                      fi
                    else
                      at _loopso135
                        reset
                      ta
                    fi
                  wend
                  push _subofc135
                  if
                    at _subofb135
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb136
                  sbm _subofa136 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc136
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso136
                  while
                    push _subofb136
                    if
                      at _subofb136
                        dec
                      ta
                      at _subofa136
                        dec
                      ta
                      push _subofa136
                      inc
                      not
                      if
                        at _subofc136
                          set 1
                        ta
                      fi
                    else
                      at _loopso136
                        reset
                      ta
                    fi
                  wend
                  push _subofc136
                  if
                    at _subofb136
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_1
                  add
                  pop     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_2
                  push    _addvvXnameB4_2
                  #(begin macro)subof()
                  sbm _subofb137
                  sbm _subofa137 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc137
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso137
                  while
                    push _subofb137
                    if
                      at _subofb137
                        dec
                      ta
                      at _subofa137
                        dec
                      ta
                      push _subofa137
                      inc
                      not
                      if
                        at _subofc137
                          set 1
                        ta
                      fi
                    else
                      at _loopso137
                        reset
                      ta
                    fi
                  wend
                  push _subofc137
                  if
                    at _subofb137
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb138
                  sbm _subofa138 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc138
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso138
                  while
                    push _subofb138
                    if
                      at _subofb138
                        dec
                      ta
                      at _subofa138
                        dec
                      ta
                      push _subofa138
                      inc
                      not
                      if
                        at _subofc138
                          set 1
                        ta
                      fi
                    else
                      at _loopso138
                        reset
                      ta
                    fi
                  wend
                  push _subofc138
                  if
                    at _subofb138
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_2
                  add
                  pop     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_3
                  push    _addvvXnameB4_3
                  #(begin macro)subof()
                  sbm _subofb139
                  sbm _subofa139 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc139
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso139
                  while
                    push _subofb139
                    if
                      at _subofb139
                        dec
                      ta
                      at _subofa139
                        dec
                      ta
                      push _subofa139
                      inc
                      not
                      if
                        at _subofc139
                          set 1
                        ta
                      fi
                    else
                      at _loopso139
                        reset
                      ta
                    fi
                  wend
                  push _subofc139
                  if
                    at _subofb139
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb140
                  sbm _subofa140 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc140
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso140
                  while
                    push _subofb140
                    if
                      at _subofb140
                        dec
                      ta
                      at _subofa140
                        dec
                      ta
                      push _subofa140
                      inc
                      not
                      if
                        at _subofc140
                          set 1
                        ta
                      fi
                    else
                      at _loopso140
                        reset
                      ta
                    fi
                  wend
                  push _subofc140
                  if
                    at _subofb140
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_3
                  add
                  pop     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_4
                  push    _addvvXnameB4_4
                  #(begin macro)subof()
                  sbm _subofb141
                  sbm _subofa141 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc141
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso141
                  while
                    push _subofb141
                    if
                      at _subofb141
                        dec
                      ta
                      at _subofa141
                        dec
                      ta
                      push _subofa141
                      inc
                      not
                      if
                        at _subofc141
                          set 1
                        ta
                      fi
                    else
                      at _loopso141
                        reset
                      ta
                    fi
                  wend
                  push _subofc141
                  if
                    at _subofb141
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb142
                  sbm _subofa142 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc142
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso142
                  while
                    push _subofb142
                    if
                      at _subofb142
                        dec
                      ta
                      at _subofa142
                        dec
                      ta
                      push _subofa142
                      inc
                      not
                      if
                        at _subofc142
                          set 1
                        ta
                      fi
                    else
                      at _loopso142
                        reset
                      ta
                    fi
                  wend
                  push _subofc142
                  if
                    at _subofb142
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_4
                  add
                  pop     _addvvvXCarry8
                  push    _mulvvvXabsNameA4_5
                  push    _addvvXnameB4_5
                  #(begin macro)subof()
                  sbm _subofb143
                  sbm _subofa143 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc143
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso143
                  while
                    push _subofb143
                    if
                      at _subofb143
                        dec
                      ta
                      at _subofa143
                        dec
                      ta
                      push _subofa143
                      inc
                      not
                      if
                        at _subofc143
                          set 1
                        ta
                      fi
                    else
                      at _loopso143
                        reset
                      ta
                    fi
                  wend
                  push _subofc143
                  if
                    at _subofb143
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry8
                  #(begin macro)subof()
                  sbm _subofb144
                  sbm _subofa144 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc144
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso144
                  while
                    push _subofb144
                    if
                      at _subofb144
                        dec
                      ta
                      at _subofa144
                        dec
                      ta
                      push _subofa144
                      inc
                      not
                      if
                        at _subofc144
                          set 1
                        ta
                      fi
                    else
                      at _loopso144
                        reset
                      ta
                    fi
                  wend
                  push _subofc144
                  if
                    at _subofb144
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX4_5
                  add
                  pop     _addvvvXCarry8
                  pop     _mulFPresultX4_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB4_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB4_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB4_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB4_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB4_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB4_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB4_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB4_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB4_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB4_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB4_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB4_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB4_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB4_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB4_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB4_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB4_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB4_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB4_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB4_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB4_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB4_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB4_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB4_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB4_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB4_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB4_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop4
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA4
        push _mulvvvXsB4
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX4_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX4_c
        push    _mulFPresultX4_s
        push    _mulFPresultX4_5
        push    _mulFPresultX4_4
        push    _mulFPresultX4_3
        push    _mulFPresultX4_2
        push    _mulFPresultX4_1
        push    _mulFPresultX4_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack4_0    # 0 byte of _castFPinstack4
        var _castFPinstack4_1    # 1 byte of _castFPinstack4
        var _castFPinstack4_2    # 2 byte of _castFPinstack4
        var _castFPinstack4_3    # 3 byte of _castFPinstack4
        var _castFPinstack4_4    # 4 byte of _castFPinstack4
        var _castFPinstack4_5    # 5 byte of _castFPinstack4
        var _castFPinstack4_s    # Sign of _castFPinstack4
        var _castFPinstack4_c    # carry of _castFPinstack4
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack4_0    # 0 byte of _castFPoutstack4
        var _castFPoutstack4_1    # 1 byte of _castFPoutstack4
        var _castFPoutstack4_2    # 2 byte of _castFPoutstack4
        var _castFPoutstack4_s    # Sign of _castFPoutstack4
        var _castFPoutstack4_c    # carry of _castFPoutstack4
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack4_0
        pop     _castFPinstack4_1
        pop     _castFPinstack4_2
        pop     _castFPinstack4_3
        pop     _castFPinstack4_4
        pop     _castFPinstack4_5
        pop     _castFPinstack4_s
        pop     _castFPinstack4_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack4_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack4_s
        pop _castFPoutstack4_s
        # integer part
        push _castFPinstack4_4
        pop _castFPoutstack4_2
        # fract part
        push _castFPinstack4_3
        pop _castFPoutstack4_1
        push _castFPinstack4_2
        pop _castFPoutstack4_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack4_c
        push    _castFPoutstack4_s
        push    _castFPoutstack4_2
        push    _castFPoutstack4_1
        push    _castFPoutstack4_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA4_0
        pop     _mulFPnameA4_1
        pop     _mulFPnameA4_2
        pop     _mulFPnameA4_s
        pop     _mulFPnameA4_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)pushvX(FP,"oldIm")
        push    oldIm_c
        push    oldIm_s
        push    oldIm_2
        push    oldIm_1
        push    oldIm_0
        #(end macro)pushvX(FP,"oldIm")
        #(begin macro)pushvX(FP,"oldIm")
        push    oldIm_c
        push    oldIm_s
        push    oldIm_2
        push    oldIm_1
        push    oldIm_0
        #(end macro)pushvX(FP,"oldIm")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB5_0 - 0
        sbm _mulFPnameB5_1 - 1
        sbm _mulFPnameB5_2 - 2
        sbm _mulFPnameB5_s - 3
        sbm _mulFPnameB5_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA5_0 - 5
        sbm _mulFPnameA5_1 - 6
        sbm _mulFPnameA5_2 - 7
        sbm _mulFPnameA5_s - 8
        sbm _mulFPnameA5_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA5_c
        push    _mulFPnameA5_s
        push    _mulFPnameA5_2
        push    _mulFPnameA5_1
        push    _mulFPnameA5_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput9_0 - 0
        sbm _castXInput9_1 - 1
        sbm _castXInput9_2 - 2
        sbm _castXInput9_s - 3
        sbm _castXInput9_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput9_0    # 0 byte of _castXoutput9
        var _castXoutput9_1    # 1 byte of _castXoutput9
        var _castXoutput9_2    # 2 byte of _castXoutput9
        var _castXoutput9_3    # 3 byte of _castXoutput9
        var _castXoutput9_4    # 4 byte of _castXoutput9
        var _castXoutput9_5    # 5 byte of _castXoutput9
        var _castXoutput9_s    # Sign of _castXoutput9
        var _castXoutput9_c    # carry of _castXoutput9
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput9_c
        push    _castXInput9_s
        push    _castXInput9_2
        push    _castXInput9_1
        push    _castXInput9_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori9_0
        pop     _castXori9_1
        pop     _castXori9_2
        pop     _castXori9_s
        pop     _castXori9_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori9_s
        pop     _castXdest9_s  # keep sign
        push    _castXori9_0
        pop     _castXdest9_0
        push    _castXori9_1
        pop     _castXdest9_1
        push    _castXori9_2
        pop     _castXdest9_2
        push    0
        pop     _castXdest9_3
        push    0
        pop     _castXdest9_4
        push    0
        pop     _castXdest9_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest9_c
        push    _castXdest9_s
        push    _castXdest9_5
        push    _castXdest9_4
        push    _castXdest9_3
        push    _castXdest9_2
        push    _castXdest9_1
        push    _castXdest9_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput9_0
        pop     _castXoutput9_1
        pop     _castXoutput9_2
        pop     _castXoutput9_3
        pop     _castXoutput9_4
        pop     _castXoutput9_5
        pop     _castXoutput9_s
        pop     _castXoutput9_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput9_c
        push    _castXoutput9_s
        push    _castXoutput9_5
        push    _castXoutput9_4
        push    _castXoutput9_3
        push    _castXoutput9_2
        push    _castXoutput9_1
        push    _castXoutput9_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX5_0
        pop     _mulFPnameAX5_1
        pop     _mulFPnameAX5_2
        pop     _mulFPnameAX5_3
        pop     _mulFPnameAX5_4
        pop     _mulFPnameAX5_5
        pop     _mulFPnameAX5_s
        pop     _mulFPnameAX5_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB5_c
        push    _mulFPnameB5_s
        push    _mulFPnameB5_2
        push    _mulFPnameB5_1
        push    _mulFPnameB5_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput10_0 - 0
        sbm _castXInput10_1 - 1
        sbm _castXInput10_2 - 2
        sbm _castXInput10_s - 3
        sbm _castXInput10_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput10_0    # 0 byte of _castXoutput10
        var _castXoutput10_1    # 1 byte of _castXoutput10
        var _castXoutput10_2    # 2 byte of _castXoutput10
        var _castXoutput10_3    # 3 byte of _castXoutput10
        var _castXoutput10_4    # 4 byte of _castXoutput10
        var _castXoutput10_5    # 5 byte of _castXoutput10
        var _castXoutput10_s    # Sign of _castXoutput10
        var _castXoutput10_c    # carry of _castXoutput10
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori10_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori10_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori10_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori10_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori10_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest10_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest10_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest10_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput10_c
        push    _castXInput10_s
        push    _castXInput10_2
        push    _castXInput10_1
        push    _castXInput10_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori10_0
        pop     _castXori10_1
        pop     _castXori10_2
        pop     _castXori10_s
        pop     _castXori10_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori10_s
        pop     _castXdest10_s  # keep sign
        push    _castXori10_0
        pop     _castXdest10_0
        push    _castXori10_1
        pop     _castXdest10_1
        push    _castXori10_2
        pop     _castXdest10_2
        push    0
        pop     _castXdest10_3
        push    0
        pop     _castXdest10_4
        push    0
        pop     _castXdest10_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest10_c
        push    _castXdest10_s
        push    _castXdest10_5
        push    _castXdest10_4
        push    _castXdest10_3
        push    _castXdest10_2
        push    _castXdest10_1
        push    _castXdest10_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput10_0
        pop     _castXoutput10_1
        pop     _castXoutput10_2
        pop     _castXoutput10_3
        pop     _castXoutput10_4
        pop     _castXoutput10_5
        pop     _castXoutput10_s
        pop     _castXoutput10_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput10_c
        push    _castXoutput10_s
        push    _castXoutput10_5
        push    _castXoutput10_4
        push    _castXoutput10_3
        push    _castXoutput10_2
        push    _castXoutput10_1
        push    _castXoutput10_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX5_0
        pop     _mulFPnameBX5_1
        pop     _mulFPnameBX5_2
        pop     _mulFPnameBX5_3
        pop     _mulFPnameBX5_4
        pop     _mulFPnameBX5_5
        pop     _mulFPnameBX5_s
        pop     _mulFPnameBX5_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX5_c
        push    _mulFPnameAX5_s
        push    _mulFPnameAX5_5
        push    _mulFPnameAX5_4
        push    _mulFPnameAX5_3
        push    _mulFPnameAX5_2
        push    _mulFPnameAX5_1
        push    _mulFPnameAX5_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA5_0
        pop     _mulvvvXabsNameA5_1
        pop     _mulvvvXabsNameA5_2
        pop     _mulvvvXabsNameA5_3
        pop     _mulvvvXabsNameA5_4
        pop     _mulvvvXabsNameA5_5
        pop     _mulvvvXabsNameA5_s
        pop     _mulvvvXabsNameA5_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA5
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA5_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA5
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA5_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX5_c
        push    _mulFPnameBX5_s
        push    _mulFPnameBX5_5
        push    _mulFPnameBX5_4
        push    _mulFPnameBX5_3
        push    _mulFPnameBX5_2
        push    _mulFPnameBX5_1
        push    _mulFPnameBX5_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB5_0
        pop     _mulvvvXabsNameB5_1
        pop     _mulvvvXabsNameB5_2
        pop     _mulvvvXabsNameB5_3
        pop     _mulvvvXabsNameB5_4
        pop     _mulvvvXabsNameB5_5
        pop     _mulvvvXabsNameB5_s
        pop     _mulvvvXabsNameB5_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB5
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB5_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB5
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB5_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX5_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop5
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB5_0
          bool
          push _mulvvvXabsNameB5_1
          bool
          push _mulvvvXabsNameB5_2
          bool
          push _mulvvvXabsNameB5_3
          bool
          push _mulvvvXabsNameB5_4
          bool
          push _mulvvvXabsNameB5_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB5_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB5_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB5_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX5_c
            push    _mulFPresultX5_s
            push    _mulFPresultX5_5
            push    _mulFPresultX5_4
            push    _mulFPresultX5_3
            push    _mulFPresultX5_2
            push    _mulFPresultX5_1
            push    _mulFPresultX5_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB5_0
            pop     _addvvXnameB5_1
            pop     _addvvXnameB5_2
            pop     _addvvXnameB5_3
            pop     _addvvXnameB5_4
            pop     _addvvXnameB5_5
            pop     _addvvXnameB5_s
            pop     _addvvXnameB5_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB5_s
            push    _mulvvvXabsNameA5_s
            or
            not
            push    _addvvXnameB5_s
            push    _mulvvvXabsNameA5_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB5_s
              pop     _mulFPresultX5_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB5_0
              #(begin macro)addof()
              sbm _addofb109
              sbm _addofa109 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc109
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao109
              while
                push _addofa109
                if
                  at _addofa109
                    dec
                  ta
                  at _addofb109
                    inc
                  ta
                  push _addofb109
                  not
                  if
                    at _addofc109
                      set 1
                    ta
                  fi
                else
                  at _loopao109
                    reset
                  ta
                fi
              wend
              push _addofc109
              if
                at _addofa109
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_0
              push    _mulvvvXabsNameA5_0
              #(begin macro)addof()
              sbm _addofb110
              sbm _addofa110 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc110
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao110
              while
                push _addofa110
                if
                  at _addofa110
                    dec
                  ta
                  at _addofb110
                    inc
                  ta
                  push _addofb110
                  not
                  if
                    at _addofc110
                      set 1
                    ta
                  fi
                else
                  at _loopao110
                    reset
                  ta
                fi
              wend
              push _addofc110
              if
                at _addofa110
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_0
              #(begin macro)addof()
              sbm _addofb111
              sbm _addofa111 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc111
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao111
              while
                push _addofa111
                if
                  at _addofa111
                    dec
                  ta
                  at _addofb111
                    inc
                  ta
                  push _addofb111
                  not
                  if
                    at _addofc111
                      set 1
                    ta
                  fi
                else
                  at _loopao111
                    reset
                  ta
                fi
              wend
              push _addofc111
              if
                at _addofa111
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_0
              add
              push    _addvvXnameB5_1
              #(begin macro)addof()
              sbm _addofb112
              sbm _addofa112 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc112
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao112
              while
                push _addofa112
                if
                  at _addofa112
                    dec
                  ta
                  at _addofb112
                    inc
                  ta
                  push _addofb112
                  not
                  if
                    at _addofc112
                      set 1
                    ta
                  fi
                else
                  at _loopao112
                    reset
                  ta
                fi
              wend
              push _addofc112
              if
                at _addofa112
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_1
              push    _mulvvvXabsNameA5_1
              #(begin macro)addof()
              sbm _addofb113
              sbm _addofa113 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc113
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao113
              while
                push _addofa113
                if
                  at _addofa113
                    dec
                  ta
                  at _addofb113
                    inc
                  ta
                  push _addofb113
                  not
                  if
                    at _addofc113
                      set 1
                    ta
                  fi
                else
                  at _loopao113
                    reset
                  ta
                fi
              wend
              push _addofc113
              if
                at _addofa113
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_1
              #(begin macro)addof()
              sbm _addofb114
              sbm _addofa114 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc114
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao114
              while
                push _addofa114
                if
                  at _addofa114
                    dec
                  ta
                  at _addofb114
                    inc
                  ta
                  push _addofb114
                  not
                  if
                    at _addofc114
                      set 1
                    ta
                  fi
                else
                  at _loopao114
                    reset
                  ta
                fi
              wend
              push _addofc114
              if
                at _addofa114
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_1
              add
              push    _addvvXnameB5_2
              #(begin macro)addof()
              sbm _addofb115
              sbm _addofa115 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc115
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao115
              while
                push _addofa115
                if
                  at _addofa115
                    dec
                  ta
                  at _addofb115
                    inc
                  ta
                  push _addofb115
                  not
                  if
                    at _addofc115
                      set 1
                    ta
                  fi
                else
                  at _loopao115
                    reset
                  ta
                fi
              wend
              push _addofc115
              if
                at _addofa115
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_2
              push    _mulvvvXabsNameA5_2
              #(begin macro)addof()
              sbm _addofb116
              sbm _addofa116 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc116
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao116
              while
                push _addofa116
                if
                  at _addofa116
                    dec
                  ta
                  at _addofb116
                    inc
                  ta
                  push _addofb116
                  not
                  if
                    at _addofc116
                      set 1
                    ta
                  fi
                else
                  at _loopao116
                    reset
                  ta
                fi
              wend
              push _addofc116
              if
                at _addofa116
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_2
              #(begin macro)addof()
              sbm _addofb117
              sbm _addofa117 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc117
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao117
              while
                push _addofa117
                if
                  at _addofa117
                    dec
                  ta
                  at _addofb117
                    inc
                  ta
                  push _addofb117
                  not
                  if
                    at _addofc117
                      set 1
                    ta
                  fi
                else
                  at _loopao117
                    reset
                  ta
                fi
              wend
              push _addofc117
              if
                at _addofa117
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_2
              add
              push    _addvvXnameB5_3
              #(begin macro)addof()
              sbm _addofb118
              sbm _addofa118 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc118
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao118
              while
                push _addofa118
                if
                  at _addofa118
                    dec
                  ta
                  at _addofb118
                    inc
                  ta
                  push _addofb118
                  not
                  if
                    at _addofc118
                      set 1
                    ta
                  fi
                else
                  at _loopao118
                    reset
                  ta
                fi
              wend
              push _addofc118
              if
                at _addofa118
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_3
              push    _mulvvvXabsNameA5_3
              #(begin macro)addof()
              sbm _addofb119
              sbm _addofa119 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc119
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao119
              while
                push _addofa119
                if
                  at _addofa119
                    dec
                  ta
                  at _addofb119
                    inc
                  ta
                  push _addofb119
                  not
                  if
                    at _addofc119
                      set 1
                    ta
                  fi
                else
                  at _loopao119
                    reset
                  ta
                fi
              wend
              push _addofc119
              if
                at _addofa119
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_3
              #(begin macro)addof()
              sbm _addofb120
              sbm _addofa120 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc120
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao120
              while
                push _addofa120
                if
                  at _addofa120
                    dec
                  ta
                  at _addofb120
                    inc
                  ta
                  push _addofb120
                  not
                  if
                    at _addofc120
                      set 1
                    ta
                  fi
                else
                  at _loopao120
                    reset
                  ta
                fi
              wend
              push _addofc120
              if
                at _addofa120
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_3
              add
              push    _addvvXnameB5_4
              #(begin macro)addof()
              sbm _addofb121
              sbm _addofa121 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc121
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao121
              while
                push _addofa121
                if
                  at _addofa121
                    dec
                  ta
                  at _addofb121
                    inc
                  ta
                  push _addofb121
                  not
                  if
                    at _addofc121
                      set 1
                    ta
                  fi
                else
                  at _loopao121
                    reset
                  ta
                fi
              wend
              push _addofc121
              if
                at _addofa121
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_4
              push    _mulvvvXabsNameA5_4
              #(begin macro)addof()
              sbm _addofb122
              sbm _addofa122 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc122
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao122
              while
                push _addofa122
                if
                  at _addofa122
                    dec
                  ta
                  at _addofb122
                    inc
                  ta
                  push _addofb122
                  not
                  if
                    at _addofc122
                      set 1
                    ta
                  fi
                else
                  at _loopao122
                    reset
                  ta
                fi
              wend
              push _addofc122
              if
                at _addofa122
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_4
              #(begin macro)addof()
              sbm _addofb123
              sbm _addofa123 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc123
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao123
              while
                push _addofa123
                if
                  at _addofa123
                    dec
                  ta
                  at _addofb123
                    inc
                  ta
                  push _addofb123
                  not
                  if
                    at _addofc123
                      set 1
                    ta
                  fi
                else
                  at _loopao123
                    reset
                  ta
                fi
              wend
              push _addofc123
              if
                at _addofa123
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_4
              add
              push    _addvvXnameB5_5
              #(begin macro)addof()
              sbm _addofb124
              sbm _addofa124 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc124
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao124
              while
                push _addofa124
                if
                  at _addofa124
                    dec
                  ta
                  at _addofb124
                    inc
                  ta
                  push _addofb124
                  not
                  if
                    at _addofc124
                      set 1
                    ta
                  fi
                else
                  at _loopao124
                    reset
                  ta
                fi
              wend
              push _addofc124
              if
                at _addofa124
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_5
              push    _mulvvvXabsNameA5_5
              #(begin macro)addof()
              sbm _addofb125
              sbm _addofa125 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc125
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao125
              while
                push _addofa125
                if
                  at _addofa125
                    dec
                  ta
                  at _addofb125
                    inc
                  ta
                  push _addofb125
                  not
                  if
                    at _addofc125
                      set 1
                    ta
                  fi
                else
                  at _loopao125
                    reset
                  ta
                fi
              wend
              push _addofc125
              if
                at _addofa125
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX5_5
              #(begin macro)addof()
              sbm _addofb126
              sbm _addofa126 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc126
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao126
              while
                push _addofa126
                if
                  at _addofa126
                    dec
                  ta
                  at _addofb126
                    inc
                  ta
                  push _addofb126
                  not
                  if
                    at _addofc126
                      set 1
                    ta
                  fi
                else
                  at _loopao126
                    reset
                  ta
                fi
              wend
              push _addofc126
              if
                at _addofa126
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX5_5
              add
              pop     _mulFPresultX5_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb9
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb9
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB5_5
              push    _mulvvvXabsNameA5_5
              sup
              if
                at _asupb9
                  set 1
                ta
              else
                push    _addvvXnameB5_5
                push    _mulvvvXabsNameA5_5
                diff
                if
                  at _asupb9
                    reset
                  ta
                else
                  push    _addvvXnameB5_4
                  push    _mulvvvXabsNameA5_4
                  sup
                  if
                    at _asupb9
                      set 1
                    ta
                  else
                    push    _addvvXnameB5_4
                    push    _mulvvvXabsNameA5_4
                    diff
                    if
                      at _asupb9
                        reset
                      ta
                    else
                      push    _addvvXnameB5_3
                      push    _mulvvvXabsNameA5_3
                      sup
                      if
                        at _asupb9
                          set 1
                        ta
                      else
                        push    _addvvXnameB5_3
                        push    _mulvvvXabsNameA5_3
                        diff
                        if
                          at _asupb9
                            reset
                          ta
                        else
                          push    _addvvXnameB5_2
                          push    _mulvvvXabsNameA5_2
                          sup
                          if
                            at _asupb9
                              set 1
                            ta
                          else
                            push    _addvvXnameB5_2
                            push    _mulvvvXabsNameA5_2
                            diff
                            if
                              at _asupb9
                                reset
                              ta
                            else
                              push    _addvvXnameB5_1
                              push    _mulvvvXabsNameA5_1
                              sup
                              if
                                at _asupb9
                                  set 1
                                ta
                              else
                                push    _addvvXnameB5_1
                                push    _mulvvvXabsNameA5_1
                                diff
                                if
                                  at _asupb9
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB5_0
                                  push    _mulvvvXabsNameA5_0
                                  sup
                                  if
                                    at _asupb9
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB5_0
                                    push    _mulvvvXabsNameA5_0
                                    diff
                                    if
                                      at _asupb9
                                        reset
                                      ta
                                    else
                                      at _aequb9
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb9
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB5_s
                pop     _mulFPresultX5_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry9
                push    _addvvXnameB5_0
                push    _mulvvvXabsNameA5_0
                #(begin macro)subof()
                sbm _subofb145
                sbm _subofa145 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc145
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso145
                while
                  push _subofb145
                  if
                    at _subofb145
                      dec
                    ta
                    at _subofa145
                      dec
                    ta
                    push _subofa145
                    inc
                    not
                    if
                      at _subofc145
                        set 1
                      ta
                    fi
                  else
                    at _loopso145
                      reset
                    ta
                  fi
                wend
                push _subofc145
                if
                  at _subofb145
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb146
                sbm _subofa146 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc146
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso146
                while
                  push _subofb146
                  if
                    at _subofb146
                      dec
                    ta
                    at _subofa146
                      dec
                    ta
                    push _subofa146
                    inc
                    not
                    if
                      at _subofc146
                        set 1
                      ta
                    fi
                  else
                    at _loopso146
                      reset
                    ta
                  fi
                wend
                push _subofc146
                if
                  at _subofb146
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_0
                add
                pop     _addvvvXCarry9
                push    _addvvXnameB5_1
                push    _mulvvvXabsNameA5_1
                #(begin macro)subof()
                sbm _subofb147
                sbm _subofa147 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc147
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso147
                while
                  push _subofb147
                  if
                    at _subofb147
                      dec
                    ta
                    at _subofa147
                      dec
                    ta
                    push _subofa147
                    inc
                    not
                    if
                      at _subofc147
                        set 1
                      ta
                    fi
                  else
                    at _loopso147
                      reset
                    ta
                  fi
                wend
                push _subofc147
                if
                  at _subofb147
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb148
                sbm _subofa148 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc148
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso148
                while
                  push _subofb148
                  if
                    at _subofb148
                      dec
                    ta
                    at _subofa148
                      dec
                    ta
                    push _subofa148
                    inc
                    not
                    if
                      at _subofc148
                        set 1
                      ta
                    fi
                  else
                    at _loopso148
                      reset
                    ta
                  fi
                wend
                push _subofc148
                if
                  at _subofb148
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_1
                add
                pop     _addvvvXCarry9
                push    _addvvXnameB5_2
                push    _mulvvvXabsNameA5_2
                #(begin macro)subof()
                sbm _subofb149
                sbm _subofa149 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc149
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso149
                while
                  push _subofb149
                  if
                    at _subofb149
                      dec
                    ta
                    at _subofa149
                      dec
                    ta
                    push _subofa149
                    inc
                    not
                    if
                      at _subofc149
                        set 1
                      ta
                    fi
                  else
                    at _loopso149
                      reset
                    ta
                  fi
                wend
                push _subofc149
                if
                  at _subofb149
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb150
                sbm _subofa150 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc150
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso150
                while
                  push _subofb150
                  if
                    at _subofb150
                      dec
                    ta
                    at _subofa150
                      dec
                    ta
                    push _subofa150
                    inc
                    not
                    if
                      at _subofc150
                        set 1
                      ta
                    fi
                  else
                    at _loopso150
                      reset
                    ta
                  fi
                wend
                push _subofc150
                if
                  at _subofb150
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_2
                add
                pop     _addvvvXCarry9
                push    _addvvXnameB5_3
                push    _mulvvvXabsNameA5_3
                #(begin macro)subof()
                sbm _subofb151
                sbm _subofa151 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc151
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso151
                while
                  push _subofb151
                  if
                    at _subofb151
                      dec
                    ta
                    at _subofa151
                      dec
                    ta
                    push _subofa151
                    inc
                    not
                    if
                      at _subofc151
                        set 1
                      ta
                    fi
                  else
                    at _loopso151
                      reset
                    ta
                  fi
                wend
                push _subofc151
                if
                  at _subofb151
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb152
                sbm _subofa152 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc152
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso152
                while
                  push _subofb152
                  if
                    at _subofb152
                      dec
                    ta
                    at _subofa152
                      dec
                    ta
                    push _subofa152
                    inc
                    not
                    if
                      at _subofc152
                        set 1
                      ta
                    fi
                  else
                    at _loopso152
                      reset
                    ta
                  fi
                wend
                push _subofc152
                if
                  at _subofb152
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_3
                add
                pop     _addvvvXCarry9
                push    _addvvXnameB5_4
                push    _mulvvvXabsNameA5_4
                #(begin macro)subof()
                sbm _subofb153
                sbm _subofa153 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc153
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso153
                while
                  push _subofb153
                  if
                    at _subofb153
                      dec
                    ta
                    at _subofa153
                      dec
                    ta
                    push _subofa153
                    inc
                    not
                    if
                      at _subofc153
                        set 1
                      ta
                    fi
                  else
                    at _loopso153
                      reset
                    ta
                  fi
                wend
                push _subofc153
                if
                  at _subofb153
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb154
                sbm _subofa154 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc154
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso154
                while
                  push _subofb154
                  if
                    at _subofb154
                      dec
                    ta
                    at _subofa154
                      dec
                    ta
                    push _subofa154
                    inc
                    not
                    if
                      at _subofc154
                        set 1
                      ta
                    fi
                  else
                    at _loopso154
                      reset
                    ta
                  fi
                wend
                push _subofc154
                if
                  at _subofb154
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_4
                add
                pop     _addvvvXCarry9
                push    _addvvXnameB5_5
                push    _mulvvvXabsNameA5_5
                #(begin macro)subof()
                sbm _subofb155
                sbm _subofa155 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc155
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso155
                while
                  push _subofb155
                  if
                    at _subofb155
                      dec
                    ta
                    at _subofa155
                      dec
                    ta
                    push _subofa155
                    inc
                    not
                    if
                      at _subofc155
                        set 1
                      ta
                    fi
                  else
                    at _loopso155
                      reset
                    ta
                  fi
                wend
                push _subofc155
                if
                  at _subofb155
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry9
                #(begin macro)subof()
                sbm _subofb156
                sbm _subofa156 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc156
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso156
                while
                  push _subofb156
                  if
                    at _subofb156
                      dec
                    ta
                    at _subofa156
                      dec
                    ta
                    push _subofa156
                    inc
                    not
                    if
                      at _subofc156
                        set 1
                      ta
                    fi
                  else
                    at _loopso156
                      reset
                    ta
                  fi
                wend
                push _subofc156
                if
                  at _subofb156
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX5_5
                add
                pop     _addvvvXCarry9
                pop     _mulFPresultX5_c
              else # absB >= absA :
                push    _aequb9
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX5_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA5_s
                  pop     _mulFPresultX5_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_0
                  push    _addvvXnameB5_0
                  #(begin macro)subof()
                  sbm _subofb157
                  sbm _subofa157 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc157
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso157
                  while
                    push _subofb157
                    if
                      at _subofb157
                        dec
                      ta
                      at _subofa157
                        dec
                      ta
                      push _subofa157
                      inc
                      not
                      if
                        at _subofc157
                          set 1
                        ta
                      fi
                    else
                      at _loopso157
                        reset
                      ta
                    fi
                  wend
                  push _subofc157
                  if
                    at _subofb157
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb158
                  sbm _subofa158 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc158
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso158
                  while
                    push _subofb158
                    if
                      at _subofb158
                        dec
                      ta
                      at _subofa158
                        dec
                      ta
                      push _subofa158
                      inc
                      not
                      if
                        at _subofc158
                          set 1
                        ta
                      fi
                    else
                      at _loopso158
                        reset
                      ta
                    fi
                  wend
                  push _subofc158
                  if
                    at _subofb158
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_0
                  add
                  pop     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_1
                  push    _addvvXnameB5_1
                  #(begin macro)subof()
                  sbm _subofb159
                  sbm _subofa159 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc159
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso159
                  while
                    push _subofb159
                    if
                      at _subofb159
                        dec
                      ta
                      at _subofa159
                        dec
                      ta
                      push _subofa159
                      inc
                      not
                      if
                        at _subofc159
                          set 1
                        ta
                      fi
                    else
                      at _loopso159
                        reset
                      ta
                    fi
                  wend
                  push _subofc159
                  if
                    at _subofb159
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb160
                  sbm _subofa160 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc160
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso160
                  while
                    push _subofb160
                    if
                      at _subofb160
                        dec
                      ta
                      at _subofa160
                        dec
                      ta
                      push _subofa160
                      inc
                      not
                      if
                        at _subofc160
                          set 1
                        ta
                      fi
                    else
                      at _loopso160
                        reset
                      ta
                    fi
                  wend
                  push _subofc160
                  if
                    at _subofb160
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_1
                  add
                  pop     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_2
                  push    _addvvXnameB5_2
                  #(begin macro)subof()
                  sbm _subofb161
                  sbm _subofa161 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc161
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso161
                  while
                    push _subofb161
                    if
                      at _subofb161
                        dec
                      ta
                      at _subofa161
                        dec
                      ta
                      push _subofa161
                      inc
                      not
                      if
                        at _subofc161
                          set 1
                        ta
                      fi
                    else
                      at _loopso161
                        reset
                      ta
                    fi
                  wend
                  push _subofc161
                  if
                    at _subofb161
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb162
                  sbm _subofa162 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc162
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso162
                  while
                    push _subofb162
                    if
                      at _subofb162
                        dec
                      ta
                      at _subofa162
                        dec
                      ta
                      push _subofa162
                      inc
                      not
                      if
                        at _subofc162
                          set 1
                        ta
                      fi
                    else
                      at _loopso162
                        reset
                      ta
                    fi
                  wend
                  push _subofc162
                  if
                    at _subofb162
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_2
                  add
                  pop     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_3
                  push    _addvvXnameB5_3
                  #(begin macro)subof()
                  sbm _subofb163
                  sbm _subofa163 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc163
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso163
                  while
                    push _subofb163
                    if
                      at _subofb163
                        dec
                      ta
                      at _subofa163
                        dec
                      ta
                      push _subofa163
                      inc
                      not
                      if
                        at _subofc163
                          set 1
                        ta
                      fi
                    else
                      at _loopso163
                        reset
                      ta
                    fi
                  wend
                  push _subofc163
                  if
                    at _subofb163
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb164
                  sbm _subofa164 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc164
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso164
                  while
                    push _subofb164
                    if
                      at _subofb164
                        dec
                      ta
                      at _subofa164
                        dec
                      ta
                      push _subofa164
                      inc
                      not
                      if
                        at _subofc164
                          set 1
                        ta
                      fi
                    else
                      at _loopso164
                        reset
                      ta
                    fi
                  wend
                  push _subofc164
                  if
                    at _subofb164
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_3
                  add
                  pop     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_4
                  push    _addvvXnameB5_4
                  #(begin macro)subof()
                  sbm _subofb165
                  sbm _subofa165 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc165
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso165
                  while
                    push _subofb165
                    if
                      at _subofb165
                        dec
                      ta
                      at _subofa165
                        dec
                      ta
                      push _subofa165
                      inc
                      not
                      if
                        at _subofc165
                          set 1
                        ta
                      fi
                    else
                      at _loopso165
                        reset
                      ta
                    fi
                  wend
                  push _subofc165
                  if
                    at _subofb165
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb166
                  sbm _subofa166 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc166
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso166
                  while
                    push _subofb166
                    if
                      at _subofb166
                        dec
                      ta
                      at _subofa166
                        dec
                      ta
                      push _subofa166
                      inc
                      not
                      if
                        at _subofc166
                          set 1
                        ta
                      fi
                    else
                      at _loopso166
                        reset
                      ta
                    fi
                  wend
                  push _subofc166
                  if
                    at _subofb166
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_4
                  add
                  pop     _addvvvXCarry9
                  push    _mulvvvXabsNameA5_5
                  push    _addvvXnameB5_5
                  #(begin macro)subof()
                  sbm _subofb167
                  sbm _subofa167 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc167
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso167
                  while
                    push _subofb167
                    if
                      at _subofb167
                        dec
                      ta
                      at _subofa167
                        dec
                      ta
                      push _subofa167
                      inc
                      not
                      if
                        at _subofc167
                          set 1
                        ta
                      fi
                    else
                      at _loopso167
                        reset
                      ta
                    fi
                  wend
                  push _subofc167
                  if
                    at _subofb167
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry9
                  #(begin macro)subof()
                  sbm _subofb168
                  sbm _subofa168 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc168
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso168
                  while
                    push _subofb168
                    if
                      at _subofb168
                        dec
                      ta
                      at _subofa168
                        dec
                      ta
                      push _subofa168
                      inc
                      not
                      if
                        at _subofc168
                          set 1
                        ta
                      fi
                    else
                      at _loopso168
                        reset
                      ta
                    fi
                  wend
                  push _subofc168
                  if
                    at _subofb168
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX5_5
                  add
                  pop     _addvvvXCarry9
                  pop     _mulFPresultX5_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB5_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB5_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB5_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB5_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB5_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB5_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB5_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB5_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB5_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB5_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB5_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB5_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB5_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB5_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB5_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB5_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB5_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB5_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB5_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB5_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB5_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB5_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB5_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB5_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB5_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB5_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB5_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop5
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA5
        push _mulvvvXsB5
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX5_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX5_c
        push    _mulFPresultX5_s
        push    _mulFPresultX5_5
        push    _mulFPresultX5_4
        push    _mulFPresultX5_3
        push    _mulFPresultX5_2
        push    _mulFPresultX5_1
        push    _mulFPresultX5_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack5_0    # 0 byte of _castFPinstack5
        var _castFPinstack5_1    # 1 byte of _castFPinstack5
        var _castFPinstack5_2    # 2 byte of _castFPinstack5
        var _castFPinstack5_3    # 3 byte of _castFPinstack5
        var _castFPinstack5_4    # 4 byte of _castFPinstack5
        var _castFPinstack5_5    # 5 byte of _castFPinstack5
        var _castFPinstack5_s    # Sign of _castFPinstack5
        var _castFPinstack5_c    # carry of _castFPinstack5
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack5_0    # 0 byte of _castFPoutstack5
        var _castFPoutstack5_1    # 1 byte of _castFPoutstack5
        var _castFPoutstack5_2    # 2 byte of _castFPoutstack5
        var _castFPoutstack5_s    # Sign of _castFPoutstack5
        var _castFPoutstack5_c    # carry of _castFPoutstack5
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack5_0
        pop     _castFPinstack5_1
        pop     _castFPinstack5_2
        pop     _castFPinstack5_3
        pop     _castFPinstack5_4
        pop     _castFPinstack5_5
        pop     _castFPinstack5_s
        pop     _castFPinstack5_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack5_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack5_s
        pop _castFPoutstack5_s
        # integer part
        push _castFPinstack5_4
        pop _castFPoutstack5_2
        # fract part
        push _castFPinstack5_3
        pop _castFPoutstack5_1
        push _castFPinstack5_2
        pop _castFPoutstack5_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack5_c
        push    _castFPoutstack5_s
        push    _castFPoutstack5_2
        push    _castFPoutstack5_1
        push    _castFPoutstack5_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA5_0
        pop     _mulFPnameA5_1
        pop     _mulFPnameA5_2
        pop     _mulFPnameA5_s
        pop     _mulFPnameA5_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)subX(FP)
        #(begin macro)sbmX(X, "_subXName" + _subX, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _subXName3_0 - 5
        sbm _subXName3_1 - 6
        sbm _subXName3_2 - 7
        sbm _subXName3_s - 8
        sbm _subXName3_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_subXName" + _subX, 1)
        #(begin macro)sbmX(X,"_subXNameB" + _subX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _subXNameB3_0 - 0
        sbm _subXNameB3_1 - 1
        sbm _subXNameB3_2 - 2
        sbm _subXNameB3_s - 3
        sbm _subXNameB3_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X,"_subXNameB" + _subX, 0)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_subXNameA" + _subX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _subXNameA3_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _subXNameA3_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _subXNameA3_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _subXNameA3_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _subXNameA3_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_subXNameA" + _subX)
        #(begin macro)pushvX(X,"_subXName" + _subX)
        push    _subXName3_c
        push    _subXName3_s
        push    _subXName3_2
        push    _subXName3_1
        push    _subXName3_0
        #(end macro)pushvX(X,"_subXName" + _subX)
        #(begin macro)popvX(X,"_subXNameA" + _subX)
        pop     _subXNameA3_0
        pop     _subXNameA3_1
        pop     _subXNameA3_2
        pop     _subXNameA3_s
        pop     _subXNameA3_c
        #(end macro)popvX(X,"_subXNameA" + _subX)
        #(begin macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_negNameB" + _subvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _negNameB3_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _negNameB3_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB3_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB3_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB3_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_negNameB" + _subvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _subXNameB3_c
        push    _subXNameB3_s
        push    _subXNameB3_2
        push    _subXNameB3_1
        push    _subXNameB3_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_negNameB" + _subvvvX)
        pop     _negNameB3_0
        pop     _negNameB3_1
        pop     _negNameB3_2
        pop     _negNameB3_s
        pop     _negNameB3_c
        #(end macro)popvX(X,"_negNameB" + _subvvvX)
        #(begin macro)negvX(X,"_negNameB" + _subvvvX)
        push    _negNameB3_s
        dec
        bool
        dup
        if    # if name is now negative
          #(begin macro)if_equal(name +"_"+xx, 0)
          push _negNameB3_0
          push 0
          equal
          if
            #(end macro)if_equal(name +"_"+xx, 0)
            #(begin macro)if_equal(name +"_"+xx, 0)
            push _negNameB3_1
            push 0
            equal
            if
              #(end macro)if_equal(name +"_"+xx, 0)
              #(begin macro)if_equal(name +"_"+xx, 0)
              push _negNameB3_2
              push 0
              equal
              if
                #(end macro)if_equal(name +"_"+xx, 0)
                #(begin macro)at_reset(name + "_s")   # set sign to positive if name==0
                #(begin macro)at_1("reset",a)
                #(begin macro)at_2(ope,a,"")
                at _negNameB3_s
                  reset 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("reset",a)
                #(end macro)at_reset(name + "_s")   # set sign to positive if name==0
              fi
            fi
          fi
        fi
        pop     _negNameB3_s
        #(end macro)negvX(X,"_negNameB" + _subvvvX)
        #(begin macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
        push    _subXNameA3_s
        push    _negNameB3_s
        or
        not
        push    _subXNameA3_s
        push    _negNameB3_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _subXNameA3_s
          pop     _subXName3_s    # name has same sign of nameA and nameB
          push    0
          push    _subXNameA3_0
          #(begin macro)addof()
          sbm _addofb127
          sbm _addofa127 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc127
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao127
          while
            push _addofa127
            if
              at _addofa127
                dec
              ta
              at _addofb127
                inc
              ta
              push _addofb127
              not
              if
                at _addofc127
                  set 1
                ta
              fi
            else
              at _loopao127
                reset
              ta
            fi
          wend
          push _addofc127
          if
            at _addofa127
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_0
          push    _negNameB3_0
          #(begin macro)addof()
          sbm _addofb128
          sbm _addofa128 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc128
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao128
          while
            push _addofa128
            if
              at _addofa128
                dec
              ta
              at _addofb128
                inc
              ta
              push _addofb128
              not
              if
                at _addofc128
                  set 1
                ta
              fi
            else
              at _loopao128
                reset
              ta
            fi
          wend
          push _addofc128
          if
            at _addofa128
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _subXName3_0
          #(begin macro)addof()
          sbm _addofb129
          sbm _addofa129 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc129
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao129
          while
            push _addofa129
            if
              at _addofa129
                dec
              ta
              at _addofb129
                inc
              ta
              push _addofb129
              not
              if
                at _addofc129
                  set 1
                ta
              fi
            else
              at _loopao129
                reset
              ta
            fi
          wend
          push _addofc129
          if
            at _addofa129
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_0
          add
          push    _subXNameA3_1
          #(begin macro)addof()
          sbm _addofb130
          sbm _addofa130 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc130
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao130
          while
            push _addofa130
            if
              at _addofa130
                dec
              ta
              at _addofb130
                inc
              ta
              push _addofb130
              not
              if
                at _addofc130
                  set 1
                ta
              fi
            else
              at _loopao130
                reset
              ta
            fi
          wend
          push _addofc130
          if
            at _addofa130
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_1
          push    _negNameB3_1
          #(begin macro)addof()
          sbm _addofb131
          sbm _addofa131 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc131
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao131
          while
            push _addofa131
            if
              at _addofa131
                dec
              ta
              at _addofb131
                inc
              ta
              push _addofb131
              not
              if
                at _addofc131
                  set 1
                ta
              fi
            else
              at _loopao131
                reset
              ta
            fi
          wend
          push _addofc131
          if
            at _addofa131
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _subXName3_1
          #(begin macro)addof()
          sbm _addofb132
          sbm _addofa132 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc132
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao132
          while
            push _addofa132
            if
              at _addofa132
                dec
              ta
              at _addofb132
                inc
              ta
              push _addofb132
              not
              if
                at _addofc132
                  set 1
                ta
              fi
            else
              at _loopao132
                reset
              ta
            fi
          wend
          push _addofc132
          if
            at _addofa132
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_1
          add
          push    _subXNameA3_2
          #(begin macro)addof()
          sbm _addofb133
          sbm _addofa133 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc133
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao133
          while
            push _addofa133
            if
              at _addofa133
                dec
              ta
              at _addofb133
                inc
              ta
              push _addofb133
              not
              if
                at _addofc133
                  set 1
                ta
              fi
            else
              at _loopao133
                reset
              ta
            fi
          wend
          push _addofc133
          if
            at _addofa133
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_2
          push    _negNameB3_2
          #(begin macro)addof()
          sbm _addofb134
          sbm _addofa134 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc134
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao134
          while
            push _addofa134
            if
              at _addofa134
                dec
              ta
              at _addofb134
                inc
              ta
              push _addofb134
              not
              if
                at _addofc134
                  set 1
                ta
              fi
            else
              at _loopao134
                reset
              ta
            fi
          wend
          push _addofc134
          if
            at _addofa134
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _subXName3_2
          #(begin macro)addof()
          sbm _addofb135
          sbm _addofa135 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc135
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao135
          while
            push _addofa135
            if
              at _addofa135
                dec
              ta
              at _addofb135
                inc
              ta
              push _addofb135
              not
              if
                at _addofc135
                  set 1
                ta
              fi
            else
              at _loopao135
                reset
              ta
            fi
          wend
          push _addofc135
          if
            at _addofa135
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _subXName3_2
          add
          pop     _subXName3_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb10
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb10
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _subXNameA3_2
          push    _negNameB3_2
          sup
          if
            at _asupb10
              set 1
            ta
          else
            push    _subXNameA3_2
            push    _negNameB3_2
            diff
            if
              at _asupb10
                reset
              ta
            else
              push    _subXNameA3_1
              push    _negNameB3_1
              sup
              if
                at _asupb10
                  set 1
                ta
              else
                push    _subXNameA3_1
                push    _negNameB3_1
                diff
                if
                  at _asupb10
                    reset
                  ta
                else
                  push    _subXNameA3_0
                  push    _negNameB3_0
                  sup
                  if
                    at _asupb10
                      set 1
                    ta
                  else
                    push    _subXNameA3_0
                    push    _negNameB3_0
                    diff
                    if
                      at _asupb10
                        reset
                      ta
                    else
                      at _aequb10
                        set 1
                      ta
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb10
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _subXNameA3_s
            pop     _subXName3_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry10
            push    _subXNameA3_0
            push    _negNameB3_0
            #(begin macro)subof()
            sbm _subofb169
            sbm _subofa169 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc169
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso169
            while
              push _subofb169
              if
                at _subofb169
                  dec
                ta
                at _subofa169
                  dec
                ta
                push _subofa169
                inc
                not
                if
                  at _subofc169
                    set 1
                  ta
                fi
              else
                at _loopso169
                  reset
                ta
              fi
            wend
            push _subofc169
            if
              at _subofb169
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry10
            #(begin macro)subof()
            sbm _subofb170
            sbm _subofa170 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc170
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso170
            while
              push _subofb170
              if
                at _subofb170
                  dec
                ta
                at _subofa170
                  dec
                ta
                push _subofa170
                inc
                not
                if
                  at _subofc170
                    set 1
                  ta
                fi
              else
                at _loopso170
                  reset
                ta
              fi
            wend
            push _subofc170
            if
              at _subofb170
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _subXName3_0
            add
            pop     _addvvvXCarry10
            push    _subXNameA3_1
            push    _negNameB3_1
            #(begin macro)subof()
            sbm _subofb171
            sbm _subofa171 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc171
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso171
            while
              push _subofb171
              if
                at _subofb171
                  dec
                ta
                at _subofa171
                  dec
                ta
                push _subofa171
                inc
                not
                if
                  at _subofc171
                    set 1
                  ta
                fi
              else
                at _loopso171
                  reset
                ta
              fi
            wend
            push _subofc171
            if
              at _subofb171
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry10
            #(begin macro)subof()
            sbm _subofb172
            sbm _subofa172 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc172
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso172
            while
              push _subofb172
              if
                at _subofb172
                  dec
                ta
                at _subofa172
                  dec
                ta
                push _subofa172
                inc
                not
                if
                  at _subofc172
                    set 1
                  ta
                fi
              else
                at _loopso172
                  reset
                ta
              fi
            wend
            push _subofc172
            if
              at _subofb172
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _subXName3_1
            add
            pop     _addvvvXCarry10
            push    _subXNameA3_2
            push    _negNameB3_2
            #(begin macro)subof()
            sbm _subofb173
            sbm _subofa173 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc173
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso173
            while
              push _subofb173
              if
                at _subofb173
                  dec
                ta
                at _subofa173
                  dec
                ta
                push _subofa173
                inc
                not
                if
                  at _subofc173
                    set 1
                  ta
                fi
              else
                at _loopso173
                  reset
                ta
              fi
            wend
            push _subofc173
            if
              at _subofb173
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry10
            #(begin macro)subof()
            sbm _subofb174
            sbm _subofa174 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc174
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso174
            while
              push _subofb174
              if
                at _subofb174
                  dec
                ta
                at _subofa174
                  dec
                ta
                push _subofa174
                inc
                not
                if
                  at _subofc174
                    set 1
                  ta
                fi
              else
                at _loopso174
                  reset
                ta
              fi
            wend
            push _subofc174
            if
              at _subofb174
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _subXName3_2
            add
            pop     _addvvvXCarry10
            pop     _subXName3_c
          else # absB >= absA :
            push    _aequb10
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _subXName3_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _negNameB3_s
              pop     _subXName3_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry10
              push    _negNameB3_0
              push    _subXNameA3_0
              #(begin macro)subof()
              sbm _subofb175
              sbm _subofa175 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc175
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso175
              while
                push _subofb175
                if
                  at _subofb175
                    dec
                  ta
                  at _subofa175
                    dec
                  ta
                  push _subofa175
                  inc
                  not
                  if
                    at _subofc175
                      set 1
                    ta
                  fi
                else
                  at _loopso175
                    reset
                  ta
                fi
              wend
              push _subofc175
              if
                at _subofb175
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry10
              #(begin macro)subof()
              sbm _subofb176
              sbm _subofa176 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc176
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso176
              while
                push _subofb176
                if
                  at _subofb176
                    dec
                  ta
                  at _subofa176
                    dec
                  ta
                  push _subofa176
                  inc
                  not
                  if
                    at _subofc176
                      set 1
                    ta
                  fi
                else
                  at _loopso176
                    reset
                  ta
                fi
              wend
              push _subofc176
              if
                at _subofb176
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _subXName3_0
              add
              pop     _addvvvXCarry10
              push    _negNameB3_1
              push    _subXNameA3_1
              #(begin macro)subof()
              sbm _subofb177
              sbm _subofa177 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc177
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso177
              while
                push _subofb177
                if
                  at _subofb177
                    dec
                  ta
                  at _subofa177
                    dec
                  ta
                  push _subofa177
                  inc
                  not
                  if
                    at _subofc177
                      set 1
                    ta
                  fi
                else
                  at _loopso177
                    reset
                  ta
                fi
              wend
              push _subofc177
              if
                at _subofb177
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry10
              #(begin macro)subof()
              sbm _subofb178
              sbm _subofa178 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc178
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso178
              while
                push _subofb178
                if
                  at _subofb178
                    dec
                  ta
                  at _subofa178
                    dec
                  ta
                  push _subofa178
                  inc
                  not
                  if
                    at _subofc178
                      set 1
                    ta
                  fi
                else
                  at _loopso178
                    reset
                  ta
                fi
              wend
              push _subofc178
              if
                at _subofb178
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _subXName3_1
              add
              pop     _addvvvXCarry10
              push    _negNameB3_2
              push    _subXNameA3_2
              #(begin macro)subof()
              sbm _subofb179
              sbm _subofa179 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc179
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso179
              while
                push _subofb179
                if
                  at _subofb179
                    dec
                  ta
                  at _subofa179
                    dec
                  ta
                  push _subofa179
                  inc
                  not
                  if
                    at _subofc179
                      set 1
                    ta
                  fi
                else
                  at _loopso179
                    reset
                  ta
                fi
              wend
              push _subofc179
              if
                at _subofb179
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry10
              #(begin macro)subof()
              sbm _subofb180
              sbm _subofa180 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc180
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso180
              while
                push _subofb180
                if
                  at _subofb180
                    dec
                  ta
                  at _subofa180
                    dec
                  ta
                  push _subofa180
                  inc
                  not
                  if
                    at _subofc180
                      set 1
                    ta
                  fi
                else
                  at _loopso180
                    reset
                  ta
                fi
              wend
              push _subofc180
              if
                at _subofb180
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _subXName3_2
              add
              pop     _addvvvXCarry10
              pop     _subXName3_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)subvvvX(X,"_subXName" + _subX, "_subXNameA" + _subX, "_subXNameB" + _subX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X)
        #(end macro)subX(FP)
        #(begin macro)pushvX(FP,"pr")
        push    pr_c
        push    pr_s
        push    pr_2
        push    pr_1
        push    pr_0
        #(end macro)pushvX(FP,"pr")
        #(begin macro)addX(FP)
        #(begin macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXName3_0 - 5
        sbm _addXName3_1 - 6
        sbm _addXName3_2 - 7
        sbm _addXName3_s - 8
        sbm _addXName3_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXNameB3_0 - 0
        sbm _addXNameB3_1 - 1
        sbm _addXNameB3_2 - 2
        sbm _addXNameB3_s - 3
        sbm _addXNameB3_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addXNameA3_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addXNameA3_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA3_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA3_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA3_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)pushvX(X,"_addXName"+_addX)
        push    _addXName3_c
        push    _addXName3_s
        push    _addXName3_2
        push    _addXName3_1
        push    _addXName3_0
        #(end macro)pushvX(X,"_addXName"+_addX)
        #(begin macro)popvX(X,"_addXNameA"+_addX)
        pop     _addXNameA3_0
        pop     _addXNameA3_1
        pop     _addXNameA3_2
        pop     _addXNameA3_s
        pop     _addXNameA3_c
        #(end macro)popvX(X,"_addXNameA"+_addX)
        #(begin macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        push    _addXNameA3_s
        push    _addXNameB3_s
        or
        not
        push    _addXNameA3_s
        push    _addXNameB3_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addXNameA3_s
          pop     _addXName3_s    # name has same sign of nameA and nameB
          push    0
          push    _addXNameA3_0
          #(begin macro)addof()
          sbm _addofb136
          sbm _addofa136 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc136
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao136
          while
            push _addofa136
            if
              at _addofa136
                dec
              ta
              at _addofb136
                inc
              ta
              push _addofb136
              not
              if
                at _addofc136
                  set 1
                ta
              fi
            else
              at _loopao136
                reset
              ta
            fi
          wend
          push _addofc136
          if
            at _addofa136
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_0
          push    _addXNameB3_0
          #(begin macro)addof()
          sbm _addofb137
          sbm _addofa137 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc137
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao137
          while
            push _addofa137
            if
              at _addofa137
                dec
              ta
              at _addofb137
                inc
              ta
              push _addofb137
              not
              if
                at _addofc137
                  set 1
                ta
              fi
            else
              at _loopao137
                reset
              ta
            fi
          wend
          push _addofc137
          if
            at _addofa137
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName3_0
          #(begin macro)addof()
          sbm _addofb138
          sbm _addofa138 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc138
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao138
          while
            push _addofa138
            if
              at _addofa138
                dec
              ta
              at _addofb138
                inc
              ta
              push _addofb138
              not
              if
                at _addofc138
                  set 1
                ta
              fi
            else
              at _loopao138
                reset
              ta
            fi
          wend
          push _addofc138
          if
            at _addofa138
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_0
          add
          push    _addXNameA3_1
          #(begin macro)addof()
          sbm _addofb139
          sbm _addofa139 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc139
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao139
          while
            push _addofa139
            if
              at _addofa139
                dec
              ta
              at _addofb139
                inc
              ta
              push _addofb139
              not
              if
                at _addofc139
                  set 1
                ta
              fi
            else
              at _loopao139
                reset
              ta
            fi
          wend
          push _addofc139
          if
            at _addofa139
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_1
          push    _addXNameB3_1
          #(begin macro)addof()
          sbm _addofb140
          sbm _addofa140 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc140
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao140
          while
            push _addofa140
            if
              at _addofa140
                dec
              ta
              at _addofb140
                inc
              ta
              push _addofb140
              not
              if
                at _addofc140
                  set 1
                ta
              fi
            else
              at _loopao140
                reset
              ta
            fi
          wend
          push _addofc140
          if
            at _addofa140
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName3_1
          #(begin macro)addof()
          sbm _addofb141
          sbm _addofa141 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc141
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao141
          while
            push _addofa141
            if
              at _addofa141
                dec
              ta
              at _addofb141
                inc
              ta
              push _addofb141
              not
              if
                at _addofc141
                  set 1
                ta
              fi
            else
              at _loopao141
                reset
              ta
            fi
          wend
          push _addofc141
          if
            at _addofa141
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_1
          add
          push    _addXNameA3_2
          #(begin macro)addof()
          sbm _addofb142
          sbm _addofa142 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc142
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao142
          while
            push _addofa142
            if
              at _addofa142
                dec
              ta
              at _addofb142
                inc
              ta
              push _addofb142
              not
              if
                at _addofc142
                  set 1
                ta
              fi
            else
              at _loopao142
                reset
              ta
            fi
          wend
          push _addofc142
          if
            at _addofa142
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_2
          push    _addXNameB3_2
          #(begin macro)addof()
          sbm _addofb143
          sbm _addofa143 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc143
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao143
          while
            push _addofa143
            if
              at _addofa143
                dec
              ta
              at _addofb143
                inc
              ta
              push _addofb143
              not
              if
                at _addofc143
                  set 1
                ta
              fi
            else
              at _loopao143
                reset
              ta
            fi
          wend
          push _addofc143
          if
            at _addofa143
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName3_2
          #(begin macro)addof()
          sbm _addofb144
          sbm _addofa144 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc144
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao144
          while
            push _addofa144
            if
              at _addofa144
                dec
              ta
              at _addofb144
                inc
              ta
              push _addofb144
              not
              if
                at _addofc144
                  set 1
                ta
              fi
            else
              at _loopao144
                reset
              ta
            fi
          wend
          push _addofc144
          if
            at _addofa144
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName3_2
          add
          pop     _addXName3_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb11
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb11
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addXNameA3_2
          push    _addXNameB3_2
          sup
          if
            at _asupb11
              set 1
            ta
          else
            push    _addXNameA3_2
            push    _addXNameB3_2
            diff
            if
              at _asupb11
                reset
              ta
            else
              push    _addXNameA3_1
              push    _addXNameB3_1
              sup
              if
                at _asupb11
                  set 1
                ta
              else
                push    _addXNameA3_1
                push    _addXNameB3_1
                diff
                if
                  at _asupb11
                    reset
                  ta
                else
                  push    _addXNameA3_0
                  push    _addXNameB3_0
                  sup
                  if
                    at _asupb11
                      set 1
                    ta
                  else
                    push    _addXNameA3_0
                    push    _addXNameB3_0
                    diff
                    if
                      at _asupb11
                        reset
                      ta
                    else
                      at _aequb11
                        set 1
                      ta
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb11
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addXNameA3_s
            pop     _addXName3_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry11
            push    _addXNameA3_0
            push    _addXNameB3_0
            #(begin macro)subof()
            sbm _subofb181
            sbm _subofa181 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc181
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso181
            while
              push _subofb181
              if
                at _subofb181
                  dec
                ta
                at _subofa181
                  dec
                ta
                push _subofa181
                inc
                not
                if
                  at _subofc181
                    set 1
                  ta
                fi
              else
                at _loopso181
                  reset
                ta
              fi
            wend
            push _subofc181
            if
              at _subofb181
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry11
            #(begin macro)subof()
            sbm _subofb182
            sbm _subofa182 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc182
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso182
            while
              push _subofb182
              if
                at _subofb182
                  dec
                ta
                at _subofa182
                  dec
                ta
                push _subofa182
                inc
                not
                if
                  at _subofc182
                    set 1
                  ta
                fi
              else
                at _loopso182
                  reset
                ta
              fi
            wend
            push _subofc182
            if
              at _subofb182
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName3_0
            add
            pop     _addvvvXCarry11
            push    _addXNameA3_1
            push    _addXNameB3_1
            #(begin macro)subof()
            sbm _subofb183
            sbm _subofa183 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc183
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso183
            while
              push _subofb183
              if
                at _subofb183
                  dec
                ta
                at _subofa183
                  dec
                ta
                push _subofa183
                inc
                not
                if
                  at _subofc183
                    set 1
                  ta
                fi
              else
                at _loopso183
                  reset
                ta
              fi
            wend
            push _subofc183
            if
              at _subofb183
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry11
            #(begin macro)subof()
            sbm _subofb184
            sbm _subofa184 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc184
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso184
            while
              push _subofb184
              if
                at _subofb184
                  dec
                ta
                at _subofa184
                  dec
                ta
                push _subofa184
                inc
                not
                if
                  at _subofc184
                    set 1
                  ta
                fi
              else
                at _loopso184
                  reset
                ta
              fi
            wend
            push _subofc184
            if
              at _subofb184
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName3_1
            add
            pop     _addvvvXCarry11
            push    _addXNameA3_2
            push    _addXNameB3_2
            #(begin macro)subof()
            sbm _subofb185
            sbm _subofa185 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc185
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso185
            while
              push _subofb185
              if
                at _subofb185
                  dec
                ta
                at _subofa185
                  dec
                ta
                push _subofa185
                inc
                not
                if
                  at _subofc185
                    set 1
                  ta
                fi
              else
                at _loopso185
                  reset
                ta
              fi
            wend
            push _subofc185
            if
              at _subofb185
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry11
            #(begin macro)subof()
            sbm _subofb186
            sbm _subofa186 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc186
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso186
            while
              push _subofb186
              if
                at _subofb186
                  dec
                ta
                at _subofa186
                  dec
                ta
                push _subofa186
                inc
                not
                if
                  at _subofc186
                    set 1
                  ta
                fi
              else
                at _loopso186
                  reset
                ta
              fi
            wend
            push _subofc186
            if
              at _subofb186
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName3_2
            add
            pop     _addvvvXCarry11
            pop     _addXName3_c
          else # absB >= absA :
            push    _aequb11
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _addXName3_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _addXNameB3_s
              pop     _addXName3_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry11
              push    _addXNameB3_0
              push    _addXNameA3_0
              #(begin macro)subof()
              sbm _subofb187
              sbm _subofa187 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc187
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso187
              while
                push _subofb187
                if
                  at _subofb187
                    dec
                  ta
                  at _subofa187
                    dec
                  ta
                  push _subofa187
                  inc
                  not
                  if
                    at _subofc187
                      set 1
                    ta
                  fi
                else
                  at _loopso187
                    reset
                  ta
                fi
              wend
              push _subofc187
              if
                at _subofb187
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry11
              #(begin macro)subof()
              sbm _subofb188
              sbm _subofa188 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc188
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso188
              while
                push _subofb188
                if
                  at _subofb188
                    dec
                  ta
                  at _subofa188
                    dec
                  ta
                  push _subofa188
                  inc
                  not
                  if
                    at _subofc188
                      set 1
                    ta
                  fi
                else
                  at _loopso188
                    reset
                  ta
                fi
              wend
              push _subofc188
              if
                at _subofb188
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName3_0
              add
              pop     _addvvvXCarry11
              push    _addXNameB3_1
              push    _addXNameA3_1
              #(begin macro)subof()
              sbm _subofb189
              sbm _subofa189 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc189
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso189
              while
                push _subofb189
                if
                  at _subofb189
                    dec
                  ta
                  at _subofa189
                    dec
                  ta
                  push _subofa189
                  inc
                  not
                  if
                    at _subofc189
                      set 1
                    ta
                  fi
                else
                  at _loopso189
                    reset
                  ta
                fi
              wend
              push _subofc189
              if
                at _subofb189
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry11
              #(begin macro)subof()
              sbm _subofb190
              sbm _subofa190 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc190
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso190
              while
                push _subofb190
                if
                  at _subofb190
                    dec
                  ta
                  at _subofa190
                    dec
                  ta
                  push _subofa190
                  inc
                  not
                  if
                    at _subofc190
                      set 1
                    ta
                  fi
                else
                  at _loopso190
                    reset
                  ta
                fi
              wend
              push _subofc190
              if
                at _subofb190
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName3_1
              add
              pop     _addvvvXCarry11
              push    _addXNameB3_2
              push    _addXNameA3_2
              #(begin macro)subof()
              sbm _subofb191
              sbm _subofa191 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc191
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso191
              while
                push _subofb191
                if
                  at _subofb191
                    dec
                  ta
                  at _subofa191
                    dec
                  ta
                  push _subofa191
                  inc
                  not
                  if
                    at _subofc191
                      set 1
                    ta
                  fi
                else
                  at _loopso191
                    reset
                  ta
                fi
              wend
              push _subofc191
              if
                at _subofb191
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry11
              #(begin macro)subof()
              sbm _subofb192
              sbm _subofa192 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc192
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso192
              while
                push _subofb192
                if
                  at _subofb192
                    dec
                  ta
                  at _subofa192
                    dec
                  ta
                  push _subofa192
                  inc
                  not
                  if
                    at _subofc192
                      set 1
                    ta
                  fi
                else
                  at _loopso192
                    reset
                  ta
                fi
              wend
              push _subofc192
              if
                at _subofb192
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName3_2
              add
              pop     _addvvvXCarry11
              pop     _addXName3_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X)
        #(end macro)addX(FP)
        #(begin macro)popvX(FP,"newRe")
        pop     newRe_0
        pop     newRe_1
        pop     newRe_2
        pop     newRe_s
        pop     newRe_c
        #(end macro)popvX(FP,"newRe")
        #    newIm = 2 * oldRe * oldIm + pi
        #(begin macro)pushFP(FP_I,FP_P,2)
        #(begin macro)pushX(I+P,0)
        push    0
        push    0
        push    0
        push    0
        push    0
        #(end macro)pushX(I+P,0)
        #(begin macro)setFP(I,P,immValue)
        #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _setFPinstack8_0 - 0
        sbm _setFPinstack8_1 - 1
        sbm _setFPinstack8_2 - 2
        sbm _setFPinstack8_s - 3
        sbm _setFPinstack8_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
        #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
        at _setFPinstack8_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    2
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
        #(end macro)setFP(I,P,immValue)
        #(end macro)pushFP(FP_I,FP_P,2)
        #(begin macro)pushvX(FP,"oldRe")
        push    oldRe_c
        push    oldRe_s
        push    oldRe_2
        push    oldRe_1
        push    oldRe_0
        #(end macro)pushvX(FP,"oldRe")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB6_0 - 0
        sbm _mulFPnameB6_1 - 1
        sbm _mulFPnameB6_2 - 2
        sbm _mulFPnameB6_s - 3
        sbm _mulFPnameB6_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA6_0 - 5
        sbm _mulFPnameA6_1 - 6
        sbm _mulFPnameA6_2 - 7
        sbm _mulFPnameA6_s - 8
        sbm _mulFPnameA6_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX6_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX6_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX6_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX6_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX6_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX6_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX6_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX6_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX6_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA6_c
        push    _mulFPnameA6_s
        push    _mulFPnameA6_2
        push    _mulFPnameA6_1
        push    _mulFPnameA6_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput11_0 - 0
        sbm _castXInput11_1 - 1
        sbm _castXInput11_2 - 2
        sbm _castXInput11_s - 3
        sbm _castXInput11_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput11_0    # 0 byte of _castXoutput11
        var _castXoutput11_1    # 1 byte of _castXoutput11
        var _castXoutput11_2    # 2 byte of _castXoutput11
        var _castXoutput11_3    # 3 byte of _castXoutput11
        var _castXoutput11_4    # 4 byte of _castXoutput11
        var _castXoutput11_5    # 5 byte of _castXoutput11
        var _castXoutput11_s    # Sign of _castXoutput11
        var _castXoutput11_c    # carry of _castXoutput11
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori11_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori11_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori11_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori11_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori11_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest11_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest11_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest11_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput11_c
        push    _castXInput11_s
        push    _castXInput11_2
        push    _castXInput11_1
        push    _castXInput11_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori11_0
        pop     _castXori11_1
        pop     _castXori11_2
        pop     _castXori11_s
        pop     _castXori11_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori11_s
        pop     _castXdest11_s  # keep sign
        push    _castXori11_0
        pop     _castXdest11_0
        push    _castXori11_1
        pop     _castXdest11_1
        push    _castXori11_2
        pop     _castXdest11_2
        push    0
        pop     _castXdest11_3
        push    0
        pop     _castXdest11_4
        push    0
        pop     _castXdest11_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest11_c
        push    _castXdest11_s
        push    _castXdest11_5
        push    _castXdest11_4
        push    _castXdest11_3
        push    _castXdest11_2
        push    _castXdest11_1
        push    _castXdest11_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput11_0
        pop     _castXoutput11_1
        pop     _castXoutput11_2
        pop     _castXoutput11_3
        pop     _castXoutput11_4
        pop     _castXoutput11_5
        pop     _castXoutput11_s
        pop     _castXoutput11_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput11_c
        push    _castXoutput11_s
        push    _castXoutput11_5
        push    _castXoutput11_4
        push    _castXoutput11_3
        push    _castXoutput11_2
        push    _castXoutput11_1
        push    _castXoutput11_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX6_0
        pop     _mulFPnameAX6_1
        pop     _mulFPnameAX6_2
        pop     _mulFPnameAX6_3
        pop     _mulFPnameAX6_4
        pop     _mulFPnameAX6_5
        pop     _mulFPnameAX6_s
        pop     _mulFPnameAX6_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB6_c
        push    _mulFPnameB6_s
        push    _mulFPnameB6_2
        push    _mulFPnameB6_1
        push    _mulFPnameB6_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput12_0 - 0
        sbm _castXInput12_1 - 1
        sbm _castXInput12_2 - 2
        sbm _castXInput12_s - 3
        sbm _castXInput12_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput12_0    # 0 byte of _castXoutput12
        var _castXoutput12_1    # 1 byte of _castXoutput12
        var _castXoutput12_2    # 2 byte of _castXoutput12
        var _castXoutput12_3    # 3 byte of _castXoutput12
        var _castXoutput12_4    # 4 byte of _castXoutput12
        var _castXoutput12_5    # 5 byte of _castXoutput12
        var _castXoutput12_s    # Sign of _castXoutput12
        var _castXoutput12_c    # carry of _castXoutput12
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori12_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori12_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori12_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori12_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori12_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest12_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest12_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest12_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput12_c
        push    _castXInput12_s
        push    _castXInput12_2
        push    _castXInput12_1
        push    _castXInput12_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori12_0
        pop     _castXori12_1
        pop     _castXori12_2
        pop     _castXori12_s
        pop     _castXori12_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori12_s
        pop     _castXdest12_s  # keep sign
        push    _castXori12_0
        pop     _castXdest12_0
        push    _castXori12_1
        pop     _castXdest12_1
        push    _castXori12_2
        pop     _castXdest12_2
        push    0
        pop     _castXdest12_3
        push    0
        pop     _castXdest12_4
        push    0
        pop     _castXdest12_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest12_c
        push    _castXdest12_s
        push    _castXdest12_5
        push    _castXdest12_4
        push    _castXdest12_3
        push    _castXdest12_2
        push    _castXdest12_1
        push    _castXdest12_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput12_0
        pop     _castXoutput12_1
        pop     _castXoutput12_2
        pop     _castXoutput12_3
        pop     _castXoutput12_4
        pop     _castXoutput12_5
        pop     _castXoutput12_s
        pop     _castXoutput12_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput12_c
        push    _castXoutput12_s
        push    _castXoutput12_5
        push    _castXoutput12_4
        push    _castXoutput12_3
        push    _castXoutput12_2
        push    _castXoutput12_1
        push    _castXoutput12_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX6_0
        pop     _mulFPnameBX6_1
        pop     _mulFPnameBX6_2
        pop     _mulFPnameBX6_3
        pop     _mulFPnameBX6_4
        pop     _mulFPnameBX6_5
        pop     _mulFPnameBX6_s
        pop     _mulFPnameBX6_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA6_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA6_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA6_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX6_c
        push    _mulFPnameAX6_s
        push    _mulFPnameAX6_5
        push    _mulFPnameAX6_4
        push    _mulFPnameAX6_3
        push    _mulFPnameAX6_2
        push    _mulFPnameAX6_1
        push    _mulFPnameAX6_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA6_0
        pop     _mulvvvXabsNameA6_1
        pop     _mulvvvXabsNameA6_2
        pop     _mulvvvXabsNameA6_3
        pop     _mulvvvXabsNameA6_4
        pop     _mulvvvXabsNameA6_5
        pop     _mulvvvXabsNameA6_s
        pop     _mulvvvXabsNameA6_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA6
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA6_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA6
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA6_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB6_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB6_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB6_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX6_c
        push    _mulFPnameBX6_s
        push    _mulFPnameBX6_5
        push    _mulFPnameBX6_4
        push    _mulFPnameBX6_3
        push    _mulFPnameBX6_2
        push    _mulFPnameBX6_1
        push    _mulFPnameBX6_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB6_0
        pop     _mulvvvXabsNameB6_1
        pop     _mulvvvXabsNameB6_2
        pop     _mulvvvXabsNameB6_3
        pop     _mulvvvXabsNameB6_4
        pop     _mulvvvXabsNameB6_5
        pop     _mulvvvXabsNameB6_s
        pop     _mulvvvXabsNameB6_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB6
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB6_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB6
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB6_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX6_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop6
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB6_0
          bool
          push _mulvvvXabsNameB6_1
          bool
          push _mulvvvXabsNameB6_2
          bool
          push _mulvvvXabsNameB6_3
          bool
          push _mulvvvXabsNameB6_4
          bool
          push _mulvvvXabsNameB6_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB6_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB6_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB6_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX6_c
            push    _mulFPresultX6_s
            push    _mulFPresultX6_5
            push    _mulFPresultX6_4
            push    _mulFPresultX6_3
            push    _mulFPresultX6_2
            push    _mulFPresultX6_1
            push    _mulFPresultX6_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB6_0
            pop     _addvvXnameB6_1
            pop     _addvvXnameB6_2
            pop     _addvvXnameB6_3
            pop     _addvvXnameB6_4
            pop     _addvvXnameB6_5
            pop     _addvvXnameB6_s
            pop     _addvvXnameB6_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB6_s
            push    _mulvvvXabsNameA6_s
            or
            not
            push    _addvvXnameB6_s
            push    _mulvvvXabsNameA6_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB6_s
              pop     _mulFPresultX6_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB6_0
              #(begin macro)addof()
              sbm _addofb145
              sbm _addofa145 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc145
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao145
              while
                push _addofa145
                if
                  at _addofa145
                    dec
                  ta
                  at _addofb145
                    inc
                  ta
                  push _addofb145
                  not
                  if
                    at _addofc145
                      set 1
                    ta
                  fi
                else
                  at _loopao145
                    reset
                  ta
                fi
              wend
              push _addofc145
              if
                at _addofa145
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_0
              push    _mulvvvXabsNameA6_0
              #(begin macro)addof()
              sbm _addofb146
              sbm _addofa146 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc146
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao146
              while
                push _addofa146
                if
                  at _addofa146
                    dec
                  ta
                  at _addofb146
                    inc
                  ta
                  push _addofb146
                  not
                  if
                    at _addofc146
                      set 1
                    ta
                  fi
                else
                  at _loopao146
                    reset
                  ta
                fi
              wend
              push _addofc146
              if
                at _addofa146
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_0
              #(begin macro)addof()
              sbm _addofb147
              sbm _addofa147 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc147
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao147
              while
                push _addofa147
                if
                  at _addofa147
                    dec
                  ta
                  at _addofb147
                    inc
                  ta
                  push _addofb147
                  not
                  if
                    at _addofc147
                      set 1
                    ta
                  fi
                else
                  at _loopao147
                    reset
                  ta
                fi
              wend
              push _addofc147
              if
                at _addofa147
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_0
              add
              push    _addvvXnameB6_1
              #(begin macro)addof()
              sbm _addofb148
              sbm _addofa148 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc148
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao148
              while
                push _addofa148
                if
                  at _addofa148
                    dec
                  ta
                  at _addofb148
                    inc
                  ta
                  push _addofb148
                  not
                  if
                    at _addofc148
                      set 1
                    ta
                  fi
                else
                  at _loopao148
                    reset
                  ta
                fi
              wend
              push _addofc148
              if
                at _addofa148
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_1
              push    _mulvvvXabsNameA6_1
              #(begin macro)addof()
              sbm _addofb149
              sbm _addofa149 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc149
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao149
              while
                push _addofa149
                if
                  at _addofa149
                    dec
                  ta
                  at _addofb149
                    inc
                  ta
                  push _addofb149
                  not
                  if
                    at _addofc149
                      set 1
                    ta
                  fi
                else
                  at _loopao149
                    reset
                  ta
                fi
              wend
              push _addofc149
              if
                at _addofa149
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_1
              #(begin macro)addof()
              sbm _addofb150
              sbm _addofa150 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc150
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao150
              while
                push _addofa150
                if
                  at _addofa150
                    dec
                  ta
                  at _addofb150
                    inc
                  ta
                  push _addofb150
                  not
                  if
                    at _addofc150
                      set 1
                    ta
                  fi
                else
                  at _loopao150
                    reset
                  ta
                fi
              wend
              push _addofc150
              if
                at _addofa150
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_1
              add
              push    _addvvXnameB6_2
              #(begin macro)addof()
              sbm _addofb151
              sbm _addofa151 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc151
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao151
              while
                push _addofa151
                if
                  at _addofa151
                    dec
                  ta
                  at _addofb151
                    inc
                  ta
                  push _addofb151
                  not
                  if
                    at _addofc151
                      set 1
                    ta
                  fi
                else
                  at _loopao151
                    reset
                  ta
                fi
              wend
              push _addofc151
              if
                at _addofa151
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_2
              push    _mulvvvXabsNameA6_2
              #(begin macro)addof()
              sbm _addofb152
              sbm _addofa152 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc152
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao152
              while
                push _addofa152
                if
                  at _addofa152
                    dec
                  ta
                  at _addofb152
                    inc
                  ta
                  push _addofb152
                  not
                  if
                    at _addofc152
                      set 1
                    ta
                  fi
                else
                  at _loopao152
                    reset
                  ta
                fi
              wend
              push _addofc152
              if
                at _addofa152
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_2
              #(begin macro)addof()
              sbm _addofb153
              sbm _addofa153 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc153
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao153
              while
                push _addofa153
                if
                  at _addofa153
                    dec
                  ta
                  at _addofb153
                    inc
                  ta
                  push _addofb153
                  not
                  if
                    at _addofc153
                      set 1
                    ta
                  fi
                else
                  at _loopao153
                    reset
                  ta
                fi
              wend
              push _addofc153
              if
                at _addofa153
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_2
              add
              push    _addvvXnameB6_3
              #(begin macro)addof()
              sbm _addofb154
              sbm _addofa154 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc154
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao154
              while
                push _addofa154
                if
                  at _addofa154
                    dec
                  ta
                  at _addofb154
                    inc
                  ta
                  push _addofb154
                  not
                  if
                    at _addofc154
                      set 1
                    ta
                  fi
                else
                  at _loopao154
                    reset
                  ta
                fi
              wend
              push _addofc154
              if
                at _addofa154
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_3
              push    _mulvvvXabsNameA6_3
              #(begin macro)addof()
              sbm _addofb155
              sbm _addofa155 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc155
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao155
              while
                push _addofa155
                if
                  at _addofa155
                    dec
                  ta
                  at _addofb155
                    inc
                  ta
                  push _addofb155
                  not
                  if
                    at _addofc155
                      set 1
                    ta
                  fi
                else
                  at _loopao155
                    reset
                  ta
                fi
              wend
              push _addofc155
              if
                at _addofa155
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_3
              #(begin macro)addof()
              sbm _addofb156
              sbm _addofa156 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc156
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao156
              while
                push _addofa156
                if
                  at _addofa156
                    dec
                  ta
                  at _addofb156
                    inc
                  ta
                  push _addofb156
                  not
                  if
                    at _addofc156
                      set 1
                    ta
                  fi
                else
                  at _loopao156
                    reset
                  ta
                fi
              wend
              push _addofc156
              if
                at _addofa156
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_3
              add
              push    _addvvXnameB6_4
              #(begin macro)addof()
              sbm _addofb157
              sbm _addofa157 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc157
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao157
              while
                push _addofa157
                if
                  at _addofa157
                    dec
                  ta
                  at _addofb157
                    inc
                  ta
                  push _addofb157
                  not
                  if
                    at _addofc157
                      set 1
                    ta
                  fi
                else
                  at _loopao157
                    reset
                  ta
                fi
              wend
              push _addofc157
              if
                at _addofa157
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_4
              push    _mulvvvXabsNameA6_4
              #(begin macro)addof()
              sbm _addofb158
              sbm _addofa158 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc158
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao158
              while
                push _addofa158
                if
                  at _addofa158
                    dec
                  ta
                  at _addofb158
                    inc
                  ta
                  push _addofb158
                  not
                  if
                    at _addofc158
                      set 1
                    ta
                  fi
                else
                  at _loopao158
                    reset
                  ta
                fi
              wend
              push _addofc158
              if
                at _addofa158
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_4
              #(begin macro)addof()
              sbm _addofb159
              sbm _addofa159 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc159
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao159
              while
                push _addofa159
                if
                  at _addofa159
                    dec
                  ta
                  at _addofb159
                    inc
                  ta
                  push _addofb159
                  not
                  if
                    at _addofc159
                      set 1
                    ta
                  fi
                else
                  at _loopao159
                    reset
                  ta
                fi
              wend
              push _addofc159
              if
                at _addofa159
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_4
              add
              push    _addvvXnameB6_5
              #(begin macro)addof()
              sbm _addofb160
              sbm _addofa160 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc160
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao160
              while
                push _addofa160
                if
                  at _addofa160
                    dec
                  ta
                  at _addofb160
                    inc
                  ta
                  push _addofb160
                  not
                  if
                    at _addofc160
                      set 1
                    ta
                  fi
                else
                  at _loopao160
                    reset
                  ta
                fi
              wend
              push _addofc160
              if
                at _addofa160
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_5
              push    _mulvvvXabsNameA6_5
              #(begin macro)addof()
              sbm _addofb161
              sbm _addofa161 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc161
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao161
              while
                push _addofa161
                if
                  at _addofa161
                    dec
                  ta
                  at _addofb161
                    inc
                  ta
                  push _addofb161
                  not
                  if
                    at _addofc161
                      set 1
                    ta
                  fi
                else
                  at _loopao161
                    reset
                  ta
                fi
              wend
              push _addofc161
              if
                at _addofa161
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX6_5
              #(begin macro)addof()
              sbm _addofb162
              sbm _addofa162 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc162
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao162
              while
                push _addofa162
                if
                  at _addofa162
                    dec
                  ta
                  at _addofb162
                    inc
                  ta
                  push _addofb162
                  not
                  if
                    at _addofc162
                      set 1
                    ta
                  fi
                else
                  at _loopao162
                    reset
                  ta
                fi
              wend
              push _addofc162
              if
                at _addofa162
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX6_5
              add
              pop     _mulFPresultX6_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb12
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb12
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB6_5
              push    _mulvvvXabsNameA6_5
              sup
              if
                at _asupb12
                  set 1
                ta
              else
                push    _addvvXnameB6_5
                push    _mulvvvXabsNameA6_5
                diff
                if
                  at _asupb12
                    reset
                  ta
                else
                  push    _addvvXnameB6_4
                  push    _mulvvvXabsNameA6_4
                  sup
                  if
                    at _asupb12
                      set 1
                    ta
                  else
                    push    _addvvXnameB6_4
                    push    _mulvvvXabsNameA6_4
                    diff
                    if
                      at _asupb12
                        reset
                      ta
                    else
                      push    _addvvXnameB6_3
                      push    _mulvvvXabsNameA6_3
                      sup
                      if
                        at _asupb12
                          set 1
                        ta
                      else
                        push    _addvvXnameB6_3
                        push    _mulvvvXabsNameA6_3
                        diff
                        if
                          at _asupb12
                            reset
                          ta
                        else
                          push    _addvvXnameB6_2
                          push    _mulvvvXabsNameA6_2
                          sup
                          if
                            at _asupb12
                              set 1
                            ta
                          else
                            push    _addvvXnameB6_2
                            push    _mulvvvXabsNameA6_2
                            diff
                            if
                              at _asupb12
                                reset
                              ta
                            else
                              push    _addvvXnameB6_1
                              push    _mulvvvXabsNameA6_1
                              sup
                              if
                                at _asupb12
                                  set 1
                                ta
                              else
                                push    _addvvXnameB6_1
                                push    _mulvvvXabsNameA6_1
                                diff
                                if
                                  at _asupb12
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB6_0
                                  push    _mulvvvXabsNameA6_0
                                  sup
                                  if
                                    at _asupb12
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB6_0
                                    push    _mulvvvXabsNameA6_0
                                    diff
                                    if
                                      at _asupb12
                                        reset
                                      ta
                                    else
                                      at _aequb12
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb12
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB6_s
                pop     _mulFPresultX6_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry12
                push    _addvvXnameB6_0
                push    _mulvvvXabsNameA6_0
                #(begin macro)subof()
                sbm _subofb193
                sbm _subofa193 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc193
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso193
                while
                  push _subofb193
                  if
                    at _subofb193
                      dec
                    ta
                    at _subofa193
                      dec
                    ta
                    push _subofa193
                    inc
                    not
                    if
                      at _subofc193
                        set 1
                      ta
                    fi
                  else
                    at _loopso193
                      reset
                    ta
                  fi
                wend
                push _subofc193
                if
                  at _subofb193
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb194
                sbm _subofa194 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc194
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso194
                while
                  push _subofb194
                  if
                    at _subofb194
                      dec
                    ta
                    at _subofa194
                      dec
                    ta
                    push _subofa194
                    inc
                    not
                    if
                      at _subofc194
                        set 1
                      ta
                    fi
                  else
                    at _loopso194
                      reset
                    ta
                  fi
                wend
                push _subofc194
                if
                  at _subofb194
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_0
                add
                pop     _addvvvXCarry12
                push    _addvvXnameB6_1
                push    _mulvvvXabsNameA6_1
                #(begin macro)subof()
                sbm _subofb195
                sbm _subofa195 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc195
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso195
                while
                  push _subofb195
                  if
                    at _subofb195
                      dec
                    ta
                    at _subofa195
                      dec
                    ta
                    push _subofa195
                    inc
                    not
                    if
                      at _subofc195
                        set 1
                      ta
                    fi
                  else
                    at _loopso195
                      reset
                    ta
                  fi
                wend
                push _subofc195
                if
                  at _subofb195
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb196
                sbm _subofa196 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc196
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso196
                while
                  push _subofb196
                  if
                    at _subofb196
                      dec
                    ta
                    at _subofa196
                      dec
                    ta
                    push _subofa196
                    inc
                    not
                    if
                      at _subofc196
                        set 1
                      ta
                    fi
                  else
                    at _loopso196
                      reset
                    ta
                  fi
                wend
                push _subofc196
                if
                  at _subofb196
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_1
                add
                pop     _addvvvXCarry12
                push    _addvvXnameB6_2
                push    _mulvvvXabsNameA6_2
                #(begin macro)subof()
                sbm _subofb197
                sbm _subofa197 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc197
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso197
                while
                  push _subofb197
                  if
                    at _subofb197
                      dec
                    ta
                    at _subofa197
                      dec
                    ta
                    push _subofa197
                    inc
                    not
                    if
                      at _subofc197
                        set 1
                      ta
                    fi
                  else
                    at _loopso197
                      reset
                    ta
                  fi
                wend
                push _subofc197
                if
                  at _subofb197
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb198
                sbm _subofa198 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc198
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso198
                while
                  push _subofb198
                  if
                    at _subofb198
                      dec
                    ta
                    at _subofa198
                      dec
                    ta
                    push _subofa198
                    inc
                    not
                    if
                      at _subofc198
                        set 1
                      ta
                    fi
                  else
                    at _loopso198
                      reset
                    ta
                  fi
                wend
                push _subofc198
                if
                  at _subofb198
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_2
                add
                pop     _addvvvXCarry12
                push    _addvvXnameB6_3
                push    _mulvvvXabsNameA6_3
                #(begin macro)subof()
                sbm _subofb199
                sbm _subofa199 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc199
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso199
                while
                  push _subofb199
                  if
                    at _subofb199
                      dec
                    ta
                    at _subofa199
                      dec
                    ta
                    push _subofa199
                    inc
                    not
                    if
                      at _subofc199
                        set 1
                      ta
                    fi
                  else
                    at _loopso199
                      reset
                    ta
                  fi
                wend
                push _subofc199
                if
                  at _subofb199
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb200
                sbm _subofa200 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc200
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso200
                while
                  push _subofb200
                  if
                    at _subofb200
                      dec
                    ta
                    at _subofa200
                      dec
                    ta
                    push _subofa200
                    inc
                    not
                    if
                      at _subofc200
                        set 1
                      ta
                    fi
                  else
                    at _loopso200
                      reset
                    ta
                  fi
                wend
                push _subofc200
                if
                  at _subofb200
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_3
                add
                pop     _addvvvXCarry12
                push    _addvvXnameB6_4
                push    _mulvvvXabsNameA6_4
                #(begin macro)subof()
                sbm _subofb201
                sbm _subofa201 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc201
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso201
                while
                  push _subofb201
                  if
                    at _subofb201
                      dec
                    ta
                    at _subofa201
                      dec
                    ta
                    push _subofa201
                    inc
                    not
                    if
                      at _subofc201
                        set 1
                      ta
                    fi
                  else
                    at _loopso201
                      reset
                    ta
                  fi
                wend
                push _subofc201
                if
                  at _subofb201
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb202
                sbm _subofa202 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc202
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso202
                while
                  push _subofb202
                  if
                    at _subofb202
                      dec
                    ta
                    at _subofa202
                      dec
                    ta
                    push _subofa202
                    inc
                    not
                    if
                      at _subofc202
                        set 1
                      ta
                    fi
                  else
                    at _loopso202
                      reset
                    ta
                  fi
                wend
                push _subofc202
                if
                  at _subofb202
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_4
                add
                pop     _addvvvXCarry12
                push    _addvvXnameB6_5
                push    _mulvvvXabsNameA6_5
                #(begin macro)subof()
                sbm _subofb203
                sbm _subofa203 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc203
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso203
                while
                  push _subofb203
                  if
                    at _subofb203
                      dec
                    ta
                    at _subofa203
                      dec
                    ta
                    push _subofa203
                    inc
                    not
                    if
                      at _subofc203
                        set 1
                      ta
                    fi
                  else
                    at _loopso203
                      reset
                    ta
                  fi
                wend
                push _subofc203
                if
                  at _subofb203
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry12
                #(begin macro)subof()
                sbm _subofb204
                sbm _subofa204 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc204
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso204
                while
                  push _subofb204
                  if
                    at _subofb204
                      dec
                    ta
                    at _subofa204
                      dec
                    ta
                    push _subofa204
                    inc
                    not
                    if
                      at _subofc204
                        set 1
                      ta
                    fi
                  else
                    at _loopso204
                      reset
                    ta
                  fi
                wend
                push _subofc204
                if
                  at _subofb204
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX6_5
                add
                pop     _addvvvXCarry12
                pop     _mulFPresultX6_c
              else # absB >= absA :
                push    _aequb12
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX6_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA6_s
                  pop     _mulFPresultX6_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_0
                  push    _addvvXnameB6_0
                  #(begin macro)subof()
                  sbm _subofb205
                  sbm _subofa205 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc205
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso205
                  while
                    push _subofb205
                    if
                      at _subofb205
                        dec
                      ta
                      at _subofa205
                        dec
                      ta
                      push _subofa205
                      inc
                      not
                      if
                        at _subofc205
                          set 1
                        ta
                      fi
                    else
                      at _loopso205
                        reset
                      ta
                    fi
                  wend
                  push _subofc205
                  if
                    at _subofb205
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb206
                  sbm _subofa206 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc206
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso206
                  while
                    push _subofb206
                    if
                      at _subofb206
                        dec
                      ta
                      at _subofa206
                        dec
                      ta
                      push _subofa206
                      inc
                      not
                      if
                        at _subofc206
                          set 1
                        ta
                      fi
                    else
                      at _loopso206
                        reset
                      ta
                    fi
                  wend
                  push _subofc206
                  if
                    at _subofb206
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_0
                  add
                  pop     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_1
                  push    _addvvXnameB6_1
                  #(begin macro)subof()
                  sbm _subofb207
                  sbm _subofa207 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc207
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso207
                  while
                    push _subofb207
                    if
                      at _subofb207
                        dec
                      ta
                      at _subofa207
                        dec
                      ta
                      push _subofa207
                      inc
                      not
                      if
                        at _subofc207
                          set 1
                        ta
                      fi
                    else
                      at _loopso207
                        reset
                      ta
                    fi
                  wend
                  push _subofc207
                  if
                    at _subofb207
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb208
                  sbm _subofa208 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc208
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso208
                  while
                    push _subofb208
                    if
                      at _subofb208
                        dec
                      ta
                      at _subofa208
                        dec
                      ta
                      push _subofa208
                      inc
                      not
                      if
                        at _subofc208
                          set 1
                        ta
                      fi
                    else
                      at _loopso208
                        reset
                      ta
                    fi
                  wend
                  push _subofc208
                  if
                    at _subofb208
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_1
                  add
                  pop     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_2
                  push    _addvvXnameB6_2
                  #(begin macro)subof()
                  sbm _subofb209
                  sbm _subofa209 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc209
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso209
                  while
                    push _subofb209
                    if
                      at _subofb209
                        dec
                      ta
                      at _subofa209
                        dec
                      ta
                      push _subofa209
                      inc
                      not
                      if
                        at _subofc209
                          set 1
                        ta
                      fi
                    else
                      at _loopso209
                        reset
                      ta
                    fi
                  wend
                  push _subofc209
                  if
                    at _subofb209
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb210
                  sbm _subofa210 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc210
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso210
                  while
                    push _subofb210
                    if
                      at _subofb210
                        dec
                      ta
                      at _subofa210
                        dec
                      ta
                      push _subofa210
                      inc
                      not
                      if
                        at _subofc210
                          set 1
                        ta
                      fi
                    else
                      at _loopso210
                        reset
                      ta
                    fi
                  wend
                  push _subofc210
                  if
                    at _subofb210
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_2
                  add
                  pop     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_3
                  push    _addvvXnameB6_3
                  #(begin macro)subof()
                  sbm _subofb211
                  sbm _subofa211 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc211
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso211
                  while
                    push _subofb211
                    if
                      at _subofb211
                        dec
                      ta
                      at _subofa211
                        dec
                      ta
                      push _subofa211
                      inc
                      not
                      if
                        at _subofc211
                          set 1
                        ta
                      fi
                    else
                      at _loopso211
                        reset
                      ta
                    fi
                  wend
                  push _subofc211
                  if
                    at _subofb211
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb212
                  sbm _subofa212 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc212
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso212
                  while
                    push _subofb212
                    if
                      at _subofb212
                        dec
                      ta
                      at _subofa212
                        dec
                      ta
                      push _subofa212
                      inc
                      not
                      if
                        at _subofc212
                          set 1
                        ta
                      fi
                    else
                      at _loopso212
                        reset
                      ta
                    fi
                  wend
                  push _subofc212
                  if
                    at _subofb212
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_3
                  add
                  pop     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_4
                  push    _addvvXnameB6_4
                  #(begin macro)subof()
                  sbm _subofb213
                  sbm _subofa213 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc213
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso213
                  while
                    push _subofb213
                    if
                      at _subofb213
                        dec
                      ta
                      at _subofa213
                        dec
                      ta
                      push _subofa213
                      inc
                      not
                      if
                        at _subofc213
                          set 1
                        ta
                      fi
                    else
                      at _loopso213
                        reset
                      ta
                    fi
                  wend
                  push _subofc213
                  if
                    at _subofb213
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb214
                  sbm _subofa214 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc214
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso214
                  while
                    push _subofb214
                    if
                      at _subofb214
                        dec
                      ta
                      at _subofa214
                        dec
                      ta
                      push _subofa214
                      inc
                      not
                      if
                        at _subofc214
                          set 1
                        ta
                      fi
                    else
                      at _loopso214
                        reset
                      ta
                    fi
                  wend
                  push _subofc214
                  if
                    at _subofb214
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_4
                  add
                  pop     _addvvvXCarry12
                  push    _mulvvvXabsNameA6_5
                  push    _addvvXnameB6_5
                  #(begin macro)subof()
                  sbm _subofb215
                  sbm _subofa215 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc215
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso215
                  while
                    push _subofb215
                    if
                      at _subofb215
                        dec
                      ta
                      at _subofa215
                        dec
                      ta
                      push _subofa215
                      inc
                      not
                      if
                        at _subofc215
                          set 1
                        ta
                      fi
                    else
                      at _loopso215
                        reset
                      ta
                    fi
                  wend
                  push _subofc215
                  if
                    at _subofb215
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry12
                  #(begin macro)subof()
                  sbm _subofb216
                  sbm _subofa216 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc216
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso216
                  while
                    push _subofb216
                    if
                      at _subofb216
                        dec
                      ta
                      at _subofa216
                        dec
                      ta
                      push _subofa216
                      inc
                      not
                      if
                        at _subofc216
                          set 1
                        ta
                      fi
                    else
                      at _loopso216
                        reset
                      ta
                    fi
                  wend
                  push _subofc216
                  if
                    at _subofb216
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX6_5
                  add
                  pop     _addvvvXCarry12
                  pop     _mulFPresultX6_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB6_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB6_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB6_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB6_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB6_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB6_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB6_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB6_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB6_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB6_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB6_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB6_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB6_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB6_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB6_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB6_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB6_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB6_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB6_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB6_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB6_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB6_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB6_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB6_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB6_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB6_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB6_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop6
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA6
        push _mulvvvXsB6
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX6_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX6_c
        push    _mulFPresultX6_s
        push    _mulFPresultX6_5
        push    _mulFPresultX6_4
        push    _mulFPresultX6_3
        push    _mulFPresultX6_2
        push    _mulFPresultX6_1
        push    _mulFPresultX6_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack6_0    # 0 byte of _castFPinstack6
        var _castFPinstack6_1    # 1 byte of _castFPinstack6
        var _castFPinstack6_2    # 2 byte of _castFPinstack6
        var _castFPinstack6_3    # 3 byte of _castFPinstack6
        var _castFPinstack6_4    # 4 byte of _castFPinstack6
        var _castFPinstack6_5    # 5 byte of _castFPinstack6
        var _castFPinstack6_s    # Sign of _castFPinstack6
        var _castFPinstack6_c    # carry of _castFPinstack6
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack6_0    # 0 byte of _castFPoutstack6
        var _castFPoutstack6_1    # 1 byte of _castFPoutstack6
        var _castFPoutstack6_2    # 2 byte of _castFPoutstack6
        var _castFPoutstack6_s    # Sign of _castFPoutstack6
        var _castFPoutstack6_c    # carry of _castFPoutstack6
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack6_0
        pop     _castFPinstack6_1
        pop     _castFPinstack6_2
        pop     _castFPinstack6_3
        pop     _castFPinstack6_4
        pop     _castFPinstack6_5
        pop     _castFPinstack6_s
        pop     _castFPinstack6_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack6_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack6_s
        pop _castFPoutstack6_s
        # integer part
        push _castFPinstack6_4
        pop _castFPoutstack6_2
        # fract part
        push _castFPinstack6_3
        pop _castFPoutstack6_1
        push _castFPinstack6_2
        pop _castFPoutstack6_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack6_c
        push    _castFPoutstack6_s
        push    _castFPoutstack6_2
        push    _castFPoutstack6_1
        push    _castFPoutstack6_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA6_0
        pop     _mulFPnameA6_1
        pop     _mulFPnameA6_2
        pop     _mulFPnameA6_s
        pop     _mulFPnameA6_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)pushvX(FP,"oldIm")
        push    oldIm_c
        push    oldIm_s
        push    oldIm_2
        push    oldIm_1
        push    oldIm_0
        #(end macro)pushvX(FP,"oldIm")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB7_0 - 0
        sbm _mulFPnameB7_1 - 1
        sbm _mulFPnameB7_2 - 2
        sbm _mulFPnameB7_s - 3
        sbm _mulFPnameB7_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA7_0 - 5
        sbm _mulFPnameA7_1 - 6
        sbm _mulFPnameA7_2 - 7
        sbm _mulFPnameA7_s - 8
        sbm _mulFPnameA7_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA7_c
        push    _mulFPnameA7_s
        push    _mulFPnameA7_2
        push    _mulFPnameA7_1
        push    _mulFPnameA7_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput13_0 - 0
        sbm _castXInput13_1 - 1
        sbm _castXInput13_2 - 2
        sbm _castXInput13_s - 3
        sbm _castXInput13_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput13_0    # 0 byte of _castXoutput13
        var _castXoutput13_1    # 1 byte of _castXoutput13
        var _castXoutput13_2    # 2 byte of _castXoutput13
        var _castXoutput13_3    # 3 byte of _castXoutput13
        var _castXoutput13_4    # 4 byte of _castXoutput13
        var _castXoutput13_5    # 5 byte of _castXoutput13
        var _castXoutput13_s    # Sign of _castXoutput13
        var _castXoutput13_c    # carry of _castXoutput13
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori13_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori13_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori13_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori13_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori13_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest13_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest13_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest13_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput13_c
        push    _castXInput13_s
        push    _castXInput13_2
        push    _castXInput13_1
        push    _castXInput13_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori13_0
        pop     _castXori13_1
        pop     _castXori13_2
        pop     _castXori13_s
        pop     _castXori13_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori13_s
        pop     _castXdest13_s  # keep sign
        push    _castXori13_0
        pop     _castXdest13_0
        push    _castXori13_1
        pop     _castXdest13_1
        push    _castXori13_2
        pop     _castXdest13_2
        push    0
        pop     _castXdest13_3
        push    0
        pop     _castXdest13_4
        push    0
        pop     _castXdest13_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest13_c
        push    _castXdest13_s
        push    _castXdest13_5
        push    _castXdest13_4
        push    _castXdest13_3
        push    _castXdest13_2
        push    _castXdest13_1
        push    _castXdest13_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput13_0
        pop     _castXoutput13_1
        pop     _castXoutput13_2
        pop     _castXoutput13_3
        pop     _castXoutput13_4
        pop     _castXoutput13_5
        pop     _castXoutput13_s
        pop     _castXoutput13_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput13_c
        push    _castXoutput13_s
        push    _castXoutput13_5
        push    _castXoutput13_4
        push    _castXoutput13_3
        push    _castXoutput13_2
        push    _castXoutput13_1
        push    _castXoutput13_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX7_0
        pop     _mulFPnameAX7_1
        pop     _mulFPnameAX7_2
        pop     _mulFPnameAX7_3
        pop     _mulFPnameAX7_4
        pop     _mulFPnameAX7_5
        pop     _mulFPnameAX7_s
        pop     _mulFPnameAX7_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB7_c
        push    _mulFPnameB7_s
        push    _mulFPnameB7_2
        push    _mulFPnameB7_1
        push    _mulFPnameB7_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput14_0 - 0
        sbm _castXInput14_1 - 1
        sbm _castXInput14_2 - 2
        sbm _castXInput14_s - 3
        sbm _castXInput14_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput14_0    # 0 byte of _castXoutput14
        var _castXoutput14_1    # 1 byte of _castXoutput14
        var _castXoutput14_2    # 2 byte of _castXoutput14
        var _castXoutput14_3    # 3 byte of _castXoutput14
        var _castXoutput14_4    # 4 byte of _castXoutput14
        var _castXoutput14_5    # 5 byte of _castXoutput14
        var _castXoutput14_s    # Sign of _castXoutput14
        var _castXoutput14_c    # carry of _castXoutput14
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori14_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori14_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori14_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori14_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori14_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest14_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest14_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest14_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput14_c
        push    _castXInput14_s
        push    _castXInput14_2
        push    _castXInput14_1
        push    _castXInput14_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori14_0
        pop     _castXori14_1
        pop     _castXori14_2
        pop     _castXori14_s
        pop     _castXori14_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori14_s
        pop     _castXdest14_s  # keep sign
        push    _castXori14_0
        pop     _castXdest14_0
        push    _castXori14_1
        pop     _castXdest14_1
        push    _castXori14_2
        pop     _castXdest14_2
        push    0
        pop     _castXdest14_3
        push    0
        pop     _castXdest14_4
        push    0
        pop     _castXdest14_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest14_c
        push    _castXdest14_s
        push    _castXdest14_5
        push    _castXdest14_4
        push    _castXdest14_3
        push    _castXdest14_2
        push    _castXdest14_1
        push    _castXdest14_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput14_0
        pop     _castXoutput14_1
        pop     _castXoutput14_2
        pop     _castXoutput14_3
        pop     _castXoutput14_4
        pop     _castXoutput14_5
        pop     _castXoutput14_s
        pop     _castXoutput14_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput14_c
        push    _castXoutput14_s
        push    _castXoutput14_5
        push    _castXoutput14_4
        push    _castXoutput14_3
        push    _castXoutput14_2
        push    _castXoutput14_1
        push    _castXoutput14_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX7_0
        pop     _mulFPnameBX7_1
        pop     _mulFPnameBX7_2
        pop     _mulFPnameBX7_3
        pop     _mulFPnameBX7_4
        pop     _mulFPnameBX7_5
        pop     _mulFPnameBX7_s
        pop     _mulFPnameBX7_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX7_c
        push    _mulFPnameAX7_s
        push    _mulFPnameAX7_5
        push    _mulFPnameAX7_4
        push    _mulFPnameAX7_3
        push    _mulFPnameAX7_2
        push    _mulFPnameAX7_1
        push    _mulFPnameAX7_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA7_0
        pop     _mulvvvXabsNameA7_1
        pop     _mulvvvXabsNameA7_2
        pop     _mulvvvXabsNameA7_3
        pop     _mulvvvXabsNameA7_4
        pop     _mulvvvXabsNameA7_5
        pop     _mulvvvXabsNameA7_s
        pop     _mulvvvXabsNameA7_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA7
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA7_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA7
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA7_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB7_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB7_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB7_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX7_c
        push    _mulFPnameBX7_s
        push    _mulFPnameBX7_5
        push    _mulFPnameBX7_4
        push    _mulFPnameBX7_3
        push    _mulFPnameBX7_2
        push    _mulFPnameBX7_1
        push    _mulFPnameBX7_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB7_0
        pop     _mulvvvXabsNameB7_1
        pop     _mulvvvXabsNameB7_2
        pop     _mulvvvXabsNameB7_3
        pop     _mulvvvXabsNameB7_4
        pop     _mulvvvXabsNameB7_5
        pop     _mulvvvXabsNameB7_s
        pop     _mulvvvXabsNameB7_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB7
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB7_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB7
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB7_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX7_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop7
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB7_0
          bool
          push _mulvvvXabsNameB7_1
          bool
          push _mulvvvXabsNameB7_2
          bool
          push _mulvvvXabsNameB7_3
          bool
          push _mulvvvXabsNameB7_4
          bool
          push _mulvvvXabsNameB7_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB7_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB7_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB7_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX7_c
            push    _mulFPresultX7_s
            push    _mulFPresultX7_5
            push    _mulFPresultX7_4
            push    _mulFPresultX7_3
            push    _mulFPresultX7_2
            push    _mulFPresultX7_1
            push    _mulFPresultX7_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB7_0
            pop     _addvvXnameB7_1
            pop     _addvvXnameB7_2
            pop     _addvvXnameB7_3
            pop     _addvvXnameB7_4
            pop     _addvvXnameB7_5
            pop     _addvvXnameB7_s
            pop     _addvvXnameB7_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB7_s
            push    _mulvvvXabsNameA7_s
            or
            not
            push    _addvvXnameB7_s
            push    _mulvvvXabsNameA7_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB7_s
              pop     _mulFPresultX7_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB7_0
              #(begin macro)addof()
              sbm _addofb163
              sbm _addofa163 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc163
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao163
              while
                push _addofa163
                if
                  at _addofa163
                    dec
                  ta
                  at _addofb163
                    inc
                  ta
                  push _addofb163
                  not
                  if
                    at _addofc163
                      set 1
                    ta
                  fi
                else
                  at _loopao163
                    reset
                  ta
                fi
              wend
              push _addofc163
              if
                at _addofa163
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_0
              push    _mulvvvXabsNameA7_0
              #(begin macro)addof()
              sbm _addofb164
              sbm _addofa164 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc164
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao164
              while
                push _addofa164
                if
                  at _addofa164
                    dec
                  ta
                  at _addofb164
                    inc
                  ta
                  push _addofb164
                  not
                  if
                    at _addofc164
                      set 1
                    ta
                  fi
                else
                  at _loopao164
                    reset
                  ta
                fi
              wend
              push _addofc164
              if
                at _addofa164
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_0
              #(begin macro)addof()
              sbm _addofb165
              sbm _addofa165 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc165
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao165
              while
                push _addofa165
                if
                  at _addofa165
                    dec
                  ta
                  at _addofb165
                    inc
                  ta
                  push _addofb165
                  not
                  if
                    at _addofc165
                      set 1
                    ta
                  fi
                else
                  at _loopao165
                    reset
                  ta
                fi
              wend
              push _addofc165
              if
                at _addofa165
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_0
              add
              push    _addvvXnameB7_1
              #(begin macro)addof()
              sbm _addofb166
              sbm _addofa166 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc166
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao166
              while
                push _addofa166
                if
                  at _addofa166
                    dec
                  ta
                  at _addofb166
                    inc
                  ta
                  push _addofb166
                  not
                  if
                    at _addofc166
                      set 1
                    ta
                  fi
                else
                  at _loopao166
                    reset
                  ta
                fi
              wend
              push _addofc166
              if
                at _addofa166
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_1
              push    _mulvvvXabsNameA7_1
              #(begin macro)addof()
              sbm _addofb167
              sbm _addofa167 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc167
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao167
              while
                push _addofa167
                if
                  at _addofa167
                    dec
                  ta
                  at _addofb167
                    inc
                  ta
                  push _addofb167
                  not
                  if
                    at _addofc167
                      set 1
                    ta
                  fi
                else
                  at _loopao167
                    reset
                  ta
                fi
              wend
              push _addofc167
              if
                at _addofa167
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_1
              #(begin macro)addof()
              sbm _addofb168
              sbm _addofa168 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc168
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao168
              while
                push _addofa168
                if
                  at _addofa168
                    dec
                  ta
                  at _addofb168
                    inc
                  ta
                  push _addofb168
                  not
                  if
                    at _addofc168
                      set 1
                    ta
                  fi
                else
                  at _loopao168
                    reset
                  ta
                fi
              wend
              push _addofc168
              if
                at _addofa168
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_1
              add
              push    _addvvXnameB7_2
              #(begin macro)addof()
              sbm _addofb169
              sbm _addofa169 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc169
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao169
              while
                push _addofa169
                if
                  at _addofa169
                    dec
                  ta
                  at _addofb169
                    inc
                  ta
                  push _addofb169
                  not
                  if
                    at _addofc169
                      set 1
                    ta
                  fi
                else
                  at _loopao169
                    reset
                  ta
                fi
              wend
              push _addofc169
              if
                at _addofa169
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_2
              push    _mulvvvXabsNameA7_2
              #(begin macro)addof()
              sbm _addofb170
              sbm _addofa170 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc170
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao170
              while
                push _addofa170
                if
                  at _addofa170
                    dec
                  ta
                  at _addofb170
                    inc
                  ta
                  push _addofb170
                  not
                  if
                    at _addofc170
                      set 1
                    ta
                  fi
                else
                  at _loopao170
                    reset
                  ta
                fi
              wend
              push _addofc170
              if
                at _addofa170
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_2
              #(begin macro)addof()
              sbm _addofb171
              sbm _addofa171 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc171
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao171
              while
                push _addofa171
                if
                  at _addofa171
                    dec
                  ta
                  at _addofb171
                    inc
                  ta
                  push _addofb171
                  not
                  if
                    at _addofc171
                      set 1
                    ta
                  fi
                else
                  at _loopao171
                    reset
                  ta
                fi
              wend
              push _addofc171
              if
                at _addofa171
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_2
              add
              push    _addvvXnameB7_3
              #(begin macro)addof()
              sbm _addofb172
              sbm _addofa172 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc172
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao172
              while
                push _addofa172
                if
                  at _addofa172
                    dec
                  ta
                  at _addofb172
                    inc
                  ta
                  push _addofb172
                  not
                  if
                    at _addofc172
                      set 1
                    ta
                  fi
                else
                  at _loopao172
                    reset
                  ta
                fi
              wend
              push _addofc172
              if
                at _addofa172
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_3
              push    _mulvvvXabsNameA7_3
              #(begin macro)addof()
              sbm _addofb173
              sbm _addofa173 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc173
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao173
              while
                push _addofa173
                if
                  at _addofa173
                    dec
                  ta
                  at _addofb173
                    inc
                  ta
                  push _addofb173
                  not
                  if
                    at _addofc173
                      set 1
                    ta
                  fi
                else
                  at _loopao173
                    reset
                  ta
                fi
              wend
              push _addofc173
              if
                at _addofa173
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_3
              #(begin macro)addof()
              sbm _addofb174
              sbm _addofa174 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc174
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao174
              while
                push _addofa174
                if
                  at _addofa174
                    dec
                  ta
                  at _addofb174
                    inc
                  ta
                  push _addofb174
                  not
                  if
                    at _addofc174
                      set 1
                    ta
                  fi
                else
                  at _loopao174
                    reset
                  ta
                fi
              wend
              push _addofc174
              if
                at _addofa174
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_3
              add
              push    _addvvXnameB7_4
              #(begin macro)addof()
              sbm _addofb175
              sbm _addofa175 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc175
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao175
              while
                push _addofa175
                if
                  at _addofa175
                    dec
                  ta
                  at _addofb175
                    inc
                  ta
                  push _addofb175
                  not
                  if
                    at _addofc175
                      set 1
                    ta
                  fi
                else
                  at _loopao175
                    reset
                  ta
                fi
              wend
              push _addofc175
              if
                at _addofa175
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_4
              push    _mulvvvXabsNameA7_4
              #(begin macro)addof()
              sbm _addofb176
              sbm _addofa176 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc176
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao176
              while
                push _addofa176
                if
                  at _addofa176
                    dec
                  ta
                  at _addofb176
                    inc
                  ta
                  push _addofb176
                  not
                  if
                    at _addofc176
                      set 1
                    ta
                  fi
                else
                  at _loopao176
                    reset
                  ta
                fi
              wend
              push _addofc176
              if
                at _addofa176
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_4
              #(begin macro)addof()
              sbm _addofb177
              sbm _addofa177 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc177
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao177
              while
                push _addofa177
                if
                  at _addofa177
                    dec
                  ta
                  at _addofb177
                    inc
                  ta
                  push _addofb177
                  not
                  if
                    at _addofc177
                      set 1
                    ta
                  fi
                else
                  at _loopao177
                    reset
                  ta
                fi
              wend
              push _addofc177
              if
                at _addofa177
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_4
              add
              push    _addvvXnameB7_5
              #(begin macro)addof()
              sbm _addofb178
              sbm _addofa178 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc178
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao178
              while
                push _addofa178
                if
                  at _addofa178
                    dec
                  ta
                  at _addofb178
                    inc
                  ta
                  push _addofb178
                  not
                  if
                    at _addofc178
                      set 1
                    ta
                  fi
                else
                  at _loopao178
                    reset
                  ta
                fi
              wend
              push _addofc178
              if
                at _addofa178
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_5
              push    _mulvvvXabsNameA7_5
              #(begin macro)addof()
              sbm _addofb179
              sbm _addofa179 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc179
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao179
              while
                push _addofa179
                if
                  at _addofa179
                    dec
                  ta
                  at _addofb179
                    inc
                  ta
                  push _addofb179
                  not
                  if
                    at _addofc179
                      set 1
                    ta
                  fi
                else
                  at _loopao179
                    reset
                  ta
                fi
              wend
              push _addofc179
              if
                at _addofa179
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX7_5
              #(begin macro)addof()
              sbm _addofb180
              sbm _addofa180 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc180
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao180
              while
                push _addofa180
                if
                  at _addofa180
                    dec
                  ta
                  at _addofb180
                    inc
                  ta
                  push _addofb180
                  not
                  if
                    at _addofc180
                      set 1
                    ta
                  fi
                else
                  at _loopao180
                    reset
                  ta
                fi
              wend
              push _addofc180
              if
                at _addofa180
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX7_5
              add
              pop     _mulFPresultX7_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb13
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb13
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB7_5
              push    _mulvvvXabsNameA7_5
              sup
              if
                at _asupb13
                  set 1
                ta
              else
                push    _addvvXnameB7_5
                push    _mulvvvXabsNameA7_5
                diff
                if
                  at _asupb13
                    reset
                  ta
                else
                  push    _addvvXnameB7_4
                  push    _mulvvvXabsNameA7_4
                  sup
                  if
                    at _asupb13
                      set 1
                    ta
                  else
                    push    _addvvXnameB7_4
                    push    _mulvvvXabsNameA7_4
                    diff
                    if
                      at _asupb13
                        reset
                      ta
                    else
                      push    _addvvXnameB7_3
                      push    _mulvvvXabsNameA7_3
                      sup
                      if
                        at _asupb13
                          set 1
                        ta
                      else
                        push    _addvvXnameB7_3
                        push    _mulvvvXabsNameA7_3
                        diff
                        if
                          at _asupb13
                            reset
                          ta
                        else
                          push    _addvvXnameB7_2
                          push    _mulvvvXabsNameA7_2
                          sup
                          if
                            at _asupb13
                              set 1
                            ta
                          else
                            push    _addvvXnameB7_2
                            push    _mulvvvXabsNameA7_2
                            diff
                            if
                              at _asupb13
                                reset
                              ta
                            else
                              push    _addvvXnameB7_1
                              push    _mulvvvXabsNameA7_1
                              sup
                              if
                                at _asupb13
                                  set 1
                                ta
                              else
                                push    _addvvXnameB7_1
                                push    _mulvvvXabsNameA7_1
                                diff
                                if
                                  at _asupb13
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB7_0
                                  push    _mulvvvXabsNameA7_0
                                  sup
                                  if
                                    at _asupb13
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB7_0
                                    push    _mulvvvXabsNameA7_0
                                    diff
                                    if
                                      at _asupb13
                                        reset
                                      ta
                                    else
                                      at _aequb13
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb13
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB7_s
                pop     _mulFPresultX7_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry13
                push    _addvvXnameB7_0
                push    _mulvvvXabsNameA7_0
                #(begin macro)subof()
                sbm _subofb217
                sbm _subofa217 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc217
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso217
                while
                  push _subofb217
                  if
                    at _subofb217
                      dec
                    ta
                    at _subofa217
                      dec
                    ta
                    push _subofa217
                    inc
                    not
                    if
                      at _subofc217
                        set 1
                      ta
                    fi
                  else
                    at _loopso217
                      reset
                    ta
                  fi
                wend
                push _subofc217
                if
                  at _subofb217
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb218
                sbm _subofa218 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc218
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso218
                while
                  push _subofb218
                  if
                    at _subofb218
                      dec
                    ta
                    at _subofa218
                      dec
                    ta
                    push _subofa218
                    inc
                    not
                    if
                      at _subofc218
                        set 1
                      ta
                    fi
                  else
                    at _loopso218
                      reset
                    ta
                  fi
                wend
                push _subofc218
                if
                  at _subofb218
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_0
                add
                pop     _addvvvXCarry13
                push    _addvvXnameB7_1
                push    _mulvvvXabsNameA7_1
                #(begin macro)subof()
                sbm _subofb219
                sbm _subofa219 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc219
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso219
                while
                  push _subofb219
                  if
                    at _subofb219
                      dec
                    ta
                    at _subofa219
                      dec
                    ta
                    push _subofa219
                    inc
                    not
                    if
                      at _subofc219
                        set 1
                      ta
                    fi
                  else
                    at _loopso219
                      reset
                    ta
                  fi
                wend
                push _subofc219
                if
                  at _subofb219
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb220
                sbm _subofa220 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc220
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso220
                while
                  push _subofb220
                  if
                    at _subofb220
                      dec
                    ta
                    at _subofa220
                      dec
                    ta
                    push _subofa220
                    inc
                    not
                    if
                      at _subofc220
                        set 1
                      ta
                    fi
                  else
                    at _loopso220
                      reset
                    ta
                  fi
                wend
                push _subofc220
                if
                  at _subofb220
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_1
                add
                pop     _addvvvXCarry13
                push    _addvvXnameB7_2
                push    _mulvvvXabsNameA7_2
                #(begin macro)subof()
                sbm _subofb221
                sbm _subofa221 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc221
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso221
                while
                  push _subofb221
                  if
                    at _subofb221
                      dec
                    ta
                    at _subofa221
                      dec
                    ta
                    push _subofa221
                    inc
                    not
                    if
                      at _subofc221
                        set 1
                      ta
                    fi
                  else
                    at _loopso221
                      reset
                    ta
                  fi
                wend
                push _subofc221
                if
                  at _subofb221
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb222
                sbm _subofa222 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc222
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso222
                while
                  push _subofb222
                  if
                    at _subofb222
                      dec
                    ta
                    at _subofa222
                      dec
                    ta
                    push _subofa222
                    inc
                    not
                    if
                      at _subofc222
                        set 1
                      ta
                    fi
                  else
                    at _loopso222
                      reset
                    ta
                  fi
                wend
                push _subofc222
                if
                  at _subofb222
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_2
                add
                pop     _addvvvXCarry13
                push    _addvvXnameB7_3
                push    _mulvvvXabsNameA7_3
                #(begin macro)subof()
                sbm _subofb223
                sbm _subofa223 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc223
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso223
                while
                  push _subofb223
                  if
                    at _subofb223
                      dec
                    ta
                    at _subofa223
                      dec
                    ta
                    push _subofa223
                    inc
                    not
                    if
                      at _subofc223
                        set 1
                      ta
                    fi
                  else
                    at _loopso223
                      reset
                    ta
                  fi
                wend
                push _subofc223
                if
                  at _subofb223
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb224
                sbm _subofa224 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc224
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso224
                while
                  push _subofb224
                  if
                    at _subofb224
                      dec
                    ta
                    at _subofa224
                      dec
                    ta
                    push _subofa224
                    inc
                    not
                    if
                      at _subofc224
                        set 1
                      ta
                    fi
                  else
                    at _loopso224
                      reset
                    ta
                  fi
                wend
                push _subofc224
                if
                  at _subofb224
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_3
                add
                pop     _addvvvXCarry13
                push    _addvvXnameB7_4
                push    _mulvvvXabsNameA7_4
                #(begin macro)subof()
                sbm _subofb225
                sbm _subofa225 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc225
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso225
                while
                  push _subofb225
                  if
                    at _subofb225
                      dec
                    ta
                    at _subofa225
                      dec
                    ta
                    push _subofa225
                    inc
                    not
                    if
                      at _subofc225
                        set 1
                      ta
                    fi
                  else
                    at _loopso225
                      reset
                    ta
                  fi
                wend
                push _subofc225
                if
                  at _subofb225
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb226
                sbm _subofa226 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc226
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso226
                while
                  push _subofb226
                  if
                    at _subofb226
                      dec
                    ta
                    at _subofa226
                      dec
                    ta
                    push _subofa226
                    inc
                    not
                    if
                      at _subofc226
                        set 1
                      ta
                    fi
                  else
                    at _loopso226
                      reset
                    ta
                  fi
                wend
                push _subofc226
                if
                  at _subofb226
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_4
                add
                pop     _addvvvXCarry13
                push    _addvvXnameB7_5
                push    _mulvvvXabsNameA7_5
                #(begin macro)subof()
                sbm _subofb227
                sbm _subofa227 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc227
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso227
                while
                  push _subofb227
                  if
                    at _subofb227
                      dec
                    ta
                    at _subofa227
                      dec
                    ta
                    push _subofa227
                    inc
                    not
                    if
                      at _subofc227
                        set 1
                      ta
                    fi
                  else
                    at _loopso227
                      reset
                    ta
                  fi
                wend
                push _subofc227
                if
                  at _subofb227
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry13
                #(begin macro)subof()
                sbm _subofb228
                sbm _subofa228 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc228
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso228
                while
                  push _subofb228
                  if
                    at _subofb228
                      dec
                    ta
                    at _subofa228
                      dec
                    ta
                    push _subofa228
                    inc
                    not
                    if
                      at _subofc228
                        set 1
                      ta
                    fi
                  else
                    at _loopso228
                      reset
                    ta
                  fi
                wend
                push _subofc228
                if
                  at _subofb228
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX7_5
                add
                pop     _addvvvXCarry13
                pop     _mulFPresultX7_c
              else # absB >= absA :
                push    _aequb13
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX7_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA7_s
                  pop     _mulFPresultX7_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_0
                  push    _addvvXnameB7_0
                  #(begin macro)subof()
                  sbm _subofb229
                  sbm _subofa229 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc229
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso229
                  while
                    push _subofb229
                    if
                      at _subofb229
                        dec
                      ta
                      at _subofa229
                        dec
                      ta
                      push _subofa229
                      inc
                      not
                      if
                        at _subofc229
                          set 1
                        ta
                      fi
                    else
                      at _loopso229
                        reset
                      ta
                    fi
                  wend
                  push _subofc229
                  if
                    at _subofb229
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb230
                  sbm _subofa230 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc230
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso230
                  while
                    push _subofb230
                    if
                      at _subofb230
                        dec
                      ta
                      at _subofa230
                        dec
                      ta
                      push _subofa230
                      inc
                      not
                      if
                        at _subofc230
                          set 1
                        ta
                      fi
                    else
                      at _loopso230
                        reset
                      ta
                    fi
                  wend
                  push _subofc230
                  if
                    at _subofb230
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_0
                  add
                  pop     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_1
                  push    _addvvXnameB7_1
                  #(begin macro)subof()
                  sbm _subofb231
                  sbm _subofa231 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc231
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso231
                  while
                    push _subofb231
                    if
                      at _subofb231
                        dec
                      ta
                      at _subofa231
                        dec
                      ta
                      push _subofa231
                      inc
                      not
                      if
                        at _subofc231
                          set 1
                        ta
                      fi
                    else
                      at _loopso231
                        reset
                      ta
                    fi
                  wend
                  push _subofc231
                  if
                    at _subofb231
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb232
                  sbm _subofa232 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc232
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso232
                  while
                    push _subofb232
                    if
                      at _subofb232
                        dec
                      ta
                      at _subofa232
                        dec
                      ta
                      push _subofa232
                      inc
                      not
                      if
                        at _subofc232
                          set 1
                        ta
                      fi
                    else
                      at _loopso232
                        reset
                      ta
                    fi
                  wend
                  push _subofc232
                  if
                    at _subofb232
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_1
                  add
                  pop     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_2
                  push    _addvvXnameB7_2
                  #(begin macro)subof()
                  sbm _subofb233
                  sbm _subofa233 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc233
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso233
                  while
                    push _subofb233
                    if
                      at _subofb233
                        dec
                      ta
                      at _subofa233
                        dec
                      ta
                      push _subofa233
                      inc
                      not
                      if
                        at _subofc233
                          set 1
                        ta
                      fi
                    else
                      at _loopso233
                        reset
                      ta
                    fi
                  wend
                  push _subofc233
                  if
                    at _subofb233
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb234
                  sbm _subofa234 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc234
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso234
                  while
                    push _subofb234
                    if
                      at _subofb234
                        dec
                      ta
                      at _subofa234
                        dec
                      ta
                      push _subofa234
                      inc
                      not
                      if
                        at _subofc234
                          set 1
                        ta
                      fi
                    else
                      at _loopso234
                        reset
                      ta
                    fi
                  wend
                  push _subofc234
                  if
                    at _subofb234
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_2
                  add
                  pop     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_3
                  push    _addvvXnameB7_3
                  #(begin macro)subof()
                  sbm _subofb235
                  sbm _subofa235 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc235
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso235
                  while
                    push _subofb235
                    if
                      at _subofb235
                        dec
                      ta
                      at _subofa235
                        dec
                      ta
                      push _subofa235
                      inc
                      not
                      if
                        at _subofc235
                          set 1
                        ta
                      fi
                    else
                      at _loopso235
                        reset
                      ta
                    fi
                  wend
                  push _subofc235
                  if
                    at _subofb235
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb236
                  sbm _subofa236 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc236
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso236
                  while
                    push _subofb236
                    if
                      at _subofb236
                        dec
                      ta
                      at _subofa236
                        dec
                      ta
                      push _subofa236
                      inc
                      not
                      if
                        at _subofc236
                          set 1
                        ta
                      fi
                    else
                      at _loopso236
                        reset
                      ta
                    fi
                  wend
                  push _subofc236
                  if
                    at _subofb236
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_3
                  add
                  pop     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_4
                  push    _addvvXnameB7_4
                  #(begin macro)subof()
                  sbm _subofb237
                  sbm _subofa237 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc237
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso237
                  while
                    push _subofb237
                    if
                      at _subofb237
                        dec
                      ta
                      at _subofa237
                        dec
                      ta
                      push _subofa237
                      inc
                      not
                      if
                        at _subofc237
                          set 1
                        ta
                      fi
                    else
                      at _loopso237
                        reset
                      ta
                    fi
                  wend
                  push _subofc237
                  if
                    at _subofb237
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb238
                  sbm _subofa238 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc238
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso238
                  while
                    push _subofb238
                    if
                      at _subofb238
                        dec
                      ta
                      at _subofa238
                        dec
                      ta
                      push _subofa238
                      inc
                      not
                      if
                        at _subofc238
                          set 1
                        ta
                      fi
                    else
                      at _loopso238
                        reset
                      ta
                    fi
                  wend
                  push _subofc238
                  if
                    at _subofb238
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_4
                  add
                  pop     _addvvvXCarry13
                  push    _mulvvvXabsNameA7_5
                  push    _addvvXnameB7_5
                  #(begin macro)subof()
                  sbm _subofb239
                  sbm _subofa239 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc239
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso239
                  while
                    push _subofb239
                    if
                      at _subofb239
                        dec
                      ta
                      at _subofa239
                        dec
                      ta
                      push _subofa239
                      inc
                      not
                      if
                        at _subofc239
                          set 1
                        ta
                      fi
                    else
                      at _loopso239
                        reset
                      ta
                    fi
                  wend
                  push _subofc239
                  if
                    at _subofb239
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry13
                  #(begin macro)subof()
                  sbm _subofb240
                  sbm _subofa240 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc240
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso240
                  while
                    push _subofb240
                    if
                      at _subofb240
                        dec
                      ta
                      at _subofa240
                        dec
                      ta
                      push _subofa240
                      inc
                      not
                      if
                        at _subofc240
                          set 1
                        ta
                      fi
                    else
                      at _loopso240
                        reset
                      ta
                    fi
                  wend
                  push _subofc240
                  if
                    at _subofb240
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX7_5
                  add
                  pop     _addvvvXCarry13
                  pop     _mulFPresultX7_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB7_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB7_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB7_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB7_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB7_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB7_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB7_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB7_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB7_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB7_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB7_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB7_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB7_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB7_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB7_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB7_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB7_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB7_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB7_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB7_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB7_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB7_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB7_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB7_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB7_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB7_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB7_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop7
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA7
        push _mulvvvXsB7
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX7_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX7_c
        push    _mulFPresultX7_s
        push    _mulFPresultX7_5
        push    _mulFPresultX7_4
        push    _mulFPresultX7_3
        push    _mulFPresultX7_2
        push    _mulFPresultX7_1
        push    _mulFPresultX7_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack7_0    # 0 byte of _castFPinstack7
        var _castFPinstack7_1    # 1 byte of _castFPinstack7
        var _castFPinstack7_2    # 2 byte of _castFPinstack7
        var _castFPinstack7_3    # 3 byte of _castFPinstack7
        var _castFPinstack7_4    # 4 byte of _castFPinstack7
        var _castFPinstack7_5    # 5 byte of _castFPinstack7
        var _castFPinstack7_s    # Sign of _castFPinstack7
        var _castFPinstack7_c    # carry of _castFPinstack7
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack7_0    # 0 byte of _castFPoutstack7
        var _castFPoutstack7_1    # 1 byte of _castFPoutstack7
        var _castFPoutstack7_2    # 2 byte of _castFPoutstack7
        var _castFPoutstack7_s    # Sign of _castFPoutstack7
        var _castFPoutstack7_c    # carry of _castFPoutstack7
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack7_0
        pop     _castFPinstack7_1
        pop     _castFPinstack7_2
        pop     _castFPinstack7_3
        pop     _castFPinstack7_4
        pop     _castFPinstack7_5
        pop     _castFPinstack7_s
        pop     _castFPinstack7_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack7_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack7_s
        pop _castFPoutstack7_s
        # integer part
        push _castFPinstack7_4
        pop _castFPoutstack7_2
        # fract part
        push _castFPinstack7_3
        pop _castFPoutstack7_1
        push _castFPinstack7_2
        pop _castFPoutstack7_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack7_c
        push    _castFPoutstack7_s
        push    _castFPoutstack7_2
        push    _castFPoutstack7_1
        push    _castFPoutstack7_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA7_0
        pop     _mulFPnameA7_1
        pop     _mulFPnameA7_2
        pop     _mulFPnameA7_s
        pop     _mulFPnameA7_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)pushvX(FP,"pi")
        push    pi_c
        push    pi_s
        push    pi_2
        push    pi_1
        push    pi_0
        #(end macro)pushvX(FP,"pi")
        #(begin macro)addX(FP)
        #(begin macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXName4_0 - 5
        sbm _addXName4_1 - 6
        sbm _addXName4_2 - 7
        sbm _addXName4_s - 8
        sbm _addXName4_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXNameB4_0 - 0
        sbm _addXNameB4_1 - 1
        sbm _addXNameB4_2 - 2
        sbm _addXNameB4_s - 3
        sbm _addXNameB4_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addXNameA4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addXNameA4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)pushvX(X,"_addXName"+_addX)
        push    _addXName4_c
        push    _addXName4_s
        push    _addXName4_2
        push    _addXName4_1
        push    _addXName4_0
        #(end macro)pushvX(X,"_addXName"+_addX)
        #(begin macro)popvX(X,"_addXNameA"+_addX)
        pop     _addXNameA4_0
        pop     _addXNameA4_1
        pop     _addXNameA4_2
        pop     _addXNameA4_s
        pop     _addXNameA4_c
        #(end macro)popvX(X,"_addXNameA"+_addX)
        #(begin macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        push    _addXNameA4_s
        push    _addXNameB4_s
        or
        not
        push    _addXNameA4_s
        push    _addXNameB4_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addXNameA4_s
          pop     _addXName4_s    # name has same sign of nameA and nameB
          push    0
          push    _addXNameA4_0
          #(begin macro)addof()
          sbm _addofb181
          sbm _addofa181 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc181
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao181
          while
            push _addofa181
            if
              at _addofa181
                dec
              ta
              at _addofb181
                inc
              ta
              push _addofb181
              not
              if
                at _addofc181
                  set 1
                ta
              fi
            else
              at _loopao181
                reset
              ta
            fi
          wend
          push _addofc181
          if
            at _addofa181
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_0
          push    _addXNameB4_0
          #(begin macro)addof()
          sbm _addofb182
          sbm _addofa182 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc182
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao182
          while
            push _addofa182
            if
              at _addofa182
                dec
              ta
              at _addofb182
                inc
              ta
              push _addofb182
              not
              if
                at _addofc182
                  set 1
                ta
              fi
            else
              at _loopao182
                reset
              ta
            fi
          wend
          push _addofc182
          if
            at _addofa182
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName4_0
          #(begin macro)addof()
          sbm _addofb183
          sbm _addofa183 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc183
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao183
          while
            push _addofa183
            if
              at _addofa183
                dec
              ta
              at _addofb183
                inc
              ta
              push _addofb183
              not
              if
                at _addofc183
                  set 1
                ta
              fi
            else
              at _loopao183
                reset
              ta
            fi
          wend
          push _addofc183
          if
            at _addofa183
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_0
          add
          push    _addXNameA4_1
          #(begin macro)addof()
          sbm _addofb184
          sbm _addofa184 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc184
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao184
          while
            push _addofa184
            if
              at _addofa184
                dec
              ta
              at _addofb184
                inc
              ta
              push _addofb184
              not
              if
                at _addofc184
                  set 1
                ta
              fi
            else
              at _loopao184
                reset
              ta
            fi
          wend
          push _addofc184
          if
            at _addofa184
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_1
          push    _addXNameB4_1
          #(begin macro)addof()
          sbm _addofb185
          sbm _addofa185 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc185
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao185
          while
            push _addofa185
            if
              at _addofa185
                dec
              ta
              at _addofb185
                inc
              ta
              push _addofb185
              not
              if
                at _addofc185
                  set 1
                ta
              fi
            else
              at _loopao185
                reset
              ta
            fi
          wend
          push _addofc185
          if
            at _addofa185
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName4_1
          #(begin macro)addof()
          sbm _addofb186
          sbm _addofa186 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc186
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao186
          while
            push _addofa186
            if
              at _addofa186
                dec
              ta
              at _addofb186
                inc
              ta
              push _addofb186
              not
              if
                at _addofc186
                  set 1
                ta
              fi
            else
              at _loopao186
                reset
              ta
            fi
          wend
          push _addofc186
          if
            at _addofa186
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_1
          add
          push    _addXNameA4_2
          #(begin macro)addof()
          sbm _addofb187
          sbm _addofa187 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc187
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao187
          while
            push _addofa187
            if
              at _addofa187
                dec
              ta
              at _addofb187
                inc
              ta
              push _addofb187
              not
              if
                at _addofc187
                  set 1
                ta
              fi
            else
              at _loopao187
                reset
              ta
            fi
          wend
          push _addofc187
          if
            at _addofa187
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_2
          push    _addXNameB4_2
          #(begin macro)addof()
          sbm _addofb188
          sbm _addofa188 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc188
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao188
          while
            push _addofa188
            if
              at _addofa188
                dec
              ta
              at _addofb188
                inc
              ta
              push _addofb188
              not
              if
                at _addofc188
                  set 1
                ta
              fi
            else
              at _loopao188
                reset
              ta
            fi
          wend
          push _addofc188
          if
            at _addofa188
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName4_2
          #(begin macro)addof()
          sbm _addofb189
          sbm _addofa189 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc189
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao189
          while
            push _addofa189
            if
              at _addofa189
                dec
              ta
              at _addofb189
                inc
              ta
              push _addofb189
              not
              if
                at _addofc189
                  set 1
                ta
              fi
            else
              at _loopao189
                reset
              ta
            fi
          wend
          push _addofc189
          if
            at _addofa189
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName4_2
          add
          pop     _addXName4_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb14
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb14
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addXNameA4_2
          push    _addXNameB4_2
          sup
          if
            at _asupb14
              set 1
            ta
          else
            push    _addXNameA4_2
            push    _addXNameB4_2
            diff
            if
              at _asupb14
                reset
              ta
            else
              push    _addXNameA4_1
              push    _addXNameB4_1
              sup
              if
                at _asupb14
                  set 1
                ta
              else
                push    _addXNameA4_1
                push    _addXNameB4_1
                diff
                if
                  at _asupb14
                    reset
                  ta
                else
                  push    _addXNameA4_0
                  push    _addXNameB4_0
                  sup
                  if
                    at _asupb14
                      set 1
                    ta
                  else
                    push    _addXNameA4_0
                    push    _addXNameB4_0
                    diff
                    if
                      at _asupb14
                        reset
                      ta
                    else
                      at _aequb14
                        set 1
                      ta
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb14
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addXNameA4_s
            pop     _addXName4_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry14
            push    _addXNameA4_0
            push    _addXNameB4_0
            #(begin macro)subof()
            sbm _subofb241
            sbm _subofa241 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc241
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso241
            while
              push _subofb241
              if
                at _subofb241
                  dec
                ta
                at _subofa241
                  dec
                ta
                push _subofa241
                inc
                not
                if
                  at _subofc241
                    set 1
                  ta
                fi
              else
                at _loopso241
                  reset
                ta
              fi
            wend
            push _subofc241
            if
              at _subofb241
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry14
            #(begin macro)subof()
            sbm _subofb242
            sbm _subofa242 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc242
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso242
            while
              push _subofb242
              if
                at _subofb242
                  dec
                ta
                at _subofa242
                  dec
                ta
                push _subofa242
                inc
                not
                if
                  at _subofc242
                    set 1
                  ta
                fi
              else
                at _loopso242
                  reset
                ta
              fi
            wend
            push _subofc242
            if
              at _subofb242
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName4_0
            add
            pop     _addvvvXCarry14
            push    _addXNameA4_1
            push    _addXNameB4_1
            #(begin macro)subof()
            sbm _subofb243
            sbm _subofa243 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc243
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso243
            while
              push _subofb243
              if
                at _subofb243
                  dec
                ta
                at _subofa243
                  dec
                ta
                push _subofa243
                inc
                not
                if
                  at _subofc243
                    set 1
                  ta
                fi
              else
                at _loopso243
                  reset
                ta
              fi
            wend
            push _subofc243
            if
              at _subofb243
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry14
            #(begin macro)subof()
            sbm _subofb244
            sbm _subofa244 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc244
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso244
            while
              push _subofb244
              if
                at _subofb244
                  dec
                ta
                at _subofa244
                  dec
                ta
                push _subofa244
                inc
                not
                if
                  at _subofc244
                    set 1
                  ta
                fi
              else
                at _loopso244
                  reset
                ta
              fi
            wend
            push _subofc244
            if
              at _subofb244
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName4_1
            add
            pop     _addvvvXCarry14
            push    _addXNameA4_2
            push    _addXNameB4_2
            #(begin macro)subof()
            sbm _subofb245
            sbm _subofa245 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc245
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso245
            while
              push _subofb245
              if
                at _subofb245
                  dec
                ta
                at _subofa245
                  dec
                ta
                push _subofa245
                inc
                not
                if
                  at _subofc245
                    set 1
                  ta
                fi
              else
                at _loopso245
                  reset
                ta
              fi
            wend
            push _subofc245
            if
              at _subofb245
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry14
            #(begin macro)subof()
            sbm _subofb246
            sbm _subofa246 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc246
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso246
            while
              push _subofb246
              if
                at _subofb246
                  dec
                ta
                at _subofa246
                  dec
                ta
                push _subofa246
                inc
                not
                if
                  at _subofc246
                    set 1
                  ta
                fi
              else
                at _loopso246
                  reset
                ta
              fi
            wend
            push _subofc246
            if
              at _subofb246
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName4_2
            add
            pop     _addvvvXCarry14
            pop     _addXName4_c
          else # absB >= absA :
            push    _aequb14
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _addXName4_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _addXNameB4_s
              pop     _addXName4_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry14
              push    _addXNameB4_0
              push    _addXNameA4_0
              #(begin macro)subof()
              sbm _subofb247
              sbm _subofa247 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc247
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso247
              while
                push _subofb247
                if
                  at _subofb247
                    dec
                  ta
                  at _subofa247
                    dec
                  ta
                  push _subofa247
                  inc
                  not
                  if
                    at _subofc247
                      set 1
                    ta
                  fi
                else
                  at _loopso247
                    reset
                  ta
                fi
              wend
              push _subofc247
              if
                at _subofb247
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry14
              #(begin macro)subof()
              sbm _subofb248
              sbm _subofa248 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc248
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso248
              while
                push _subofb248
                if
                  at _subofb248
                    dec
                  ta
                  at _subofa248
                    dec
                  ta
                  push _subofa248
                  inc
                  not
                  if
                    at _subofc248
                      set 1
                    ta
                  fi
                else
                  at _loopso248
                    reset
                  ta
                fi
              wend
              push _subofc248
              if
                at _subofb248
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName4_0
              add
              pop     _addvvvXCarry14
              push    _addXNameB4_1
              push    _addXNameA4_1
              #(begin macro)subof()
              sbm _subofb249
              sbm _subofa249 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc249
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso249
              while
                push _subofb249
                if
                  at _subofb249
                    dec
                  ta
                  at _subofa249
                    dec
                  ta
                  push _subofa249
                  inc
                  not
                  if
                    at _subofc249
                      set 1
                    ta
                  fi
                else
                  at _loopso249
                    reset
                  ta
                fi
              wend
              push _subofc249
              if
                at _subofb249
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry14
              #(begin macro)subof()
              sbm _subofb250
              sbm _subofa250 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc250
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso250
              while
                push _subofb250
                if
                  at _subofb250
                    dec
                  ta
                  at _subofa250
                    dec
                  ta
                  push _subofa250
                  inc
                  not
                  if
                    at _subofc250
                      set 1
                    ta
                  fi
                else
                  at _loopso250
                    reset
                  ta
                fi
              wend
              push _subofc250
              if
                at _subofb250
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName4_1
              add
              pop     _addvvvXCarry14
              push    _addXNameB4_2
              push    _addXNameA4_2
              #(begin macro)subof()
              sbm _subofb251
              sbm _subofa251 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc251
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso251
              while
                push _subofb251
                if
                  at _subofb251
                    dec
                  ta
                  at _subofa251
                    dec
                  ta
                  push _subofa251
                  inc
                  not
                  if
                    at _subofc251
                      set 1
                    ta
                  fi
                else
                  at _loopso251
                    reset
                  ta
                fi
              wend
              push _subofc251
              if
                at _subofb251
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry14
              #(begin macro)subof()
              sbm _subofb252
              sbm _subofa252 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc252
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso252
              while
                push _subofb252
                if
                  at _subofb252
                    dec
                  ta
                  at _subofa252
                    dec
                  ta
                  push _subofa252
                  inc
                  not
                  if
                    at _subofc252
                      set 1
                    ta
                  fi
                else
                  at _loopso252
                    reset
                  ta
                fi
              wend
              push _subofc252
              if
                at _subofb252
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName4_2
              add
              pop     _addvvvXCarry14
              pop     _addXName4_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X)
        #(end macro)addX(FP)
        #(begin macro)popvX(FP,"newIm")
        pop     newIm_0
        pop     newIm_1
        pop     newIm_2
        pop     newIm_s
        pop     newIm_c
        #(end macro)popvX(FP,"newIm")
        #    if (newRe *  newRe +  newIm * newIm) > 4 break for
        ## newRe *  newRe +  newIm * newIm
        #(begin macro)pushvX(FP,"newRe")
        push    newRe_c
        push    newRe_s
        push    newRe_2
        push    newRe_1
        push    newRe_0
        #(end macro)pushvX(FP,"newRe")
        #(begin macro)pushvX(FP,"newRe")
        push    newRe_c
        push    newRe_s
        push    newRe_2
        push    newRe_1
        push    newRe_0
        #(end macro)pushvX(FP,"newRe")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB8_0 - 0
        sbm _mulFPnameB8_1 - 1
        sbm _mulFPnameB8_2 - 2
        sbm _mulFPnameB8_s - 3
        sbm _mulFPnameB8_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA8_0 - 5
        sbm _mulFPnameA8_1 - 6
        sbm _mulFPnameA8_2 - 7
        sbm _mulFPnameA8_s - 8
        sbm _mulFPnameA8_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA8_c
        push    _mulFPnameA8_s
        push    _mulFPnameA8_2
        push    _mulFPnameA8_1
        push    _mulFPnameA8_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput15_0 - 0
        sbm _castXInput15_1 - 1
        sbm _castXInput15_2 - 2
        sbm _castXInput15_s - 3
        sbm _castXInput15_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput15_0    # 0 byte of _castXoutput15
        var _castXoutput15_1    # 1 byte of _castXoutput15
        var _castXoutput15_2    # 2 byte of _castXoutput15
        var _castXoutput15_3    # 3 byte of _castXoutput15
        var _castXoutput15_4    # 4 byte of _castXoutput15
        var _castXoutput15_5    # 5 byte of _castXoutput15
        var _castXoutput15_s    # Sign of _castXoutput15
        var _castXoutput15_c    # carry of _castXoutput15
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori15_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori15_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori15_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori15_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori15_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest15_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest15_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest15_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput15_c
        push    _castXInput15_s
        push    _castXInput15_2
        push    _castXInput15_1
        push    _castXInput15_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori15_0
        pop     _castXori15_1
        pop     _castXori15_2
        pop     _castXori15_s
        pop     _castXori15_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori15_s
        pop     _castXdest15_s  # keep sign
        push    _castXori15_0
        pop     _castXdest15_0
        push    _castXori15_1
        pop     _castXdest15_1
        push    _castXori15_2
        pop     _castXdest15_2
        push    0
        pop     _castXdest15_3
        push    0
        pop     _castXdest15_4
        push    0
        pop     _castXdest15_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest15_c
        push    _castXdest15_s
        push    _castXdest15_5
        push    _castXdest15_4
        push    _castXdest15_3
        push    _castXdest15_2
        push    _castXdest15_1
        push    _castXdest15_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput15_0
        pop     _castXoutput15_1
        pop     _castXoutput15_2
        pop     _castXoutput15_3
        pop     _castXoutput15_4
        pop     _castXoutput15_5
        pop     _castXoutput15_s
        pop     _castXoutput15_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput15_c
        push    _castXoutput15_s
        push    _castXoutput15_5
        push    _castXoutput15_4
        push    _castXoutput15_3
        push    _castXoutput15_2
        push    _castXoutput15_1
        push    _castXoutput15_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX8_0
        pop     _mulFPnameAX8_1
        pop     _mulFPnameAX8_2
        pop     _mulFPnameAX8_3
        pop     _mulFPnameAX8_4
        pop     _mulFPnameAX8_5
        pop     _mulFPnameAX8_s
        pop     _mulFPnameAX8_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB8_c
        push    _mulFPnameB8_s
        push    _mulFPnameB8_2
        push    _mulFPnameB8_1
        push    _mulFPnameB8_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput16_0 - 0
        sbm _castXInput16_1 - 1
        sbm _castXInput16_2 - 2
        sbm _castXInput16_s - 3
        sbm _castXInput16_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput16_0    # 0 byte of _castXoutput16
        var _castXoutput16_1    # 1 byte of _castXoutput16
        var _castXoutput16_2    # 2 byte of _castXoutput16
        var _castXoutput16_3    # 3 byte of _castXoutput16
        var _castXoutput16_4    # 4 byte of _castXoutput16
        var _castXoutput16_5    # 5 byte of _castXoutput16
        var _castXoutput16_s    # Sign of _castXoutput16
        var _castXoutput16_c    # carry of _castXoutput16
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori16_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori16_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori16_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori16_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori16_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest16_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest16_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest16_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput16_c
        push    _castXInput16_s
        push    _castXInput16_2
        push    _castXInput16_1
        push    _castXInput16_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori16_0
        pop     _castXori16_1
        pop     _castXori16_2
        pop     _castXori16_s
        pop     _castXori16_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori16_s
        pop     _castXdest16_s  # keep sign
        push    _castXori16_0
        pop     _castXdest16_0
        push    _castXori16_1
        pop     _castXdest16_1
        push    _castXori16_2
        pop     _castXdest16_2
        push    0
        pop     _castXdest16_3
        push    0
        pop     _castXdest16_4
        push    0
        pop     _castXdest16_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest16_c
        push    _castXdest16_s
        push    _castXdest16_5
        push    _castXdest16_4
        push    _castXdest16_3
        push    _castXdest16_2
        push    _castXdest16_1
        push    _castXdest16_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput16_0
        pop     _castXoutput16_1
        pop     _castXoutput16_2
        pop     _castXoutput16_3
        pop     _castXoutput16_4
        pop     _castXoutput16_5
        pop     _castXoutput16_s
        pop     _castXoutput16_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput16_c
        push    _castXoutput16_s
        push    _castXoutput16_5
        push    _castXoutput16_4
        push    _castXoutput16_3
        push    _castXoutput16_2
        push    _castXoutput16_1
        push    _castXoutput16_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX8_0
        pop     _mulFPnameBX8_1
        pop     _mulFPnameBX8_2
        pop     _mulFPnameBX8_3
        pop     _mulFPnameBX8_4
        pop     _mulFPnameBX8_5
        pop     _mulFPnameBX8_s
        pop     _mulFPnameBX8_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX8_c
        push    _mulFPnameAX8_s
        push    _mulFPnameAX8_5
        push    _mulFPnameAX8_4
        push    _mulFPnameAX8_3
        push    _mulFPnameAX8_2
        push    _mulFPnameAX8_1
        push    _mulFPnameAX8_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA8_0
        pop     _mulvvvXabsNameA8_1
        pop     _mulvvvXabsNameA8_2
        pop     _mulvvvXabsNameA8_3
        pop     _mulvvvXabsNameA8_4
        pop     _mulvvvXabsNameA8_5
        pop     _mulvvvXabsNameA8_s
        pop     _mulvvvXabsNameA8_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA8
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA8_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA8
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA8_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB8_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB8_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB8_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX8_c
        push    _mulFPnameBX8_s
        push    _mulFPnameBX8_5
        push    _mulFPnameBX8_4
        push    _mulFPnameBX8_3
        push    _mulFPnameBX8_2
        push    _mulFPnameBX8_1
        push    _mulFPnameBX8_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB8_0
        pop     _mulvvvXabsNameB8_1
        pop     _mulvvvXabsNameB8_2
        pop     _mulvvvXabsNameB8_3
        pop     _mulvvvXabsNameB8_4
        pop     _mulvvvXabsNameB8_5
        pop     _mulvvvXabsNameB8_s
        pop     _mulvvvXabsNameB8_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB8
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB8_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB8
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB8_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX8_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop8
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB8_0
          bool
          push _mulvvvXabsNameB8_1
          bool
          push _mulvvvXabsNameB8_2
          bool
          push _mulvvvXabsNameB8_3
          bool
          push _mulvvvXabsNameB8_4
          bool
          push _mulvvvXabsNameB8_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB8_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB8_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB8_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX8_c
            push    _mulFPresultX8_s
            push    _mulFPresultX8_5
            push    _mulFPresultX8_4
            push    _mulFPresultX8_3
            push    _mulFPresultX8_2
            push    _mulFPresultX8_1
            push    _mulFPresultX8_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB8_0
            pop     _addvvXnameB8_1
            pop     _addvvXnameB8_2
            pop     _addvvXnameB8_3
            pop     _addvvXnameB8_4
            pop     _addvvXnameB8_5
            pop     _addvvXnameB8_s
            pop     _addvvXnameB8_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB8_s
            push    _mulvvvXabsNameA8_s
            or
            not
            push    _addvvXnameB8_s
            push    _mulvvvXabsNameA8_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB8_s
              pop     _mulFPresultX8_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB8_0
              #(begin macro)addof()
              sbm _addofb190
              sbm _addofa190 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc190
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao190
              while
                push _addofa190
                if
                  at _addofa190
                    dec
                  ta
                  at _addofb190
                    inc
                  ta
                  push _addofb190
                  not
                  if
                    at _addofc190
                      set 1
                    ta
                  fi
                else
                  at _loopao190
                    reset
                  ta
                fi
              wend
              push _addofc190
              if
                at _addofa190
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_0
              push    _mulvvvXabsNameA8_0
              #(begin macro)addof()
              sbm _addofb191
              sbm _addofa191 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc191
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao191
              while
                push _addofa191
                if
                  at _addofa191
                    dec
                  ta
                  at _addofb191
                    inc
                  ta
                  push _addofb191
                  not
                  if
                    at _addofc191
                      set 1
                    ta
                  fi
                else
                  at _loopao191
                    reset
                  ta
                fi
              wend
              push _addofc191
              if
                at _addofa191
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_0
              #(begin macro)addof()
              sbm _addofb192
              sbm _addofa192 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc192
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao192
              while
                push _addofa192
                if
                  at _addofa192
                    dec
                  ta
                  at _addofb192
                    inc
                  ta
                  push _addofb192
                  not
                  if
                    at _addofc192
                      set 1
                    ta
                  fi
                else
                  at _loopao192
                    reset
                  ta
                fi
              wend
              push _addofc192
              if
                at _addofa192
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_0
              add
              push    _addvvXnameB8_1
              #(begin macro)addof()
              sbm _addofb193
              sbm _addofa193 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc193
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao193
              while
                push _addofa193
                if
                  at _addofa193
                    dec
                  ta
                  at _addofb193
                    inc
                  ta
                  push _addofb193
                  not
                  if
                    at _addofc193
                      set 1
                    ta
                  fi
                else
                  at _loopao193
                    reset
                  ta
                fi
              wend
              push _addofc193
              if
                at _addofa193
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_1
              push    _mulvvvXabsNameA8_1
              #(begin macro)addof()
              sbm _addofb194
              sbm _addofa194 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc194
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao194
              while
                push _addofa194
                if
                  at _addofa194
                    dec
                  ta
                  at _addofb194
                    inc
                  ta
                  push _addofb194
                  not
                  if
                    at _addofc194
                      set 1
                    ta
                  fi
                else
                  at _loopao194
                    reset
                  ta
                fi
              wend
              push _addofc194
              if
                at _addofa194
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_1
              #(begin macro)addof()
              sbm _addofb195
              sbm _addofa195 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc195
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao195
              while
                push _addofa195
                if
                  at _addofa195
                    dec
                  ta
                  at _addofb195
                    inc
                  ta
                  push _addofb195
                  not
                  if
                    at _addofc195
                      set 1
                    ta
                  fi
                else
                  at _loopao195
                    reset
                  ta
                fi
              wend
              push _addofc195
              if
                at _addofa195
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_1
              add
              push    _addvvXnameB8_2
              #(begin macro)addof()
              sbm _addofb196
              sbm _addofa196 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc196
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao196
              while
                push _addofa196
                if
                  at _addofa196
                    dec
                  ta
                  at _addofb196
                    inc
                  ta
                  push _addofb196
                  not
                  if
                    at _addofc196
                      set 1
                    ta
                  fi
                else
                  at _loopao196
                    reset
                  ta
                fi
              wend
              push _addofc196
              if
                at _addofa196
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_2
              push    _mulvvvXabsNameA8_2
              #(begin macro)addof()
              sbm _addofb197
              sbm _addofa197 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc197
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao197
              while
                push _addofa197
                if
                  at _addofa197
                    dec
                  ta
                  at _addofb197
                    inc
                  ta
                  push _addofb197
                  not
                  if
                    at _addofc197
                      set 1
                    ta
                  fi
                else
                  at _loopao197
                    reset
                  ta
                fi
              wend
              push _addofc197
              if
                at _addofa197
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_2
              #(begin macro)addof()
              sbm _addofb198
              sbm _addofa198 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc198
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao198
              while
                push _addofa198
                if
                  at _addofa198
                    dec
                  ta
                  at _addofb198
                    inc
                  ta
                  push _addofb198
                  not
                  if
                    at _addofc198
                      set 1
                    ta
                  fi
                else
                  at _loopao198
                    reset
                  ta
                fi
              wend
              push _addofc198
              if
                at _addofa198
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_2
              add
              push    _addvvXnameB8_3
              #(begin macro)addof()
              sbm _addofb199
              sbm _addofa199 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc199
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao199
              while
                push _addofa199
                if
                  at _addofa199
                    dec
                  ta
                  at _addofb199
                    inc
                  ta
                  push _addofb199
                  not
                  if
                    at _addofc199
                      set 1
                    ta
                  fi
                else
                  at _loopao199
                    reset
                  ta
                fi
              wend
              push _addofc199
              if
                at _addofa199
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_3
              push    _mulvvvXabsNameA8_3
              #(begin macro)addof()
              sbm _addofb200
              sbm _addofa200 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc200
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao200
              while
                push _addofa200
                if
                  at _addofa200
                    dec
                  ta
                  at _addofb200
                    inc
                  ta
                  push _addofb200
                  not
                  if
                    at _addofc200
                      set 1
                    ta
                  fi
                else
                  at _loopao200
                    reset
                  ta
                fi
              wend
              push _addofc200
              if
                at _addofa200
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_3
              #(begin macro)addof()
              sbm _addofb201
              sbm _addofa201 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc201
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao201
              while
                push _addofa201
                if
                  at _addofa201
                    dec
                  ta
                  at _addofb201
                    inc
                  ta
                  push _addofb201
                  not
                  if
                    at _addofc201
                      set 1
                    ta
                  fi
                else
                  at _loopao201
                    reset
                  ta
                fi
              wend
              push _addofc201
              if
                at _addofa201
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_3
              add
              push    _addvvXnameB8_4
              #(begin macro)addof()
              sbm _addofb202
              sbm _addofa202 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc202
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao202
              while
                push _addofa202
                if
                  at _addofa202
                    dec
                  ta
                  at _addofb202
                    inc
                  ta
                  push _addofb202
                  not
                  if
                    at _addofc202
                      set 1
                    ta
                  fi
                else
                  at _loopao202
                    reset
                  ta
                fi
              wend
              push _addofc202
              if
                at _addofa202
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_4
              push    _mulvvvXabsNameA8_4
              #(begin macro)addof()
              sbm _addofb203
              sbm _addofa203 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc203
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao203
              while
                push _addofa203
                if
                  at _addofa203
                    dec
                  ta
                  at _addofb203
                    inc
                  ta
                  push _addofb203
                  not
                  if
                    at _addofc203
                      set 1
                    ta
                  fi
                else
                  at _loopao203
                    reset
                  ta
                fi
              wend
              push _addofc203
              if
                at _addofa203
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_4
              #(begin macro)addof()
              sbm _addofb204
              sbm _addofa204 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc204
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao204
              while
                push _addofa204
                if
                  at _addofa204
                    dec
                  ta
                  at _addofb204
                    inc
                  ta
                  push _addofb204
                  not
                  if
                    at _addofc204
                      set 1
                    ta
                  fi
                else
                  at _loopao204
                    reset
                  ta
                fi
              wend
              push _addofc204
              if
                at _addofa204
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_4
              add
              push    _addvvXnameB8_5
              #(begin macro)addof()
              sbm _addofb205
              sbm _addofa205 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc205
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao205
              while
                push _addofa205
                if
                  at _addofa205
                    dec
                  ta
                  at _addofb205
                    inc
                  ta
                  push _addofb205
                  not
                  if
                    at _addofc205
                      set 1
                    ta
                  fi
                else
                  at _loopao205
                    reset
                  ta
                fi
              wend
              push _addofc205
              if
                at _addofa205
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_5
              push    _mulvvvXabsNameA8_5
              #(begin macro)addof()
              sbm _addofb206
              sbm _addofa206 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc206
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao206
              while
                push _addofa206
                if
                  at _addofa206
                    dec
                  ta
                  at _addofb206
                    inc
                  ta
                  push _addofb206
                  not
                  if
                    at _addofc206
                      set 1
                    ta
                  fi
                else
                  at _loopao206
                    reset
                  ta
                fi
              wend
              push _addofc206
              if
                at _addofa206
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX8_5
              #(begin macro)addof()
              sbm _addofb207
              sbm _addofa207 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc207
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao207
              while
                push _addofa207
                if
                  at _addofa207
                    dec
                  ta
                  at _addofb207
                    inc
                  ta
                  push _addofb207
                  not
                  if
                    at _addofc207
                      set 1
                    ta
                  fi
                else
                  at _loopao207
                    reset
                  ta
                fi
              wend
              push _addofc207
              if
                at _addofa207
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX8_5
              add
              pop     _mulFPresultX8_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb15
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb15
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB8_5
              push    _mulvvvXabsNameA8_5
              sup
              if
                at _asupb15
                  set 1
                ta
              else
                push    _addvvXnameB8_5
                push    _mulvvvXabsNameA8_5
                diff
                if
                  at _asupb15
                    reset
                  ta
                else
                  push    _addvvXnameB8_4
                  push    _mulvvvXabsNameA8_4
                  sup
                  if
                    at _asupb15
                      set 1
                    ta
                  else
                    push    _addvvXnameB8_4
                    push    _mulvvvXabsNameA8_4
                    diff
                    if
                      at _asupb15
                        reset
                      ta
                    else
                      push    _addvvXnameB8_3
                      push    _mulvvvXabsNameA8_3
                      sup
                      if
                        at _asupb15
                          set 1
                        ta
                      else
                        push    _addvvXnameB8_3
                        push    _mulvvvXabsNameA8_3
                        diff
                        if
                          at _asupb15
                            reset
                          ta
                        else
                          push    _addvvXnameB8_2
                          push    _mulvvvXabsNameA8_2
                          sup
                          if
                            at _asupb15
                              set 1
                            ta
                          else
                            push    _addvvXnameB8_2
                            push    _mulvvvXabsNameA8_2
                            diff
                            if
                              at _asupb15
                                reset
                              ta
                            else
                              push    _addvvXnameB8_1
                              push    _mulvvvXabsNameA8_1
                              sup
                              if
                                at _asupb15
                                  set 1
                                ta
                              else
                                push    _addvvXnameB8_1
                                push    _mulvvvXabsNameA8_1
                                diff
                                if
                                  at _asupb15
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB8_0
                                  push    _mulvvvXabsNameA8_0
                                  sup
                                  if
                                    at _asupb15
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB8_0
                                    push    _mulvvvXabsNameA8_0
                                    diff
                                    if
                                      at _asupb15
                                        reset
                                      ta
                                    else
                                      at _aequb15
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb15
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB8_s
                pop     _mulFPresultX8_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry15
                push    _addvvXnameB8_0
                push    _mulvvvXabsNameA8_0
                #(begin macro)subof()
                sbm _subofb253
                sbm _subofa253 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc253
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso253
                while
                  push _subofb253
                  if
                    at _subofb253
                      dec
                    ta
                    at _subofa253
                      dec
                    ta
                    push _subofa253
                    inc
                    not
                    if
                      at _subofc253
                        set 1
                      ta
                    fi
                  else
                    at _loopso253
                      reset
                    ta
                  fi
                wend
                push _subofc253
                if
                  at _subofb253
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb254
                sbm _subofa254 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc254
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso254
                while
                  push _subofb254
                  if
                    at _subofb254
                      dec
                    ta
                    at _subofa254
                      dec
                    ta
                    push _subofa254
                    inc
                    not
                    if
                      at _subofc254
                        set 1
                      ta
                    fi
                  else
                    at _loopso254
                      reset
                    ta
                  fi
                wend
                push _subofc254
                if
                  at _subofb254
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_0
                add
                pop     _addvvvXCarry15
                push    _addvvXnameB8_1
                push    _mulvvvXabsNameA8_1
                #(begin macro)subof()
                sbm _subofb255
                sbm _subofa255 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc255
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso255
                while
                  push _subofb255
                  if
                    at _subofb255
                      dec
                    ta
                    at _subofa255
                      dec
                    ta
                    push _subofa255
                    inc
                    not
                    if
                      at _subofc255
                        set 1
                      ta
                    fi
                  else
                    at _loopso255
                      reset
                    ta
                  fi
                wend
                push _subofc255
                if
                  at _subofb255
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb256
                sbm _subofa256 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc256
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso256
                while
                  push _subofb256
                  if
                    at _subofb256
                      dec
                    ta
                    at _subofa256
                      dec
                    ta
                    push _subofa256
                    inc
                    not
                    if
                      at _subofc256
                        set 1
                      ta
                    fi
                  else
                    at _loopso256
                      reset
                    ta
                  fi
                wend
                push _subofc256
                if
                  at _subofb256
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_1
                add
                pop     _addvvvXCarry15
                push    _addvvXnameB8_2
                push    _mulvvvXabsNameA8_2
                #(begin macro)subof()
                sbm _subofb257
                sbm _subofa257 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc257
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso257
                while
                  push _subofb257
                  if
                    at _subofb257
                      dec
                    ta
                    at _subofa257
                      dec
                    ta
                    push _subofa257
                    inc
                    not
                    if
                      at _subofc257
                        set 1
                      ta
                    fi
                  else
                    at _loopso257
                      reset
                    ta
                  fi
                wend
                push _subofc257
                if
                  at _subofb257
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb258
                sbm _subofa258 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc258
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso258
                while
                  push _subofb258
                  if
                    at _subofb258
                      dec
                    ta
                    at _subofa258
                      dec
                    ta
                    push _subofa258
                    inc
                    not
                    if
                      at _subofc258
                        set 1
                      ta
                    fi
                  else
                    at _loopso258
                      reset
                    ta
                  fi
                wend
                push _subofc258
                if
                  at _subofb258
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_2
                add
                pop     _addvvvXCarry15
                push    _addvvXnameB8_3
                push    _mulvvvXabsNameA8_3
                #(begin macro)subof()
                sbm _subofb259
                sbm _subofa259 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc259
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso259
                while
                  push _subofb259
                  if
                    at _subofb259
                      dec
                    ta
                    at _subofa259
                      dec
                    ta
                    push _subofa259
                    inc
                    not
                    if
                      at _subofc259
                        set 1
                      ta
                    fi
                  else
                    at _loopso259
                      reset
                    ta
                  fi
                wend
                push _subofc259
                if
                  at _subofb259
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb260
                sbm _subofa260 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc260
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso260
                while
                  push _subofb260
                  if
                    at _subofb260
                      dec
                    ta
                    at _subofa260
                      dec
                    ta
                    push _subofa260
                    inc
                    not
                    if
                      at _subofc260
                        set 1
                      ta
                    fi
                  else
                    at _loopso260
                      reset
                    ta
                  fi
                wend
                push _subofc260
                if
                  at _subofb260
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_3
                add
                pop     _addvvvXCarry15
                push    _addvvXnameB8_4
                push    _mulvvvXabsNameA8_4
                #(begin macro)subof()
                sbm _subofb261
                sbm _subofa261 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc261
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso261
                while
                  push _subofb261
                  if
                    at _subofb261
                      dec
                    ta
                    at _subofa261
                      dec
                    ta
                    push _subofa261
                    inc
                    not
                    if
                      at _subofc261
                        set 1
                      ta
                    fi
                  else
                    at _loopso261
                      reset
                    ta
                  fi
                wend
                push _subofc261
                if
                  at _subofb261
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb262
                sbm _subofa262 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc262
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso262
                while
                  push _subofb262
                  if
                    at _subofb262
                      dec
                    ta
                    at _subofa262
                      dec
                    ta
                    push _subofa262
                    inc
                    not
                    if
                      at _subofc262
                        set 1
                      ta
                    fi
                  else
                    at _loopso262
                      reset
                    ta
                  fi
                wend
                push _subofc262
                if
                  at _subofb262
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_4
                add
                pop     _addvvvXCarry15
                push    _addvvXnameB8_5
                push    _mulvvvXabsNameA8_5
                #(begin macro)subof()
                sbm _subofb263
                sbm _subofa263 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc263
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso263
                while
                  push _subofb263
                  if
                    at _subofb263
                      dec
                    ta
                    at _subofa263
                      dec
                    ta
                    push _subofa263
                    inc
                    not
                    if
                      at _subofc263
                        set 1
                      ta
                    fi
                  else
                    at _loopso263
                      reset
                    ta
                  fi
                wend
                push _subofc263
                if
                  at _subofb263
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry15
                #(begin macro)subof()
                sbm _subofb264
                sbm _subofa264 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc264
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso264
                while
                  push _subofb264
                  if
                    at _subofb264
                      dec
                    ta
                    at _subofa264
                      dec
                    ta
                    push _subofa264
                    inc
                    not
                    if
                      at _subofc264
                        set 1
                      ta
                    fi
                  else
                    at _loopso264
                      reset
                    ta
                  fi
                wend
                push _subofc264
                if
                  at _subofb264
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX8_5
                add
                pop     _addvvvXCarry15
                pop     _mulFPresultX8_c
              else # absB >= absA :
                push    _aequb15
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX8_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA8_s
                  pop     _mulFPresultX8_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_0
                  push    _addvvXnameB8_0
                  #(begin macro)subof()
                  sbm _subofb265
                  sbm _subofa265 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc265
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso265
                  while
                    push _subofb265
                    if
                      at _subofb265
                        dec
                      ta
                      at _subofa265
                        dec
                      ta
                      push _subofa265
                      inc
                      not
                      if
                        at _subofc265
                          set 1
                        ta
                      fi
                    else
                      at _loopso265
                        reset
                      ta
                    fi
                  wend
                  push _subofc265
                  if
                    at _subofb265
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb266
                  sbm _subofa266 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc266
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso266
                  while
                    push _subofb266
                    if
                      at _subofb266
                        dec
                      ta
                      at _subofa266
                        dec
                      ta
                      push _subofa266
                      inc
                      not
                      if
                        at _subofc266
                          set 1
                        ta
                      fi
                    else
                      at _loopso266
                        reset
                      ta
                    fi
                  wend
                  push _subofc266
                  if
                    at _subofb266
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_0
                  add
                  pop     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_1
                  push    _addvvXnameB8_1
                  #(begin macro)subof()
                  sbm _subofb267
                  sbm _subofa267 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc267
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso267
                  while
                    push _subofb267
                    if
                      at _subofb267
                        dec
                      ta
                      at _subofa267
                        dec
                      ta
                      push _subofa267
                      inc
                      not
                      if
                        at _subofc267
                          set 1
                        ta
                      fi
                    else
                      at _loopso267
                        reset
                      ta
                    fi
                  wend
                  push _subofc267
                  if
                    at _subofb267
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb268
                  sbm _subofa268 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc268
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso268
                  while
                    push _subofb268
                    if
                      at _subofb268
                        dec
                      ta
                      at _subofa268
                        dec
                      ta
                      push _subofa268
                      inc
                      not
                      if
                        at _subofc268
                          set 1
                        ta
                      fi
                    else
                      at _loopso268
                        reset
                      ta
                    fi
                  wend
                  push _subofc268
                  if
                    at _subofb268
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_1
                  add
                  pop     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_2
                  push    _addvvXnameB8_2
                  #(begin macro)subof()
                  sbm _subofb269
                  sbm _subofa269 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc269
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso269
                  while
                    push _subofb269
                    if
                      at _subofb269
                        dec
                      ta
                      at _subofa269
                        dec
                      ta
                      push _subofa269
                      inc
                      not
                      if
                        at _subofc269
                          set 1
                        ta
                      fi
                    else
                      at _loopso269
                        reset
                      ta
                    fi
                  wend
                  push _subofc269
                  if
                    at _subofb269
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb270
                  sbm _subofa270 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc270
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso270
                  while
                    push _subofb270
                    if
                      at _subofb270
                        dec
                      ta
                      at _subofa270
                        dec
                      ta
                      push _subofa270
                      inc
                      not
                      if
                        at _subofc270
                          set 1
                        ta
                      fi
                    else
                      at _loopso270
                        reset
                      ta
                    fi
                  wend
                  push _subofc270
                  if
                    at _subofb270
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_2
                  add
                  pop     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_3
                  push    _addvvXnameB8_3
                  #(begin macro)subof()
                  sbm _subofb271
                  sbm _subofa271 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc271
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso271
                  while
                    push _subofb271
                    if
                      at _subofb271
                        dec
                      ta
                      at _subofa271
                        dec
                      ta
                      push _subofa271
                      inc
                      not
                      if
                        at _subofc271
                          set 1
                        ta
                      fi
                    else
                      at _loopso271
                        reset
                      ta
                    fi
                  wend
                  push _subofc271
                  if
                    at _subofb271
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb272
                  sbm _subofa272 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc272
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso272
                  while
                    push _subofb272
                    if
                      at _subofb272
                        dec
                      ta
                      at _subofa272
                        dec
                      ta
                      push _subofa272
                      inc
                      not
                      if
                        at _subofc272
                          set 1
                        ta
                      fi
                    else
                      at _loopso272
                        reset
                      ta
                    fi
                  wend
                  push _subofc272
                  if
                    at _subofb272
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_3
                  add
                  pop     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_4
                  push    _addvvXnameB8_4
                  #(begin macro)subof()
                  sbm _subofb273
                  sbm _subofa273 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc273
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso273
                  while
                    push _subofb273
                    if
                      at _subofb273
                        dec
                      ta
                      at _subofa273
                        dec
                      ta
                      push _subofa273
                      inc
                      not
                      if
                        at _subofc273
                          set 1
                        ta
                      fi
                    else
                      at _loopso273
                        reset
                      ta
                    fi
                  wend
                  push _subofc273
                  if
                    at _subofb273
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb274
                  sbm _subofa274 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc274
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso274
                  while
                    push _subofb274
                    if
                      at _subofb274
                        dec
                      ta
                      at _subofa274
                        dec
                      ta
                      push _subofa274
                      inc
                      not
                      if
                        at _subofc274
                          set 1
                        ta
                      fi
                    else
                      at _loopso274
                        reset
                      ta
                    fi
                  wend
                  push _subofc274
                  if
                    at _subofb274
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_4
                  add
                  pop     _addvvvXCarry15
                  push    _mulvvvXabsNameA8_5
                  push    _addvvXnameB8_5
                  #(begin macro)subof()
                  sbm _subofb275
                  sbm _subofa275 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc275
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso275
                  while
                    push _subofb275
                    if
                      at _subofb275
                        dec
                      ta
                      at _subofa275
                        dec
                      ta
                      push _subofa275
                      inc
                      not
                      if
                        at _subofc275
                          set 1
                        ta
                      fi
                    else
                      at _loopso275
                        reset
                      ta
                    fi
                  wend
                  push _subofc275
                  if
                    at _subofb275
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry15
                  #(begin macro)subof()
                  sbm _subofb276
                  sbm _subofa276 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc276
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso276
                  while
                    push _subofb276
                    if
                      at _subofb276
                        dec
                      ta
                      at _subofa276
                        dec
                      ta
                      push _subofa276
                      inc
                      not
                      if
                        at _subofc276
                          set 1
                        ta
                      fi
                    else
                      at _loopso276
                        reset
                      ta
                    fi
                  wend
                  push _subofc276
                  if
                    at _subofb276
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX8_5
                  add
                  pop     _addvvvXCarry15
                  pop     _mulFPresultX8_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB8_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB8_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB8_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB8_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB8_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB8_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB8_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB8_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB8_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB8_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB8_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB8_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB8_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB8_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB8_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB8_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB8_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB8_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB8_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB8_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB8_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB8_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB8_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB8_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB8_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB8_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB8_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop8
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA8
        push _mulvvvXsB8
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX8_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX8_c
        push    _mulFPresultX8_s
        push    _mulFPresultX8_5
        push    _mulFPresultX8_4
        push    _mulFPresultX8_3
        push    _mulFPresultX8_2
        push    _mulFPresultX8_1
        push    _mulFPresultX8_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack8_0    # 0 byte of _castFPinstack8
        var _castFPinstack8_1    # 1 byte of _castFPinstack8
        var _castFPinstack8_2    # 2 byte of _castFPinstack8
        var _castFPinstack8_3    # 3 byte of _castFPinstack8
        var _castFPinstack8_4    # 4 byte of _castFPinstack8
        var _castFPinstack8_5    # 5 byte of _castFPinstack8
        var _castFPinstack8_s    # Sign of _castFPinstack8
        var _castFPinstack8_c    # carry of _castFPinstack8
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack8_0    # 0 byte of _castFPoutstack8
        var _castFPoutstack8_1    # 1 byte of _castFPoutstack8
        var _castFPoutstack8_2    # 2 byte of _castFPoutstack8
        var _castFPoutstack8_s    # Sign of _castFPoutstack8
        var _castFPoutstack8_c    # carry of _castFPoutstack8
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack8_0
        pop     _castFPinstack8_1
        pop     _castFPinstack8_2
        pop     _castFPinstack8_3
        pop     _castFPinstack8_4
        pop     _castFPinstack8_5
        pop     _castFPinstack8_s
        pop     _castFPinstack8_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack8_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack8_s
        pop _castFPoutstack8_s
        # integer part
        push _castFPinstack8_4
        pop _castFPoutstack8_2
        # fract part
        push _castFPinstack8_3
        pop _castFPoutstack8_1
        push _castFPinstack8_2
        pop _castFPoutstack8_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack8_c
        push    _castFPoutstack8_s
        push    _castFPoutstack8_2
        push    _castFPoutstack8_1
        push    _castFPoutstack8_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA8_0
        pop     _mulFPnameA8_1
        pop     _mulFPnameA8_2
        pop     _mulFPnameA8_s
        pop     _mulFPnameA8_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)pushvX(FP,"newIm")
        push    newIm_c
        push    newIm_s
        push    newIm_2
        push    newIm_1
        push    newIm_0
        #(end macro)pushvX(FP,"newIm")
        #(begin macro)pushvX(FP,"newIm")
        push    newIm_c
        push    newIm_s
        push    newIm_2
        push    newIm_1
        push    newIm_0
        #(end macro)pushvX(FP,"newIm")
        #(begin macro)mulFP(FP_I,FP_P)
        #(begin macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameB9_0 - 0
        sbm _mulFPnameB9_1 - 1
        sbm _mulFPnameB9_2 - 2
        sbm _mulFPnameB9_s - 3
        sbm _mulFPnameB9_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameB" + _mulFP, 0)
        #(begin macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _mulFPnameA9_0 - 5
        sbm _mulFPnameA9_1 - 6
        sbm _mulFPnameA9_2 - 7
        sbm _mulFPnameA9_s - 8
        sbm _mulFPnameA9_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP, "_mulFPnameA" + _mulFP, 1)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameAX9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameAX9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameAX9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameAX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPnameBX9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPnameBX9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPnameBX9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPnameBX"  + _mulFP)
        #(begin macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulFPresultX9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulFPresultX9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulFPresultX9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(IP2, "_mulFPresultX" + _mulFP)
        
        # upcast nameA to nameAX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        push    _mulFPnameA9_c
        push    _mulFPnameA9_s
        push    _mulFPnameA9_2
        push    _mulFPnameA9_1
        push    _mulFPnameA9_0
        #(end macro)pushvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput17_0 - 0
        sbm _castXInput17_1 - 1
        sbm _castXInput17_2 - 2
        sbm _castXInput17_s - 3
        sbm _castXInput17_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput17_0    # 0 byte of _castXoutput17
        var _castXoutput17_1    # 1 byte of _castXoutput17
        var _castXoutput17_2    # 2 byte of _castXoutput17
        var _castXoutput17_3    # 3 byte of _castXoutput17
        var _castXoutput17_4    # 4 byte of _castXoutput17
        var _castXoutput17_5    # 5 byte of _castXoutput17
        var _castXoutput17_s    # Sign of _castXoutput17
        var _castXoutput17_c    # carry of _castXoutput17
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori17_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori17_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori17_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori17_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori17_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest17_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest17_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest17_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput17_c
        push    _castXInput17_s
        push    _castXInput17_2
        push    _castXInput17_1
        push    _castXInput17_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori17_0
        pop     _castXori17_1
        pop     _castXori17_2
        pop     _castXori17_s
        pop     _castXori17_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori17_s
        pop     _castXdest17_s  # keep sign
        push    _castXori17_0
        pop     _castXdest17_0
        push    _castXori17_1
        pop     _castXdest17_1
        push    _castXori17_2
        pop     _castXdest17_2
        push    0
        pop     _castXdest17_3
        push    0
        pop     _castXdest17_4
        push    0
        pop     _castXdest17_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest17_c
        push    _castXdest17_s
        push    _castXdest17_5
        push    _castXdest17_4
        push    _castXdest17_3
        push    _castXdest17_2
        push    _castXdest17_1
        push    _castXdest17_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput17_0
        pop     _castXoutput17_1
        pop     _castXoutput17_2
        pop     _castXoutput17_3
        pop     _castXoutput17_4
        pop     _castXoutput17_5
        pop     _castXoutput17_s
        pop     _castXoutput17_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput17_c
        push    _castXoutput17_s
        push    _castXoutput17_5
        push    _castXoutput17_4
        push    _castXoutput17_3
        push    _castXoutput17_2
        push    _castXoutput17_1
        push    _castXoutput17_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        pop     _mulFPnameAX9_0
        pop     _mulFPnameAX9_1
        pop     _mulFPnameAX9_2
        pop     _mulFPnameAX9_3
        pop     _mulFPnameAX9_4
        pop     _mulFPnameAX9_5
        pop     _mulFPnameAX9_s
        pop     _mulFPnameAX9_c
        #(end macro)popvX(IP2,"_mulFPnameAX"+_mulFP)
        
        # upcast nameB to nameBX (from I+P to (I+P) * 2)
        #(begin macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        push    _mulFPnameB9_c
        push    _mulFPnameB9_s
        push    _mulFPnameB9_2
        push    _mulFPnameB9_1
        push    _mulFPnameB9_0
        #(end macro)pushvX(IP,"_mulFPnameB"+_mulFP)
        #(begin macro)castX(IP,IP2)
        #(begin macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _castXInput18_0 - 0
        sbm _castXInput18_1 - 1
        sbm _castXInput18_2 - 2
        sbm _castXInput18_s - 3
        sbm _castXInput18_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X1,"_castXInput" + _castX, 0)
        #(begin macro)varX(X2,"_castXoutput" + _castX)
        var _castXoutput18_0    # 0 byte of _castXoutput18
        var _castXoutput18_1    # 1 byte of _castXoutput18
        var _castXoutput18_2    # 2 byte of _castXoutput18
        var _castXoutput18_3    # 3 byte of _castXoutput18
        var _castXoutput18_4    # 4 byte of _castXoutput18
        var _castXoutput18_5    # 5 byte of _castXoutput18
        var _castXoutput18_s    # Sign of _castXoutput18
        var _castXoutput18_c    # carry of _castXoutput18
        #(end macro)varX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXori18_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXori18_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori18_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori18_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXori18_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X1,"_castXori" + _castX)
        #(begin macro)lvarX(X2,"_castXdest" + _castX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _castXdest18_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _castXdest18_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _castXdest18_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X2,"_castXdest" + _castX)
        
        #(begin macro)pushvX(X1,"_castXInput"+_castX)
        push    _castXInput18_c
        push    _castXInput18_s
        push    _castXInput18_2
        push    _castXInput18_1
        push    _castXInput18_0
        #(end macro)pushvX(X1,"_castXInput"+_castX)
        #(begin macro)popvX(X1,"_castXori" + _castX)
        pop     _castXori18_0
        pop     _castXori18_1
        pop     _castXori18_2
        pop     _castXori18_s
        pop     _castXori18_c
        #(end macro)popvX(X1,"_castXori" + _castX)
        push    _castXori18_s
        pop     _castXdest18_s  # keep sign
        push    _castXori18_0
        pop     _castXdest18_0
        push    _castXori18_1
        pop     _castXdest18_1
        push    _castXori18_2
        pop     _castXdest18_2
        push    0
        pop     _castXdest18_3
        push    0
        pop     _castXdest18_4
        push    0
        pop     _castXdest18_5
        #(begin macro)pushvX(X2,"_castXdest" + _castX)
        push    _castXdest18_c
        push    _castXdest18_s
        push    _castXdest18_5
        push    _castXdest18_4
        push    _castXdest18_3
        push    _castXdest18_2
        push    _castXdest18_1
        push    _castXdest18_0
        #(end macro)pushvX(X2,"_castXdest" + _castX)
        #(begin macro)popvX(X2,"_castXoutput" + _castX)
        pop     _castXoutput18_0
        pop     _castXoutput18_1
        pop     _castXoutput18_2
        pop     _castXoutput18_3
        pop     _castXoutput18_4
        pop     _castXoutput18_5
        pop     _castXoutput18_s
        pop     _castXoutput18_c
        #(end macro)popvX(X2,"_castXoutput" + _castX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X1)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X1)
        #(begin macro)pushvX(X2,"_castXoutput" + _castX)
        push    _castXoutput18_c
        push    _castXoutput18_s
        push    _castXoutput18_5
        push    _castXoutput18_4
        push    _castXoutput18_3
        push    _castXoutput18_2
        push    _castXoutput18_1
        push    _castXoutput18_0
        #(end macro)pushvX(X2,"_castXoutput" + _castX)
        #(end macro)castX(IP,IP2)
        #(begin macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        pop     _mulFPnameBX9_0
        pop     _mulFPnameBX9_1
        pop     _mulFPnameBX9_2
        pop     _mulFPnameBX9_3
        pop     _mulFPnameBX9_4
        pop     _mulFPnameBX9_5
        pop     _mulFPnameBX9_s
        pop     _mulFPnameBX9_c
        #(end macro)popvX(IP2,"_mulFPnameBX"+_mulFP)
        
        #(begin macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameA9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameA9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameA9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)pushvX(X,nameA)
        push    _mulFPnameAX9_c
        push    _mulFPnameAX9_s
        push    _mulFPnameAX9_5
        push    _mulFPnameAX9_4
        push    _mulFPnameAX9_3
        push    _mulFPnameAX9_2
        push    _mulFPnameAX9_1
        push    _mulFPnameAX9_0
        #(end macro)pushvX(X,nameA)
        #(begin macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop     _mulvvvXabsNameA9_0
        pop     _mulvvvXabsNameA9_1
        pop     _mulvvvXabsNameA9_2
        pop     _mulvvvXabsNameA9_3
        pop     _mulvvvXabsNameA9_4
        pop     _mulvvvXabsNameA9_5
        pop     _mulvvvXabsNameA9_s
        pop     _mulvvvXabsNameA9_c
        #(end macro)popvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsA9
        #(end macro)lvar("_mulvvvXsA" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        push    _mulvvvXabsNameA9_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameA" + _mulvvvX)
        pop _mulvvvXsA9
        #(begin macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        push    0
        pop     _mulvvvXabsNameA9_s
        #(end macro)absvX(X,"_mulvvvXabsNameA" + _mulvvvX)   # absNameA = abs(nameA)
        
        #(begin macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _mulvvvXabsNameB9_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _mulvvvXabsNameB9_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_5
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_4
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_3
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _mulvvvXabsNameB9_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _mulFPnameBX9_c
        push    _mulFPnameBX9_s
        push    _mulFPnameBX9_5
        push    _mulFPnameBX9_4
        push    _mulFPnameBX9_3
        push    _mulFPnameBX9_2
        push    _mulFPnameBX9_1
        push    _mulFPnameBX9_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop     _mulvvvXabsNameB9_0
        pop     _mulvvvXabsNameB9_1
        pop     _mulvvvXabsNameB9_2
        pop     _mulvvvXabsNameB9_3
        pop     _mulvvvXabsNameB9_4
        pop     _mulvvvXabsNameB9_5
        pop     _mulvvvXabsNameB9_s
        pop     _mulvvvXabsNameB9_c
        #(end macro)popvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        #(begin macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        push 0
        sbm _mulvvvXsB9
        #(end macro)lvar("_mulvvvXsB" + _mulvvvX, 0)
        #(begin macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        push    _mulvvvXabsNameB9_s
        #(end macro)pushsvX(X,"_mulvvvXabsNameB" + _mulvvvX)
        pop _mulvvvXsB9
        #(begin macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        push    0
        pop     _mulvvvXabsNameB9_s
        #(end macro)absvX(X,"_mulvvvXabsNameB" + _mulvvvX)   # absNameB = abs(nameB)
        
        #(begin macro)resetvX(X,name)
        at _mulFPresultX9_0
          #(begin macro)resetX(X)
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf <
          bf [-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          bf >[-]
          #(end macro)resetX(X)
        ta
        #(end macro)resetvX(X,name)
        
        push    1
        sbm _mulvvvX_loop9
        while
          #(begin macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          push _mulvvvXabsNameB9_0
          bool
          push _mulvvvXabsNameB9_1
          bool
          push _mulvvvXabsNameB9_2
          bool
          push _mulvvvXabsNameB9_3
          bool
          push _mulvvvXabsNameB9_4
          bool
          push _mulvvvXabsNameB9_5
          bool
          or
          or
          or
          or
          or
          #(end macro)boolvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          if  # absNameB is not zero
            #(begin macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)lvar(name + "_c",0)
            push 0
            sbm _addvvXnameB9_c
            #(end macro)lvar(name + "_c",0)
            #(begin macro)lvar(name + "_s",0)
            push 0
            sbm _addvvXnameB9_s
            #(end macro)lvar(name + "_s",0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_5
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_4
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_3
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_2
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_1
            #(end macro)lvar(name + "_"+ xx1,0)
            #(begin macro)lvar(name + "_"+ xx1,0)
            push 0
            sbm _addvvXnameB9_0
            #(end macro)lvar(name + "_"+ xx1,0)
            #(end macro)lvarX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)pushvX(X,name)
            push    _mulFPresultX9_c
            push    _mulFPresultX9_s
            push    _mulFPresultX9_5
            push    _mulFPresultX9_4
            push    _mulFPresultX9_3
            push    _mulFPresultX9_2
            push    _mulFPresultX9_1
            push    _mulFPresultX9_0
            #(end macro)pushvX(X,name)
            #(begin macro)popvX(X,"_addvvXnameB"+_addvvX)
            pop     _addvvXnameB9_0
            pop     _addvvXnameB9_1
            pop     _addvvXnameB9_2
            pop     _addvvXnameB9_3
            pop     _addvvXnameB9_4
            pop     _addvvXnameB9_5
            pop     _addvvXnameB9_s
            pop     _addvvXnameB9_c
            #(end macro)popvX(X,"_addvvXnameB"+_addvvX)
            #(begin macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            push    _addvvXnameB9_s
            push    _mulvvvXabsNameA9_s
            or
            not
            push    _addvvXnameB9_s
            push    _mulvvvXabsNameA9_s
            and
            or
            if      # nameA and nameB are both positive or negative
              push    _addvvXnameB9_s
              pop     _mulFPresultX9_s    # name has same sign of nameA and nameB
              push    0
              push    _addvvXnameB9_0
              #(begin macro)addof()
              sbm _addofb208
              sbm _addofa208 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc208
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao208
              while
                push _addofa208
                if
                  at _addofa208
                    dec
                  ta
                  at _addofb208
                    inc
                  ta
                  push _addofb208
                  not
                  if
                    at _addofc208
                      set 1
                    ta
                  fi
                else
                  at _loopao208
                    reset
                  ta
                fi
              wend
              push _addofc208
              if
                at _addofa208
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_0
              push    _mulvvvXabsNameA9_0
              #(begin macro)addof()
              sbm _addofb209
              sbm _addofa209 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc209
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao209
              while
                push _addofa209
                if
                  at _addofa209
                    dec
                  ta
                  at _addofb209
                    inc
                  ta
                  push _addofb209
                  not
                  if
                    at _addofc209
                      set 1
                    ta
                  fi
                else
                  at _loopao209
                    reset
                  ta
                fi
              wend
              push _addofc209
              if
                at _addofa209
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_0
              #(begin macro)addof()
              sbm _addofb210
              sbm _addofa210 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc210
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao210
              while
                push _addofa210
                if
                  at _addofa210
                    dec
                  ta
                  at _addofb210
                    inc
                  ta
                  push _addofb210
                  not
                  if
                    at _addofc210
                      set 1
                    ta
                  fi
                else
                  at _loopao210
                    reset
                  ta
                fi
              wend
              push _addofc210
              if
                at _addofa210
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_0
              add
              push    _addvvXnameB9_1
              #(begin macro)addof()
              sbm _addofb211
              sbm _addofa211 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc211
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao211
              while
                push _addofa211
                if
                  at _addofa211
                    dec
                  ta
                  at _addofb211
                    inc
                  ta
                  push _addofb211
                  not
                  if
                    at _addofc211
                      set 1
                    ta
                  fi
                else
                  at _loopao211
                    reset
                  ta
                fi
              wend
              push _addofc211
              if
                at _addofa211
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_1
              push    _mulvvvXabsNameA9_1
              #(begin macro)addof()
              sbm _addofb212
              sbm _addofa212 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc212
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao212
              while
                push _addofa212
                if
                  at _addofa212
                    dec
                  ta
                  at _addofb212
                    inc
                  ta
                  push _addofb212
                  not
                  if
                    at _addofc212
                      set 1
                    ta
                  fi
                else
                  at _loopao212
                    reset
                  ta
                fi
              wend
              push _addofc212
              if
                at _addofa212
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_1
              #(begin macro)addof()
              sbm _addofb213
              sbm _addofa213 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc213
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao213
              while
                push _addofa213
                if
                  at _addofa213
                    dec
                  ta
                  at _addofb213
                    inc
                  ta
                  push _addofb213
                  not
                  if
                    at _addofc213
                      set 1
                    ta
                  fi
                else
                  at _loopao213
                    reset
                  ta
                fi
              wend
              push _addofc213
              if
                at _addofa213
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_1
              add
              push    _addvvXnameB9_2
              #(begin macro)addof()
              sbm _addofb214
              sbm _addofa214 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc214
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao214
              while
                push _addofa214
                if
                  at _addofa214
                    dec
                  ta
                  at _addofb214
                    inc
                  ta
                  push _addofb214
                  not
                  if
                    at _addofc214
                      set 1
                    ta
                  fi
                else
                  at _loopao214
                    reset
                  ta
                fi
              wend
              push _addofc214
              if
                at _addofa214
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_2
              push    _mulvvvXabsNameA9_2
              #(begin macro)addof()
              sbm _addofb215
              sbm _addofa215 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc215
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao215
              while
                push _addofa215
                if
                  at _addofa215
                    dec
                  ta
                  at _addofb215
                    inc
                  ta
                  push _addofb215
                  not
                  if
                    at _addofc215
                      set 1
                    ta
                  fi
                else
                  at _loopao215
                    reset
                  ta
                fi
              wend
              push _addofc215
              if
                at _addofa215
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_2
              #(begin macro)addof()
              sbm _addofb216
              sbm _addofa216 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc216
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao216
              while
                push _addofa216
                if
                  at _addofa216
                    dec
                  ta
                  at _addofb216
                    inc
                  ta
                  push _addofb216
                  not
                  if
                    at _addofc216
                      set 1
                    ta
                  fi
                else
                  at _loopao216
                    reset
                  ta
                fi
              wend
              push _addofc216
              if
                at _addofa216
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_2
              add
              push    _addvvXnameB9_3
              #(begin macro)addof()
              sbm _addofb217
              sbm _addofa217 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc217
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao217
              while
                push _addofa217
                if
                  at _addofa217
                    dec
                  ta
                  at _addofb217
                    inc
                  ta
                  push _addofb217
                  not
                  if
                    at _addofc217
                      set 1
                    ta
                  fi
                else
                  at _loopao217
                    reset
                  ta
                fi
              wend
              push _addofc217
              if
                at _addofa217
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_3
              push    _mulvvvXabsNameA9_3
              #(begin macro)addof()
              sbm _addofb218
              sbm _addofa218 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc218
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao218
              while
                push _addofa218
                if
                  at _addofa218
                    dec
                  ta
                  at _addofb218
                    inc
                  ta
                  push _addofb218
                  not
                  if
                    at _addofc218
                      set 1
                    ta
                  fi
                else
                  at _loopao218
                    reset
                  ta
                fi
              wend
              push _addofc218
              if
                at _addofa218
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_3
              #(begin macro)addof()
              sbm _addofb219
              sbm _addofa219 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc219
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao219
              while
                push _addofa219
                if
                  at _addofa219
                    dec
                  ta
                  at _addofb219
                    inc
                  ta
                  push _addofb219
                  not
                  if
                    at _addofc219
                      set 1
                    ta
                  fi
                else
                  at _loopao219
                    reset
                  ta
                fi
              wend
              push _addofc219
              if
                at _addofa219
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_3
              add
              push    _addvvXnameB9_4
              #(begin macro)addof()
              sbm _addofb220
              sbm _addofa220 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc220
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao220
              while
                push _addofa220
                if
                  at _addofa220
                    dec
                  ta
                  at _addofb220
                    inc
                  ta
                  push _addofb220
                  not
                  if
                    at _addofc220
                      set 1
                    ta
                  fi
                else
                  at _loopao220
                    reset
                  ta
                fi
              wend
              push _addofc220
              if
                at _addofa220
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_4
              push    _mulvvvXabsNameA9_4
              #(begin macro)addof()
              sbm _addofb221
              sbm _addofa221 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc221
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao221
              while
                push _addofa221
                if
                  at _addofa221
                    dec
                  ta
                  at _addofb221
                    inc
                  ta
                  push _addofb221
                  not
                  if
                    at _addofc221
                      set 1
                    ta
                  fi
                else
                  at _loopao221
                    reset
                  ta
                fi
              wend
              push _addofc221
              if
                at _addofa221
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_4
              #(begin macro)addof()
              sbm _addofb222
              sbm _addofa222 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc222
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao222
              while
                push _addofa222
                if
                  at _addofa222
                    dec
                  ta
                  at _addofb222
                    inc
                  ta
                  push _addofb222
                  not
                  if
                    at _addofc222
                      set 1
                    ta
                  fi
                else
                  at _loopao222
                    reset
                  ta
                fi
              wend
              push _addofc222
              if
                at _addofa222
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_4
              add
              push    _addvvXnameB9_5
              #(begin macro)addof()
              sbm _addofb223
              sbm _addofa223 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc223
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao223
              while
                push _addofa223
                if
                  at _addofa223
                    dec
                  ta
                  at _addofb223
                    inc
                  ta
                  push _addofb223
                  not
                  if
                    at _addofc223
                      set 1
                    ta
                  fi
                else
                  at _loopao223
                    reset
                  ta
                fi
              wend
              push _addofc223
              if
                at _addofa223
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_5
              push    _mulvvvXabsNameA9_5
              #(begin macro)addof()
              sbm _addofb224
              sbm _addofa224 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc224
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao224
              while
                push _addofa224
                if
                  at _addofa224
                    dec
                  ta
                  at _addofb224
                    inc
                  ta
                  push _addofb224
                  not
                  if
                    at _addofc224
                      set 1
                    ta
                  fi
                else
                  at _loopao224
                    reset
                  ta
                fi
              wend
              push _addofc224
              if
                at _addofa224
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              push    _mulFPresultX9_5
              #(begin macro)addof()
              sbm _addofb225
              sbm _addofa225 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_addofc"+_addof ,0)
              push 0
              sbm _addofc225
              #(end macro)lvar("_addofc"+_addof ,0)
              push 1
              sbm _loopao225
              while
                push _addofa225
                if
                  at _addofa225
                    dec
                  ta
                  at _addofb225
                    inc
                  ta
                  push _addofb225
                  not
                  if
                    at _addofc225
                      set 1
                    ta
                  fi
                else
                  at _loopao225
                    reset
                  ta
                fi
              wend
              push _addofc225
              if
                at _addofa225
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              #(end macro)addof()
              pop     _mulFPresultX9_5
              add
              pop     _mulFPresultX9_c
            else  # nameA has a different sign of nameB
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              push 0
              sbm _asupb16
              #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
              #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push 0
              sbm _aequb16
              #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
              push    _addvvXnameB9_5
              push    _mulvvvXabsNameA9_5
              sup
              if
                at _asupb16
                  set 1
                ta
              else
                push    _addvvXnameB9_5
                push    _mulvvvXabsNameA9_5
                diff
                if
                  at _asupb16
                    reset
                  ta
                else
                  push    _addvvXnameB9_4
                  push    _mulvvvXabsNameA9_4
                  sup
                  if
                    at _asupb16
                      set 1
                    ta
                  else
                    push    _addvvXnameB9_4
                    push    _mulvvvXabsNameA9_4
                    diff
                    if
                      at _asupb16
                        reset
                      ta
                    else
                      push    _addvvXnameB9_3
                      push    _mulvvvXabsNameA9_3
                      sup
                      if
                        at _asupb16
                          set 1
                        ta
                      else
                        push    _addvvXnameB9_3
                        push    _mulvvvXabsNameA9_3
                        diff
                        if
                          at _asupb16
                            reset
                          ta
                        else
                          push    _addvvXnameB9_2
                          push    _mulvvvXabsNameA9_2
                          sup
                          if
                            at _asupb16
                              set 1
                            ta
                          else
                            push    _addvvXnameB9_2
                            push    _mulvvvXabsNameA9_2
                            diff
                            if
                              at _asupb16
                                reset
                              ta
                            else
                              push    _addvvXnameB9_1
                              push    _mulvvvXabsNameA9_1
                              sup
                              if
                                at _asupb16
                                  set 1
                                ta
                              else
                                push    _addvvXnameB9_1
                                push    _mulvvvXabsNameA9_1
                                diff
                                if
                                  at _asupb16
                                    reset
                                  ta
                                else
                                  push    _addvvXnameB9_0
                                  push    _mulvvvXabsNameA9_0
                                  sup
                                  if
                                    at _asupb16
                                      set 1
                                    ta
                                  else
                                    push    _addvvXnameB9_0
                                    push    _mulvvvXabsNameA9_0
                                    diff
                                    if
                                      at _asupb16
                                        reset
                                      ta
                                    else
                                      at _aequb16
                                        set 1
                                      ta
                                    fi
                                  fi
                                fi
                              fi
                            fi
                          fi
                        fi
                      fi
                    fi
                  fi
                fi
              fi
              push _asupb16
              if  # absA > absB : do  absA-absB with sign of A
                # print("absA > absB\n")
                push    _addvvXnameB9_s
                pop     _mulFPresultX9_s    # name has same sign of nameA
                
                push    0
                sbm     _addvvvXCarry16
                push    _addvvXnameB9_0
                push    _mulvvvXabsNameA9_0
                #(begin macro)subof()
                sbm _subofb277
                sbm _subofa277 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc277
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso277
                while
                  push _subofb277
                  if
                    at _subofb277
                      dec
                    ta
                    at _subofa277
                      dec
                    ta
                    push _subofa277
                    inc
                    not
                    if
                      at _subofc277
                        set 1
                      ta
                    fi
                  else
                    at _loopso277
                      reset
                    ta
                  fi
                wend
                push _subofc277
                if
                  at _subofb277
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb278
                sbm _subofa278 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc278
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso278
                while
                  push _subofb278
                  if
                    at _subofb278
                      dec
                    ta
                    at _subofa278
                      dec
                    ta
                    push _subofa278
                    inc
                    not
                    if
                      at _subofc278
                        set 1
                      ta
                    fi
                  else
                    at _loopso278
                      reset
                    ta
                  fi
                wend
                push _subofc278
                if
                  at _subofb278
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_0
                add
                pop     _addvvvXCarry16
                push    _addvvXnameB9_1
                push    _mulvvvXabsNameA9_1
                #(begin macro)subof()
                sbm _subofb279
                sbm _subofa279 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc279
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso279
                while
                  push _subofb279
                  if
                    at _subofb279
                      dec
                    ta
                    at _subofa279
                      dec
                    ta
                    push _subofa279
                    inc
                    not
                    if
                      at _subofc279
                        set 1
                      ta
                    fi
                  else
                    at _loopso279
                      reset
                    ta
                  fi
                wend
                push _subofc279
                if
                  at _subofb279
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb280
                sbm _subofa280 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc280
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso280
                while
                  push _subofb280
                  if
                    at _subofb280
                      dec
                    ta
                    at _subofa280
                      dec
                    ta
                    push _subofa280
                    inc
                    not
                    if
                      at _subofc280
                        set 1
                      ta
                    fi
                  else
                    at _loopso280
                      reset
                    ta
                  fi
                wend
                push _subofc280
                if
                  at _subofb280
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_1
                add
                pop     _addvvvXCarry16
                push    _addvvXnameB9_2
                push    _mulvvvXabsNameA9_2
                #(begin macro)subof()
                sbm _subofb281
                sbm _subofa281 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc281
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso281
                while
                  push _subofb281
                  if
                    at _subofb281
                      dec
                    ta
                    at _subofa281
                      dec
                    ta
                    push _subofa281
                    inc
                    not
                    if
                      at _subofc281
                        set 1
                      ta
                    fi
                  else
                    at _loopso281
                      reset
                    ta
                  fi
                wend
                push _subofc281
                if
                  at _subofb281
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb282
                sbm _subofa282 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc282
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso282
                while
                  push _subofb282
                  if
                    at _subofb282
                      dec
                    ta
                    at _subofa282
                      dec
                    ta
                    push _subofa282
                    inc
                    not
                    if
                      at _subofc282
                        set 1
                      ta
                    fi
                  else
                    at _loopso282
                      reset
                    ta
                  fi
                wend
                push _subofc282
                if
                  at _subofb282
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_2
                add
                pop     _addvvvXCarry16
                push    _addvvXnameB9_3
                push    _mulvvvXabsNameA9_3
                #(begin macro)subof()
                sbm _subofb283
                sbm _subofa283 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc283
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso283
                while
                  push _subofb283
                  if
                    at _subofb283
                      dec
                    ta
                    at _subofa283
                      dec
                    ta
                    push _subofa283
                    inc
                    not
                    if
                      at _subofc283
                        set 1
                      ta
                    fi
                  else
                    at _loopso283
                      reset
                    ta
                  fi
                wend
                push _subofc283
                if
                  at _subofb283
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb284
                sbm _subofa284 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc284
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso284
                while
                  push _subofb284
                  if
                    at _subofb284
                      dec
                    ta
                    at _subofa284
                      dec
                    ta
                    push _subofa284
                    inc
                    not
                    if
                      at _subofc284
                        set 1
                      ta
                    fi
                  else
                    at _loopso284
                      reset
                    ta
                  fi
                wend
                push _subofc284
                if
                  at _subofb284
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_3
                add
                pop     _addvvvXCarry16
                push    _addvvXnameB9_4
                push    _mulvvvXabsNameA9_4
                #(begin macro)subof()
                sbm _subofb285
                sbm _subofa285 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc285
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso285
                while
                  push _subofb285
                  if
                    at _subofb285
                      dec
                    ta
                    at _subofa285
                      dec
                    ta
                    push _subofa285
                    inc
                    not
                    if
                      at _subofc285
                        set 1
                      ta
                    fi
                  else
                    at _loopso285
                      reset
                    ta
                  fi
                wend
                push _subofc285
                if
                  at _subofb285
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb286
                sbm _subofa286 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc286
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso286
                while
                  push _subofb286
                  if
                    at _subofb286
                      dec
                    ta
                    at _subofa286
                      dec
                    ta
                    push _subofa286
                    inc
                    not
                    if
                      at _subofc286
                        set 1
                      ta
                    fi
                  else
                    at _loopso286
                      reset
                    ta
                  fi
                wend
                push _subofc286
                if
                  at _subofb286
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_4
                add
                pop     _addvvvXCarry16
                push    _addvvXnameB9_5
                push    _mulvvvXabsNameA9_5
                #(begin macro)subof()
                sbm _subofb287
                sbm _subofa287 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc287
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso287
                while
                  push _subofb287
                  if
                    at _subofb287
                      dec
                    ta
                    at _subofa287
                      dec
                    ta
                    push _subofa287
                    inc
                    not
                    if
                      at _subofc287
                        set 1
                      ta
                    fi
                  else
                    at _loopso287
                      reset
                    ta
                  fi
                wend
                push _subofc287
                if
                  at _subofb287
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                push    _addvvvXCarry16
                #(begin macro)subof()
                sbm _subofb288
                sbm _subofa288 - 1
                #(begin macro)scope_begin()
                #(end macro)scope_begin()
                #(begin macro)lvar("_subofc"+_subof ,0)
                push 0
                sbm _subofc288
                #(end macro)lvar("_subofc"+_subof ,0)
                push 1
                sbm _loopso288
                while
                  push _subofb288
                  if
                    at _subofb288
                      dec
                    ta
                    at _subofa288
                      dec
                    ta
                    push _subofa288
                    inc
                    not
                    if
                      at _subofc288
                        set 1
                      ta
                    fi
                  else
                    at _loopso288
                      reset
                    ta
                  fi
                wend
                push _subofc288
                if
                  at _subofb288
                    set 1
                  ta
                fi
                #(begin macro)scope_end()
                drop
                #(end macro)scope_end()
                swap
                #(end macro)subof()
                pop     _mulFPresultX9_5
                add
                pop     _addvvvXCarry16
                pop     _mulFPresultX9_c
              else # absB >= absA :
                push    _aequb16
                if # absA == absB , then name =0 (opposite sign then sum is zero)
                  #print("absA == absB\n")
                  #(begin macro)setvX(X,name,0)
                  at _mulFPresultX9_0
                    #(begin macro)setX(X,immValue)
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    bf <
                    reset
                    bf  >
                    set 0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    bf >
                    set    0
                    #(end macro)setX(X,immValue)
                  ta
                  #(end macro)setvX(X,name,0)
                else # absA < absB : do   absB-absA with sign of B
                  #print("absA < absB\n")
                  push    _mulvvvXabsNameA9_s
                  pop     _mulFPresultX9_s    # name has same sign of nameB
                  
                  push    0
                  sbm     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_0
                  push    _addvvXnameB9_0
                  #(begin macro)subof()
                  sbm _subofb289
                  sbm _subofa289 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc289
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso289
                  while
                    push _subofb289
                    if
                      at _subofb289
                        dec
                      ta
                      at _subofa289
                        dec
                      ta
                      push _subofa289
                      inc
                      not
                      if
                        at _subofc289
                          set 1
                        ta
                      fi
                    else
                      at _loopso289
                        reset
                      ta
                    fi
                  wend
                  push _subofc289
                  if
                    at _subofb289
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb290
                  sbm _subofa290 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc290
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso290
                  while
                    push _subofb290
                    if
                      at _subofb290
                        dec
                      ta
                      at _subofa290
                        dec
                      ta
                      push _subofa290
                      inc
                      not
                      if
                        at _subofc290
                          set 1
                        ta
                      fi
                    else
                      at _loopso290
                        reset
                      ta
                    fi
                  wend
                  push _subofc290
                  if
                    at _subofb290
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_0
                  add
                  pop     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_1
                  push    _addvvXnameB9_1
                  #(begin macro)subof()
                  sbm _subofb291
                  sbm _subofa291 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc291
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso291
                  while
                    push _subofb291
                    if
                      at _subofb291
                        dec
                      ta
                      at _subofa291
                        dec
                      ta
                      push _subofa291
                      inc
                      not
                      if
                        at _subofc291
                          set 1
                        ta
                      fi
                    else
                      at _loopso291
                        reset
                      ta
                    fi
                  wend
                  push _subofc291
                  if
                    at _subofb291
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb292
                  sbm _subofa292 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc292
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso292
                  while
                    push _subofb292
                    if
                      at _subofb292
                        dec
                      ta
                      at _subofa292
                        dec
                      ta
                      push _subofa292
                      inc
                      not
                      if
                        at _subofc292
                          set 1
                        ta
                      fi
                    else
                      at _loopso292
                        reset
                      ta
                    fi
                  wend
                  push _subofc292
                  if
                    at _subofb292
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_1
                  add
                  pop     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_2
                  push    _addvvXnameB9_2
                  #(begin macro)subof()
                  sbm _subofb293
                  sbm _subofa293 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc293
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso293
                  while
                    push _subofb293
                    if
                      at _subofb293
                        dec
                      ta
                      at _subofa293
                        dec
                      ta
                      push _subofa293
                      inc
                      not
                      if
                        at _subofc293
                          set 1
                        ta
                      fi
                    else
                      at _loopso293
                        reset
                      ta
                    fi
                  wend
                  push _subofc293
                  if
                    at _subofb293
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb294
                  sbm _subofa294 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc294
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso294
                  while
                    push _subofb294
                    if
                      at _subofb294
                        dec
                      ta
                      at _subofa294
                        dec
                      ta
                      push _subofa294
                      inc
                      not
                      if
                        at _subofc294
                          set 1
                        ta
                      fi
                    else
                      at _loopso294
                        reset
                      ta
                    fi
                  wend
                  push _subofc294
                  if
                    at _subofb294
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_2
                  add
                  pop     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_3
                  push    _addvvXnameB9_3
                  #(begin macro)subof()
                  sbm _subofb295
                  sbm _subofa295 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc295
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso295
                  while
                    push _subofb295
                    if
                      at _subofb295
                        dec
                      ta
                      at _subofa295
                        dec
                      ta
                      push _subofa295
                      inc
                      not
                      if
                        at _subofc295
                          set 1
                        ta
                      fi
                    else
                      at _loopso295
                        reset
                      ta
                    fi
                  wend
                  push _subofc295
                  if
                    at _subofb295
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb296
                  sbm _subofa296 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc296
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso296
                  while
                    push _subofb296
                    if
                      at _subofb296
                        dec
                      ta
                      at _subofa296
                        dec
                      ta
                      push _subofa296
                      inc
                      not
                      if
                        at _subofc296
                          set 1
                        ta
                      fi
                    else
                      at _loopso296
                        reset
                      ta
                    fi
                  wend
                  push _subofc296
                  if
                    at _subofb296
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_3
                  add
                  pop     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_4
                  push    _addvvXnameB9_4
                  #(begin macro)subof()
                  sbm _subofb297
                  sbm _subofa297 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc297
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso297
                  while
                    push _subofb297
                    if
                      at _subofb297
                        dec
                      ta
                      at _subofa297
                        dec
                      ta
                      push _subofa297
                      inc
                      not
                      if
                        at _subofc297
                          set 1
                        ta
                      fi
                    else
                      at _loopso297
                        reset
                      ta
                    fi
                  wend
                  push _subofc297
                  if
                    at _subofb297
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb298
                  sbm _subofa298 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc298
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso298
                  while
                    push _subofb298
                    if
                      at _subofb298
                        dec
                      ta
                      at _subofa298
                        dec
                      ta
                      push _subofa298
                      inc
                      not
                      if
                        at _subofc298
                          set 1
                        ta
                      fi
                    else
                      at _loopso298
                        reset
                      ta
                    fi
                  wend
                  push _subofc298
                  if
                    at _subofb298
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_4
                  add
                  pop     _addvvvXCarry16
                  push    _mulvvvXabsNameA9_5
                  push    _addvvXnameB9_5
                  #(begin macro)subof()
                  sbm _subofb299
                  sbm _subofa299 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc299
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso299
                  while
                    push _subofb299
                    if
                      at _subofb299
                        dec
                      ta
                      at _subofa299
                        dec
                      ta
                      push _subofa299
                      inc
                      not
                      if
                        at _subofc299
                          set 1
                        ta
                      fi
                    else
                      at _loopso299
                        reset
                      ta
                    fi
                  wend
                  push _subofc299
                  if
                    at _subofb299
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  push    _addvvvXCarry16
                  #(begin macro)subof()
                  sbm _subofb300
                  sbm _subofa300 - 1
                  #(begin macro)scope_begin()
                  #(end macro)scope_begin()
                  #(begin macro)lvar("_subofc"+_subof ,0)
                  push 0
                  sbm _subofc300
                  #(end macro)lvar("_subofc"+_subof ,0)
                  push 1
                  sbm _loopso300
                  while
                    push _subofb300
                    if
                      at _subofb300
                        dec
                      ta
                      at _subofa300
                        dec
                      ta
                      push _subofa300
                      inc
                      not
                      if
                        at _subofc300
                          set 1
                        ta
                      fi
                    else
                      at _loopso300
                        reset
                      ta
                    fi
                  wend
                  push _subofc300
                  if
                    at _subofb300
                      set 1
                    ta
                  fi
                  #(begin macro)scope_end()
                  drop
                  #(end macro)scope_end()
                  swap
                  #(end macro)subof()
                  pop     _mulFPresultX9_5
                  add
                  pop     _addvvvXCarry16
                  pop     _mulFPresultX9_c
                fi
              fi
              #(begin macro)scope_end()
              drop
              drop
              #(end macro)scope_end()
            fi
            #(end macro)addvvvX(X,name, "_addvvXnameB"+_addvvX, nameA)
            #(begin macro)scope_end()
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            #(end macro)scope_end()
            #(end macro)addvvX(X,name,"_mulvvvXabsNameA" + _mulvvvX)
            #(begin macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
            #(begin macro)if_equal(name +"_s",1)  # negative number
            push _mulvvvXabsNameB9_s
            push 1
            equal
            if
              #(end macro)if_equal(name +"_s",1)  # negative number
              #(begin macro)at_inc(name + "_" + xx)
              #(begin macro)at_1("inc",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB9_0
                inc 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("inc",a)
              #(end macro)at_inc(name + "_" + xx)
              #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
              push _mulvvvXabsNameB9_0
              push 0
              equal
              if
                #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                #(begin macro)at_inc(name + "_" + xx)
                #(begin macro)at_1("inc",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB9_1
                  inc 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("inc",a)
                #(end macro)at_inc(name + "_" + xx)
                #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                push _mulvvvXabsNameB9_1
                push 0
                equal
                if
                  #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  #(begin macro)at_inc(name + "_" + xx)
                  #(begin macro)at_1("inc",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB9_2
                    inc 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("inc",a)
                  #(end macro)at_inc(name + "_" + xx)
                  #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                  push _mulvvvXabsNameB9_2
                  push 0
                  equal
                  if
                    #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    #(begin macro)at_inc(name + "_" + xx)
                    #(begin macro)at_1("inc",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB9_3
                      inc 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("inc",a)
                    #(end macro)at_inc(name + "_" + xx)
                    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                    push _mulvvvXabsNameB9_3
                    push 0
                    equal
                    if
                      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      #(begin macro)at_inc(name + "_" + xx)
                      #(begin macro)at_1("inc",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB9_4
                        inc 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("inc",a)
                      #(end macro)at_inc(name + "_" + xx)
                      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                      push _mulvvvXabsNameB9_4
                      push 0
                      equal
                      if
                        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        #(begin macro)at_inc(name + "_" + xx)
                        #(begin macro)at_1("inc",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB9_5
                          inc 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("inc",a)
                        #(end macro)at_inc(name + "_" + xx)
                        #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                        push _mulvvvXabsNameB9_5
                        push 0
                        equal
                        if
                          #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
                          #(begin macro)setcvX(X, name) ## set carry (overflow)
                          #(begin macro)at_set(name+"_c",1)
                          #(begin macro)at_2("set",a,b)
                          at _mulvvvXabsNameB9_c
                            set 1
                          ta
                          #(end macro)at_2("set",a,b)
                          #(end macro)at_set(name+"_c",1)
                          #(end macro)setcvX(X, name) ## set carry (overflow)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            else    # positive number
              #(begin macro)at_dec(name + "_" + xx)
              #(begin macro)at_1("dec",a)
              #(begin macro)at_2(ope,a,"")
              at _mulvvvXabsNameB9_0
                dec 
              ta
              #(end macro)at_2(ope,a,"")
              #(end macro)at_1("dec",a)
              #(end macro)at_dec(name + "_" + xx)
              #(begin macro)if_equal(name +"_" + xx,255) # reduced
              push _mulvvvXabsNameB9_0
              push 255
              equal
              if
                #(end macro)if_equal(name +"_" + xx,255) # reduced
                #(begin macro)at_dec(name + "_" + xx)
                #(begin macro)at_1("dec",a)
                #(begin macro)at_2(ope,a,"")
                at _mulvvvXabsNameB9_1
                  dec 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("dec",a)
                #(end macro)at_dec(name + "_" + xx)
                #(begin macro)if_equal(name +"_" + xx,255) # reduced
                push _mulvvvXabsNameB9_1
                push 255
                equal
                if
                  #(end macro)if_equal(name +"_" + xx,255) # reduced
                  #(begin macro)at_dec(name + "_" + xx)
                  #(begin macro)at_1("dec",a)
                  #(begin macro)at_2(ope,a,"")
                  at _mulvvvXabsNameB9_2
                    dec 
                  ta
                  #(end macro)at_2(ope,a,"")
                  #(end macro)at_1("dec",a)
                  #(end macro)at_dec(name + "_" + xx)
                  #(begin macro)if_equal(name +"_" + xx,255) # reduced
                  push _mulvvvXabsNameB9_2
                  push 255
                  equal
                  if
                    #(end macro)if_equal(name +"_" + xx,255) # reduced
                    #(begin macro)at_dec(name + "_" + xx)
                    #(begin macro)at_1("dec",a)
                    #(begin macro)at_2(ope,a,"")
                    at _mulvvvXabsNameB9_3
                      dec 
                    ta
                    #(end macro)at_2(ope,a,"")
                    #(end macro)at_1("dec",a)
                    #(end macro)at_dec(name + "_" + xx)
                    #(begin macro)if_equal(name +"_" + xx,255) # reduced
                    push _mulvvvXabsNameB9_3
                    push 255
                    equal
                    if
                      #(end macro)if_equal(name +"_" + xx,255) # reduced
                      #(begin macro)at_dec(name + "_" + xx)
                      #(begin macro)at_1("dec",a)
                      #(begin macro)at_2(ope,a,"")
                      at _mulvvvXabsNameB9_4
                        dec 
                      ta
                      #(end macro)at_2(ope,a,"")
                      #(end macro)at_1("dec",a)
                      #(end macro)at_dec(name + "_" + xx)
                      #(begin macro)if_equal(name +"_" + xx,255) # reduced
                      push _mulvvvXabsNameB9_4
                      push 255
                      equal
                      if
                        #(end macro)if_equal(name +"_" + xx,255) # reduced
                        #(begin macro)at_dec(name + "_" + xx)
                        #(begin macro)at_1("dec",a)
                        #(begin macro)at_2(ope,a,"")
                        at _mulvvvXabsNameB9_5
                          dec 
                        ta
                        #(end macro)at_2(ope,a,"")
                        #(end macro)at_1("dec",a)
                        #(end macro)at_dec(name + "_" + xx)
                        #(begin macro)if_equal(name +"_" + xx,255) # reduced
                        push _mulvvvXabsNameB9_5
                        push 255
                        equal
                        if
                          #(end macro)if_equal(name +"_" + xx,255) # reduced
                          #(begin macro)setvX(X,name,-1)
                          at _mulvvvXabsNameB9_0
                            #(begin macro)setX(X,immValue)
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            bf <
                            reset
                            bf  >
                            set 1
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    0
                            bf >
                            set    1
                            #(end macro)setX(X,immValue)
                          ta
                          #(end macro)setvX(X,name,-1)
                        fi
                      fi
                    fi
                  fi
                fi
              fi
            fi
            #(end macro)decvX(X,"_mulvvvXabsNameB" + _mulvvvX)
          else
            #(begin macro)at_reset("_mulvvvX_loop"+_mulvvvX)
            #(begin macro)at_1("reset",a)
            #(begin macro)at_2(ope,a,"")
            at _mulvvvX_loop9
              reset 
            ta
            #(end macro)at_2(ope,a,"")
            #(end macro)at_1("reset",a)
            #(end macro)at_reset("_mulvvvX_loop"+_mulvvvX)
          fi
        wend
        # resolve sign
        push _mulvvvXsA9
        push _mulvvvXsB9
        diff    # if sign(nameA) <> sign(nameB) then name is negative
        if
          #(begin macro)at_set(name +"_s",1)
          #(begin macro)at_2("set",a,b)
          at _mulFPresultX9_s
            set 1
          ta
          #(end macro)at_2("set",a,b)
          #(end macro)at_set(name +"_s",1)
        fi
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)mulvvvX(IP2,"_mulFPresultX"+_mulFP, "_mulFPnameAX"+_mulFP, "_mulFPnameBX"+_mulFP)
        
        #(begin macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        push    _mulFPresultX9_c
        push    _mulFPresultX9_s
        push    _mulFPresultX9_5
        push    _mulFPresultX9_4
        push    _mulFPresultX9_3
        push    _mulFPresultX9_2
        push    _mulFPresultX9_1
        push    _mulFPresultX9_0
        #(end macro)pushvX(IP2,"_mulFPresultX"+_mulFP)
        #(begin macro)castFP(I+I,P+P, I,P)
        #(begin macro)varX(I1P1,"_castFPinstack" +_castFP)
        var _castFPinstack9_0    # 0 byte of _castFPinstack9
        var _castFPinstack9_1    # 1 byte of _castFPinstack9
        var _castFPinstack9_2    # 2 byte of _castFPinstack9
        var _castFPinstack9_3    # 3 byte of _castFPinstack9
        var _castFPinstack9_4    # 4 byte of _castFPinstack9
        var _castFPinstack9_5    # 5 byte of _castFPinstack9
        var _castFPinstack9_s    # Sign of _castFPinstack9
        var _castFPinstack9_c    # carry of _castFPinstack9
        #(end macro)varX(I1P1,"_castFPinstack" +_castFP)
        #(begin macro)varX(I2P2,"_castFPoutstack" + _castFP)
        var _castFPoutstack9_0    # 0 byte of _castFPoutstack9
        var _castFPoutstack9_1    # 1 byte of _castFPoutstack9
        var _castFPoutstack9_2    # 2 byte of _castFPoutstack9
        var _castFPoutstack9_s    # Sign of _castFPoutstack9
        var _castFPoutstack9_c    # carry of _castFPoutstack9
        #(end macro)varX(I2P2,"_castFPoutstack" + _castFP)
        
        #(begin macro)popvX(I1P1,"_castFPinstack" + _castFP)
        pop     _castFPinstack9_0
        pop     _castFPinstack9_1
        pop     _castFPinstack9_2
        pop     _castFPinstack9_3
        pop     _castFPinstack9_4
        pop     _castFPinstack9_5
        pop     _castFPinstack9_s
        pop     _castFPinstack9_c
        #(end macro)popvX(I1P1,"_castFPinstack" + _castFP)
        # reset outstack
        #(begin macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        at _castFPoutstack9_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    0
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(I2P2, "_castFPoutstack" +_castFP, 0)
        # sign
        push _castFPinstack9_s
        pop _castFPoutstack9_s
        # integer part
        push _castFPinstack9_4
        pop _castFPoutstack9_2
        # fract part
        push _castFPinstack9_3
        pop _castFPoutstack9_1
        push _castFPinstack9_2
        pop _castFPoutstack9_0
        #(begin macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        push    _castFPoutstack9_c
        push    _castFPoutstack9_s
        push    _castFPoutstack9_2
        push    _castFPoutstack9_1
        push    _castFPoutstack9_0
        #(end macro)pushvX(I2P2,"_castFPoutstack" + _castFP)
        #(end macro)castFP(I+I,P+P, I,P)
        #(begin macro)popvX(IP,"_mulFPnameA"+_mulFP)
        pop     _mulFPnameA9_0
        pop     _mulFPnameA9_1
        pop     _mulFPnameA9_2
        pop     _mulFPnameA9_s
        pop     _mulFPnameA9_c
        #(end macro)popvX(IP,"_mulFPnameA"+_mulFP)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(IP) # drop nameB
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(IP) # drop nameB
        #(end macro)mulFP(FP_I,FP_P)
        #(begin macro)addX(FP)
        #(begin macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXName5_0 - 5
        sbm _addXName5_1 - 6
        sbm _addXName5_2 - 7
        sbm _addXName5_s - 8
        sbm _addXName5_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXName"+ _addX, 1)
        #(begin macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _addXNameB5_0 - 0
        sbm _addXNameB5_1 - 1
        sbm _addXNameB5_2 - 2
        sbm _addXNameB5_s - 3
        sbm _addXNameB5_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_addXNameB"+ _addX, 0)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _addXNameA5_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _addXNameA5_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA5_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA5_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _addXNameA5_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_addXNameA"+_addX)
        #(begin macro)pushvX(X,"_addXName"+_addX)
        push    _addXName5_c
        push    _addXName5_s
        push    _addXName5_2
        push    _addXName5_1
        push    _addXName5_0
        #(end macro)pushvX(X,"_addXName"+_addX)
        #(begin macro)popvX(X,"_addXNameA"+_addX)
        pop     _addXNameA5_0
        pop     _addXNameA5_1
        pop     _addXNameA5_2
        pop     _addXNameA5_s
        pop     _addXNameA5_c
        #(end macro)popvX(X,"_addXNameA"+_addX)
        #(begin macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        push    _addXNameA5_s
        push    _addXNameB5_s
        or
        not
        push    _addXNameA5_s
        push    _addXNameB5_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _addXNameA5_s
          pop     _addXName5_s    # name has same sign of nameA and nameB
          push    0
          push    _addXNameA5_0
          #(begin macro)addof()
          sbm _addofb226
          sbm _addofa226 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc226
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao226
          while
            push _addofa226
            if
              at _addofa226
                dec
              ta
              at _addofb226
                inc
              ta
              push _addofb226
              not
              if
                at _addofc226
                  set 1
                ta
              fi
            else
              at _loopao226
                reset
              ta
            fi
          wend
          push _addofc226
          if
            at _addofa226
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_0
          push    _addXNameB5_0
          #(begin macro)addof()
          sbm _addofb227
          sbm _addofa227 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc227
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao227
          while
            push _addofa227
            if
              at _addofa227
                dec
              ta
              at _addofb227
                inc
              ta
              push _addofb227
              not
              if
                at _addofc227
                  set 1
                ta
              fi
            else
              at _loopao227
                reset
              ta
            fi
          wend
          push _addofc227
          if
            at _addofa227
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName5_0
          #(begin macro)addof()
          sbm _addofb228
          sbm _addofa228 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc228
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao228
          while
            push _addofa228
            if
              at _addofa228
                dec
              ta
              at _addofb228
                inc
              ta
              push _addofb228
              not
              if
                at _addofc228
                  set 1
                ta
              fi
            else
              at _loopao228
                reset
              ta
            fi
          wend
          push _addofc228
          if
            at _addofa228
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_0
          add
          push    _addXNameA5_1
          #(begin macro)addof()
          sbm _addofb229
          sbm _addofa229 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc229
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao229
          while
            push _addofa229
            if
              at _addofa229
                dec
              ta
              at _addofb229
                inc
              ta
              push _addofb229
              not
              if
                at _addofc229
                  set 1
                ta
              fi
            else
              at _loopao229
                reset
              ta
            fi
          wend
          push _addofc229
          if
            at _addofa229
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_1
          push    _addXNameB5_1
          #(begin macro)addof()
          sbm _addofb230
          sbm _addofa230 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc230
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao230
          while
            push _addofa230
            if
              at _addofa230
                dec
              ta
              at _addofb230
                inc
              ta
              push _addofb230
              not
              if
                at _addofc230
                  set 1
                ta
              fi
            else
              at _loopao230
                reset
              ta
            fi
          wend
          push _addofc230
          if
            at _addofa230
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName5_1
          #(begin macro)addof()
          sbm _addofb231
          sbm _addofa231 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc231
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao231
          while
            push _addofa231
            if
              at _addofa231
                dec
              ta
              at _addofb231
                inc
              ta
              push _addofb231
              not
              if
                at _addofc231
                  set 1
                ta
              fi
            else
              at _loopao231
                reset
              ta
            fi
          wend
          push _addofc231
          if
            at _addofa231
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_1
          add
          push    _addXNameA5_2
          #(begin macro)addof()
          sbm _addofb232
          sbm _addofa232 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc232
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao232
          while
            push _addofa232
            if
              at _addofa232
                dec
              ta
              at _addofb232
                inc
              ta
              push _addofb232
              not
              if
                at _addofc232
                  set 1
                ta
              fi
            else
              at _loopao232
                reset
              ta
            fi
          wend
          push _addofc232
          if
            at _addofa232
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_2
          push    _addXNameB5_2
          #(begin macro)addof()
          sbm _addofb233
          sbm _addofa233 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc233
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao233
          while
            push _addofa233
            if
              at _addofa233
                dec
              ta
              at _addofb233
                inc
              ta
              push _addofb233
              not
              if
                at _addofc233
                  set 1
                ta
              fi
            else
              at _loopao233
                reset
              ta
            fi
          wend
          push _addofc233
          if
            at _addofa233
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _addXName5_2
          #(begin macro)addof()
          sbm _addofb234
          sbm _addofa234 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc234
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao234
          while
            push _addofa234
            if
              at _addofa234
                dec
              ta
              at _addofb234
                inc
              ta
              push _addofb234
              not
              if
                at _addofc234
                  set 1
                ta
              fi
            else
              at _loopao234
                reset
              ta
            fi
          wend
          push _addofc234
          if
            at _addofa234
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _addXName5_2
          add
          pop     _addXName5_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb17
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb17
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _addXNameA5_2
          push    _addXNameB5_2
          sup
          if
            at _asupb17
              set 1
            ta
          else
            push    _addXNameA5_2
            push    _addXNameB5_2
            diff
            if
              at _asupb17
                reset
              ta
            else
              push    _addXNameA5_1
              push    _addXNameB5_1
              sup
              if
                at _asupb17
                  set 1
                ta
              else
                push    _addXNameA5_1
                push    _addXNameB5_1
                diff
                if
                  at _asupb17
                    reset
                  ta
                else
                  push    _addXNameA5_0
                  push    _addXNameB5_0
                  sup
                  if
                    at _asupb17
                      set 1
                    ta
                  else
                    push    _addXNameA5_0
                    push    _addXNameB5_0
                    diff
                    if
                      at _asupb17
                        reset
                      ta
                    else
                      at _aequb17
                        set 1
                      ta
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb17
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _addXNameA5_s
            pop     _addXName5_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry17
            push    _addXNameA5_0
            push    _addXNameB5_0
            #(begin macro)subof()
            sbm _subofb301
            sbm _subofa301 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc301
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso301
            while
              push _subofb301
              if
                at _subofb301
                  dec
                ta
                at _subofa301
                  dec
                ta
                push _subofa301
                inc
                not
                if
                  at _subofc301
                    set 1
                  ta
                fi
              else
                at _loopso301
                  reset
                ta
              fi
            wend
            push _subofc301
            if
              at _subofb301
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry17
            #(begin macro)subof()
            sbm _subofb302
            sbm _subofa302 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc302
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso302
            while
              push _subofb302
              if
                at _subofb302
                  dec
                ta
                at _subofa302
                  dec
                ta
                push _subofa302
                inc
                not
                if
                  at _subofc302
                    set 1
                  ta
                fi
              else
                at _loopso302
                  reset
                ta
              fi
            wend
            push _subofc302
            if
              at _subofb302
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName5_0
            add
            pop     _addvvvXCarry17
            push    _addXNameA5_1
            push    _addXNameB5_1
            #(begin macro)subof()
            sbm _subofb303
            sbm _subofa303 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc303
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso303
            while
              push _subofb303
              if
                at _subofb303
                  dec
                ta
                at _subofa303
                  dec
                ta
                push _subofa303
                inc
                not
                if
                  at _subofc303
                    set 1
                  ta
                fi
              else
                at _loopso303
                  reset
                ta
              fi
            wend
            push _subofc303
            if
              at _subofb303
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry17
            #(begin macro)subof()
            sbm _subofb304
            sbm _subofa304 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc304
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso304
            while
              push _subofb304
              if
                at _subofb304
                  dec
                ta
                at _subofa304
                  dec
                ta
                push _subofa304
                inc
                not
                if
                  at _subofc304
                    set 1
                  ta
                fi
              else
                at _loopso304
                  reset
                ta
              fi
            wend
            push _subofc304
            if
              at _subofb304
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName5_1
            add
            pop     _addvvvXCarry17
            push    _addXNameA5_2
            push    _addXNameB5_2
            #(begin macro)subof()
            sbm _subofb305
            sbm _subofa305 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc305
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso305
            while
              push _subofb305
              if
                at _subofb305
                  dec
                ta
                at _subofa305
                  dec
                ta
                push _subofa305
                inc
                not
                if
                  at _subofc305
                    set 1
                  ta
                fi
              else
                at _loopso305
                  reset
                ta
              fi
            wend
            push _subofc305
            if
              at _subofb305
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry17
            #(begin macro)subof()
            sbm _subofb306
            sbm _subofa306 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc306
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso306
            while
              push _subofb306
              if
                at _subofb306
                  dec
                ta
                at _subofa306
                  dec
                ta
                push _subofa306
                inc
                not
                if
                  at _subofc306
                    set 1
                  ta
                fi
              else
                at _loopso306
                  reset
                ta
              fi
            wend
            push _subofc306
            if
              at _subofb306
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _addXName5_2
            add
            pop     _addvvvXCarry17
            pop     _addXName5_c
          else # absB >= absA :
            push    _aequb17
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _addXName5_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _addXNameB5_s
              pop     _addXName5_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry17
              push    _addXNameB5_0
              push    _addXNameA5_0
              #(begin macro)subof()
              sbm _subofb307
              sbm _subofa307 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc307
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso307
              while
                push _subofb307
                if
                  at _subofb307
                    dec
                  ta
                  at _subofa307
                    dec
                  ta
                  push _subofa307
                  inc
                  not
                  if
                    at _subofc307
                      set 1
                    ta
                  fi
                else
                  at _loopso307
                    reset
                  ta
                fi
              wend
              push _subofc307
              if
                at _subofb307
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry17
              #(begin macro)subof()
              sbm _subofb308
              sbm _subofa308 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc308
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso308
              while
                push _subofb308
                if
                  at _subofb308
                    dec
                  ta
                  at _subofa308
                    dec
                  ta
                  push _subofa308
                  inc
                  not
                  if
                    at _subofc308
                      set 1
                    ta
                  fi
                else
                  at _loopso308
                    reset
                  ta
                fi
              wend
              push _subofc308
              if
                at _subofb308
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName5_0
              add
              pop     _addvvvXCarry17
              push    _addXNameB5_1
              push    _addXNameA5_1
              #(begin macro)subof()
              sbm _subofb309
              sbm _subofa309 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc309
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso309
              while
                push _subofb309
                if
                  at _subofb309
                    dec
                  ta
                  at _subofa309
                    dec
                  ta
                  push _subofa309
                  inc
                  not
                  if
                    at _subofc309
                      set 1
                    ta
                  fi
                else
                  at _loopso309
                    reset
                  ta
                fi
              wend
              push _subofc309
              if
                at _subofb309
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry17
              #(begin macro)subof()
              sbm _subofb310
              sbm _subofa310 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc310
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso310
              while
                push _subofb310
                if
                  at _subofb310
                    dec
                  ta
                  at _subofa310
                    dec
                  ta
                  push _subofa310
                  inc
                  not
                  if
                    at _subofc310
                      set 1
                    ta
                  fi
                else
                  at _loopso310
                    reset
                  ta
                fi
              wend
              push _subofc310
              if
                at _subofb310
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName5_1
              add
              pop     _addvvvXCarry17
              push    _addXNameB5_2
              push    _addXNameA5_2
              #(begin macro)subof()
              sbm _subofb311
              sbm _subofa311 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc311
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso311
              while
                push _subofb311
                if
                  at _subofb311
                    dec
                  ta
                  at _subofa311
                    dec
                  ta
                  push _subofa311
                  inc
                  not
                  if
                    at _subofc311
                      set 1
                    ta
                  fi
                else
                  at _loopso311
                    reset
                  ta
                fi
              wend
              push _subofc311
              if
                at _subofb311
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry17
              #(begin macro)subof()
              sbm _subofb312
              sbm _subofa312 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc312
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso312
              while
                push _subofb312
                if
                  at _subofb312
                    dec
                  ta
                  at _subofa312
                    dec
                  ta
                  push _subofa312
                  inc
                  not
                  if
                    at _subofc312
                      set 1
                    ta
                  fi
                else
                  at _loopso312
                    reset
                  ta
                fi
              wend
              push _subofc312
              if
                at _subofb312
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _addXName5_2
              add
              pop     _addvvvXCarry17
              pop     _addXName5_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X, "_addXName" + _addX, "_addXNameA" + _addX, "_addXNameB" + _addX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(begin macro)dropX(X)
        drop
        drop
        drop
        drop
        drop
        #(end macro)dropX(X)
        #(end macro)addX(FP)
        ## if stack FP > 4 break
        #(begin macro)pushFP(FP_I,FP_P, 4)
        #(begin macro)pushX(I+P,0)
        push    0
        push    0
        push    0
        push    0
        push    0
        #(end macro)pushX(I+P,0)
        #(begin macro)setFP(I,P,immValue)
        #(begin macro)sbmX(IP,"_setFPinstack"+_setFP,0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _setFPinstack9_0 - 0
        sbm _setFPinstack9_1 - 1
        sbm _setFPinstack9_2 - 2
        sbm _setFPinstack9_s - 3
        sbm _setFPinstack9_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(IP,"_setFPinstack"+_setFP,0)
        #(begin macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
        at _setFPinstack9_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    4
          bf >
          set    0
          bf >
          set    0
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(IP,"_setFPinstack"+_setFP, _fp)
        #(end macro)setFP(I,P,immValue)
        #(end macro)pushFP(FP_I,FP_P, 4)
        #(begin macro)supX(FP)
        #(begin macro)sbmX(X, "_supXA" + _supX, 1)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _supXA1_0 - 5
        sbm _supXA1_1 - 6
        sbm _supXA1_2 - 7
        sbm _supXA1_s - 8
        sbm _supXA1_c - 9
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_supXA" + _supX, 1)
        #(begin macro)sbmX(X, "_supXB" + _supX, 0)
        #(begin macro)sbmX2(X,name,backward,0)
        sbm _supXB1_0 - 0
        sbm _supXB1_1 - 1
        sbm _supXB1_2 - 2
        sbm _supXB1_s - 3
        sbm _supXB1_c - 4
        #(end macro)sbmX2(X,name,backward,0)
        #(end macro)sbmX(X, "_supXB" + _supX, 0)
        sbm _supX1 - 9
        #(begin macro)supvvX(X, "_supXA" + _supX, "_supXB" + _supX)
        #(begin macro)infvvX(X,nameB, nameA)
        push 0
        sbm _infvvX1
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X, "_infvvXName" + _infvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _infvvXName1_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _infvvXName1_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _infvvXName1_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _infvvXName1_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _infvvXName1_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X, "_infvvXName" + _infvvX)
        #(begin macro)subvvvX(X,  "_infvvXName" + _infvvX, nameA, nameB)
        #(begin macro)scope_begin()
        #(end macro)scope_begin()
        #(begin macro)lvarX(X,"_negNameB" + _subvvvX)
        #(begin macro)lvar(name + "_c",0)
        push 0
        sbm _negNameB4_c
        #(end macro)lvar(name + "_c",0)
        #(begin macro)lvar(name + "_s",0)
        push 0
        sbm _negNameB4_s
        #(end macro)lvar(name + "_s",0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB4_2
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB4_1
        #(end macro)lvar(name + "_"+ xx1,0)
        #(begin macro)lvar(name + "_"+ xx1,0)
        push 0
        sbm _negNameB4_0
        #(end macro)lvar(name + "_"+ xx1,0)
        #(end macro)lvarX(X,"_negNameB" + _subvvvX)
        #(begin macro)pushvX(X,nameB)
        push    _supXA1_c
        push    _supXA1_s
        push    _supXA1_2
        push    _supXA1_1
        push    _supXA1_0
        #(end macro)pushvX(X,nameB)
        #(begin macro)popvX(X,"_negNameB" + _subvvvX)
        pop     _negNameB4_0
        pop     _negNameB4_1
        pop     _negNameB4_2
        pop     _negNameB4_s
        pop     _negNameB4_c
        #(end macro)popvX(X,"_negNameB" + _subvvvX)
        #(begin macro)negvX(X,"_negNameB" + _subvvvX)
        push    _negNameB4_s
        dec
        bool
        dup
        if    # if name is now negative
          #(begin macro)if_equal(name +"_"+xx, 0)
          push _negNameB4_0
          push 0
          equal
          if
            #(end macro)if_equal(name +"_"+xx, 0)
            #(begin macro)if_equal(name +"_"+xx, 0)
            push _negNameB4_1
            push 0
            equal
            if
              #(end macro)if_equal(name +"_"+xx, 0)
              #(begin macro)if_equal(name +"_"+xx, 0)
              push _negNameB4_2
              push 0
              equal
              if
                #(end macro)if_equal(name +"_"+xx, 0)
                #(begin macro)at_reset(name + "_s")   # set sign to positive if name==0
                #(begin macro)at_1("reset",a)
                #(begin macro)at_2(ope,a,"")
                at _negNameB4_s
                  reset 
                ta
                #(end macro)at_2(ope,a,"")
                #(end macro)at_1("reset",a)
                #(end macro)at_reset(name + "_s")   # set sign to positive if name==0
              fi
            fi
          fi
        fi
        pop     _negNameB4_s
        #(end macro)negvX(X,"_negNameB" + _subvvvX)
        #(begin macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
        push    _supXB1_s
        push    _negNameB4_s
        or
        not
        push    _supXB1_s
        push    _negNameB4_s
        and
        or
        if      # nameA and nameB are both positive or negative
          push    _supXB1_s
          pop     _infvvXName1_s    # name has same sign of nameA and nameB
          push    0
          push    _supXB1_0
          #(begin macro)addof()
          sbm _addofb235
          sbm _addofa235 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc235
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao235
          while
            push _addofa235
            if
              at _addofa235
                dec
              ta
              at _addofb235
                inc
              ta
              push _addofb235
              not
              if
                at _addofc235
                  set 1
                ta
              fi
            else
              at _loopao235
                reset
              ta
            fi
          wend
          push _addofc235
          if
            at _addofa235
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_0
          push    _negNameB4_0
          #(begin macro)addof()
          sbm _addofb236
          sbm _addofa236 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc236
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao236
          while
            push _addofa236
            if
              at _addofa236
                dec
              ta
              at _addofb236
                inc
              ta
              push _addofb236
              not
              if
                at _addofc236
                  set 1
                ta
              fi
            else
              at _loopao236
                reset
              ta
            fi
          wend
          push _addofc236
          if
            at _addofa236
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _infvvXName1_0
          #(begin macro)addof()
          sbm _addofb237
          sbm _addofa237 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc237
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao237
          while
            push _addofa237
            if
              at _addofa237
                dec
              ta
              at _addofb237
                inc
              ta
              push _addofb237
              not
              if
                at _addofc237
                  set 1
                ta
              fi
            else
              at _loopao237
                reset
              ta
            fi
          wend
          push _addofc237
          if
            at _addofa237
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_0
          add
          push    _supXB1_1
          #(begin macro)addof()
          sbm _addofb238
          sbm _addofa238 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc238
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao238
          while
            push _addofa238
            if
              at _addofa238
                dec
              ta
              at _addofb238
                inc
              ta
              push _addofb238
              not
              if
                at _addofc238
                  set 1
                ta
              fi
            else
              at _loopao238
                reset
              ta
            fi
          wend
          push _addofc238
          if
            at _addofa238
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_1
          push    _negNameB4_1
          #(begin macro)addof()
          sbm _addofb239
          sbm _addofa239 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc239
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao239
          while
            push _addofa239
            if
              at _addofa239
                dec
              ta
              at _addofb239
                inc
              ta
              push _addofb239
              not
              if
                at _addofc239
                  set 1
                ta
              fi
            else
              at _loopao239
                reset
              ta
            fi
          wend
          push _addofc239
          if
            at _addofa239
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _infvvXName1_1
          #(begin macro)addof()
          sbm _addofb240
          sbm _addofa240 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc240
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao240
          while
            push _addofa240
            if
              at _addofa240
                dec
              ta
              at _addofb240
                inc
              ta
              push _addofb240
              not
              if
                at _addofc240
                  set 1
                ta
              fi
            else
              at _loopao240
                reset
              ta
            fi
          wend
          push _addofc240
          if
            at _addofa240
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_1
          add
          push    _supXB1_2
          #(begin macro)addof()
          sbm _addofb241
          sbm _addofa241 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc241
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao241
          while
            push _addofa241
            if
              at _addofa241
                dec
              ta
              at _addofb241
                inc
              ta
              push _addofb241
              not
              if
                at _addofc241
                  set 1
                ta
              fi
            else
              at _loopao241
                reset
              ta
            fi
          wend
          push _addofc241
          if
            at _addofa241
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_2
          push    _negNameB4_2
          #(begin macro)addof()
          sbm _addofb242
          sbm _addofa242 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc242
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao242
          while
            push _addofa242
            if
              at _addofa242
                dec
              ta
              at _addofb242
                inc
              ta
              push _addofb242
              not
              if
                at _addofc242
                  set 1
                ta
              fi
            else
              at _loopao242
                reset
              ta
            fi
          wend
          push _addofc242
          if
            at _addofa242
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          push    _infvvXName1_2
          #(begin macro)addof()
          sbm _addofb243
          sbm _addofa243 - 1
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_addofc"+_addof ,0)
          push 0
          sbm _addofc243
          #(end macro)lvar("_addofc"+_addof ,0)
          push 1
          sbm _loopao243
          while
            push _addofa243
            if
              at _addofa243
                dec
              ta
              at _addofb243
                inc
              ta
              push _addofb243
              not
              if
                at _addofc243
                  set 1
                ta
              fi
            else
              at _loopao243
                reset
              ta
            fi
          wend
          push _addofc243
          if
            at _addofa243
              set 1
            ta
          fi
          #(begin macro)scope_end()
          drop
          #(end macro)scope_end()
          #(end macro)addof()
          pop     _infvvXName1_2
          add
          pop     _infvvXName1_c
        else  # nameA has a different sign of nameB
          #(begin macro)scope_begin()
          #(end macro)scope_begin()
          #(begin macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          push 0
          sbm _asupb18
          #(end macro)lvar("_asupb"+ _addvvvX, 0)  # by default absA is not sup to absB
          #(begin macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push 0
          sbm _aequb18
          #(end macro)lvar("_aequb"+ _addvvvX, 0)  # by default absA is not equal to absB
          push    _supXB1_2
          push    _negNameB4_2
          sup
          if
            at _asupb18
              set 1
            ta
          else
            push    _supXB1_2
            push    _negNameB4_2
            diff
            if
              at _asupb18
                reset
              ta
            else
              push    _supXB1_1
              push    _negNameB4_1
              sup
              if
                at _asupb18
                  set 1
                ta
              else
                push    _supXB1_1
                push    _negNameB4_1
                diff
                if
                  at _asupb18
                    reset
                  ta
                else
                  push    _supXB1_0
                  push    _negNameB4_0
                  sup
                  if
                    at _asupb18
                      set 1
                    ta
                  else
                    push    _supXB1_0
                    push    _negNameB4_0
                    diff
                    if
                      at _asupb18
                        reset
                      ta
                    else
                      at _aequb18
                        set 1
                      ta
                    fi
                  fi
                fi
              fi
            fi
          fi
          push _asupb18
          if  # absA > absB : do  absA-absB with sign of A
            # print("absA > absB\n")
            push    _supXB1_s
            pop     _infvvXName1_s    # name has same sign of nameA
            
            push    0
            sbm     _addvvvXCarry18
            push    _supXB1_0
            push    _negNameB4_0
            #(begin macro)subof()
            sbm _subofb313
            sbm _subofa313 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc313
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso313
            while
              push _subofb313
              if
                at _subofb313
                  dec
                ta
                at _subofa313
                  dec
                ta
                push _subofa313
                inc
                not
                if
                  at _subofc313
                    set 1
                  ta
                fi
              else
                at _loopso313
                  reset
                ta
              fi
            wend
            push _subofc313
            if
              at _subofb313
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry18
            #(begin macro)subof()
            sbm _subofb314
            sbm _subofa314 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc314
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso314
            while
              push _subofb314
              if
                at _subofb314
                  dec
                ta
                at _subofa314
                  dec
                ta
                push _subofa314
                inc
                not
                if
                  at _subofc314
                    set 1
                  ta
                fi
              else
                at _loopso314
                  reset
                ta
              fi
            wend
            push _subofc314
            if
              at _subofb314
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _infvvXName1_0
            add
            pop     _addvvvXCarry18
            push    _supXB1_1
            push    _negNameB4_1
            #(begin macro)subof()
            sbm _subofb315
            sbm _subofa315 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc315
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso315
            while
              push _subofb315
              if
                at _subofb315
                  dec
                ta
                at _subofa315
                  dec
                ta
                push _subofa315
                inc
                not
                if
                  at _subofc315
                    set 1
                  ta
                fi
              else
                at _loopso315
                  reset
                ta
              fi
            wend
            push _subofc315
            if
              at _subofb315
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry18
            #(begin macro)subof()
            sbm _subofb316
            sbm _subofa316 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc316
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso316
            while
              push _subofb316
              if
                at _subofb316
                  dec
                ta
                at _subofa316
                  dec
                ta
                push _subofa316
                inc
                not
                if
                  at _subofc316
                    set 1
                  ta
                fi
              else
                at _loopso316
                  reset
                ta
              fi
            wend
            push _subofc316
            if
              at _subofb316
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _infvvXName1_1
            add
            pop     _addvvvXCarry18
            push    _supXB1_2
            push    _negNameB4_2
            #(begin macro)subof()
            sbm _subofb317
            sbm _subofa317 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc317
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso317
            while
              push _subofb317
              if
                at _subofb317
                  dec
                ta
                at _subofa317
                  dec
                ta
                push _subofa317
                inc
                not
                if
                  at _subofc317
                    set 1
                  ta
                fi
              else
                at _loopso317
                  reset
                ta
              fi
            wend
            push _subofc317
            if
              at _subofb317
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            push    _addvvvXCarry18
            #(begin macro)subof()
            sbm _subofb318
            sbm _subofa318 - 1
            #(begin macro)scope_begin()
            #(end macro)scope_begin()
            #(begin macro)lvar("_subofc"+_subof ,0)
            push 0
            sbm _subofc318
            #(end macro)lvar("_subofc"+_subof ,0)
            push 1
            sbm _loopso318
            while
              push _subofb318
              if
                at _subofb318
                  dec
                ta
                at _subofa318
                  dec
                ta
                push _subofa318
                inc
                not
                if
                  at _subofc318
                    set 1
                  ta
                fi
              else
                at _loopso318
                  reset
                ta
              fi
            wend
            push _subofc318
            if
              at _subofb318
                set 1
              ta
            fi
            #(begin macro)scope_end()
            drop
            #(end macro)scope_end()
            swap
            #(end macro)subof()
            pop     _infvvXName1_2
            add
            pop     _addvvvXCarry18
            pop     _infvvXName1_c
          else # absB >= absA :
            push    _aequb18
            if # absA == absB , then name =0 (opposite sign then sum is zero)
              #print("absA == absB\n")
              #(begin macro)setvX(X,name,0)
              at _infvvXName1_0
                #(begin macro)setX(X,immValue)
                bf <
                bf <
                bf <
                bf <
                reset
                bf  >
                set 0
                bf >
                set    0
                bf >
                set    0
                bf >
                set    0
                #(end macro)setX(X,immValue)
              ta
              #(end macro)setvX(X,name,0)
            else # absA < absB : do   absB-absA with sign of B
              #print("absA < absB\n")
              push    _negNameB4_s
              pop     _infvvXName1_s    # name has same sign of nameB
              
              push    0
              sbm     _addvvvXCarry18
              push    _negNameB4_0
              push    _supXB1_0
              #(begin macro)subof()
              sbm _subofb319
              sbm _subofa319 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc319
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso319
              while
                push _subofb319
                if
                  at _subofb319
                    dec
                  ta
                  at _subofa319
                    dec
                  ta
                  push _subofa319
                  inc
                  not
                  if
                    at _subofc319
                      set 1
                    ta
                  fi
                else
                  at _loopso319
                    reset
                  ta
                fi
              wend
              push _subofc319
              if
                at _subofb319
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry18
              #(begin macro)subof()
              sbm _subofb320
              sbm _subofa320 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc320
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso320
              while
                push _subofb320
                if
                  at _subofb320
                    dec
                  ta
                  at _subofa320
                    dec
                  ta
                  push _subofa320
                  inc
                  not
                  if
                    at _subofc320
                      set 1
                    ta
                  fi
                else
                  at _loopso320
                    reset
                  ta
                fi
              wend
              push _subofc320
              if
                at _subofb320
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _infvvXName1_0
              add
              pop     _addvvvXCarry18
              push    _negNameB4_1
              push    _supXB1_1
              #(begin macro)subof()
              sbm _subofb321
              sbm _subofa321 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc321
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso321
              while
                push _subofb321
                if
                  at _subofb321
                    dec
                  ta
                  at _subofa321
                    dec
                  ta
                  push _subofa321
                  inc
                  not
                  if
                    at _subofc321
                      set 1
                    ta
                  fi
                else
                  at _loopso321
                    reset
                  ta
                fi
              wend
              push _subofc321
              if
                at _subofb321
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry18
              #(begin macro)subof()
              sbm _subofb322
              sbm _subofa322 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc322
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso322
              while
                push _subofb322
                if
                  at _subofb322
                    dec
                  ta
                  at _subofa322
                    dec
                  ta
                  push _subofa322
                  inc
                  not
                  if
                    at _subofc322
                      set 1
                    ta
                  fi
                else
                  at _loopso322
                    reset
                  ta
                fi
              wend
              push _subofc322
              if
                at _subofb322
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _infvvXName1_1
              add
              pop     _addvvvXCarry18
              push    _negNameB4_2
              push    _supXB1_2
              #(begin macro)subof()
              sbm _subofb323
              sbm _subofa323 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc323
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso323
              while
                push _subofb323
                if
                  at _subofb323
                    dec
                  ta
                  at _subofa323
                    dec
                  ta
                  push _subofa323
                  inc
                  not
                  if
                    at _subofc323
                      set 1
                    ta
                  fi
                else
                  at _loopso323
                    reset
                  ta
                fi
              wend
              push _subofc323
              if
                at _subofb323
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              push    _addvvvXCarry18
              #(begin macro)subof()
              sbm _subofb324
              sbm _subofa324 - 1
              #(begin macro)scope_begin()
              #(end macro)scope_begin()
              #(begin macro)lvar("_subofc"+_subof ,0)
              push 0
              sbm _subofc324
              #(end macro)lvar("_subofc"+_subof ,0)
              push 1
              sbm _loopso324
              while
                push _subofb324
                if
                  at _subofb324
                    dec
                  ta
                  at _subofa324
                    dec
                  ta
                  push _subofa324
                  inc
                  not
                  if
                    at _subofc324
                      set 1
                    ta
                  fi
                else
                  at _loopso324
                    reset
                  ta
                fi
              wend
              push _subofc324
              if
                at _subofb324
                  set 1
                ta
              fi
              #(begin macro)scope_end()
              drop
              #(end macro)scope_end()
              swap
              #(end macro)subof()
              pop     _infvvXName1_2
              add
              pop     _addvvvXCarry18
              pop     _infvvXName1_c
            fi
          fi
          #(begin macro)scope_end()
          drop
          drop
          #(end macro)scope_end()
        fi
        #(end macro)addvvvX(X, name, nameA, "_negNameB" + _subvvvX)
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)subvvvX(X,  "_infvvXName" + _infvvX, nameA, nameB)
        push _infvvXName1_s
        pop _infvvX1
        #(begin macro)scope_end()
        drop
        drop
        drop
        drop
        drop
        #(end macro)scope_end()
        #(end macro)infvvX(X,nameB, nameA)
        #(end macro)supvvX(X, "_supXA" + _supX, "_supXB" + _supX)
        pop _supX1
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        drop
        #(end macro)supX(FP)
        if
          #(begin macro)at_reset("loop")
          #(begin macro)at_1("reset",a)
          #(begin macro)at_2(ope,a,"")
          at loop
            reset 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("reset",a)
          #(end macro)at_reset("loop")
        else
          #(begin macro)at_inc("i")
          #(begin macro)at_1("inc",a)
          #(begin macro)at_2(ope,a,"")
          at i
            inc 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("inc",a)
          #(end macro)at_inc("i")
        fi
      else
        #(begin macro)at_reset("loop")
        #(begin macro)at_1("reset",a)
        #(begin macro)at_2(ope,a,"")
        at loop
          reset 
        ta
        #(end macro)at_2(ope,a,"")
        #(end macro)at_1("reset",a)
        #(end macro)at_reset("loop")
      fi
      # }
    wend
    # if (i >= maxIte) black point (inside mandel)
    #(begin macro)if_equal("i", maxIte)
    push i
    push 26
    equal
    if
      #(end macro)if_equal("i", maxIte)
      #(begin macro)print("*")
      push    0
      set     42
      out             # '*'
      drop
      #(end macro)print("*")
      # else // outside mandel
    else
      #(begin macro)print(".")
      push    0
      set     46
      out             # '.'
      drop
      #(end macro)print(".")
    fi
    # x++
    #(begin macro)pushvX(FP,"x")
    push    x_c
    push    x_s
    push    x_2
    push    x_1
    push    x_0
    #(end macro)pushvX(FP,"x")
    #(begin macro)incFP(FP_I,FP_P)
    #(begin macro)sbmX2(I,"_incFPinput"+_incFP,0,P)
    sbm _incFPinput1_0 - 2
    sbm _incFPinput1_s - 3
    sbm _incFPinput1_c - 4
    #(end macro)sbmX2(I,"_incFPinput"+_incFP,0,P)
    #(begin macro)incvX(I,"_incFPinput"+_incFP)
    #(begin macro)if_equal(name +"_s",0)  # positive number
    push _incFPinput1_s
    push 0
    equal
    if
      #(end macro)if_equal(name +"_s",0)  # positive number
      #(begin macro)at_inc(name + "_" + xx)
      #(begin macro)at_1("inc",a)
      #(begin macro)at_2(ope,a,"")
      at _incFPinput1_0
        inc 
      ta
      #(end macro)at_2(ope,a,"")
      #(end macro)at_1("inc",a)
      #(end macro)at_inc(name + "_" + xx)
      #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
      push _incFPinput1_0
      push 0
      equal
      if
        #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
        #(begin macro)setcvX(X, name) ## set carry (overflow)
        #(begin macro)at_set(name+"_c",1)
        #(begin macro)at_2("set",a,b)
        at _incFPinput1_c
          set 1
        ta
        #(end macro)at_2("set",a,b)
        #(end macro)at_set(name+"_c",1)
        #(end macro)setcvX(X, name) ## set carry (overflow)
      fi
    else    # negative number
      #(begin macro)at_dec(name + "_" + xx)
      #(begin macro)at_1("dec",a)
      #(begin macro)at_2(ope,a,"")
      at _incFPinput1_0
        dec 
      ta
      #(end macro)at_2(ope,a,"")
      #(end macro)at_1("dec",a)
      #(end macro)at_dec(name + "_" + xx)
      #(begin macro)if_equal(name +"_" + xx,255) # reduced
      push _incFPinput1_0
      push 255
      equal
      if
        #(end macro)if_equal(name +"_" + xx,255) # reduced
        #(begin macro)setvX(X,name,1)
        at _incFPinput1_0
          #(begin macro)setX(X,immValue)
          bf <
          bf <
          reset
          bf  >
          set 0
          bf >
          set    1
          #(end macro)setX(X,immValue)
        ta
        #(end macro)setvX(X,name,1)
      fi
      #(begin macro)fixsvX(X,name)
      push    _incFPinput1_s
      if    # if name is negative
        #(begin macro)if_equal(name +"_" + xx, 0)
        push _incFPinput1_0
        push 0
        equal
        if
          #(end macro)if_equal(name +"_" + xx, 0)
          #(begin macro)at_reset(name + "_s")   # set sign to positive
          #(begin macro)at_1("reset",a)
          #(begin macro)at_2(ope,a,"")
          at _incFPinput1_s
            reset 
          ta
          #(end macro)at_2(ope,a,"")
          #(end macro)at_1("reset",a)
          #(end macro)at_reset(name + "_s")   # set sign to positive
        fi
      fi
      #(end macro)fixsvX(X,name)
    fi
    #(end macro)incvX(I,"_incFPinput"+_incFP)
    #(end macro)incFP(FP_I,FP_P)
    #(begin macro)popvX(FP,"x")
    pop     x_0
    pop     x_1
    pop     x_2
    pop     x_s
    pop     x_c
    #(end macro)popvX(FP,"x")
    # addvvvX(FP,"x","x","ONE")
  endloop
  # x = 0
  #(begin macro)setvX(FP,"x",0)
  at x_0
    #(begin macro)setX(X,immValue)
    bf <
    bf <
    bf <
    bf <
    reset
    bf  >
    set 0
    bf >
    set    0
    bf >
    set    0
    bf >
    set    0
    #(end macro)setX(X,immValue)
  ta
  #(end macro)setvX(FP,"x",0)
  # y++
  #(begin macro)pushvX(FP,"y")
  push    y_c
  push    y_s
  push    y_2
  push    y_1
  push    y_0
  #(end macro)pushvX(FP,"y")
  #(begin macro)incFP(FP_I,FP_P)
  #(begin macro)sbmX2(I,"_incFPinput"+_incFP,0,P)
  sbm _incFPinput2_0 - 2
  sbm _incFPinput2_s - 3
  sbm _incFPinput2_c - 4
  #(end macro)sbmX2(I,"_incFPinput"+_incFP,0,P)
  #(begin macro)incvX(I,"_incFPinput"+_incFP)
  #(begin macro)if_equal(name +"_s",0)  # positive number
  push _incFPinput2_s
  push 0
  equal
  if
    #(end macro)if_equal(name +"_s",0)  # positive number
    #(begin macro)at_inc(name + "_" + xx)
    #(begin macro)at_1("inc",a)
    #(begin macro)at_2(ope,a,"")
    at _incFPinput2_0
      inc 
    ta
    #(end macro)at_2(ope,a,"")
    #(end macro)at_1("inc",a)
    #(end macro)at_inc(name + "_" + xx)
    #(begin macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
    push _incFPinput2_0
    push 0
    equal
    if
      #(end macro)if_equal( name + "_" + xx,0) # reach zero (roll over)
      #(begin macro)setcvX(X, name) ## set carry (overflow)
      #(begin macro)at_set(name+"_c",1)
      #(begin macro)at_2("set",a,b)
      at _incFPinput2_c
        set 1
      ta
      #(end macro)at_2("set",a,b)
      #(end macro)at_set(name+"_c",1)
      #(end macro)setcvX(X, name) ## set carry (overflow)
    fi
  else    # negative number
    #(begin macro)at_dec(name + "_" + xx)
    #(begin macro)at_1("dec",a)
    #(begin macro)at_2(ope,a,"")
    at _incFPinput2_0
      dec 
    ta
    #(end macro)at_2(ope,a,"")
    #(end macro)at_1("dec",a)
    #(end macro)at_dec(name + "_" + xx)
    #(begin macro)if_equal(name +"_" + xx,255) # reduced
    push _incFPinput2_0
    push 255
    equal
    if
      #(end macro)if_equal(name +"_" + xx,255) # reduced
      #(begin macro)setvX(X,name,1)
      at _incFPinput2_0
        #(begin macro)setX(X,immValue)
        bf <
        bf <
        reset
        bf  >
        set 0
        bf >
        set    1
        #(end macro)setX(X,immValue)
      ta
      #(end macro)setvX(X,name,1)
    fi
    #(begin macro)fixsvX(X,name)
    push    _incFPinput2_s
    if    # if name is negative
      #(begin macro)if_equal(name +"_" + xx, 0)
      push _incFPinput2_0
      push 0
      equal
      if
        #(end macro)if_equal(name +"_" + xx, 0)
        #(begin macro)at_reset(name + "_s")   # set sign to positive
        #(begin macro)at_1("reset",a)
        #(begin macro)at_2(ope,a,"")
        at _incFPinput2_s
          reset 
        ta
        #(end macro)at_2(ope,a,"")
        #(end macro)at_1("reset",a)
        #(end macro)at_reset(name + "_s")   # set sign to positive
      fi
    fi
    #(end macro)fixsvX(X,name)
  fi
  #(end macro)incvX(I,"_incFPinput"+_incFP)
  #(end macro)incFP(FP_I,FP_P)
  #(begin macro)popvX(FP,"y")
  pop     y_0
  pop     y_1
  pop     y_2
  pop     y_s
  pop     y_c
  #(end macro)popvX(FP,"y")
  #  addvvvX(FP,"y","y","ONE")
  #(begin macro)print("\n")
  push    0
  set     10
  out             # 
  drop
  #(end macro)print("\n")
endloop


