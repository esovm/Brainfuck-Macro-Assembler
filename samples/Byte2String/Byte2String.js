var __blockLevel__; __blockLevel__ = 0;
var __context__; __context__=[];
function __context() { var __result; __result='';
for (var _i=__context__.length-1; _i>=0 ; _i--) __result+=__context__[_i];
 return __result;}
function __indent() { var __result; __result = '';
for (var _i=0 ; _i < __blockLevel__ ; _i++) __result+= '  ';
 return __result;}
var __main; __main=0;
var _main = function(){
 __main++;
var _str_main; 
_str_main='';
if (arguments.length != 0) throw 'Too much arguments provided to macro _main()[' + [] +']';
_str_main+=__indent() +'#    ____        _         ____    ____  _        _ #@(main@1)'+ __context() + '\n';
_str_main+=__indent() +'#   | __ ) _   _| |_ ___  |___ \\  / ___|| |_ _ __(_)_ __   __ _ #@(main@2)'+ __context() + '\n';
_str_main+=__indent() +'#   |  _ \\| | | | __/ _ \\   __) | \\___ \\| __| \'__| | \'_ \\ / _` | #@(main@3)'+ __context() + '\n';
_str_main+=__indent() +'#   | |_) | |_| | ||  __/  / __/   ___) | |_| |  | | | | | (_| | #@(main@4)'+ __context() + '\n';
_str_main+=__indent() +'#   |____/ \\__, |\\__\\___| |_____| |____/ \\__|_|  |_|_| |_|\\__, | #@(main@5)'+ __context() + '\n';
_str_main+=__indent() +'#          |___/                                          |___/ #@(main@6)'+ __context() + '\n';
_str_main+=__indent() +'# Read input byte and output it as decimal number string separated by comma #@(main@7)'+ __context() + '\n';
_str_main+=__indent() +'# this sample does not use macro, #@(main@8)'+ __context() + '\n';
_str_main+=__indent() +'# number are prefixed with \'0\' (e.g 65 is 065, 1 is 001) #@(main@9)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@10)'+ __context() + '\n';
_str_main+=__indent() +'var input #@(main@11)'+ __context() + '\n';
_str_main+=__indent() +'var output*3 #@(main@12)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@13)'+ __context() + '\n';
_str_main+=__indent() +'push    1 #@(main@14)'+ __context() + '\n';
_str_main+=__indent() +'sbm count #@(main@15)'+ __context() + '\n';
_str_main+=__indent() +'while #@(main@16)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'at input #@(main@17)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'in #@(main@18)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'ta #@(main@19)'+ __context() + '\n';
_str_main+=__indent() +'push count #@(main@20)'+ __context() + '\n';
_str_main+=__indent() +'push 1 #@(main@21)'+ __context() + '\n';
_str_main+=__indent() +'equal #@(main@22)'+ __context() + '\n';
_str_main+=__indent() +'if #@(main@23)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'at count #@(main@24)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'set 2 #@(main@25)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'ta #@(main@26)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'else #@(main@27)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push \',\' #@(main@28)'+ __context() + '\n';
_str_main+=__indent() +'pop out #@(main@29)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@30)'+ __context() + '\n';
_str_main+=__indent() +'push 3 #@(main@31)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@32)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push input #@(main@33)'+ __context() + '\n';
_str_main+=__indent() +'push 10 #@(main@34)'+ __context() + '\n';
_str_main+=__indent() +'div #@(main@35)'+ __context() + '\n';
_str_main+=__indent() +'pop input #@(main@36)'+ __context() + '\n';
_str_main+=__indent() +'pop output #@(main@37)'+ __context() + '\n';
_str_main+=__indent() +'arotl output #@(main@38)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@39)'+ __context() + '\n';
_str_main+=__indent() +'push 3 #@(main@40)'+ __context() + '\n';
_str_main+=__indent() +'sbm cnt #@(main@41)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@42)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'arotr output #@(main@43)'+ __context() + '\n';
_str_main+=__indent() +'push output #@(main@44)'+ __context() + '\n';
_str_main+=__indent() +'add \'0\' #@(main@45)'+ __context() + '\n';
_str_main+=__indent() +'pop out #@(main@46)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@47)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'wend #@(main@48)'+ __context() + '\n';
return _str_main;
}
_main();
