var __blockLevel__; __blockLevel__ = 0;
var __context__; __context__=[];
function __context() { var __result; __result='';
for (var _i=__context__.length-1; _i>=0 ; _i--) __result+=__context__[_i];
 return __result;}
function __indent() { var __result; __result = '';
for (var _i=0 ; _i < __blockLevel__ ; _i++) __result+= '  ';
 return __result;}
var __main; __main=0;
var _main = function(){
 __main++;
var _str_main; 
_str_main='';
if (arguments.length != 0) throw 'Too much arguments provided to macro _main()[' + [] +']';
_str_main+=__indent() +'# basic matrix tests #@(main@1)'+ __context() + '\n';
_str_main+=__indent() +'#(begin include)../../samples/include/macro.inc' + '\n';
_str_main+=__indent() +'# Common macros #@(macro_inc@1)'+ __context() + '\n';
_str_main+=__indent() +'# scope variables #@(macro_inc@2)'+ __context() + '\n';
var __scope; var __idx;
__scope=[0]; __idx = 0;
_str_main+=__indent() +' #@(macro_inc@5)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@6)'+ __context() + '\n';
_str_main+=__indent() +'# macro scope_begin : start a new scope for local variable (usage of macro lvar) #@(macro_inc@7)'+ __context() + '\n';
var _scope_begin; _scope_begin=0;
var scope_begin = function(){
 _scope_begin++;
var _strscope_begin; 
_strscope_begin='';
if (arguments.length != 0) throw 'Too much arguments provided to macro scope_begin()[' + [] +']';
__scope.push(0);
return _strscope_begin;
}
_str_main+=__indent() +' #@(macro_inc@11)'+ __context() + '\n';
_str_main+=__indent() +'# macro scope_end : end a scope , then drop scoped local variables (drop) (usage of lvar) #@(macro_inc@12)'+ __context() + '\n';
var _scope_end; _scope_end=0;
var scope_end = function(){
 _scope_end++;
var _strscope_end; 
_strscope_end='';
if (arguments.length != 0) throw 'Too much arguments provided to macro scope_end()[' + [] +']';
if (__scope.length > 0) for (var __idx=0; __idx < __scope[__scope.length-1]; __idx++) {
_strscope_end+=__indent() +'drop #@(macro_inc@15)'+ __context() + '\n';
}
if (__scope.length > 0) __scope.splice(__scope.length-1, 1);
return _strscope_end;
}
_str_main+=__indent() +' #@(macro_inc@19)'+ __context() + '\n';
_str_main+=__indent() +'# macro lvar(vname,value) : declare  in scope, a local variable named vname with an assigned value (stored in stack) #@(macro_inc@20)'+ __context() + '\n';
var _lvar; _lvar=0;
var lvar = function(vname,value){
 _lvar++;
var _strlvar; 
_strlvar='';
if (typeof vname == 'undefined') throw 'Parameter vname is undefined in call of  macro lvar(vname,value)[' + [vname,value] +']';
if (typeof value == 'undefined') throw 'Parameter value is undefined in call of  macro lvar(vname,value)[' + [vname,value] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro lvar(vname,value)[' + [vname,value] +']';
_strlvar+=__indent() +'push    ' + (value) + ' #@(macro_inc@22)'+ __context() + '\n';
_strlvar+=__indent() +'sbm     ' + (vname) + ' #@(macro_inc@23)'+ __context() + '\n';
__scope[__scope.length-1]++;
return _strlvar;
}
_str_main+=__indent() +' #@(macro_inc@26)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_diff(a,b) : if (a != b) { #@(macro_inc@27)'+ __context() + '\n';
var _if_diff; _if_diff=0;
var if_diff = function(a,b){
 _if_diff++;
var _strif_diff; 
_strif_diff='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_diff(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_diff(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_diff(a,b)[' + [a,b] +']';
_strif_diff+=__indent() +'push    ' + (a) + ' #@(macro_inc@29)'+ __context() + '\n';
_strif_diff+=__indent() +'push    ' + (b) + ' #@(macro_inc@30)'+ __context() + '\n';
_strif_diff+=__indent() +'diff #@(macro_inc@31)'+ __context() + '\n';
_strif_diff+=__indent() +'if #@(macro_inc@32)'+ __context() + '\n';
__blockLevel__++;
return _strif_diff;
}
_str_main+=__indent() +' #@(macro_inc@34)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_equal(a,b) : if (a == b) { #@(macro_inc@35)'+ __context() + '\n';
var _if_equal; _if_equal=0;
var if_equal = function(a,b){
 _if_equal++;
var _strif_equal; 
_strif_equal='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_equal(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_equal(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_equal(a,b)[' + [a,b] +']';
_strif_equal+=__indent() +'push    ' + (a) + ' #@(macro_inc@37)'+ __context() + '\n';
_strif_equal+=__indent() +'push    ' + (b) + ' #@(macro_inc@38)'+ __context() + '\n';
_strif_equal+=__indent() +'equal #@(macro_inc@39)'+ __context() + '\n';
_strif_equal+=__indent() +'if #@(macro_inc@40)'+ __context() + '\n';
__blockLevel__++;
return _strif_equal;
}
_str_main+=__indent() +' #@(macro_inc@42)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_sup(a,b) : if (a > b) { #@(macro_inc@43)'+ __context() + '\n';
var _if_sup; _if_sup=0;
var if_sup = function(a,b){
 _if_sup++;
var _strif_sup; 
_strif_sup='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_sup(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_sup(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_sup(a,b)[' + [a,b] +']';
_strif_sup+=__indent() +'push    ' + (a) + ' #@(macro_inc@45)'+ __context() + '\n';
_strif_sup+=__indent() +'push    ' + (b) + ' #@(macro_inc@46)'+ __context() + '\n';
_strif_sup+=__indent() +'sup #@(macro_inc@47)'+ __context() + '\n';
_strif_sup+=__indent() +'if #@(macro_inc@48)'+ __context() + '\n';
__blockLevel__++;
return _strif_sup;
}
_str_main+=__indent() +' #@(macro_inc@50)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_inf(a,b) : if (a < b) { #@(macro_inc@51)'+ __context() + '\n';
var _if_inf; _if_inf=0;
var if_inf = function(a,b){
 _if_inf++;
var _strif_inf; 
_strif_inf='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_inf(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_inf(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_inf(a,b)[' + [a,b] +']';
_strif_inf+=__indent() +'push    ' + (a) + ' #@(macro_inc@53)'+ __context() + '\n';
_strif_inf+=__indent() +'push    ' + (b) + ' #@(macro_inc@54)'+ __context() + '\n';
_strif_inf+=__indent() +'inf #@(macro_inc@55)'+ __context() + '\n';
_strif_inf+=__indent() +'if #@(macro_inc@56)'+ __context() + '\n';
__blockLevel__++;
return _strif_inf;
}
_str_main+=__indent() +' #@(macro_inc@58)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_supequal(a,b) : if (a >= b) { #@(macro_inc@59)'+ __context() + '\n';
var _if_supequal; _if_supequal=0;
var if_supequal = function(a,b){
 _if_supequal++;
var _strif_supequal; 
_strif_supequal='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_supequal(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_supequal(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_supequal(a,b)[' + [a,b] +']';
_strif_supequal+=__indent() +'push    ' + (a) + ' #@(macro_inc@61)'+ __context() + '\n';
_strif_supequal+=__indent() +'push    ' + (b) + ' #@(macro_inc@62)'+ __context() + '\n';
_strif_supequal+=__indent() +'inf #@(macro_inc@63)'+ __context() + '\n';
_strif_supequal+=__indent() +'not #@(macro_inc@64)'+ __context() + '\n';
_strif_supequal+=__indent() +'if #@(macro_inc@65)'+ __context() + '\n';
__blockLevel__++;
return _strif_supequal;
}
_str_main+=__indent() +' #@(macro_inc@67)'+ __context() + '\n';
_str_main+=__indent() +'# macro if_infequal(a,b) : if (a <= b) { #@(macro_inc@68)'+ __context() + '\n';
var _if_infequal; _if_infequal=0;
var if_infequal = function(a,b){
 _if_infequal++;
var _strif_infequal; 
_strif_infequal='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro if_infequal(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro if_infequal(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro if_infequal(a,b)[' + [a,b] +']';
_strif_infequal+=__indent() +'push    ' + (a) + ' #@(macro_inc@70)'+ __context() + '\n';
_strif_infequal+=__indent() +'push    ' + (b) + ' #@(macro_inc@71)'+ __context() + '\n';
_strif_infequal+=__indent() +'sup #@(macro_inc@72)'+ __context() + '\n';
_strif_infequal+=__indent() +'not #@(macro_inc@73)'+ __context() + '\n';
_strif_infequal+=__indent() +'if #@(macro_inc@74)'+ __context() + '\n';
__blockLevel__++;
return _strif_infequal;
}
_str_main+=__indent() +' #@(macro_inc@76)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_2 #@(macro_inc@77)'+ __context() + '\n';
var _at_2; _at_2=0;
var at_2 = function(ope, a,b){
 _at_2++;
var _strat_2; 
_strat_2='';
if (typeof ope == 'undefined') throw 'Parameter ope is undefined in call of  macro at_2(ope, a,b)[' + [ope, a,b] +']';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_2(ope, a,b)[' + [ope, a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro at_2(ope, a,b)[' + [ope, a,b] +']';
if (arguments.length != 3) throw 'Too much arguments provided to macro at_2(ope, a,b)[' + [ope, a,b] +']';
_strat_2+=__indent() +'at      ' + (a) + ' #@(macro_inc@79)'+ __context() + '\n';
__blockLevel__++;
_strat_2+=__indent() +'' + (ope) + '   ' + (b) + ' #@(macro_inc@80)' + __context() + '\n';
__blockLevel__--;
_strat_2+=__indent() +'ta #@(macro_inc@81)'+ __context() + '\n';
return _strat_2;
}
_str_main+=__indent() +' #@(macro_inc@83)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_1 #@(macro_inc@84)'+ __context() + '\n';
var _at_1; _at_1=0;
var at_1 = function(ope, a){
 _at_1++;
var _strat_1; 
_strat_1='';
if (typeof ope == 'undefined') throw 'Parameter ope is undefined in call of  macro at_1(ope, a)[' + [ope, a] +']';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_1(ope, a)[' + [ope, a] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro at_1(ope, a)[' + [ope, a] +']';
_strat_1+=__indent() +'#(begin macro)at_2(ope,a,"")' + '\n';
__context__.push('(macro_inc@86)');
_strat_1+=at_2(ope,a,"");
__context__.pop();
_strat_1+=__indent() +'#(end macro)at_2(ope,a,"")' + '\n';
return _strat_1;
}
_str_main+=__indent() +' #@(macro_inc@88)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_reset(a) : a=0 #@(macro_inc@89)'+ __context() + '\n';
var _at_reset; _at_reset=0;
var at_reset = function(a){
 _at_reset++;
var _strat_reset; 
_strat_reset='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_reset(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro at_reset(a)[' + [a] +']';
_strat_reset+=__indent() +'#(begin macro)at_1("reset",a)' + '\n';
__context__.push('(macro_inc@91)');
_strat_reset+=at_1("reset",a);
__context__.pop();
_strat_reset+=__indent() +'#(end macro)at_1("reset",a)' + '\n';
return _strat_reset;
}
_str_main+=__indent() +' #@(macro_inc@93)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_inc(a) : a++ #@(macro_inc@94)'+ __context() + '\n';
var _at_inc; _at_inc=0;
var at_inc = function(a){
 _at_inc++;
var _strat_inc; 
_strat_inc='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_inc(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro at_inc(a)[' + [a] +']';
_strat_inc+=__indent() +'#(begin macro)at_1("inc",a)' + '\n';
__context__.push('(macro_inc@96)');
_strat_inc+=at_1("inc",a);
__context__.pop();
_strat_inc+=__indent() +'#(end macro)at_1("inc",a)' + '\n';
return _strat_inc;
}
_str_main+=__indent() +' #@(macro_inc@98)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_dec(a) : a-- #@(macro_inc@99)'+ __context() + '\n';
var _at_dec; _at_dec=0;
var at_dec = function(a){
 _at_dec++;
var _strat_dec; 
_strat_dec='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_dec(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro at_dec(a)[' + [a] +']';
_strat_dec+=__indent() +'#(begin macro)at_1("dec",a)' + '\n';
__context__.push('(macro_inc@101)');
_strat_dec+=at_1("dec",a);
__context__.pop();
_strat_dec+=__indent() +'#(end macro)at_1("dec",a)' + '\n';
return _strat_dec;
}
_str_main+=__indent() +' #@(macro_inc@103)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_in(a)  : a= readchar() #@(macro_inc@104)'+ __context() + '\n';
var _at_in; _at_in=0;
var at_in = function(a){
 _at_in++;
var _strat_in; 
_strat_in='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_in(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro at_in(a)[' + [a] +']';
_strat_in+=__indent() +'#(begin macro)at_1("in",a)' + '\n';
__context__.push('(macro_inc@106)');
_strat_in+=at_1("in",a);
__context__.pop();
_strat_in+=__indent() +'#(end macro)at_1("in",a)' + '\n';
return _strat_in;
}
_str_main+=__indent() +' #@(macro_inc@108)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_out(a) : write(a) #@(macro_inc@109)'+ __context() + '\n';
var _at_out; _at_out=0;
var at_out = function(a){
 _at_out++;
var _strat_out; 
_strat_out='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_out(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro at_out(a)[' + [a] +']';
_strat_out+=__indent() +'#(begin macro)at_1("out",a)' + '\n';
__context__.push('(macro_inc@111)');
_strat_out+=at_1("out",a);
__context__.pop();
_strat_out+=__indent() +'#(end macro)at_1("out",a)' + '\n';
return _strat_out;
}
_str_main+=__indent() +' #@(macro_inc@113)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_add(a,b) : a += b (immediate) #@(macro_inc@114)'+ __context() + '\n';
var _at_add; _at_add=0;
var at_add = function(a,b){
 _at_add++;
var _strat_add; 
_strat_add='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_add(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro at_add(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro at_add(a,b)[' + [a,b] +']';
_strat_add+=__indent() +'#(begin macro)at_2("add",a,b)' + '\n';
__context__.push('(macro_inc@116)');
_strat_add+=at_2("add",a,b);
__context__.pop();
_strat_add+=__indent() +'#(end macro)at_2("add",a,b)' + '\n';
return _strat_add;
}
_str_main+=__indent() +' #@(macro_inc@118)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_sub(a,b) : a -= b (immediate) #@(macro_inc@119)'+ __context() + '\n';
var _at_sub; _at_sub=0;
var at_sub = function(a,b){
 _at_sub++;
var _strat_sub; 
_strat_sub='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_sub(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro at_sub(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro at_sub(a,b)[' + [a,b] +']';
_strat_sub+=__indent() +'#(begin macro)at_2("sub",a,b)' + '\n';
__context__.push('(macro_inc@121)');
_strat_sub+=at_2("sub",a,b);
__context__.pop();
_strat_sub+=__indent() +'#(end macro)at_2("sub",a,b)' + '\n';
return _strat_sub;
}
_str_main+=__indent() +' #@(macro_inc@123)'+ __context() + '\n';
_str_main+=__indent() +'# macro at_set(a,b) : a = b (immediate) #@(macro_inc@124)'+ __context() + '\n';
var _at_set; _at_set=0;
var at_set = function(a,b){
 _at_set++;
var _strat_set; 
_strat_set='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro at_set(a,b)[' + [a,b] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro at_set(a,b)[' + [a,b] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro at_set(a,b)[' + [a,b] +']';
_strat_set+=__indent() +'#(begin macro)at_2("set",a,b)' + '\n';
__context__.push('(macro_inc@126)');
_strat_set+=at_2("set",a,b);
__context__.pop();
_strat_set+=__indent() +'#(end macro)at_2("set",a,b)' + '\n';
return _strat_set;
}
_str_main+=__indent() +' #@(macro_inc@128)'+ __context() + '\n';
var _write; _write=0;
var write = function(a){
 _write++;
var _strwrite; 
_strwrite='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro write(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro write(a)[' + [a] +']';
_strwrite+=__indent() +'push    ' + (a) + ' #@(macro_inc@130)'+ __context() + '\n';
_strwrite+=__indent() +'pop     out #@(macro_inc@131)'+ __context() + '\n';
return _strwrite;
}
_str_main+=__indent() +' #@(macro_inc@133)'+ __context() + '\n';
var _divide; _divide=0;
var divide = function(a,b,d,r){
 _divide++;
var _strdivide; 
_strdivide='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro divide(a,b,d,r)[' + [a,b,d,r] +']';
if (typeof b == 'undefined') throw 'Parameter b is undefined in call of  macro divide(a,b,d,r)[' + [a,b,d,r] +']';
if (typeof d == 'undefined') throw 'Parameter d is undefined in call of  macro divide(a,b,d,r)[' + [a,b,d,r] +']';
if (typeof r == 'undefined') throw 'Parameter r is undefined in call of  macro divide(a,b,d,r)[' + [a,b,d,r] +']';
if (arguments.length != 4) throw 'Too much arguments provided to macro divide(a,b,d,r)[' + [a,b,d,r] +']';
_strdivide+=__indent() +'push    ' + (a) + ' #@(macro_inc@135)'+ __context() + '\n';
_strdivide+=__indent() +'push    ' + (b) + ' #@(macro_inc@136)'+ __context() + '\n';
_strdivide+=__indent() +'div #@(macro_inc@137)'+ __context() + '\n';
_strdivide+=__indent() +'pop     ' + (d) + ' #@(macro_inc@138)'+ __context() + '\n';
_strdivide+=__indent() +'pop     ' + (r) + ' #@(macro_inc@139)'+ __context() + '\n';
return _strdivide;
}
_str_main+=__indent() +' #@(macro_inc@141)'+ __context() + '\n';
_str_main+=__indent() +'#macro addof() : push A, push B , replaced by Carry, A+B #@(macro_inc@142)'+ __context() + '\n';
var _addof; _addof=0;
var addof = function(){
 _addof++;
var _straddof; 
_straddof='';
if (arguments.length != 0) throw 'Too much arguments provided to macro addof()[' + [] +']';
_straddof+=__indent() +'sbm _addofb' + (_addof) + ' #@(macro_inc@144)'+ __context() + '\n';
_straddof+=__indent() +'sbm _addofa' + (_addof) + ' - 1 #@(macro_inc@145)'+ __context() + '\n';
_straddof+=__indent() +'#(begin macro)scope_begin()' + '\n';
__context__.push('(macro_inc@146)');
_straddof+=scope_begin();
__context__.pop();
_straddof+=__indent() +'#(end macro)scope_begin()' + '\n';
_straddof+=__indent() +'#(begin macro)lvar("_addofc"+_addof ,0)' + '\n';
__context__.push('(macro_inc@147)');
_straddof+=lvar("_addofc"+_addof ,0);
__context__.pop();
_straddof+=__indent() +'#(end macro)lvar("_addofc"+_addof ,0)' + '\n';
_straddof+=__indent() +'push 1 #@(macro_inc@148)'+ __context() + '\n';
_straddof+=__indent() +'sbm _loopao' + (_addof) + ' #@(macro_inc@149)'+ __context() + '\n';
_straddof+=__indent() +'while #@(macro_inc@150)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'push _addofa' + (_addof) + ' #@(macro_inc@151)'+ __context() + '\n';
_straddof+=__indent() +'if #@(macro_inc@152)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'at _addofa' + (_addof) + ' #@(macro_inc@153)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'dec #@(macro_inc@154)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'ta #@(macro_inc@155)'+ __context() + '\n';
_straddof+=__indent() +'at _addofb' + (_addof) + ' #@(macro_inc@156)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'inc #@(macro_inc@157)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'ta #@(macro_inc@158)'+ __context() + '\n';
_straddof+=__indent() +'push _addofb' + (_addof) + ' #@(macro_inc@159)'+ __context() + '\n';
_straddof+=__indent() +'not #@(macro_inc@160)'+ __context() + '\n';
_straddof+=__indent() +'if #@(macro_inc@161)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'at _addofc' + (_addof) + ' #@(macro_inc@162)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'set 1 #@(macro_inc@163)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'ta #@(macro_inc@164)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'fi #@(macro_inc@165)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'else #@(macro_inc@166)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'at _loopao' + (_addof) + ' #@(macro_inc@167)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'reset #@(macro_inc@168)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'ta #@(macro_inc@169)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'fi #@(macro_inc@170)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'wend #@(macro_inc@171)'+ __context() + '\n';
_straddof+=__indent() +'push _addofc' + (_addof) + ' #@(macro_inc@172)'+ __context() + '\n';
_straddof+=__indent() +'if #@(macro_inc@173)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'at _addofa' + (_addof) + ' #@(macro_inc@174)'+ __context() + '\n';
__blockLevel__++;
_straddof+=__indent() +'set 1 #@(macro_inc@175)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'ta #@(macro_inc@176)'+ __context() + '\n';
__blockLevel__--;
_straddof+=__indent() +'fi #@(macro_inc@177)'+ __context() + '\n';
_straddof+=__indent() +'#(begin macro)scope_end()' + '\n';
__context__.push('(macro_inc@178)');
_straddof+=scope_end();
__context__.pop();
_straddof+=__indent() +'#(end macro)scope_end()' + '\n';
return _straddof;
}
_str_main+=__indent() +' #@(macro_inc@180)'+ __context() + '\n';
_str_main+=__indent() +'# macro subof() : push A, push B , replaced by Carry, A-B #@(macro_inc@181)'+ __context() + '\n';
var _subof; _subof=0;
var subof = function(){
 _subof++;
var _strsubof; 
_strsubof='';
if (arguments.length != 0) throw 'Too much arguments provided to macro subof()[' + [] +']';
_strsubof+=__indent() +'sbm _subofb' + (_subof) + ' #@(macro_inc@183)'+ __context() + '\n';
_strsubof+=__indent() +'sbm _subofa' + (_subof) + ' - 1 #@(macro_inc@184)'+ __context() + '\n';
_strsubof+=__indent() +'#(begin macro)scope_begin()' + '\n';
__context__.push('(macro_inc@185)');
_strsubof+=scope_begin();
__context__.pop();
_strsubof+=__indent() +'#(end macro)scope_begin()' + '\n';
_strsubof+=__indent() +'#(begin macro)lvar("_subofc"+_subof ,0)' + '\n';
__context__.push('(macro_inc@186)');
_strsubof+=lvar("_subofc"+_subof ,0);
__context__.pop();
_strsubof+=__indent() +'#(end macro)lvar("_subofc"+_subof ,0)' + '\n';
_strsubof+=__indent() +'push 1 #@(macro_inc@187)'+ __context() + '\n';
_strsubof+=__indent() +'sbm _loopso' + (_subof) + ' #@(macro_inc@188)'+ __context() + '\n';
_strsubof+=__indent() +'while #@(macro_inc@189)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'push _subofb' + (_subof) + ' #@(macro_inc@190)'+ __context() + '\n';
_strsubof+=__indent() +'if #@(macro_inc@191)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'at _subofb' + (_subof) + ' #@(macro_inc@192)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'dec #@(macro_inc@193)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'ta #@(macro_inc@194)'+ __context() + '\n';
_strsubof+=__indent() +'at _subofa' + (_subof) + ' #@(macro_inc@195)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'dec #@(macro_inc@196)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'ta #@(macro_inc@197)'+ __context() + '\n';
_strsubof+=__indent() +'push _subofa' + (_subof) + ' #@(macro_inc@198)'+ __context() + '\n';
_strsubof+=__indent() +'inc #@(macro_inc@199)'+ __context() + '\n';
_strsubof+=__indent() +'not #@(macro_inc@200)'+ __context() + '\n';
_strsubof+=__indent() +'if #@(macro_inc@201)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'at _subofc' + (_subof) + ' #@(macro_inc@202)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'set 1 #@(macro_inc@203)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'ta #@(macro_inc@204)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'fi #@(macro_inc@205)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'else #@(macro_inc@206)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'at _loopso' + (_subof) + ' #@(macro_inc@207)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'reset #@(macro_inc@208)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'ta #@(macro_inc@209)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'fi #@(macro_inc@210)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'wend #@(macro_inc@211)'+ __context() + '\n';
_strsubof+=__indent() +'push _subofc' + (_subof) + ' #@(macro_inc@212)'+ __context() + '\n';
_strsubof+=__indent() +'if #@(macro_inc@213)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'at _subofb' + (_subof) + ' #@(macro_inc@214)'+ __context() + '\n';
__blockLevel__++;
_strsubof+=__indent() +'set 1 #@(macro_inc@215)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'ta #@(macro_inc@216)'+ __context() + '\n';
__blockLevel__--;
_strsubof+=__indent() +'fi #@(macro_inc@217)'+ __context() + '\n';
_strsubof+=__indent() +'#(begin macro)scope_end()' + '\n';
__context__.push('(macro_inc@218)');
_strsubof+=scope_end();
__context__.pop();
_strsubof+=__indent() +'#(end macro)scope_end()' + '\n';
_strsubof+=__indent() +'swap #@(macro_inc@219)'+ __context() + '\n';
return _strsubof;
}
_str_main+=__indent() +' #@(macro_inc@221)'+ __context() + '\n';
_str_main+=__indent() +'# macro mulof() : A = stack-1, B= stack : stack-1 = A*B div 256, stack = A*B mod 256 #@(macro_inc@222)'+ __context() + '\n';
var _mulof; _mulof=0;
var mulof = function(){
 _mulof++;
var _strmulof; 
_strmulof='';
if (arguments.length != 0) throw 'Too much arguments provided to macro mulof()[' + [] +']';
_strmulof+=__indent() +'sbm     _mulofA' + (_mulof) + ' - 1 #@(macro_inc@224)'+ __context() + '\n';
_strmulof+=__indent() +'sbm     _mulofB' + (_mulof) + ' #@(macro_inc@225)'+ __context() + '\n';
_strmulof+=__indent() +'#(begin macro)scope_begin' + '\n';
__context__.push('(macro_inc@226)');
_strmulof+=scope_begin();
__context__.pop();
_strmulof+=__indent() +'#(end macro)scope_begin' + '\n';
_strmulof+=__indent() +'#(begin macro)lvar    _mulofABdiv256' + (_mulof) + ',    0' + '\n';
__context__.push('(macro_inc@227)');
_strmulof+=lvar(((isNaN(('_mulofABdiv256' + (_mulof) + '')*1))?('_mulofABdiv256' + (_mulof) + ''):(('_mulofABdiv256' + (_mulof) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmulof+=__indent() +'#(end macro)lvar    _mulofABdiv256' + (_mulof) + ',    0' + '\n';
_strmulof+=__indent() +'#(begin macro)lvar    _mulofABmod256' + (_mulof) + ',    0' + '\n';
__context__.push('(macro_inc@228)');
_strmulof+=lvar(((isNaN(('_mulofABmod256' + (_mulof) + '')*1))?('_mulofABmod256' + (_mulof) + ''):(('_mulofABmod256' + (_mulof) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmulof+=__indent() +'#(end macro)lvar    _mulofABmod256' + (_mulof) + ',    0' + '\n';
_strmulof+=__indent() +'push    _mulofB' + (_mulof) + ' #@(macro_inc@229)'+ __context() + '\n';
_strmulof+=__indent() +'loop #@(macro_inc@230)'+ __context() + '\n';
__blockLevel__++;
_strmulof+=__indent() +'push    _mulofABmod256' + (_mulof) + ' #@(macro_inc@231)'+ __context() + '\n';
_strmulof+=__indent() +'push    _mulofA' + (_mulof) + ' #@(macro_inc@232)'+ __context() + '\n';
_strmulof+=__indent() +'#(begin macro)addof' + '\n';
__context__.push('(macro_inc@233)');
_strmulof+=addof();
__context__.pop();
_strmulof+=__indent() +'#(end macro)addof' + '\n';
_strmulof+=__indent() +'pop     _mulofABmod256' + (_mulof) + ' #@(macro_inc@234)'+ __context() + '\n';
_strmulof+=__indent() +'push    _mulofABdiv256' + (_mulof) + ' #@(macro_inc@235)'+ __context() + '\n';
_strmulof+=__indent() +'add #@(macro_inc@236)'+ __context() + '\n';
_strmulof+=__indent() +'pop     _mulofABdiv256' + (_mulof) + ' #@(macro_inc@237)'+ __context() + '\n';
__blockLevel__--;
_strmulof+=__indent() +'endloop #@(macro_inc@238)'+ __context() + '\n';
_strmulof+=__indent() +'push    _mulofABmod256' + (_mulof) + ' #@(macro_inc@239)'+ __context() + '\n';
_strmulof+=__indent() +'pop     _mulofB' + (_mulof) + ' #@(macro_inc@240)'+ __context() + '\n';
_strmulof+=__indent() +'push    _mulofABdiv256' + (_mulof) + ' #@(macro_inc@241)'+ __context() + '\n';
_strmulof+=__indent() +'pop     _mulofA' + (_mulof) + ' #@(macro_inc@242)'+ __context() + '\n';
_strmulof+=__indent() +'#(begin macro)scope_end' + '\n';
__context__.push('(macro_inc@243)');
_strmulof+=scope_end();
__context__.pop();
_strmulof+=__indent() +'#(end macro)scope_end' + '\n';
return _strmulof;
}
_str_main+=__indent() +' #@(macro_inc@245)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@246)'+ __context() + '\n';
var _left_rewind; _left_rewind=0;
var left_rewind = function(array){
 _left_rewind++;
var _strleft_rewind; 
_strleft_rewind='';
if (typeof array == 'undefined') throw 'Parameter array is undefined in call of  macro left_rewind(array)[' + [array] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro left_rewind(array)[' + [array] +']';
_strleft_rewind+=__indent() +'push    1 #@(macro_inc@248)'+ __context() + '\n';
_strleft_rewind+=__indent() +'sbm     __looprewind' + (_left_rewind) + ' #@(macro_inc@249)'+ __context() + '\n';
_strleft_rewind+=__indent() +'while #@(macro_inc@250)'+ __context() + '\n';
__blockLevel__++;
_strleft_rewind+=__indent() +'#(begin macro)if_diff ' + (array) + '.pos,    0' + '\n';
__context__.push('(macro_inc@251)');
_strleft_rewind+=if_diff(((isNaN(('' + (array) + '.pos')*1))?('' + (array) + '.pos'):(('' + (array) + '.pos')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strleft_rewind+=__indent() +'#(end macro)if_diff ' + (array) + '.pos,    0' + '\n';
_strleft_rewind+=__indent() +'arotl ' + (array) + ' #@(macro_inc@252)'+ __context() + '\n';
__blockLevel__--;
_strleft_rewind+=__indent() +'else #@(macro_inc@253)'+ __context() + '\n';
__blockLevel__++;
_strleft_rewind+=__indent() +'#(begin macro)at_reset    __looprewind' + (_left_rewind) + '' + '\n';
__context__.push('(macro_inc@254)');
_strleft_rewind+=at_reset(((isNaN(('__looprewind' + (_left_rewind) + '')*1))?('__looprewind' + (_left_rewind) + ''):(('__looprewind' + (_left_rewind) + '')*1)));
__context__.pop();
_strleft_rewind+=__indent() +'#(end macro)at_reset    __looprewind' + (_left_rewind) + '' + '\n';
__blockLevel__--;
_strleft_rewind+=__indent() +'fi #@(macro_inc@255)'+ __context() + '\n';
__blockLevel__--;
_strleft_rewind+=__indent() +'wend #@(macro_inc@256)'+ __context() + '\n';
return _strleft_rewind;
}
_str_main+=__indent() +' #@(macro_inc@258)'+ __context() + '\n';
var _right_rewind; _right_rewind=0;
var right_rewind = function(array){
 _right_rewind++;
var _strright_rewind; 
_strright_rewind='';
if (typeof array == 'undefined') throw 'Parameter array is undefined in call of  macro right_rewind(array)[' + [array] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro right_rewind(array)[' + [array] +']';
_strright_rewind+=__indent() +'push ' + (array) + '.pos #@(macro_inc@260)'+ __context() + '\n';
_strright_rewind+=__indent() +'loop #@(macro_inc@261)'+ __context() + '\n';
__blockLevel__++;
_strright_rewind+=__indent() +'arotr ' + (array) + ' #@(macro_inc@262)'+ __context() + '\n';
__blockLevel__--;
_strright_rewind+=__indent() +'endloop #@(macro_inc@263)'+ __context() + '\n';
return _strright_rewind;
}
_str_main+=__indent() +' #@(macro_inc@265)'+ __context() + '\n';
_str_main+=__indent() +'# take value in stack #@(macro_inc@266)'+ __context() + '\n';
var _arraySet; _arraySet=0;
var arraySet = function(name, idx){
 _arraySet++;
var _strarraySet; 
_strarraySet='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro arraySet(name, idx)[' + [name, idx] +']';
if (typeof idx == 'undefined') throw 'Parameter idx is undefined in call of  macro arraySet(name, idx)[' + [name, idx] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro arraySet(name, idx)[' + [name, idx] +']';
_strarraySet+=__indent() +'sbm     asValue' + (_arraySet) + ' #@(macro_inc@268)'+ __context() + '\n';
_strarraySet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@269)'+ __context() + '\n';
_strarraySet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@270)'+ __context() + '\n';
_strarraySet+=__indent() +'equal #@(macro_inc@271)'+ __context() + '\n';
_strarraySet+=__indent() +'if #@(macro_inc@272)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'push    asValue' + (_arraySet) + ' #@(macro_inc@273)'+ __context() + '\n';
_strarraySet+=__indent() +'pop     ' + (name) + ' #@(macro_inc@274)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'else #@(macro_inc@275)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@276)'+ __context() + '\n';
_strarraySet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@277)'+ __context() + '\n';
_strarraySet+=__indent() +'sup #@(macro_inc@278)'+ __context() + '\n';
_strarraySet+=__indent() +'if #@(macro_inc@279)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@280)'+ __context() + '\n';
_strarraySet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@281)'+ __context() + '\n';
_strarraySet+=__indent() +'sub #@(macro_inc@282)'+ __context() + '\n';
_strarraySet+=__indent() +'loop #@(macro_inc@283)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'arotr   ' + (name) + ' #@(macro_inc@284)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'endloop #@(macro_inc@285)'+ __context() + '\n';
_strarraySet+=__indent() +'push    asValue' + (_arraySet) + ' #@(macro_inc@286)'+ __context() + '\n';
_strarraySet+=__indent() +'pop     ' + (name) + ' #@(macro_inc@287)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'else #@(macro_inc@288)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@289)'+ __context() + '\n';
_strarraySet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@290)'+ __context() + '\n';
_strarraySet+=__indent() +'sub #@(macro_inc@291)'+ __context() + '\n';
_strarraySet+=__indent() +'loop #@(macro_inc@292)'+ __context() + '\n';
__blockLevel__++;
_strarraySet+=__indent() +'arotl   ' + (name) + ' #@(macro_inc@293)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'endloop #@(macro_inc@294)'+ __context() + '\n';
_strarraySet+=__indent() +'push    asValue' + (_arraySet) + ' #@(macro_inc@295)'+ __context() + '\n';
_strarraySet+=__indent() +'pop     ' + (name) + ' #@(macro_inc@296)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'fi #@(macro_inc@297)'+ __context() + '\n';
__blockLevel__--;
_strarraySet+=__indent() +'fi #@(macro_inc@298)'+ __context() + '\n';
_strarraySet+=__indent() +'drop #@(macro_inc@299)'+ __context() + '\n';
return _strarraySet;
}
_str_main+=__indent() +' #@(macro_inc@301)'+ __context() + '\n';
_str_main+=__indent() +'# push value onto stack #@(macro_inc@302)'+ __context() + '\n';
var _arrayGet; _arrayGet=0;
var arrayGet = function(name, idx){
 _arrayGet++;
var _strarrayGet; 
_strarrayGet='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro arrayGet(name, idx)[' + [name, idx] +']';
if (typeof idx == 'undefined') throw 'Parameter idx is undefined in call of  macro arrayGet(name, idx)[' + [name, idx] +']';
if (arguments.length != 2) throw 'Too much arguments provided to macro arrayGet(name, idx)[' + [name, idx] +']';
_strarrayGet+=__indent() +'push    0 #@(macro_inc@304)'+ __context() + '\n';
_strarrayGet+=__indent() +'sbm     agValue' + (_arrayGet) + ' #@(macro_inc@305)'+ __context() + '\n';
_strarrayGet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@306)'+ __context() + '\n';
_strarrayGet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@307)'+ __context() + '\n';
_strarrayGet+=__indent() +'equal #@(macro_inc@308)'+ __context() + '\n';
_strarrayGet+=__indent() +'if #@(macro_inc@309)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'push    ' + (name) + ' #@(macro_inc@310)'+ __context() + '\n';
_strarrayGet+=__indent() +'pop     agValue' + (_arrayGet) + ' #@(macro_inc@311)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'else #@(macro_inc@312)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@313)'+ __context() + '\n';
_strarrayGet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@314)'+ __context() + '\n';
_strarrayGet+=__indent() +'sup #@(macro_inc@315)'+ __context() + '\n';
_strarrayGet+=__indent() +'if #@(macro_inc@316)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@317)'+ __context() + '\n';
_strarrayGet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@318)'+ __context() + '\n';
_strarrayGet+=__indent() +'sub #@(macro_inc@319)'+ __context() + '\n';
_strarrayGet+=__indent() +'loop #@(macro_inc@320)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'arotr   ' + (name) + ' #@(macro_inc@321)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'endloop #@(macro_inc@322)'+ __context() + '\n';
_strarrayGet+=__indent() +'push     ' + (name) + ' #@(macro_inc@323)'+ __context() + '\n';
_strarrayGet+=__indent() +'pop      agValue' + (_arrayGet) + ' #@(macro_inc@324)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'else #@(macro_inc@325)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'push    ' + (idx) + ' #@(macro_inc@326)'+ __context() + '\n';
_strarrayGet+=__indent() +'push    ' + (name) + '.pos #@(macro_inc@327)'+ __context() + '\n';
_strarrayGet+=__indent() +'sub #@(macro_inc@328)'+ __context() + '\n';
_strarrayGet+=__indent() +'loop #@(macro_inc@329)'+ __context() + '\n';
__blockLevel__++;
_strarrayGet+=__indent() +'arotl   ' + (name) + ' #@(macro_inc@330)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'endloop #@(macro_inc@331)'+ __context() + '\n';
_strarrayGet+=__indent() +'push     ' + (name) + ' #@(macro_inc@332)'+ __context() + '\n';
_strarrayGet+=__indent() +'pop      agValue' + (_arrayGet) + ' #@(macro_inc@333)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'fi #@(macro_inc@334)'+ __context() + '\n';
__blockLevel__--;
_strarrayGet+=__indent() +'fi #@(macro_inc@335)'+ __context() + '\n';
return _strarrayGet;
}
_str_main+=__indent() +' #@(macro_inc@337)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@338)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@339)'+ __context() + '\n';
_str_main+=__indent() +'# macro popouthexa() : from head of stack value (from 0 to 15) write out hexa (from 0 to 9 and A to F) #@(macro_inc@340)'+ __context() + '\n';
var _popouthexa; _popouthexa=0;
var popouthexa = function(){
 _popouthexa++;
var _strpopouthexa; 
_strpopouthexa='';
if (arguments.length != 0) throw 'Too much arguments provided to macro popouthexa()[' + [] +']';
_strpopouthexa+=__indent() +'sbm     _input' + (_popouthexa) + ' #@(macro_inc@342)'+ __context() + '\n';
_strpopouthexa+=__indent() +'#(begin macro)if_sup  _input' + (_popouthexa) + ',    9' + '\n';
__context__.push('(macro_inc@343)');
_strpopouthexa+=if_sup(((isNaN(('_input' + (_popouthexa) + '')*1))?('_input' + (_popouthexa) + ''):(('_input' + (_popouthexa) + '')*1)),((isNaN(('9')*1))?('9'):(('9')*1)));
__context__.pop();
_strpopouthexa+=__indent() +'#(end macro)if_sup  _input' + (_popouthexa) + ',    9' + '\n';
_strpopouthexa+=__indent() +'#(begin macro)at_add("_input" + _popouthexa, "\'7\'")' + '\n';
__context__.push('(macro_inc@344)');
_strpopouthexa+=at_add("_input" + _popouthexa, "'7'");
__context__.pop();
_strpopouthexa+=__indent() +'#(end macro)at_add("_input" + _popouthexa, "\'7\'")' + '\n';
__blockLevel__--;
_strpopouthexa+=__indent() +'else #@(macro_inc@345)'+ __context() + '\n';
__blockLevel__++;
_strpopouthexa+=__indent() +'#(begin macro)at_add("_input" + _popouthexa, "\'0\'")' + '\n';
__context__.push('(macro_inc@346)');
_strpopouthexa+=at_add("_input" + _popouthexa, "'0'");
__context__.pop();
_strpopouthexa+=__indent() +'#(end macro)at_add("_input" + _popouthexa, "\'0\'")' + '\n';
__blockLevel__--;
_strpopouthexa+=__indent() +'fi #@(macro_inc@347)'+ __context() + '\n';
_strpopouthexa+=__indent() +'pop out #@(macro_inc@348)'+ __context() + '\n';
return _strpopouthexa;
}
_str_main+=__indent() +' #@(macro_inc@350)'+ __context() + '\n';
_str_main+=__indent() +'# macro popout8hexa() : from head of stack the 8 bit value is write out in hexa #@(macro_inc@351)'+ __context() + '\n';
var _popout8hexa; _popout8hexa=0;
var popout8hexa = function(){
 _popout8hexa++;
var _strpopout8hexa; 
_strpopout8hexa='';
if (arguments.length != 0) throw 'Too much arguments provided to macro popout8hexa()[' + [] +']';
_strpopout8hexa+=__indent() +'push    16 #@(macro_inc@353)'+ __context() + '\n';
_strpopout8hexa+=__indent() +'div #@(macro_inc@354)'+ __context() + '\n';
_strpopout8hexa+=__indent() +'#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop' + '\n';
__context__.push('(macro_inc@355)');
_strpopout8hexa+=popouthexa();
__context__.pop();
_strpopout8hexa+=__indent() +'#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop' + '\n';
_strpopout8hexa+=__indent() +'#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop' + '\n';
__context__.push('(macro_inc@356)');
_strpopout8hexa+=popouthexa();
__context__.pop();
_strpopout8hexa+=__indent() +'#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop' + '\n';
return _strpopout8hexa;
}
_str_main+=__indent() +' #@(macro_inc@358)'+ __context() + '\n';
var _writeDigit; _writeDigit=0;
var writeDigit = function(a){
 _writeDigit++;
var _strwriteDigit; 
_strwriteDigit='';
if (typeof a == 'undefined') throw 'Parameter a is undefined in call of  macro writeDigit(a)[' + [a] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro writeDigit(a)[' + [a] +']';
_strwriteDigit+=__indent() +'push    ' + (a) + ' #@(macro_inc@360)'+ __context() + '\n';
_strwriteDigit+=__indent() +'add     \'0\' #@(macro_inc@361)'+ __context() + '\n';
_strwriteDigit+=__indent() +'pop     out #@(macro_inc@362)'+ __context() + '\n';
return _strwriteDigit;
}
_str_main+=__indent() +' #@(macro_inc@364)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@365)'+ __context() + '\n';
var DECIMALSIZE;DECIMALSIZE='3'; DECIMALSIZE=(isNaN(DECIMALSIZE*1))?(DECIMALSIZE):(DECIMALSIZE*1); 
_str_main+=__indent() +'var __wbdoutput*' + (DECIMALSIZE) + ' #@(macro_inc@367)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@368)'+ __context() + '\n';
_str_main+=__indent() +'# a Byte in stack : output its decimal value #@(macro_inc@369)'+ __context() + '\n';
var _writeByteDecimal; _writeByteDecimal=0;
var writeByteDecimal = function(){
 _writeByteDecimal++;
var _strwriteByteDecimal; 
_strwriteByteDecimal='';
if (arguments.length != 0) throw 'Too much arguments provided to macro writeByteDecimal()[' + [] +']';
_strwriteByteDecimal+=__indent() +'sbm _wbdinput' + (_writeByteDecimal) + ' #@(macro_inc@371)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'push ' + (DECIMALSIZE) + ' #@(macro_inc@372)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'loop #@(macro_inc@373)'+ __context() + '\n';
__blockLevel__++;
_strwriteByteDecimal+=__indent() +'# output = input mod 10 ; input = input div 10 #@(macro_inc@374)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)divide  _wbdinput' + (_writeByteDecimal) + ',  10, _wbdinput' + (_writeByteDecimal) + ',  __wbdoutput' + '\n';
__context__.push('(macro_inc@375)');
_strwriteByteDecimal+=divide(((isNaN(('_wbdinput' + (_writeByteDecimal) + '')*1))?('_wbdinput' + (_writeByteDecimal) + ''):(('_wbdinput' + (_writeByteDecimal) + '')*1)),((isNaN(('10')*1))?('10'):(('10')*1)),((isNaN(('_wbdinput' + (_writeByteDecimal) + '')*1))?('_wbdinput' + (_writeByteDecimal) + ''):(('_wbdinput' + (_writeByteDecimal) + '')*1)),((isNaN(('__wbdoutput')*1))?('__wbdoutput'):(('__wbdoutput')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)divide  _wbdinput' + (_writeByteDecimal) + ',  10, _wbdinput' + (_writeByteDecimal) + ',  __wbdoutput' + '\n';
_strwriteByteDecimal+=__indent() +'arotl __wbdoutput #@(macro_inc@376)'+ __context() + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'endloop #@(macro_inc@377)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)scope_begin' + '\n';
__context__.push('(macro_inc@378)');
_strwriteByteDecimal+=scope_begin();
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)scope_begin' + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)lvar    prefixzero' + (_writeByteDecimal) + ', 1' + '\n';
__context__.push('(macro_inc@379)');
_strwriteByteDecimal+=lvar(((isNaN(('prefixzero' + (_writeByteDecimal) + '')*1))?('prefixzero' + (_writeByteDecimal) + ''):(('prefixzero' + (_writeByteDecimal) + '')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)lvar    prefixzero' + (_writeByteDecimal) + ', 1' + '\n';
_strwriteByteDecimal+=__indent() +'push    ' + (DECIMALSIZE) + ' #@(macro_inc@380)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'sbm     __wbdcnt' + (_writeByteDecimal) + ' #@(macro_inc@381)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'loop #@(macro_inc@382)'+ __context() + '\n';
__blockLevel__++;
_strwriteByteDecimal+=__indent() +'arotr   __wbdoutput #@(macro_inc@383)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)if_sup   __wbdcnt' + (_writeByteDecimal) + ',    1   # cnt == 3 or cnt == 2' + '\n';
__context__.push('(macro_inc@384)');
_strwriteByteDecimal+=if_sup(((isNaN(('__wbdcnt' + (_writeByteDecimal) + '')*1))?('__wbdcnt' + (_writeByteDecimal) + ''):(('__wbdcnt' + (_writeByteDecimal) + '')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)if_sup   __wbdcnt' + (_writeByteDecimal) + ',    1   # cnt == 3 or cnt == 2' + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)if_diff __wbdoutput, 0' + '\n';
__context__.push('(macro_inc@385)');
_strwriteByteDecimal+=if_diff(((isNaN(('__wbdoutput')*1))?('__wbdoutput'):(('__wbdoutput')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)if_diff __wbdoutput, 0' + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)writeDigit  __wbdoutput' + '\n';
__context__.push('(macro_inc@386)');
_strwriteByteDecimal+=writeDigit(((isNaN(('__wbdoutput')*1))?('__wbdoutput'):(('__wbdoutput')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)writeDigit  __wbdoutput' + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)at_set  prefixzero' + (_writeByteDecimal) + ', 0' + '\n';
__context__.push('(macro_inc@387)');
_strwriteByteDecimal+=at_set(((isNaN(('prefixzero' + (_writeByteDecimal) + '')*1))?('prefixzero' + (_writeByteDecimal) + ''):(('prefixzero' + (_writeByteDecimal) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)at_set  prefixzero' + (_writeByteDecimal) + ', 0' + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'else #@(macro_inc@388)'+ __context() + '\n';
__blockLevel__++;
_strwriteByteDecimal+=__indent() +'#(begin macro)if_equal    prefixzero' + (_writeByteDecimal) + ', 0' + '\n';
__context__.push('(macro_inc@389)');
_strwriteByteDecimal+=if_equal(((isNaN(('prefixzero' + (_writeByteDecimal) + '')*1))?('prefixzero' + (_writeByteDecimal) + ''):(('prefixzero' + (_writeByteDecimal) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)if_equal    prefixzero' + (_writeByteDecimal) + ', 0' + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)writeDigit  __wbdoutput' + '\n';
__context__.push('(macro_inc@390)');
_strwriteByteDecimal+=writeDigit(((isNaN(('__wbdoutput')*1))?('__wbdoutput'):(('__wbdoutput')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)writeDigit  __wbdoutput' + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'fi #@(macro_inc@391)'+ __context() + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'fi #@(macro_inc@392)'+ __context() + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'else #@(macro_inc@393)'+ __context() + '\n';
__blockLevel__++;
_strwriteByteDecimal+=__indent() +'#(begin macro)writeDigit  __wbdoutput' + '\n';
__context__.push('(macro_inc@394)');
_strwriteByteDecimal+=writeDigit(((isNaN(('__wbdoutput')*1))?('__wbdoutput'):(('__wbdoutput')*1)));
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)writeDigit  __wbdoutput' + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'fi #@(macro_inc@395)'+ __context() + '\n';
__blockLevel__--;
_strwriteByteDecimal+=__indent() +'endloop #@(macro_inc@396)'+ __context() + '\n';
_strwriteByteDecimal+=__indent() +'#(begin macro)scope_end' + '\n';
__context__.push('(macro_inc@397)');
_strwriteByteDecimal+=scope_end();
__context__.pop();
_strwriteByteDecimal+=__indent() +'#(end macro)scope_end' + '\n';
_strwriteByteDecimal+=__indent() +'drop    # remove push #@(macro_inc@398)'+ __context() + '\n';
return _strwriteByteDecimal;
}
_str_main+=__indent() +' #@(macro_inc@400)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@401)'+ __context() + '\n';
_str_main+=__indent() +' #@(macro_inc@402)'+ __context() + '\n';
_str_main+=__indent() +'# macro print(aString) : print out a string #@(macro_inc@403)'+ __context() + '\n';
var _print; _print=0;
var print = function(aString){
 _print++;
var _strprint; 
_strprint='';
if (typeof aString == 'undefined') throw 'Parameter aString is undefined in call of  macro print(aString)[' + [aString] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro print(aString)[' + [aString] +']';
_strprint+=__indent() +'push    0 #@(macro_inc@405)'+ __context() + '\n';
var __prev; __prev = 0;
for (var istr=0; istr < aString.length ; istr++) {
var __ascii; __ascii = aString[istr].charCodeAt(0);
var __move; __move = __ascii - __prev;
var __dist ; __dist = (__move > 0)?__move:-__move;
if (__dist < __ascii) { // shorter to move
if (__move > 0 ) {
_strprint+=__indent() +'add     ' + (__dist) + ' #@(macro_inc@413)'+ __context() + '\n';
} else {
if (__dist != 0) {
_strprint+=__indent() +'sub     ' + (__dist) + ' #@(macro_inc@416)'+ __context() + '\n';
}
}
} else {
_strprint+=__indent() +'set     ' + (__ascii) + ' #@(macro_inc@420)'+ __context() + '\n';
}
_strprint+=__indent() +'out             # ' + ((aString[istr].charCodeAt(0)>31?("\'"+aString[istr]+"\'"):"")) + ' #@(macro_inc@422)'+ __context() + '\n';
__prev  = __ascii;
}
_strprint+=__indent() +'drop #@(macro_inc@425)'+ __context() + '\n';
return _strprint;
}
_str_main+=__indent() +'#(end include)../../samples/include/macro.inc' + '\n';
_str_main+=__indent() +'#(begin include)../../samples/include/matrix.inc' + '\n';
_str_main+=__indent() +'# declare the matrix #@(matrix_inc@1)'+ __context() + '\n';
var _varMatrix; _varMatrix=0;
var varMatrix = function(name, block_width, block_height, nbblock_width, nbblock_height){
 _varMatrix++;
var _strvarMatrix; 
_strvarMatrix='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_width == 'undefined') throw 'Parameter block_width is undefined in call of  macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_height == 'undefined') throw 'Parameter block_height is undefined in call of  macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_width == 'undefined') throw 'Parameter nbblock_width is undefined in call of  macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_height == 'undefined') throw 'Parameter nbblock_height is undefined in call of  macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
if (arguments.length != 5) throw 'Too much arguments provided to macro varMatrix(name, block_width, block_height, nbblock_width, nbblock_height)[' + [name, block_width, block_height, nbblock_width, nbblock_height] +']';
_strvarMatrix+=__indent() +'var ' + (name) + '_width #@(matrix_inc@3)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_height #@(matrix_inc@4)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_nbwidth #@(matrix_inc@5)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_nbheight #@(matrix_inc@6)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_bwidth #@(matrix_inc@7)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_bheight #@(matrix_inc@8)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_width*nbblock_width) + ' #@(matrix_inc@9)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_width #@(matrix_inc@10)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_height*nbblock_height) + ' #@(matrix_inc@11)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_height #@(matrix_inc@12)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (nbblock_width) + ' #@(matrix_inc@13)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_nbwidth #@(matrix_inc@14)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (nbblock_height) + ' #@(matrix_inc@15)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_nbheight #@(matrix_inc@16)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_width) + ' #@(matrix_inc@17)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_bwidth #@(matrix_inc@18)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_height) + ' #@(matrix_inc@19)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_bheight #@(matrix_inc@20)'+ __context() + '\n';
for (var yy=0 ; yy < nbblock_height; yy++) {
for(var xx=0 ; xx < nbblock_width; xx++) {
_strvarMatrix+=__indent() +'var ' + (name) + '_' + (yy*nbblock_width+xx) + '*' + (block_width*block_height) + ' #@(matrix_inc@23)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_' + (yy*nbblock_width+xx) + '_width #@(matrix_inc@24)'+ __context() + '\n';
_strvarMatrix+=__indent() +'var ' + (name) + '_' + (yy*nbblock_width+xx) + '_height #@(matrix_inc@25)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_width) + ' #@(matrix_inc@26)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_' + (yy*nbblock_width+xx) + '_width #@(matrix_inc@27)'+ __context() + '\n';
_strvarMatrix+=__indent() +'push    ' + (block_height) + ' #@(matrix_inc@28)'+ __context() + '\n';
_strvarMatrix+=__indent() +'pop     ' + (name) + '_' + (yy*nbblock_width+xx) + '_height #@(matrix_inc@29)'+ __context() + '\n';
}
}
return _strvarMatrix;
}
_str_main+=__indent() +' #@(matrix_inc@33)'+ __context() + '\n';
_str_main+=__indent() +'# take value in stack #@(matrix_inc@34)'+ __context() + '\n';
_str_main+=__indent() +'# all params are immediate except x,y #@(matrix_inc@35)'+ __context() + '\n';
var _matrixSet; _matrixSet=0;
var matrixSet = function(name, x,y, block_width, block_height, nbblock_width, nbblock_height){
 _matrixSet++;
var _strmatrixSet; 
_strmatrixSet='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_width == 'undefined') throw 'Parameter block_width is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_height == 'undefined') throw 'Parameter block_height is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_width == 'undefined') throw 'Parameter nbblock_width is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_height == 'undefined') throw 'Parameter nbblock_height is undefined in call of  macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (arguments.length != 7) throw 'Too much arguments provided to macro matrixSet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
_strmatrixSet+=__indent() +'sbm mvalue' + (_matrixSet) + ' #@(matrix_inc@37)'+ __context() + '\n';
_strmatrixSet+=__indent() +'#(begin macro)scope_begin' + '\n';
__context__.push('(matrix_inc@38)');
_strmatrixSet+=scope_begin();
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)scope_begin' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msblockX' + (_matrixSet) + ', 0' + '\n';
__context__.push('(matrix_inc@39)');
_strmatrixSet+=lvar(((isNaN(('msblockX' + (_matrixSet) + '')*1))?('msblockX' + (_matrixSet) + ''):(('msblockX' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msblockX' + (_matrixSet) + ', 0' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msblockY' + (_matrixSet) + ', 0' + '\n';
__context__.push('(matrix_inc@40)');
_strmatrixSet+=lvar(((isNaN(('msblockY' + (_matrixSet) + '')*1))?('msblockY' + (_matrixSet) + ''):(('msblockY' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msblockY' + (_matrixSet) + ', 0' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msblockNum' + (_matrixSet) + ',   0' + '\n';
__context__.push('(matrix_inc@41)');
_strmatrixSet+=lvar(((isNaN(('msblockNum' + (_matrixSet) + '')*1))?('msblockNum' + (_matrixSet) + ''):(('msblockNum' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msblockNum' + (_matrixSet) + ',   0' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msinbX' + (_matrixSet) + ',   0' + '\n';
__context__.push('(matrix_inc@42)');
_strmatrixSet+=lvar(((isNaN(('msinbX' + (_matrixSet) + '')*1))?('msinbX' + (_matrixSet) + ''):(('msinbX' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msinbX' + (_matrixSet) + ',   0' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msinbY' + (_matrixSet) + ',   0' + '\n';
__context__.push('(matrix_inc@43)');
_strmatrixSet+=lvar(((isNaN(('msinbY' + (_matrixSet) + '')*1))?('msinbY' + (_matrixSet) + ''):(('msinbY' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msinbY' + (_matrixSet) + ',   0' + '\n';
_strmatrixSet+=__indent() +'#(begin macro)lvar     msinbIdx' + (_matrixSet) + ',   0' + '\n';
__context__.push('(matrix_inc@44)');
_strmatrixSet+=lvar(((isNaN(('msinbIdx' + (_matrixSet) + '')*1))?('msinbIdx' + (_matrixSet) + ''):(('msinbIdx' + (_matrixSet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)lvar     msinbIdx' + (_matrixSet) + ',   0' + '\n';
_strmatrixSet+=__indent() +' #@(matrix_inc@45)'+ __context() + '\n';
_strmatrixSet+=__indent() +'# block x, inblock x #@(matrix_inc@46)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (x) + ' #@(matrix_inc@47)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (block_width) + ' #@(matrix_inc@48)'+ __context() + '\n';
_strmatrixSet+=__indent() +'div #@(matrix_inc@49)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msblockX' + (_matrixSet) + ' #@(matrix_inc@50)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msinbX' + (_matrixSet) + ' #@(matrix_inc@51)'+ __context() + '\n';
_strmatrixSet+=__indent() +'# block y, in block y #@(matrix_inc@52)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (y) + ' #@(matrix_inc@53)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (block_height) + ' #@(matrix_inc@54)'+ __context() + '\n';
_strmatrixSet+=__indent() +'div #@(matrix_inc@55)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msblockY' + (_matrixSet) + ' #@(matrix_inc@56)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msinbY' + (_matrixSet) + ' #@(matrix_inc@57)'+ __context() + '\n';
_strmatrixSet+=__indent() +'# array index (in block) #@(matrix_inc@58)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     msinbY' + (_matrixSet) + ' #@(matrix_inc@59)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (block_width) + ' #@(matrix_inc@60)'+ __context() + '\n';
_strmatrixSet+=__indent() +'mul #@(matrix_inc@61)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     msinbX' + (_matrixSet) + ' #@(matrix_inc@62)'+ __context() + '\n';
_strmatrixSet+=__indent() +'add #@(matrix_inc@63)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msinbIdx' + (_matrixSet) + ' #@(matrix_inc@64)'+ __context() + '\n';
_strmatrixSet+=__indent() +'# block number #@(matrix_inc@65)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     msblockY' + (_matrixSet) + ' #@(matrix_inc@66)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (nbblock_width) + ' #@(matrix_inc@67)'+ __context() + '\n';
_strmatrixSet+=__indent() +'mul #@(matrix_inc@68)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     msblockX' + (_matrixSet) + ' #@(matrix_inc@69)'+ __context() + '\n';
_strmatrixSet+=__indent() +'add #@(matrix_inc@70)'+ __context() + '\n';
_strmatrixSet+=__indent() +'pop      msblockNum' + (_matrixSet) + ' #@(matrix_inc@71)'+ __context() + '\n';
for (var bb=0 ; bb < nbblock_width*nbblock_height; bb++) {
_strmatrixSet+=__indent() +'push     msblockNum' + (_matrixSet) + ' #@(matrix_inc@73)'+ __context() + '\n';
_strmatrixSet+=__indent() +'push     ' + (bb) + ' #@(matrix_inc@74)'+ __context() + '\n';
_strmatrixSet+=__indent() +'equal #@(matrix_inc@75)'+ __context() + '\n';
_strmatrixSet+=__indent() +'if #@(matrix_inc@76)'+ __context() + '\n';
__blockLevel__++;
_strmatrixSet+=__indent() +'push    mvalue' + (_matrixSet) + ' #@(matrix_inc@77)'+ __context() + '\n';
_strmatrixSet+=__indent() +'#(begin macro)arraySet    ' + (name) + '_' + (bb) + ', msinbIdx' + (_matrixSet) + '' + '\n';
__context__.push('(matrix_inc@78)');
_strmatrixSet+=arraySet(((isNaN(('' + (name) + '_' + (bb) + '')*1))?('' + (name) + '_' + (bb) + ''):(('' + (name) + '_' + (bb) + '')*1)),((isNaN(('msinbIdx' + (_matrixSet) + '')*1))?('msinbIdx' + (_matrixSet) + ''):(('msinbIdx' + (_matrixSet) + '')*1)));
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)arraySet    ' + (name) + '_' + (bb) + ', msinbIdx' + (_matrixSet) + '' + '\n';
__blockLevel__--;
_strmatrixSet+=__indent() +'else #@(matrix_inc@79)'+ __context() + '\n';
__blockLevel__++;
}
for (var bb=0 ; bb < nbblock_width*nbblock_height; bb++) {
__blockLevel__--;
_strmatrixSet+=__indent() +'fi #@(matrix_inc@82)'+ __context() + '\n';
}
_strmatrixSet+=__indent() +'#(begin macro)scope_end' + '\n';
__context__.push('(matrix_inc@84)');
_strmatrixSet+=scope_end();
__context__.pop();
_strmatrixSet+=__indent() +'#(end macro)scope_end' + '\n';
_strmatrixSet+=__indent() +'drop #@(matrix_inc@85)'+ __context() + '\n';
return _strmatrixSet;
}
_str_main+=__indent() +' #@(matrix_inc@87)'+ __context() + '\n';
_str_main+=__indent() +'# push value to stack #@(matrix_inc@88)'+ __context() + '\n';
_str_main+=__indent() +'# all params are immediate except x,y #@(matrix_inc@89)'+ __context() + '\n';
var _matrixGet; _matrixGet=0;
var matrixGet = function(name, x,y, block_width, block_height, nbblock_width, nbblock_height){
 _matrixGet++;
var _strmatrixGet; 
_strmatrixGet='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_width == 'undefined') throw 'Parameter block_width is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof block_height == 'undefined') throw 'Parameter block_height is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_width == 'undefined') throw 'Parameter nbblock_width is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (typeof nbblock_height == 'undefined') throw 'Parameter nbblock_height is undefined in call of  macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
if (arguments.length != 7) throw 'Too much arguments provided to macro matrixGet(name, x,y, block_width, block_height, nbblock_width, nbblock_height)[' + [name, x,y, block_width, block_height, nbblock_width, nbblock_height] +']';
_strmatrixGet+=__indent() +'push    0 #@(matrix_inc@91)'+ __context() + '\n';
_strmatrixGet+=__indent() +'sbm mgvalue' + (_matrixGet) + ' #@(matrix_inc@92)'+ __context() + '\n';
_strmatrixGet+=__indent() +'#(begin macro)scope_begin' + '\n';
__context__.push('(matrix_inc@93)');
_strmatrixGet+=scope_begin();
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)scope_begin' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mgblockX' + (_matrixGet) + ', 0' + '\n';
__context__.push('(matrix_inc@94)');
_strmatrixGet+=lvar(((isNaN(('mgblockX' + (_matrixGet) + '')*1))?('mgblockX' + (_matrixGet) + ''):(('mgblockX' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mgblockX' + (_matrixGet) + ', 0' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mgblockY' + (_matrixGet) + ', 0' + '\n';
__context__.push('(matrix_inc@95)');
_strmatrixGet+=lvar(((isNaN(('mgblockY' + (_matrixGet) + '')*1))?('mgblockY' + (_matrixGet) + ''):(('mgblockY' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mgblockY' + (_matrixGet) + ', 0' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mgblockNum' + (_matrixGet) + ',   0' + '\n';
__context__.push('(matrix_inc@96)');
_strmatrixGet+=lvar(((isNaN(('mgblockNum' + (_matrixGet) + '')*1))?('mgblockNum' + (_matrixGet) + ''):(('mgblockNum' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mgblockNum' + (_matrixGet) + ',   0' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mginbX' + (_matrixGet) + ',   0' + '\n';
__context__.push('(matrix_inc@97)');
_strmatrixGet+=lvar(((isNaN(('mginbX' + (_matrixGet) + '')*1))?('mginbX' + (_matrixGet) + ''):(('mginbX' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mginbX' + (_matrixGet) + ',   0' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mginbY' + (_matrixGet) + ',   0' + '\n';
__context__.push('(matrix_inc@98)');
_strmatrixGet+=lvar(((isNaN(('mginbY' + (_matrixGet) + '')*1))?('mginbY' + (_matrixGet) + ''):(('mginbY' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mginbY' + (_matrixGet) + ',   0' + '\n';
_strmatrixGet+=__indent() +'#(begin macro)lvar     mginbIdx' + (_matrixGet) + ',   0' + '\n';
__context__.push('(matrix_inc@99)');
_strmatrixGet+=lvar(((isNaN(('mginbIdx' + (_matrixGet) + '')*1))?('mginbIdx' + (_matrixGet) + ''):(('mginbIdx' + (_matrixGet) + '')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)lvar     mginbIdx' + (_matrixGet) + ',   0' + '\n';
_strmatrixGet+=__indent() +' #@(matrix_inc@100)'+ __context() + '\n';
_strmatrixGet+=__indent() +'# block x, in block x #@(matrix_inc@101)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (x) + ' #@(matrix_inc@102)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (block_width) + ' #@(matrix_inc@103)'+ __context() + '\n';
_strmatrixGet+=__indent() +'div #@(matrix_inc@104)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mgblockX' + (_matrixGet) + ' #@(matrix_inc@105)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mginbX' + (_matrixGet) + ' #@(matrix_inc@106)'+ __context() + '\n';
_strmatrixGet+=__indent() +'# block y, in block y #@(matrix_inc@107)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (y) + ' #@(matrix_inc@108)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (block_height) + ' #@(matrix_inc@109)'+ __context() + '\n';
_strmatrixGet+=__indent() +'div #@(matrix_inc@110)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mgblockY' + (_matrixGet) + ' #@(matrix_inc@111)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mginbY' + (_matrixGet) + ' #@(matrix_inc@112)'+ __context() + '\n';
_strmatrixGet+=__indent() +'# array index (in block) #@(matrix_inc@113)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     mginbY' + (_matrixGet) + ' #@(matrix_inc@114)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (block_width) + ' #@(matrix_inc@115)'+ __context() + '\n';
_strmatrixGet+=__indent() +'mul #@(matrix_inc@116)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     mginbX' + (_matrixGet) + ' #@(matrix_inc@117)'+ __context() + '\n';
_strmatrixGet+=__indent() +'add #@(matrix_inc@118)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mginbIdx' + (_matrixGet) + ' #@(matrix_inc@119)'+ __context() + '\n';
_strmatrixGet+=__indent() +'# block number #@(matrix_inc@120)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     mgblockY' + (_matrixGet) + ' #@(matrix_inc@121)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (nbblock_width) + ' #@(matrix_inc@122)'+ __context() + '\n';
_strmatrixGet+=__indent() +'mul #@(matrix_inc@123)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     mgblockX' + (_matrixGet) + ' #@(matrix_inc@124)'+ __context() + '\n';
_strmatrixGet+=__indent() +'add #@(matrix_inc@125)'+ __context() + '\n';
_strmatrixGet+=__indent() +'pop      mgblockNum' + (_matrixGet) + ' #@(matrix_inc@126)'+ __context() + '\n';
for (var bb=0 ; bb < nbblock_width*nbblock_height; bb++) {
_strmatrixGet+=__indent() +'push     mgblockNum' + (_matrixGet) + ' #@(matrix_inc@128)'+ __context() + '\n';
_strmatrixGet+=__indent() +'push     ' + (bb) + ' #@(matrix_inc@129)'+ __context() + '\n';
_strmatrixGet+=__indent() +'equal #@(matrix_inc@130)'+ __context() + '\n';
_strmatrixGet+=__indent() +'if #@(matrix_inc@131)'+ __context() + '\n';
__blockLevel__++;
_strmatrixGet+=__indent() +'#(begin macro)arrayGet    ' + (name) + '_' + (bb) + ', mginbIdx' + (_matrixGet) + '' + '\n';
__context__.push('(matrix_inc@132)');
_strmatrixGet+=arrayGet(((isNaN(('' + (name) + '_' + (bb) + '')*1))?('' + (name) + '_' + (bb) + ''):(('' + (name) + '_' + (bb) + '')*1)),((isNaN(('mginbIdx' + (_matrixGet) + '')*1))?('mginbIdx' + (_matrixGet) + ''):(('mginbIdx' + (_matrixGet) + '')*1)));
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)arrayGet    ' + (name) + '_' + (bb) + ', mginbIdx' + (_matrixGet) + '' + '\n';
_strmatrixGet+=__indent() +'pop     mgvalue' + (_matrixGet) + ' #@(matrix_inc@133)'+ __context() + '\n';
__blockLevel__--;
_strmatrixGet+=__indent() +'else #@(matrix_inc@134)'+ __context() + '\n';
__blockLevel__++;
}
for (var bb=0 ; bb < nbblock_width*nbblock_height; bb++) {
__blockLevel__--;
_strmatrixGet+=__indent() +'fi #@(matrix_inc@137)'+ __context() + '\n';
}
_strmatrixGet+=__indent() +'#(begin macro)scope_end' + '\n';
__context__.push('(matrix_inc@139)');
_strmatrixGet+=scope_end();
__context__.pop();
_strmatrixGet+=__indent() +'#(end macro)scope_end' + '\n';
return _strmatrixGet;
}
_str_main+=__indent() +'#(end include)../../samples/include/matrix.inc' + '\n';
_str_main+=__indent() +' #@(main@4)'+ __context() + '\n';
var BLOCK_WIDTH;BLOCK_WIDTH='16'; BLOCK_WIDTH=(isNaN(BLOCK_WIDTH*1))?(BLOCK_WIDTH):(BLOCK_WIDTH*1); 
var BLOCK_HEIGHT;BLOCK_HEIGHT='15'; BLOCK_HEIGHT=(isNaN(BLOCK_HEIGHT*1))?(BLOCK_HEIGHT):(BLOCK_HEIGHT*1); 
var NBBLOCK_WIDTH;NBBLOCK_WIDTH='4'; NBBLOCK_WIDTH=(isNaN(NBBLOCK_WIDTH*1))?(NBBLOCK_WIDTH):(NBBLOCK_WIDTH*1); 
var NBBLOCK_HEIGHT;NBBLOCK_HEIGHT='3'; NBBLOCK_HEIGHT=(isNaN(NBBLOCK_HEIGHT*1))?(NBBLOCK_HEIGHT):(NBBLOCK_HEIGHT*1); 
var WIDTH;WIDTH='' + (BLOCK_WIDTH*NBBLOCK_WIDTH) + ''; WIDTH=(isNaN(WIDTH*1))?(WIDTH):(WIDTH*1); 
var HEIGHT;HEIGHT='' + (BLOCK_HEIGHT*NBBLOCK_HEIGHT) + ''; HEIGHT=(isNaN(HEIGHT*1))?(HEIGHT):(HEIGHT*1); 
_str_main+=__indent() +' #@(main@11)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@12)'+ __context() + '\n';
_str_main+=__indent() +'# page is 0 or 1 #@(main@13)'+ __context() + '\n';
var _mgetp; _mgetp=0;
var mgetp = function(name,    page,   x,  y){
 _mgetp++;
var _strmgetp; 
_strmgetp='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro mgetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof page == 'undefined') throw 'Parameter page is undefined in call of  macro mgetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro mgetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro mgetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (arguments.length != 4) throw 'Too much arguments provided to macro mgetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
_strmgetp+=__indent() +'push    0 #@(main@15)'+ __context() + '\n';
_strmgetp+=__indent() +'sbm mgresult' + (_mgetp) + ' #@(main@16)'+ __context() + '\n';
_strmgetp+=__indent() +'#(begin macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@17)');
_strmgetp+=matrixGet(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (x) + '')*1))?('' + (x) + ''):(('' + (x) + '')*1)),((isNaN(('' + (y) + '')*1))?('' + (y) + ''):(('' + (y) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmgetp+=__indent() +'#(end macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
_strmgetp+=__indent() +'push    2 #@(main@18)'+ __context() + '\n';
_strmgetp+=__indent() +'div #@(main@19)'+ __context() + '\n';
_strmgetp+=__indent() +'sbm mgpage0' + (_mgetp) + ' -1 #@(main@20)'+ __context() + '\n';
_strmgetp+=__indent() +'sbm mgpage1' + (_mgetp) + ' #@(main@21)'+ __context() + '\n';
_strmgetp+=__indent() +'push    ' + (page) + ' #@(main@22)'+ __context() + '\n';
_strmgetp+=__indent() +'if #@(main@23)'+ __context() + '\n';
__blockLevel__++;
_strmgetp+=__indent() +'push    mgpage1' + (_mgetp) + ' #@(main@24)'+ __context() + '\n';
_strmgetp+=__indent() +'pop     mgresult' + (_mgetp) + ' #@(main@25)'+ __context() + '\n';
__blockLevel__--;
_strmgetp+=__indent() +'else #@(main@26)'+ __context() + '\n';
__blockLevel__++;
_strmgetp+=__indent() +'push    mgpage0' + (_mgetp) + ' #@(main@27)'+ __context() + '\n';
_strmgetp+=__indent() +'pop     mgresult' + (_mgetp) + ' #@(main@28)'+ __context() + '\n';
__blockLevel__--;
_strmgetp+=__indent() +'fi #@(main@29)'+ __context() + '\n';
_strmgetp+=__indent() +'drop    # mgpage1 #@(main@30)'+ __context() + '\n';
_strmgetp+=__indent() +'drop    # mgpage0 #@(main@31)'+ __context() + '\n';
return _strmgetp;
}
_str_main+=__indent() +' #@(main@33)'+ __context() + '\n';
_str_main+=__indent() +'# page is 0 or 1 #@(main@34)'+ __context() + '\n';
var _msetp; _msetp=0;
var msetp = function(name,    page,   x,  y){
 _msetp++;
var _strmsetp; 
_strmsetp='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro msetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof page == 'undefined') throw 'Parameter page is undefined in call of  macro msetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro msetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro msetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
if (arguments.length != 4) throw 'Too much arguments provided to macro msetp(name,    page,   x,  y)[' + [name,    page,   x,  y] +']';
_strmsetp+=__indent() +'sbm msinput' + (_msetp) + ' #@(main@36)'+ __context() + '\n';
_strmsetp+=__indent() +'#(begin macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@37)');
_strmsetp+=matrixGet(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (x) + '')*1))?('' + (x) + ''):(('' + (x) + '')*1)),((isNaN(('' + (y) + '')*1))?('' + (y) + ''):(('' + (y) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmsetp+=__indent() +'#(end macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
_strmsetp+=__indent() +'push    2 #@(main@38)'+ __context() + '\n';
_strmsetp+=__indent() +'div #@(main@39)'+ __context() + '\n';
_strmsetp+=__indent() +'sbm mspage0' + (_msetp) + ' -1 #@(main@40)'+ __context() + '\n';
_strmsetp+=__indent() +'sbm mspage1' + (_msetp) + ' #@(main@41)'+ __context() + '\n';
_strmsetp+=__indent() +'push    ' + (page) + ' #@(main@42)'+ __context() + '\n';
_strmsetp+=__indent() +'if   # if page 1 #@(main@43)'+ __context() + '\n';
__blockLevel__++;
_strmsetp+=__indent() +'push    msinput' + (_msetp) + ' #@(main@44)'+ __context() + '\n';
_strmsetp+=__indent() +'push    2 #@(main@45)'+ __context() + '\n';
_strmsetp+=__indent() +'mul #@(main@46)'+ __context() + '\n';
_strmsetp+=__indent() +'push    mspage0' + (_msetp) + ' #@(main@47)'+ __context() + '\n';
_strmsetp+=__indent() +'add #@(main@48)'+ __context() + '\n';
_strmsetp+=__indent() +'pop     msinput' + (_msetp) + ' #@(main@49)'+ __context() + '\n';
__blockLevel__--;
_strmsetp+=__indent() +'else # if page 0 #@(main@50)'+ __context() + '\n';
__blockLevel__++;
_strmsetp+=__indent() +'push    msinput' + (_msetp) + ' #@(main@51)'+ __context() + '\n';
_strmsetp+=__indent() +'push    mspage1' + (_msetp) + ' #@(main@52)'+ __context() + '\n';
_strmsetp+=__indent() +'add #@(main@53)'+ __context() + '\n';
_strmsetp+=__indent() +'pop     msinput' + (_msetp) + ' #@(main@54)'+ __context() + '\n';
__blockLevel__--;
_strmsetp+=__indent() +'fi #@(main@55)'+ __context() + '\n';
_strmsetp+=__indent() +'drop    # mspage1 #@(main@56)'+ __context() + '\n';
_strmsetp+=__indent() +'drop    # mspage0 #@(main@57)'+ __context() + '\n';
_strmsetp+=__indent() +'# here: head of stack is msinput #@(main@58)'+ __context() + '\n';
_strmsetp+=__indent() +'#(begin macro)matrixSet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@59)');
_strmsetp+=matrixSet(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (x) + '')*1))?('' + (x) + ''):(('' + (x) + '')*1)),((isNaN(('' + (y) + '')*1))?('' + (y) + ''):(('' + (y) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmsetp+=__indent() +'#(end macro)matrixSet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
return _strmsetp;
}
_str_main+=__indent() +' #@(main@61)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@62)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@63)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@64)'+ __context() + '\n';
var _mvar; _mvar=0;
var mvar = function(name){
 _mvar++;
var _strmvar; 
_strmvar='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro mvar(name)[' + [name] +']';
if (arguments.length != 1) throw 'Too much arguments provided to macro mvar(name)[' + [name] +']';
_strmvar+=__indent() +'#(begin macro)varMatrix ' + (name) + ', ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@66)');
_strmvar+=varMatrix(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmvar+=__indent() +'#(end macro)varMatrix ' + (name) + ', ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
return _strmvar;
}
_str_main+=__indent() +' #@(main@68)'+ __context() + '\n';
var _mget; _mget=0;
var mget = function(name, x,  y){
 _mget++;
var _strmget; 
_strmget='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro mget(name, x,  y)[' + [name, x,  y] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro mget(name, x,  y)[' + [name, x,  y] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro mget(name, x,  y)[' + [name, x,  y] +']';
if (arguments.length != 3) throw 'Too much arguments provided to macro mget(name, x,  y)[' + [name, x,  y] +']';
_strmget+=__indent() +'#(begin macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@70)');
_strmget+=matrixGet(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (x) + '')*1))?('' + (x) + ''):(('' + (x) + '')*1)),((isNaN(('' + (y) + '')*1))?('' + (y) + ''):(('' + (y) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmget+=__indent() +'#(end macro)matrixGet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
return _strmget;
}
_str_main+=__indent() +' #@(main@72)'+ __context() + '\n';
_str_main+=__indent() +'# page is 0 or 1 #@(main@73)'+ __context() + '\n';
var _mset; _mset=0;
var mset = function(name,  x,  y){
 _mset++;
var _strmset; 
_strmset='';
if (typeof name == 'undefined') throw 'Parameter name is undefined in call of  macro mset(name,  x,  y)[' + [name,  x,  y] +']';
if (typeof x == 'undefined') throw 'Parameter x is undefined in call of  macro mset(name,  x,  y)[' + [name,  x,  y] +']';
if (typeof y == 'undefined') throw 'Parameter y is undefined in call of  macro mset(name,  x,  y)[' + [name,  x,  y] +']';
if (arguments.length != 3) throw 'Too much arguments provided to macro mset(name,  x,  y)[' + [name,  x,  y] +']';
_strmset+=__indent() +'#(begin macro)matrixSet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
__context__.push('(main@75)');
_strmset+=matrixSet(((isNaN(('' + (name) + '')*1))?('' + (name) + ''):(('' + (name) + '')*1)),((isNaN(('' + (x) + '')*1))?('' + (x) + ''):(('' + (x) + '')*1)),((isNaN(('' + (y) + '')*1))?('' + (y) + ''):(('' + (y) + '')*1)),((isNaN(('' + (BLOCK_WIDTH) + '')*1))?('' + (BLOCK_WIDTH) + ''):(('' + (BLOCK_WIDTH) + '')*1)),((isNaN(('' + (BLOCK_HEIGHT) + '')*1))?('' + (BLOCK_HEIGHT) + ''):(('' + (BLOCK_HEIGHT) + '')*1)),((isNaN(('' + (NBBLOCK_WIDTH) + '')*1))?('' + (NBBLOCK_WIDTH) + ''):(('' + (NBBLOCK_WIDTH) + '')*1)),((isNaN(('' + (NBBLOCK_HEIGHT) + '')*1))?('' + (NBBLOCK_HEIGHT) + ''):(('' + (NBBLOCK_HEIGHT) + '')*1)));
__context__.pop();
_strmset+=__indent() +'#(end macro)matrixSet ' + (name) + ',   ' + (x) + ',    ' + (y) + ',    ' + (BLOCK_WIDTH) + ',  ' + (BLOCK_HEIGHT) + ', ' + (NBBLOCK_WIDTH) + ',    ' + (NBBLOCK_HEIGHT) + '' + '\n';
return _strmset;
}
_str_main+=__indent() +' #@(main@77)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@78)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)mvar    m' + '\n';
__context__.push('(main@79)');
_str_main+=mvar(((isNaN(('m')*1))?('m'):(('m')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mvar    m' + '\n';
_str_main+=__indent() +'var     i #@(main@80)'+ __context() + '\n';
_str_main+=__indent() +'var     p #@(main@81)'+ __context() + '\n';
_str_main+=__indent() +'var     x #@(main@82)'+ __context() + '\n';
_str_main+=__indent() +'var     y #@(main@83)'+ __context() + '\n';
_str_main+=__indent() +'var     v #@(main@84)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@85)'+ __context() + '\n';
_str_main+=__indent() +'# SET matrix Value 0to 3 (A to D) #@(main@86)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    i' + '\n';
__context__.push('(main@87)');
_str_main+=at_reset(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    i' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@88)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@89)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@90)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@91)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@92)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@93)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    i #@(main@94)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)mset    m,  x,  y' + '\n';
__context__.push('(main@95)');
_str_main+=mset(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mset    m,  x,  y' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  i' + '\n';
__context__.push('(main@96)');
_str_main+=at_inc(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  i' + '\n';
_str_main+=__indent() +'#(begin macro)if_equal    i,  4' + '\n';
__context__.push('(main@97)');
_str_main+=if_equal(((isNaN(('i')*1))?('i'):(('i')*1)),((isNaN(('4')*1))?('4'):(('4')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)if_equal    i,  4' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    i' + '\n';
__context__.push('(main@98)');
_str_main+=at_reset(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    i' + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@99)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@100)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@101)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@102)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@103)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@104)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@105)'+ __context() + '\n';
_str_main+=__indent() +'# Display value 0 to 2 (A to D) #@(main@106)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("Shows series of ABCD...\\n")' + '\n';
__context__.push('(main@107)');
_str_main+=print("Shows series of ABCD...\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("Shows series of ABCD...\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@108)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@109)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@110)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@111)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@112)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@113)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)mget    m,  x,  y' + '\n';
__context__.push('(main@114)');
_str_main+=mget(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mget    m,  x,  y' + '\n';
_str_main+=__indent() +'add     \'A\' #@(main@115)'+ __context() + '\n';
_str_main+=__indent() +'pop     out #@(main@116)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@117)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@118)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@119)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@120)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@121)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@122)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@123)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +' #@(main@124)'+ __context() + '\n';
_str_main+=__indent() +'# Display value from page 0 #@(main@125)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("Shows series of ABAB...\\n")' + '\n';
__context__.push('(main@126)');
_str_main+=print("Shows series of ABAB...\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("Shows series of ABAB...\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@127)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@128)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@129)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@130)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@131)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@132)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)mgetp    m, 0,  x,  y' + '\n';
__context__.push('(main@133)');
_str_main+=mgetp(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('0')*1))?('0'):(('0')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mgetp    m, 0,  x,  y' + '\n';
_str_main+=__indent() +'add     \'A\' #@(main@134)'+ __context() + '\n';
_str_main+=__indent() +'pop     out #@(main@135)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@136)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@137)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@138)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@139)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@140)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@141)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@142)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +' #@(main@143)'+ __context() + '\n';
_str_main+=__indent() +'# display value from page 1 #@(main@144)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("Shows series of AABB...\\n")' + '\n';
__context__.push('(main@145)');
_str_main+=print("Shows series of AABB...\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("Shows series of AABB...\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@146)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@147)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@148)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@149)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@150)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@151)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)mgetp    m, 1,  x,  y' + '\n';
__context__.push('(main@152)');
_str_main+=mgetp(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('1')*1))?('1'):(('1')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mgetp    m, 1,  x,  y' + '\n';
_str_main+=__indent() +'add     \'A\' #@(main@153)'+ __context() + '\n';
_str_main+=__indent() +'pop     out #@(main@154)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@155)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@156)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@157)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@158)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@159)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@160)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@161)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +' #@(main@162)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@163)'+ __context() + '\n';
_str_main+=__indent() +'# RESET matrix to zero #@(main@164)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    i' + '\n';
__context__.push('(main@165)');
_str_main+=at_reset(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    i' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@166)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@167)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@168)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@169)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@170)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@171)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    0 #@(main@172)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)mset    m,  x,  y' + '\n';
__context__.push('(main@173)');
_str_main+=mset(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mset    m,  x,  y' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@174)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@175)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@176)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@177)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@178)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@179)'+ __context() + '\n';
_str_main+=__indent() +'# SET page value matrix, one page used only #@(main@180)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@181)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@182)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    i' + '\n';
__context__.push('(main@183)');
_str_main+=at_reset(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    i' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    p' + '\n';
__context__.push('(main@184)');
_str_main+=at_reset(((isNaN(('p')*1))?('p'):(('p')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    p' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    v' + '\n';
__context__.push('(main@185)');
_str_main+=at_reset(((isNaN(('v')*1))?('v'):(('v')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    v' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@186)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@187)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@188)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@189)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +' #@(main@190)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)if_equal    i,  0' + '\n';
__context__.push('(main@191)');
_str_main+=if_equal(((isNaN(('i')*1))?('i'):(('i')*1)),((isNaN(('0')*1))?('0'):(('0')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)if_equal    i,  0' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    p' + '\n';
__context__.push('(main@192)');
_str_main+=at_reset(((isNaN(('p')*1))?('p'):(('p')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    p' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    v' + '\n';
__context__.push('(main@193)');
_str_main+=at_reset(((isNaN(('v')*1))?('v'):(('v')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    v' + '\n';
__blockLevel__--;
_str_main+=__indent() +'else #@(main@194)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)if_equal    i,  1' + '\n';
__context__.push('(main@195)');
_str_main+=if_equal(((isNaN(('i')*1))?('i'):(('i')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)if_equal    i,  1' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    p' + '\n';
__context__.push('(main@196)');
_str_main+=at_reset(((isNaN(('p')*1))?('p'):(('p')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    p' + '\n';
_str_main+=__indent() +'#(begin macro)at_set      v,1' + '\n';
__context__.push('(main@197)');
_str_main+=at_set(((isNaN(('v')*1))?('v'):(('v')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_set      v,1' + '\n';
__blockLevel__--;
_str_main+=__indent() +'else #@(main@198)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)if_equal    i,2' + '\n';
__context__.push('(main@199)');
_str_main+=if_equal(((isNaN(('i')*1))?('i'):(('i')*1)),((isNaN(('2')*1))?('2'):(('2')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)if_equal    i,2' + '\n';
_str_main+=__indent() +'#(begin macro)at_set      p,1' + '\n';
__context__.push('(main@200)');
_str_main+=at_set(((isNaN(('p')*1))?('p'):(('p')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_set      p,1' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    v' + '\n';
__context__.push('(main@201)');
_str_main+=at_reset(((isNaN(('v')*1))?('v'):(('v')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    v' + '\n';
__blockLevel__--;
_str_main+=__indent() +'else #@(main@202)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)at_set      p,1' + '\n';
__context__.push('(main@203)');
_str_main+=at_set(((isNaN(('p')*1))?('p'):(('p')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_set      p,1' + '\n';
_str_main+=__indent() +'#(begin macro)at_set      v,1' + '\n';
__context__.push('(main@204)');
_str_main+=at_set(((isNaN(('v')*1))?('v'):(('v')*1)),((isNaN(('1')*1))?('1'):(('1')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_set      v,1' + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@205)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@206)'+ __context() + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@207)'+ __context() + '\n';
_str_main+=__indent() +'push    v #@(main@208)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)msetp    m,  p,  x,  y' + '\n';
__context__.push('(main@209)');
_str_main+=msetp(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('p')*1))?('p'):(('p')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)msetp    m,  p,  x,  y' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  i' + '\n';
__context__.push('(main@210)');
_str_main+=at_inc(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  i' + '\n';
_str_main+=__indent() +'#(begin macro)if_equal    i,  4' + '\n';
__context__.push('(main@211)');
_str_main+=if_equal(((isNaN(('i')*1))?('i'):(('i')*1)),((isNaN(('4')*1))?('4'):(('4')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)if_equal    i,  4' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    i' + '\n';
__context__.push('(main@212)');
_str_main+=at_reset(((isNaN(('i')*1))?('i'):(('i')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    i' + '\n';
__blockLevel__--;
_str_main+=__indent() +'fi #@(main@213)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@214)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@215)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@216)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@217)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@218)'+ __context() + '\n';
_str_main+=__indent() +' #@(main@219)'+ __context() + '\n';
_str_main+=__indent() +'# DISPLAY page value matrix as-is #@(main@220)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@221)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    y' + '\n';
__context__.push('(main@222)');
_str_main+=at_reset(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    y' + '\n';
_str_main+=__indent() +'push    ' + (HEIGHT) + ' #@(main@223)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@224)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'push    ' + (WIDTH) + ' #@(main@225)'+ __context() + '\n';
_str_main+=__indent() +'loop #@(main@226)'+ __context() + '\n';
__blockLevel__++;
_str_main+=__indent() +'#(begin macro)mget    m,  x,  y' + '\n';
__context__.push('(main@227)');
_str_main+=mget(((isNaN(('m')*1))?('m'):(('m')*1)),((isNaN(('x')*1))?('x'):(('x')*1)),((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)mget    m,  x,  y' + '\n';
_str_main+=__indent() +'add     \'A\' #@(main@228)'+ __context() + '\n';
_str_main+=__indent() +'pop     out #@(main@229)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)at_inc  x' + '\n';
__context__.push('(main@230)');
_str_main+=at_inc(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc  x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@231)'+ __context() + '\n';
_str_main+=__indent() +'#(begin macro)print("\\n")' + '\n';
__context__.push('(main@232)');
_str_main+=print("\n");
__context__.pop();
_str_main+=__indent() +'#(end macro)print("\\n")' + '\n';
_str_main+=__indent() +'#(begin macro)at_inc      y' + '\n';
__context__.push('(main@233)');
_str_main+=at_inc(((isNaN(('y')*1))?('y'):(('y')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_inc      y' + '\n';
_str_main+=__indent() +'#(begin macro)at_reset    x' + '\n';
__context__.push('(main@234)');
_str_main+=at_reset(((isNaN(('x')*1))?('x'):(('x')*1)));
__context__.pop();
_str_main+=__indent() +'#(end macro)at_reset    x' + '\n';
__blockLevel__--;
_str_main+=__indent() +'endloop #@(main@235)'+ __context() + '\n';
return _str_main;
}
_main();
