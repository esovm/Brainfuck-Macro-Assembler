# Test 2 #@(main@1)
#(begin include)../../samples/include/macro.inc
# Common macros #@(macro_inc@1)
# scope variables #@(macro_inc@2)
 #@(macro_inc@5)
 #@(macro_inc@6)
# macro scope_begin : start a new scope for local variable (usage of macro lvar) #@(macro_inc@7)
 #@(macro_inc@11)
# macro scope_end : end a scope , then drop scoped local variables (drop) (usage of lvar) #@(macro_inc@12)
 #@(macro_inc@19)
# macro lvar(vname,value) : declare  in scope, a local variable named vname with an assigned value (stored in stack) #@(macro_inc@20)
 #@(macro_inc@26)
# macro if_diff(a,b) : if (a != b) { #@(macro_inc@27)
 #@(macro_inc@34)
# macro if_equal(a,b) : if (a == b) { #@(macro_inc@35)
 #@(macro_inc@42)
# macro if_sup(a,b) : if (a > b) { #@(macro_inc@43)
 #@(macro_inc@50)
# macro if_inf(a,b) : if (a < b) { #@(macro_inc@51)
 #@(macro_inc@58)
# macro if_supequal(a,b) : if (a >= b) { #@(macro_inc@59)
 #@(macro_inc@67)
# macro if_infequal(a,b) : if (a <= b) { #@(macro_inc@68)
 #@(macro_inc@76)
# macro at_2 #@(macro_inc@77)
 #@(macro_inc@83)
# macro at_1 #@(macro_inc@84)
 #@(macro_inc@88)
# macro at_reset(a) : a=0 #@(macro_inc@89)
 #@(macro_inc@93)
# macro at_inc(a) : a++ #@(macro_inc@94)
 #@(macro_inc@98)
# macro at_dec(a) : a-- #@(macro_inc@99)
 #@(macro_inc@103)
# macro at_in(a)  : a= readchar() #@(macro_inc@104)
 #@(macro_inc@108)
# macro at_out(a) : write(a) #@(macro_inc@109)
 #@(macro_inc@113)
# macro at_add(a,b) : a += b (immediate) #@(macro_inc@114)
 #@(macro_inc@118)
# macro at_sub(a,b) : a -= b (immediate) #@(macro_inc@119)
 #@(macro_inc@123)
# macro at_set(a,b) : a = b (immediate) #@(macro_inc@124)
 #@(macro_inc@128)
 #@(macro_inc@133)
 #@(macro_inc@141)
#macro addof() : push A, push B , replaced by Carry, A+B #@(macro_inc@142)
 #@(macro_inc@180)
# macro subof() : push A, push B , replaced by Carry, A-B #@(macro_inc@181)
 #@(macro_inc@221)
# macro mulof() : A = stack-1, B= stack : stack-1 = A*B div 256, stack = A*B mod 256 #@(macro_inc@222)
 #@(macro_inc@245)
 #@(macro_inc@246)
 #@(macro_inc@258)
 #@(macro_inc@265)
# take value in stack #@(macro_inc@266)
 #@(macro_inc@301)
# push value onto stack #@(macro_inc@302)
 #@(macro_inc@337)
 #@(macro_inc@338)
 #@(macro_inc@339)
# macro popouthexa() : from head of stack value (from 0 to 15) write out hexa (from 0 to 9 and A to F) #@(macro_inc@340)
 #@(macro_inc@350)
# macro popout8hexa() : from head of stack the 8 bit value is write out in hexa #@(macro_inc@351)
 #@(macro_inc@358)
 #@(macro_inc@364)
 #@(macro_inc@365)
var __wbdoutput*3 #@(macro_inc@367)
 #@(macro_inc@368)
# a Byte in stack : output its decimal value #@(macro_inc@369)
 #@(macro_inc@400)
 #@(macro_inc@401)
 #@(macro_inc@402)
# macro print(aString) : print out a string #@(macro_inc@403)
#(end include)../../samples/include/macro.inc
 #@(main@3)
# basic macros test #@(main@4)
#(begin macro)print ("Basic macro test.\n\n")
push    0 #@(macro_inc@405)(main@5)
set     66 #@(macro_inc@420)(main@5)
out             # 'B' #@(macro_inc@422)(main@5)
add     31 #@(macro_inc@413)(main@5)
out             # 'a' #@(macro_inc@422)(main@5)
add     18 #@(macro_inc@413)(main@5)
out             # 's' #@(macro_inc@422)(main@5)
sub     10 #@(macro_inc@416)(main@5)
out             # 'i' #@(macro_inc@422)(main@5)
sub     6 #@(macro_inc@416)(main@5)
out             # 'c' #@(macro_inc@422)(main@5)
set     32 #@(macro_inc@420)(main@5)
out             # ' ' #@(macro_inc@422)(main@5)
add     77 #@(macro_inc@413)(main@5)
out             # 'm' #@(macro_inc@422)(main@5)
sub     12 #@(macro_inc@416)(main@5)
out             # 'a' #@(macro_inc@422)(main@5)
add     2 #@(macro_inc@413)(main@5)
out             # 'c' #@(macro_inc@422)(main@5)
add     15 #@(macro_inc@413)(main@5)
out             # 'r' #@(macro_inc@422)(main@5)
sub     3 #@(macro_inc@416)(main@5)
out             # 'o' #@(macro_inc@422)(main@5)
set     32 #@(macro_inc@420)(main@5)
out             # ' ' #@(macro_inc@422)(main@5)
add     84 #@(macro_inc@413)(main@5)
out             # 't' #@(macro_inc@422)(main@5)
sub     15 #@(macro_inc@416)(main@5)
out             # 'e' #@(macro_inc@422)(main@5)
add     14 #@(macro_inc@413)(main@5)
out             # 's' #@(macro_inc@422)(main@5)
add     1 #@(macro_inc@413)(main@5)
out             # 't' #@(macro_inc@422)(main@5)
set     46 #@(macro_inc@420)(main@5)
out             # '.' #@(macro_inc@422)(main@5)
set     10 #@(macro_inc@420)(main@5)
out             #  #@(macro_inc@422)(main@5)
out             #  #@(macro_inc@422)(main@5)
drop #@(macro_inc@425)(main@5)
#(end macro)print ("Basic macro test.\n\n")
var m*10 #@(main@6)
 #@(main@7)
push    'A' #@(main@8)
#(begin macro)arraySet    m,  0
sbm     asValue1 #@(macro_inc@268)(main@9)
push    m.pos #@(macro_inc@269)(main@9)
push    0 #@(macro_inc@270)(main@9)
equal #@(macro_inc@271)(main@9)
if #@(macro_inc@272)(main@9)
  push    asValue1 #@(macro_inc@273)(main@9)
  pop     m #@(macro_inc@274)(main@9)
else #@(macro_inc@275)(main@9)
  push    m.pos #@(macro_inc@276)(main@9)
  push    0 #@(macro_inc@277)(main@9)
  sup #@(macro_inc@278)(main@9)
  if #@(macro_inc@279)(main@9)
    push    m.pos #@(macro_inc@280)(main@9)
    push    0 #@(macro_inc@281)(main@9)
    sub #@(macro_inc@282)(main@9)
    loop #@(macro_inc@283)(main@9)
      arotr   m #@(macro_inc@284)(main@9)
    endloop #@(macro_inc@285)(main@9)
    push    asValue1 #@(macro_inc@286)(main@9)
    pop     m #@(macro_inc@287)(main@9)
  else #@(macro_inc@288)(main@9)
    push    0 #@(macro_inc@289)(main@9)
    push    m.pos #@(macro_inc@290)(main@9)
    sub #@(macro_inc@291)(main@9)
    loop #@(macro_inc@292)(main@9)
      arotl   m #@(macro_inc@293)(main@9)
    endloop #@(macro_inc@294)(main@9)
    push    asValue1 #@(macro_inc@295)(main@9)
    pop     m #@(macro_inc@296)(main@9)
  fi #@(macro_inc@297)(main@9)
fi #@(macro_inc@298)(main@9)
drop #@(macro_inc@299)(main@9)
#(end macro)arraySet    m,  0
push    'B' #@(main@10)
#(begin macro)arraySet    m,  9
sbm     asValue2 #@(macro_inc@268)(main@11)
push    m.pos #@(macro_inc@269)(main@11)
push    9 #@(macro_inc@270)(main@11)
equal #@(macro_inc@271)(main@11)
if #@(macro_inc@272)(main@11)
  push    asValue2 #@(macro_inc@273)(main@11)
  pop     m #@(macro_inc@274)(main@11)
else #@(macro_inc@275)(main@11)
  push    m.pos #@(macro_inc@276)(main@11)
  push    9 #@(macro_inc@277)(main@11)
  sup #@(macro_inc@278)(main@11)
  if #@(macro_inc@279)(main@11)
    push    m.pos #@(macro_inc@280)(main@11)
    push    9 #@(macro_inc@281)(main@11)
    sub #@(macro_inc@282)(main@11)
    loop #@(macro_inc@283)(main@11)
      arotr   m #@(macro_inc@284)(main@11)
    endloop #@(macro_inc@285)(main@11)
    push    asValue2 #@(macro_inc@286)(main@11)
    pop     m #@(macro_inc@287)(main@11)
  else #@(macro_inc@288)(main@11)
    push    9 #@(macro_inc@289)(main@11)
    push    m.pos #@(macro_inc@290)(main@11)
    sub #@(macro_inc@291)(main@11)
    loop #@(macro_inc@292)(main@11)
      arotl   m #@(macro_inc@293)(main@11)
    endloop #@(macro_inc@294)(main@11)
    push    asValue2 #@(macro_inc@295)(main@11)
    pop     m #@(macro_inc@296)(main@11)
  fi #@(macro_inc@297)(main@11)
fi #@(macro_inc@298)(main@11)
drop #@(macro_inc@299)(main@11)
#(end macro)arraySet    m,  9
push    'C' #@(main@12)
#(begin macro)arraySet    m,  1
sbm     asValue3 #@(macro_inc@268)(main@13)
push    m.pos #@(macro_inc@269)(main@13)
push    1 #@(macro_inc@270)(main@13)
equal #@(macro_inc@271)(main@13)
if #@(macro_inc@272)(main@13)
  push    asValue3 #@(macro_inc@273)(main@13)
  pop     m #@(macro_inc@274)(main@13)
else #@(macro_inc@275)(main@13)
  push    m.pos #@(macro_inc@276)(main@13)
  push    1 #@(macro_inc@277)(main@13)
  sup #@(macro_inc@278)(main@13)
  if #@(macro_inc@279)(main@13)
    push    m.pos #@(macro_inc@280)(main@13)
    push    1 #@(macro_inc@281)(main@13)
    sub #@(macro_inc@282)(main@13)
    loop #@(macro_inc@283)(main@13)
      arotr   m #@(macro_inc@284)(main@13)
    endloop #@(macro_inc@285)(main@13)
    push    asValue3 #@(macro_inc@286)(main@13)
    pop     m #@(macro_inc@287)(main@13)
  else #@(macro_inc@288)(main@13)
    push    1 #@(macro_inc@289)(main@13)
    push    m.pos #@(macro_inc@290)(main@13)
    sub #@(macro_inc@291)(main@13)
    loop #@(macro_inc@292)(main@13)
      arotl   m #@(macro_inc@293)(main@13)
    endloop #@(macro_inc@294)(main@13)
    push    asValue3 #@(macro_inc@295)(main@13)
    pop     m #@(macro_inc@296)(main@13)
  fi #@(macro_inc@297)(main@13)
fi #@(macro_inc@298)(main@13)
drop #@(macro_inc@299)(main@13)
#(end macro)arraySet    m,  1
push    'D' #@(main@14)
#(begin macro)arraySet    m,  8
sbm     asValue4 #@(macro_inc@268)(main@15)
push    m.pos #@(macro_inc@269)(main@15)
push    8 #@(macro_inc@270)(main@15)
equal #@(macro_inc@271)(main@15)
if #@(macro_inc@272)(main@15)
  push    asValue4 #@(macro_inc@273)(main@15)
  pop     m #@(macro_inc@274)(main@15)
else #@(macro_inc@275)(main@15)
  push    m.pos #@(macro_inc@276)(main@15)
  push    8 #@(macro_inc@277)(main@15)
  sup #@(macro_inc@278)(main@15)
  if #@(macro_inc@279)(main@15)
    push    m.pos #@(macro_inc@280)(main@15)
    push    8 #@(macro_inc@281)(main@15)
    sub #@(macro_inc@282)(main@15)
    loop #@(macro_inc@283)(main@15)
      arotr   m #@(macro_inc@284)(main@15)
    endloop #@(macro_inc@285)(main@15)
    push    asValue4 #@(macro_inc@286)(main@15)
    pop     m #@(macro_inc@287)(main@15)
  else #@(macro_inc@288)(main@15)
    push    8 #@(macro_inc@289)(main@15)
    push    m.pos #@(macro_inc@290)(main@15)
    sub #@(macro_inc@291)(main@15)
    loop #@(macro_inc@292)(main@15)
      arotl   m #@(macro_inc@293)(main@15)
    endloop #@(macro_inc@294)(main@15)
    push    asValue4 #@(macro_inc@295)(main@15)
    pop     m #@(macro_inc@296)(main@15)
  fi #@(macro_inc@297)(main@15)
fi #@(macro_inc@298)(main@15)
drop #@(macro_inc@299)(main@15)
#(end macro)arraySet    m,  8
push    'E' #@(main@16)
#(begin macro)arraySet    m,  2
sbm     asValue5 #@(macro_inc@268)(main@17)
push    m.pos #@(macro_inc@269)(main@17)
push    2 #@(macro_inc@270)(main@17)
equal #@(macro_inc@271)(main@17)
if #@(macro_inc@272)(main@17)
  push    asValue5 #@(macro_inc@273)(main@17)
  pop     m #@(macro_inc@274)(main@17)
else #@(macro_inc@275)(main@17)
  push    m.pos #@(macro_inc@276)(main@17)
  push    2 #@(macro_inc@277)(main@17)
  sup #@(macro_inc@278)(main@17)
  if #@(macro_inc@279)(main@17)
    push    m.pos #@(macro_inc@280)(main@17)
    push    2 #@(macro_inc@281)(main@17)
    sub #@(macro_inc@282)(main@17)
    loop #@(macro_inc@283)(main@17)
      arotr   m #@(macro_inc@284)(main@17)
    endloop #@(macro_inc@285)(main@17)
    push    asValue5 #@(macro_inc@286)(main@17)
    pop     m #@(macro_inc@287)(main@17)
  else #@(macro_inc@288)(main@17)
    push    2 #@(macro_inc@289)(main@17)
    push    m.pos #@(macro_inc@290)(main@17)
    sub #@(macro_inc@291)(main@17)
    loop #@(macro_inc@292)(main@17)
      arotl   m #@(macro_inc@293)(main@17)
    endloop #@(macro_inc@294)(main@17)
    push    asValue5 #@(macro_inc@295)(main@17)
    pop     m #@(macro_inc@296)(main@17)
  fi #@(macro_inc@297)(main@17)
fi #@(macro_inc@298)(main@17)
drop #@(macro_inc@299)(main@17)
#(end macro)arraySet    m,  2
push    'F' #@(main@18)
#(begin macro)arraySet    m,  7
sbm     asValue6 #@(macro_inc@268)(main@19)
push    m.pos #@(macro_inc@269)(main@19)
push    7 #@(macro_inc@270)(main@19)
equal #@(macro_inc@271)(main@19)
if #@(macro_inc@272)(main@19)
  push    asValue6 #@(macro_inc@273)(main@19)
  pop     m #@(macro_inc@274)(main@19)
else #@(macro_inc@275)(main@19)
  push    m.pos #@(macro_inc@276)(main@19)
  push    7 #@(macro_inc@277)(main@19)
  sup #@(macro_inc@278)(main@19)
  if #@(macro_inc@279)(main@19)
    push    m.pos #@(macro_inc@280)(main@19)
    push    7 #@(macro_inc@281)(main@19)
    sub #@(macro_inc@282)(main@19)
    loop #@(macro_inc@283)(main@19)
      arotr   m #@(macro_inc@284)(main@19)
    endloop #@(macro_inc@285)(main@19)
    push    asValue6 #@(macro_inc@286)(main@19)
    pop     m #@(macro_inc@287)(main@19)
  else #@(macro_inc@288)(main@19)
    push    7 #@(macro_inc@289)(main@19)
    push    m.pos #@(macro_inc@290)(main@19)
    sub #@(macro_inc@291)(main@19)
    loop #@(macro_inc@292)(main@19)
      arotl   m #@(macro_inc@293)(main@19)
    endloop #@(macro_inc@294)(main@19)
    push    asValue6 #@(macro_inc@295)(main@19)
    pop     m #@(macro_inc@296)(main@19)
  fi #@(macro_inc@297)(main@19)
fi #@(macro_inc@298)(main@19)
drop #@(macro_inc@299)(main@19)
#(end macro)arraySet    m,  7
push    'G' #@(main@20)
#(begin macro)arraySet    m,  3
sbm     asValue7 #@(macro_inc@268)(main@21)
push    m.pos #@(macro_inc@269)(main@21)
push    3 #@(macro_inc@270)(main@21)
equal #@(macro_inc@271)(main@21)
if #@(macro_inc@272)(main@21)
  push    asValue7 #@(macro_inc@273)(main@21)
  pop     m #@(macro_inc@274)(main@21)
else #@(macro_inc@275)(main@21)
  push    m.pos #@(macro_inc@276)(main@21)
  push    3 #@(macro_inc@277)(main@21)
  sup #@(macro_inc@278)(main@21)
  if #@(macro_inc@279)(main@21)
    push    m.pos #@(macro_inc@280)(main@21)
    push    3 #@(macro_inc@281)(main@21)
    sub #@(macro_inc@282)(main@21)
    loop #@(macro_inc@283)(main@21)
      arotr   m #@(macro_inc@284)(main@21)
    endloop #@(macro_inc@285)(main@21)
    push    asValue7 #@(macro_inc@286)(main@21)
    pop     m #@(macro_inc@287)(main@21)
  else #@(macro_inc@288)(main@21)
    push    3 #@(macro_inc@289)(main@21)
    push    m.pos #@(macro_inc@290)(main@21)
    sub #@(macro_inc@291)(main@21)
    loop #@(macro_inc@292)(main@21)
      arotl   m #@(macro_inc@293)(main@21)
    endloop #@(macro_inc@294)(main@21)
    push    asValue7 #@(macro_inc@295)(main@21)
    pop     m #@(macro_inc@296)(main@21)
  fi #@(macro_inc@297)(main@21)
fi #@(macro_inc@298)(main@21)
drop #@(macro_inc@299)(main@21)
#(end macro)arraySet    m,  3
push    'H' #@(main@22)
#(begin macro)arraySet    m,  6
sbm     asValue8 #@(macro_inc@268)(main@23)
push    m.pos #@(macro_inc@269)(main@23)
push    6 #@(macro_inc@270)(main@23)
equal #@(macro_inc@271)(main@23)
if #@(macro_inc@272)(main@23)
  push    asValue8 #@(macro_inc@273)(main@23)
  pop     m #@(macro_inc@274)(main@23)
else #@(macro_inc@275)(main@23)
  push    m.pos #@(macro_inc@276)(main@23)
  push    6 #@(macro_inc@277)(main@23)
  sup #@(macro_inc@278)(main@23)
  if #@(macro_inc@279)(main@23)
    push    m.pos #@(macro_inc@280)(main@23)
    push    6 #@(macro_inc@281)(main@23)
    sub #@(macro_inc@282)(main@23)
    loop #@(macro_inc@283)(main@23)
      arotr   m #@(macro_inc@284)(main@23)
    endloop #@(macro_inc@285)(main@23)
    push    asValue8 #@(macro_inc@286)(main@23)
    pop     m #@(macro_inc@287)(main@23)
  else #@(macro_inc@288)(main@23)
    push    6 #@(macro_inc@289)(main@23)
    push    m.pos #@(macro_inc@290)(main@23)
    sub #@(macro_inc@291)(main@23)
    loop #@(macro_inc@292)(main@23)
      arotl   m #@(macro_inc@293)(main@23)
    endloop #@(macro_inc@294)(main@23)
    push    asValue8 #@(macro_inc@295)(main@23)
    pop     m #@(macro_inc@296)(main@23)
  fi #@(macro_inc@297)(main@23)
fi #@(macro_inc@298)(main@23)
drop #@(macro_inc@299)(main@23)
#(end macro)arraySet    m,  6
push    'I' #@(main@24)
#(begin macro)arraySet    m,  4
sbm     asValue9 #@(macro_inc@268)(main@25)
push    m.pos #@(macro_inc@269)(main@25)
push    4 #@(macro_inc@270)(main@25)
equal #@(macro_inc@271)(main@25)
if #@(macro_inc@272)(main@25)
  push    asValue9 #@(macro_inc@273)(main@25)
  pop     m #@(macro_inc@274)(main@25)
else #@(macro_inc@275)(main@25)
  push    m.pos #@(macro_inc@276)(main@25)
  push    4 #@(macro_inc@277)(main@25)
  sup #@(macro_inc@278)(main@25)
  if #@(macro_inc@279)(main@25)
    push    m.pos #@(macro_inc@280)(main@25)
    push    4 #@(macro_inc@281)(main@25)
    sub #@(macro_inc@282)(main@25)
    loop #@(macro_inc@283)(main@25)
      arotr   m #@(macro_inc@284)(main@25)
    endloop #@(macro_inc@285)(main@25)
    push    asValue9 #@(macro_inc@286)(main@25)
    pop     m #@(macro_inc@287)(main@25)
  else #@(macro_inc@288)(main@25)
    push    4 #@(macro_inc@289)(main@25)
    push    m.pos #@(macro_inc@290)(main@25)
    sub #@(macro_inc@291)(main@25)
    loop #@(macro_inc@292)(main@25)
      arotl   m #@(macro_inc@293)(main@25)
    endloop #@(macro_inc@294)(main@25)
    push    asValue9 #@(macro_inc@295)(main@25)
    pop     m #@(macro_inc@296)(main@25)
  fi #@(macro_inc@297)(main@25)
fi #@(macro_inc@298)(main@25)
drop #@(macro_inc@299)(main@25)
#(end macro)arraySet    m,  4
push    'J' #@(main@26)
#(begin macro)arraySet    m,  5
sbm     asValue10 #@(macro_inc@268)(main@27)
push    m.pos #@(macro_inc@269)(main@27)
push    5 #@(macro_inc@270)(main@27)
equal #@(macro_inc@271)(main@27)
if #@(macro_inc@272)(main@27)
  push    asValue10 #@(macro_inc@273)(main@27)
  pop     m #@(macro_inc@274)(main@27)
else #@(macro_inc@275)(main@27)
  push    m.pos #@(macro_inc@276)(main@27)
  push    5 #@(macro_inc@277)(main@27)
  sup #@(macro_inc@278)(main@27)
  if #@(macro_inc@279)(main@27)
    push    m.pos #@(macro_inc@280)(main@27)
    push    5 #@(macro_inc@281)(main@27)
    sub #@(macro_inc@282)(main@27)
    loop #@(macro_inc@283)(main@27)
      arotr   m #@(macro_inc@284)(main@27)
    endloop #@(macro_inc@285)(main@27)
    push    asValue10 #@(macro_inc@286)(main@27)
    pop     m #@(macro_inc@287)(main@27)
  else #@(macro_inc@288)(main@27)
    push    5 #@(macro_inc@289)(main@27)
    push    m.pos #@(macro_inc@290)(main@27)
    sub #@(macro_inc@291)(main@27)
    loop #@(macro_inc@292)(main@27)
      arotl   m #@(macro_inc@293)(main@27)
    endloop #@(macro_inc@294)(main@27)
    push    asValue10 #@(macro_inc@295)(main@27)
    pop     m #@(macro_inc@296)(main@27)
  fi #@(macro_inc@297)(main@27)
fi #@(macro_inc@298)(main@27)
drop #@(macro_inc@299)(main@27)
#(end macro)arraySet    m,  5
 #@(main@28)
#(begin macro)print "ACEGIJHFDB="
push    0 #@(macro_inc@405)(main@29)
set     65 #@(macro_inc@420)(main@29)
out             # 'A' #@(macro_inc@422)(main@29)
add     2 #@(macro_inc@413)(main@29)
out             # 'C' #@(macro_inc@422)(main@29)
add     2 #@(macro_inc@413)(main@29)
out             # 'E' #@(macro_inc@422)(main@29)
add     2 #@(macro_inc@413)(main@29)
out             # 'G' #@(macro_inc@422)(main@29)
add     2 #@(macro_inc@413)(main@29)
out             # 'I' #@(macro_inc@422)(main@29)
add     1 #@(macro_inc@413)(main@29)
out             # 'J' #@(macro_inc@422)(main@29)
sub     2 #@(macro_inc@416)(main@29)
out             # 'H' #@(macro_inc@422)(main@29)
sub     2 #@(macro_inc@416)(main@29)
out             # 'F' #@(macro_inc@422)(main@29)
sub     2 #@(macro_inc@416)(main@29)
out             # 'D' #@(macro_inc@422)(main@29)
sub     2 #@(macro_inc@416)(main@29)
out             # 'B' #@(macro_inc@422)(main@29)
sub     5 #@(macro_inc@416)(main@29)
out             # '=' #@(macro_inc@422)(main@29)
drop #@(macro_inc@425)(main@29)
#(end macro)print "ACEGIJHFDB="
#(begin macro)arrayGet    m, 0
push    0 #@(macro_inc@304)(main@30)
sbm     agValue1 #@(macro_inc@305)(main@30)
push    m.pos #@(macro_inc@306)(main@30)
push    0 #@(macro_inc@307)(main@30)
equal #@(macro_inc@308)(main@30)
if #@(macro_inc@309)(main@30)
  push    m #@(macro_inc@310)(main@30)
  pop     agValue1 #@(macro_inc@311)(main@30)
else #@(macro_inc@312)(main@30)
  push    m.pos #@(macro_inc@313)(main@30)
  push    0 #@(macro_inc@314)(main@30)
  sup #@(macro_inc@315)(main@30)
  if #@(macro_inc@316)(main@30)
    push    m.pos #@(macro_inc@317)(main@30)
    push    0 #@(macro_inc@318)(main@30)
    sub #@(macro_inc@319)(main@30)
    loop #@(macro_inc@320)(main@30)
      arotr   m #@(macro_inc@321)(main@30)
    endloop #@(macro_inc@322)(main@30)
    push     m #@(macro_inc@323)(main@30)
    pop      agValue1 #@(macro_inc@324)(main@30)
  else #@(macro_inc@325)(main@30)
    push    0 #@(macro_inc@326)(main@30)
    push    m.pos #@(macro_inc@327)(main@30)
    sub #@(macro_inc@328)(main@30)
    loop #@(macro_inc@329)(main@30)
      arotl   m #@(macro_inc@330)(main@30)
    endloop #@(macro_inc@331)(main@30)
    push     m #@(macro_inc@332)(main@30)
    pop      agValue1 #@(macro_inc@333)(main@30)
  fi #@(macro_inc@334)(main@30)
fi #@(macro_inc@335)(main@30)
#(end macro)arrayGet    m, 0
pop     out #@(main@31)
#(begin macro)arrayGet    m, 1
push    0 #@(macro_inc@304)(main@32)
sbm     agValue2 #@(macro_inc@305)(main@32)
push    m.pos #@(macro_inc@306)(main@32)
push    1 #@(macro_inc@307)(main@32)
equal #@(macro_inc@308)(main@32)
if #@(macro_inc@309)(main@32)
  push    m #@(macro_inc@310)(main@32)
  pop     agValue2 #@(macro_inc@311)(main@32)
else #@(macro_inc@312)(main@32)
  push    m.pos #@(macro_inc@313)(main@32)
  push    1 #@(macro_inc@314)(main@32)
  sup #@(macro_inc@315)(main@32)
  if #@(macro_inc@316)(main@32)
    push    m.pos #@(macro_inc@317)(main@32)
    push    1 #@(macro_inc@318)(main@32)
    sub #@(macro_inc@319)(main@32)
    loop #@(macro_inc@320)(main@32)
      arotr   m #@(macro_inc@321)(main@32)
    endloop #@(macro_inc@322)(main@32)
    push     m #@(macro_inc@323)(main@32)
    pop      agValue2 #@(macro_inc@324)(main@32)
  else #@(macro_inc@325)(main@32)
    push    1 #@(macro_inc@326)(main@32)
    push    m.pos #@(macro_inc@327)(main@32)
    sub #@(macro_inc@328)(main@32)
    loop #@(macro_inc@329)(main@32)
      arotl   m #@(macro_inc@330)(main@32)
    endloop #@(macro_inc@331)(main@32)
    push     m #@(macro_inc@332)(main@32)
    pop      agValue2 #@(macro_inc@333)(main@32)
  fi #@(macro_inc@334)(main@32)
fi #@(macro_inc@335)(main@32)
#(end macro)arrayGet    m, 1
pop     out #@(main@33)
#(begin macro)arrayGet    m, 2
push    0 #@(macro_inc@304)(main@34)
sbm     agValue3 #@(macro_inc@305)(main@34)
push    m.pos #@(macro_inc@306)(main@34)
push    2 #@(macro_inc@307)(main@34)
equal #@(macro_inc@308)(main@34)
if #@(macro_inc@309)(main@34)
  push    m #@(macro_inc@310)(main@34)
  pop     agValue3 #@(macro_inc@311)(main@34)
else #@(macro_inc@312)(main@34)
  push    m.pos #@(macro_inc@313)(main@34)
  push    2 #@(macro_inc@314)(main@34)
  sup #@(macro_inc@315)(main@34)
  if #@(macro_inc@316)(main@34)
    push    m.pos #@(macro_inc@317)(main@34)
    push    2 #@(macro_inc@318)(main@34)
    sub #@(macro_inc@319)(main@34)
    loop #@(macro_inc@320)(main@34)
      arotr   m #@(macro_inc@321)(main@34)
    endloop #@(macro_inc@322)(main@34)
    push     m #@(macro_inc@323)(main@34)
    pop      agValue3 #@(macro_inc@324)(main@34)
  else #@(macro_inc@325)(main@34)
    push    2 #@(macro_inc@326)(main@34)
    push    m.pos #@(macro_inc@327)(main@34)
    sub #@(macro_inc@328)(main@34)
    loop #@(macro_inc@329)(main@34)
      arotl   m #@(macro_inc@330)(main@34)
    endloop #@(macro_inc@331)(main@34)
    push     m #@(macro_inc@332)(main@34)
    pop      agValue3 #@(macro_inc@333)(main@34)
  fi #@(macro_inc@334)(main@34)
fi #@(macro_inc@335)(main@34)
#(end macro)arrayGet    m, 2
pop     out #@(main@35)
#(begin macro)arrayGet    m, 3
push    0 #@(macro_inc@304)(main@36)
sbm     agValue4 #@(macro_inc@305)(main@36)
push    m.pos #@(macro_inc@306)(main@36)
push    3 #@(macro_inc@307)(main@36)
equal #@(macro_inc@308)(main@36)
if #@(macro_inc@309)(main@36)
  push    m #@(macro_inc@310)(main@36)
  pop     agValue4 #@(macro_inc@311)(main@36)
else #@(macro_inc@312)(main@36)
  push    m.pos #@(macro_inc@313)(main@36)
  push    3 #@(macro_inc@314)(main@36)
  sup #@(macro_inc@315)(main@36)
  if #@(macro_inc@316)(main@36)
    push    m.pos #@(macro_inc@317)(main@36)
    push    3 #@(macro_inc@318)(main@36)
    sub #@(macro_inc@319)(main@36)
    loop #@(macro_inc@320)(main@36)
      arotr   m #@(macro_inc@321)(main@36)
    endloop #@(macro_inc@322)(main@36)
    push     m #@(macro_inc@323)(main@36)
    pop      agValue4 #@(macro_inc@324)(main@36)
  else #@(macro_inc@325)(main@36)
    push    3 #@(macro_inc@326)(main@36)
    push    m.pos #@(macro_inc@327)(main@36)
    sub #@(macro_inc@328)(main@36)
    loop #@(macro_inc@329)(main@36)
      arotl   m #@(macro_inc@330)(main@36)
    endloop #@(macro_inc@331)(main@36)
    push     m #@(macro_inc@332)(main@36)
    pop      agValue4 #@(macro_inc@333)(main@36)
  fi #@(macro_inc@334)(main@36)
fi #@(macro_inc@335)(main@36)
#(end macro)arrayGet    m, 3
pop     out #@(main@37)
#(begin macro)arrayGet    m, 4
push    0 #@(macro_inc@304)(main@38)
sbm     agValue5 #@(macro_inc@305)(main@38)
push    m.pos #@(macro_inc@306)(main@38)
push    4 #@(macro_inc@307)(main@38)
equal #@(macro_inc@308)(main@38)
if #@(macro_inc@309)(main@38)
  push    m #@(macro_inc@310)(main@38)
  pop     agValue5 #@(macro_inc@311)(main@38)
else #@(macro_inc@312)(main@38)
  push    m.pos #@(macro_inc@313)(main@38)
  push    4 #@(macro_inc@314)(main@38)
  sup #@(macro_inc@315)(main@38)
  if #@(macro_inc@316)(main@38)
    push    m.pos #@(macro_inc@317)(main@38)
    push    4 #@(macro_inc@318)(main@38)
    sub #@(macro_inc@319)(main@38)
    loop #@(macro_inc@320)(main@38)
      arotr   m #@(macro_inc@321)(main@38)
    endloop #@(macro_inc@322)(main@38)
    push     m #@(macro_inc@323)(main@38)
    pop      agValue5 #@(macro_inc@324)(main@38)
  else #@(macro_inc@325)(main@38)
    push    4 #@(macro_inc@326)(main@38)
    push    m.pos #@(macro_inc@327)(main@38)
    sub #@(macro_inc@328)(main@38)
    loop #@(macro_inc@329)(main@38)
      arotl   m #@(macro_inc@330)(main@38)
    endloop #@(macro_inc@331)(main@38)
    push     m #@(macro_inc@332)(main@38)
    pop      agValue5 #@(macro_inc@333)(main@38)
  fi #@(macro_inc@334)(main@38)
fi #@(macro_inc@335)(main@38)
#(end macro)arrayGet    m, 4
pop     out #@(main@39)
#(begin macro)arrayGet    m, 5
push    0 #@(macro_inc@304)(main@40)
sbm     agValue6 #@(macro_inc@305)(main@40)
push    m.pos #@(macro_inc@306)(main@40)
push    5 #@(macro_inc@307)(main@40)
equal #@(macro_inc@308)(main@40)
if #@(macro_inc@309)(main@40)
  push    m #@(macro_inc@310)(main@40)
  pop     agValue6 #@(macro_inc@311)(main@40)
else #@(macro_inc@312)(main@40)
  push    m.pos #@(macro_inc@313)(main@40)
  push    5 #@(macro_inc@314)(main@40)
  sup #@(macro_inc@315)(main@40)
  if #@(macro_inc@316)(main@40)
    push    m.pos #@(macro_inc@317)(main@40)
    push    5 #@(macro_inc@318)(main@40)
    sub #@(macro_inc@319)(main@40)
    loop #@(macro_inc@320)(main@40)
      arotr   m #@(macro_inc@321)(main@40)
    endloop #@(macro_inc@322)(main@40)
    push     m #@(macro_inc@323)(main@40)
    pop      agValue6 #@(macro_inc@324)(main@40)
  else #@(macro_inc@325)(main@40)
    push    5 #@(macro_inc@326)(main@40)
    push    m.pos #@(macro_inc@327)(main@40)
    sub #@(macro_inc@328)(main@40)
    loop #@(macro_inc@329)(main@40)
      arotl   m #@(macro_inc@330)(main@40)
    endloop #@(macro_inc@331)(main@40)
    push     m #@(macro_inc@332)(main@40)
    pop      agValue6 #@(macro_inc@333)(main@40)
  fi #@(macro_inc@334)(main@40)
fi #@(macro_inc@335)(main@40)
#(end macro)arrayGet    m, 5
pop     out #@(main@41)
#(begin macro)arrayGet    m, 6
push    0 #@(macro_inc@304)(main@42)
sbm     agValue7 #@(macro_inc@305)(main@42)
push    m.pos #@(macro_inc@306)(main@42)
push    6 #@(macro_inc@307)(main@42)
equal #@(macro_inc@308)(main@42)
if #@(macro_inc@309)(main@42)
  push    m #@(macro_inc@310)(main@42)
  pop     agValue7 #@(macro_inc@311)(main@42)
else #@(macro_inc@312)(main@42)
  push    m.pos #@(macro_inc@313)(main@42)
  push    6 #@(macro_inc@314)(main@42)
  sup #@(macro_inc@315)(main@42)
  if #@(macro_inc@316)(main@42)
    push    m.pos #@(macro_inc@317)(main@42)
    push    6 #@(macro_inc@318)(main@42)
    sub #@(macro_inc@319)(main@42)
    loop #@(macro_inc@320)(main@42)
      arotr   m #@(macro_inc@321)(main@42)
    endloop #@(macro_inc@322)(main@42)
    push     m #@(macro_inc@323)(main@42)
    pop      agValue7 #@(macro_inc@324)(main@42)
  else #@(macro_inc@325)(main@42)
    push    6 #@(macro_inc@326)(main@42)
    push    m.pos #@(macro_inc@327)(main@42)
    sub #@(macro_inc@328)(main@42)
    loop #@(macro_inc@329)(main@42)
      arotl   m #@(macro_inc@330)(main@42)
    endloop #@(macro_inc@331)(main@42)
    push     m #@(macro_inc@332)(main@42)
    pop      agValue7 #@(macro_inc@333)(main@42)
  fi #@(macro_inc@334)(main@42)
fi #@(macro_inc@335)(main@42)
#(end macro)arrayGet    m, 6
pop     out #@(main@43)
#(begin macro)arrayGet    m, 7
push    0 #@(macro_inc@304)(main@44)
sbm     agValue8 #@(macro_inc@305)(main@44)
push    m.pos #@(macro_inc@306)(main@44)
push    7 #@(macro_inc@307)(main@44)
equal #@(macro_inc@308)(main@44)
if #@(macro_inc@309)(main@44)
  push    m #@(macro_inc@310)(main@44)
  pop     agValue8 #@(macro_inc@311)(main@44)
else #@(macro_inc@312)(main@44)
  push    m.pos #@(macro_inc@313)(main@44)
  push    7 #@(macro_inc@314)(main@44)
  sup #@(macro_inc@315)(main@44)
  if #@(macro_inc@316)(main@44)
    push    m.pos #@(macro_inc@317)(main@44)
    push    7 #@(macro_inc@318)(main@44)
    sub #@(macro_inc@319)(main@44)
    loop #@(macro_inc@320)(main@44)
      arotr   m #@(macro_inc@321)(main@44)
    endloop #@(macro_inc@322)(main@44)
    push     m #@(macro_inc@323)(main@44)
    pop      agValue8 #@(macro_inc@324)(main@44)
  else #@(macro_inc@325)(main@44)
    push    7 #@(macro_inc@326)(main@44)
    push    m.pos #@(macro_inc@327)(main@44)
    sub #@(macro_inc@328)(main@44)
    loop #@(macro_inc@329)(main@44)
      arotl   m #@(macro_inc@330)(main@44)
    endloop #@(macro_inc@331)(main@44)
    push     m #@(macro_inc@332)(main@44)
    pop      agValue8 #@(macro_inc@333)(main@44)
  fi #@(macro_inc@334)(main@44)
fi #@(macro_inc@335)(main@44)
#(end macro)arrayGet    m, 7
pop     out #@(main@45)
#(begin macro)arrayGet    m, 8
push    0 #@(macro_inc@304)(main@46)
sbm     agValue9 #@(macro_inc@305)(main@46)
push    m.pos #@(macro_inc@306)(main@46)
push    8 #@(macro_inc@307)(main@46)
equal #@(macro_inc@308)(main@46)
if #@(macro_inc@309)(main@46)
  push    m #@(macro_inc@310)(main@46)
  pop     agValue9 #@(macro_inc@311)(main@46)
else #@(macro_inc@312)(main@46)
  push    m.pos #@(macro_inc@313)(main@46)
  push    8 #@(macro_inc@314)(main@46)
  sup #@(macro_inc@315)(main@46)
  if #@(macro_inc@316)(main@46)
    push    m.pos #@(macro_inc@317)(main@46)
    push    8 #@(macro_inc@318)(main@46)
    sub #@(macro_inc@319)(main@46)
    loop #@(macro_inc@320)(main@46)
      arotr   m #@(macro_inc@321)(main@46)
    endloop #@(macro_inc@322)(main@46)
    push     m #@(macro_inc@323)(main@46)
    pop      agValue9 #@(macro_inc@324)(main@46)
  else #@(macro_inc@325)(main@46)
    push    8 #@(macro_inc@326)(main@46)
    push    m.pos #@(macro_inc@327)(main@46)
    sub #@(macro_inc@328)(main@46)
    loop #@(macro_inc@329)(main@46)
      arotl   m #@(macro_inc@330)(main@46)
    endloop #@(macro_inc@331)(main@46)
    push     m #@(macro_inc@332)(main@46)
    pop      agValue9 #@(macro_inc@333)(main@46)
  fi #@(macro_inc@334)(main@46)
fi #@(macro_inc@335)(main@46)
#(end macro)arrayGet    m, 8
pop     out #@(main@47)
#(begin macro)arrayGet    m, 9
push    0 #@(macro_inc@304)(main@48)
sbm     agValue10 #@(macro_inc@305)(main@48)
push    m.pos #@(macro_inc@306)(main@48)
push    9 #@(macro_inc@307)(main@48)
equal #@(macro_inc@308)(main@48)
if #@(macro_inc@309)(main@48)
  push    m #@(macro_inc@310)(main@48)
  pop     agValue10 #@(macro_inc@311)(main@48)
else #@(macro_inc@312)(main@48)
  push    m.pos #@(macro_inc@313)(main@48)
  push    9 #@(macro_inc@314)(main@48)
  sup #@(macro_inc@315)(main@48)
  if #@(macro_inc@316)(main@48)
    push    m.pos #@(macro_inc@317)(main@48)
    push    9 #@(macro_inc@318)(main@48)
    sub #@(macro_inc@319)(main@48)
    loop #@(macro_inc@320)(main@48)
      arotr   m #@(macro_inc@321)(main@48)
    endloop #@(macro_inc@322)(main@48)
    push     m #@(macro_inc@323)(main@48)
    pop      agValue10 #@(macro_inc@324)(main@48)
  else #@(macro_inc@325)(main@48)
    push    9 #@(macro_inc@326)(main@48)
    push    m.pos #@(macro_inc@327)(main@48)
    sub #@(macro_inc@328)(main@48)
    loop #@(macro_inc@329)(main@48)
      arotl   m #@(macro_inc@330)(main@48)
    endloop #@(macro_inc@331)(main@48)
    push     m #@(macro_inc@332)(main@48)
    pop      agValue10 #@(macro_inc@333)(main@48)
  fi #@(macro_inc@334)(main@48)
fi #@(macro_inc@335)(main@48)
#(end macro)arrayGet    m, 9
pop     out #@(main@49)
 #@(main@50)
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@51)
set     10 #@(macro_inc@420)(main@51)
out             #  #@(macro_inc@422)(main@51)
drop #@(macro_inc@425)(main@51)
#(end macro)print("\n")
#(begin macro)scope_begin
#(end macro)scope_begin
#(begin macro)lvar a,10
push    10 #@(macro_inc@22)(main@53)
sbm     a #@(macro_inc@23)(main@53)
#(end macro)lvar a,10
#(begin macro)lvar b,20
push    20 #@(macro_inc@22)(main@54)
sbm     b #@(macro_inc@23)(main@54)
#(end macro)lvar b,20
#(begin macro)lvar c,30
push    30 #@(macro_inc@22)(main@55)
sbm     c #@(macro_inc@23)(main@55)
#(end macro)lvar c,30
#(begin macro)lvar d,40
push    40 #@(macro_inc@22)(main@56)
sbm     d #@(macro_inc@23)(main@56)
#(end macro)lvar d,40
#(begin macro)lvar f,20
push    20 #@(macro_inc@22)(main@57)
sbm     f #@(macro_inc@23)(main@57)
#(end macro)lvar f,20
 #@(main@58)
#(begin macro)print("  a = 10 : 0A == ")
push    0 #@(macro_inc@405)(main@59)
set     32 #@(macro_inc@420)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     65 #@(macro_inc@413)(main@59)
out             # 'a' #@(macro_inc@422)(main@59)
set     32 #@(macro_inc@420)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     29 #@(macro_inc@413)(main@59)
out             # '=' #@(macro_inc@422)(main@59)
sub     29 #@(macro_inc@416)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     17 #@(macro_inc@413)(main@59)
out             # '1' #@(macro_inc@422)(main@59)
sub     1 #@(macro_inc@416)(main@59)
out             # '0' #@(macro_inc@422)(main@59)
sub     16 #@(macro_inc@416)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     26 #@(macro_inc@413)(main@59)
out             # ':' #@(macro_inc@422)(main@59)
sub     26 #@(macro_inc@416)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     16 #@(macro_inc@413)(main@59)
out             # '0' #@(macro_inc@422)(main@59)
add     17 #@(macro_inc@413)(main@59)
out             # 'A' #@(macro_inc@422)(main@59)
set     32 #@(macro_inc@420)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
add     29 #@(macro_inc@413)(main@59)
out             # '=' #@(macro_inc@422)(main@59)
out             # '=' #@(macro_inc@422)(main@59)
sub     29 #@(macro_inc@416)(main@59)
out             # ' ' #@(macro_inc@422)(main@59)
drop #@(macro_inc@425)(main@59)
#(end macro)print("  a = 10 : 0A == ")
push    a #@(main@60)
#(begin macro)popout8hexa
push    16 #@(macro_inc@353)(main@61)
div #@(macro_inc@354)(main@61)
#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop
sbm     _input1 #@(macro_inc@342)(macro_inc@355)(main@61)
#(begin macro)if_sup  _input1,    9
push    _input1 #@(macro_inc@45)(macro_inc@343)(macro_inc@355)(main@61)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@355)(main@61)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@355)(main@61)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@355)(main@61)
  #(end macro)if_sup  _input1,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input1 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@61)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@61)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@61)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@355)(main@61)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input1 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@61)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@61)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@61)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@355)(main@61)
pop out #@(macro_inc@348)(macro_inc@355)(main@61)
#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop
#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop
sbm     _input2 #@(macro_inc@342)(macro_inc@356)(main@61)
#(begin macro)if_sup  _input2,    9
push    _input2 #@(macro_inc@45)(macro_inc@343)(macro_inc@356)(main@61)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@356)(main@61)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@356)(main@61)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@356)(main@61)
  #(end macro)if_sup  _input2,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input2 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@61)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@61)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@61)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@356)(main@61)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input2 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@61)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@61)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@61)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@356)(main@61)
pop out #@(macro_inc@348)(macro_inc@356)(main@61)
#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop
#(end macro)popout8hexa
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@62)
set     10 #@(macro_inc@420)(main@62)
out             #  #@(macro_inc@422)(main@62)
drop #@(macro_inc@425)(main@62)
#(end macro)print("\n")
#(begin macro)print("  b = 20 : 14 == ")
push    0 #@(macro_inc@405)(main@63)
set     32 #@(macro_inc@420)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     66 #@(macro_inc@413)(main@63)
out             # 'b' #@(macro_inc@422)(main@63)
set     32 #@(macro_inc@420)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     29 #@(macro_inc@413)(main@63)
out             # '=' #@(macro_inc@422)(main@63)
sub     29 #@(macro_inc@416)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     18 #@(macro_inc@413)(main@63)
out             # '2' #@(macro_inc@422)(main@63)
sub     2 #@(macro_inc@416)(main@63)
out             # '0' #@(macro_inc@422)(main@63)
sub     16 #@(macro_inc@416)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     26 #@(macro_inc@413)(main@63)
out             # ':' #@(macro_inc@422)(main@63)
sub     26 #@(macro_inc@416)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     17 #@(macro_inc@413)(main@63)
out             # '1' #@(macro_inc@422)(main@63)
add     3 #@(macro_inc@413)(main@63)
out             # '4' #@(macro_inc@422)(main@63)
sub     20 #@(macro_inc@416)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
add     29 #@(macro_inc@413)(main@63)
out             # '=' #@(macro_inc@422)(main@63)
out             # '=' #@(macro_inc@422)(main@63)
sub     29 #@(macro_inc@416)(main@63)
out             # ' ' #@(macro_inc@422)(main@63)
drop #@(macro_inc@425)(main@63)
#(end macro)print("  b = 20 : 14 == ")
push    b #@(main@64)
#(begin macro)popout8hexa
push    16 #@(macro_inc@353)(main@65)
div #@(macro_inc@354)(main@65)
#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop
sbm     _input3 #@(macro_inc@342)(macro_inc@355)(main@65)
#(begin macro)if_sup  _input3,    9
push    _input3 #@(macro_inc@45)(macro_inc@343)(macro_inc@355)(main@65)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@355)(main@65)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@355)(main@65)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@355)(main@65)
  #(end macro)if_sup  _input3,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input3 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@65)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@65)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@65)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@355)(main@65)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input3 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@65)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@65)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@65)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@355)(main@65)
pop out #@(macro_inc@348)(macro_inc@355)(main@65)
#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop
#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop
sbm     _input4 #@(macro_inc@342)(macro_inc@356)(main@65)
#(begin macro)if_sup  _input4,    9
push    _input4 #@(macro_inc@45)(macro_inc@343)(macro_inc@356)(main@65)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@356)(main@65)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@356)(main@65)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@356)(main@65)
  #(end macro)if_sup  _input4,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input4 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@65)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@65)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@65)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@356)(main@65)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input4 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@65)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@65)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@65)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@356)(main@65)
pop out #@(macro_inc@348)(macro_inc@356)(main@65)
#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop
#(end macro)popout8hexa
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@66)
set     10 #@(macro_inc@420)(main@66)
out             #  #@(macro_inc@422)(main@66)
drop #@(macro_inc@425)(main@66)
#(end macro)print("\n")
#(begin macro)print("  c = 30 : 1E == ")
push    0 #@(macro_inc@405)(main@67)
set     32 #@(macro_inc@420)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     67 #@(macro_inc@413)(main@67)
out             # 'c' #@(macro_inc@422)(main@67)
set     32 #@(macro_inc@420)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     29 #@(macro_inc@413)(main@67)
out             # '=' #@(macro_inc@422)(main@67)
sub     29 #@(macro_inc@416)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     19 #@(macro_inc@413)(main@67)
out             # '3' #@(macro_inc@422)(main@67)
sub     3 #@(macro_inc@416)(main@67)
out             # '0' #@(macro_inc@422)(main@67)
sub     16 #@(macro_inc@416)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     26 #@(macro_inc@413)(main@67)
out             # ':' #@(macro_inc@422)(main@67)
sub     26 #@(macro_inc@416)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     17 #@(macro_inc@413)(main@67)
out             # '1' #@(macro_inc@422)(main@67)
add     20 #@(macro_inc@413)(main@67)
out             # 'E' #@(macro_inc@422)(main@67)
set     32 #@(macro_inc@420)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
add     29 #@(macro_inc@413)(main@67)
out             # '=' #@(macro_inc@422)(main@67)
out             # '=' #@(macro_inc@422)(main@67)
sub     29 #@(macro_inc@416)(main@67)
out             # ' ' #@(macro_inc@422)(main@67)
drop #@(macro_inc@425)(main@67)
#(end macro)print("  c = 30 : 1E == ")
push    c #@(main@68)
#(begin macro)popout8hexa
push    16 #@(macro_inc@353)(main@69)
div #@(macro_inc@354)(main@69)
#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop
sbm     _input5 #@(macro_inc@342)(macro_inc@355)(main@69)
#(begin macro)if_sup  _input5,    9
push    _input5 #@(macro_inc@45)(macro_inc@343)(macro_inc@355)(main@69)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@355)(main@69)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@355)(main@69)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@355)(main@69)
  #(end macro)if_sup  _input5,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input5 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@69)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@69)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@69)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@355)(main@69)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input5 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@69)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@69)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@69)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@355)(main@69)
pop out #@(macro_inc@348)(macro_inc@355)(main@69)
#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop
#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop
sbm     _input6 #@(macro_inc@342)(macro_inc@356)(main@69)
#(begin macro)if_sup  _input6,    9
push    _input6 #@(macro_inc@45)(macro_inc@343)(macro_inc@356)(main@69)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@356)(main@69)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@356)(main@69)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@356)(main@69)
  #(end macro)if_sup  _input6,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input6 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@69)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@69)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@69)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@356)(main@69)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input6 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@69)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@69)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@69)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@356)(main@69)
pop out #@(macro_inc@348)(macro_inc@356)(main@69)
#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop
#(end macro)popout8hexa
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@70)
set     10 #@(macro_inc@420)(main@70)
out             #  #@(macro_inc@422)(main@70)
drop #@(macro_inc@425)(main@70)
#(end macro)print("\n")
#(begin macro)print("  d = 40 : 28 == ")
push    0 #@(macro_inc@405)(main@71)
set     32 #@(macro_inc@420)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     68 #@(macro_inc@413)(main@71)
out             # 'd' #@(macro_inc@422)(main@71)
set     32 #@(macro_inc@420)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     29 #@(macro_inc@413)(main@71)
out             # '=' #@(macro_inc@422)(main@71)
sub     29 #@(macro_inc@416)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     20 #@(macro_inc@413)(main@71)
out             # '4' #@(macro_inc@422)(main@71)
sub     4 #@(macro_inc@416)(main@71)
out             # '0' #@(macro_inc@422)(main@71)
sub     16 #@(macro_inc@416)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     26 #@(macro_inc@413)(main@71)
out             # ':' #@(macro_inc@422)(main@71)
sub     26 #@(macro_inc@416)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     18 #@(macro_inc@413)(main@71)
out             # '2' #@(macro_inc@422)(main@71)
add     6 #@(macro_inc@413)(main@71)
out             # '8' #@(macro_inc@422)(main@71)
sub     24 #@(macro_inc@416)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
add     29 #@(macro_inc@413)(main@71)
out             # '=' #@(macro_inc@422)(main@71)
out             # '=' #@(macro_inc@422)(main@71)
sub     29 #@(macro_inc@416)(main@71)
out             # ' ' #@(macro_inc@422)(main@71)
drop #@(macro_inc@425)(main@71)
#(end macro)print("  d = 40 : 28 == ")
push    d #@(main@72)
#(begin macro)popout8hexa
push    16 #@(macro_inc@353)(main@73)
div #@(macro_inc@354)(main@73)
#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop
sbm     _input7 #@(macro_inc@342)(macro_inc@355)(main@73)
#(begin macro)if_sup  _input7,    9
push    _input7 #@(macro_inc@45)(macro_inc@343)(macro_inc@355)(main@73)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@355)(main@73)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@355)(main@73)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@355)(main@73)
  #(end macro)if_sup  _input7,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input7 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@73)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@73)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@73)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@355)(main@73)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input7 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@73)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@73)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@73)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@355)(main@73)
pop out #@(macro_inc@348)(macro_inc@355)(main@73)
#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop
#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop
sbm     _input8 #@(macro_inc@342)(macro_inc@356)(main@73)
#(begin macro)if_sup  _input8,    9
push    _input8 #@(macro_inc@45)(macro_inc@343)(macro_inc@356)(main@73)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@356)(main@73)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@356)(main@73)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@356)(main@73)
  #(end macro)if_sup  _input8,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input8 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@73)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@73)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@73)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@356)(main@73)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input8 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@73)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@73)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@73)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@356)(main@73)
pop out #@(macro_inc@348)(macro_inc@356)(main@73)
#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop
#(end macro)popout8hexa
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@74)
set     10 #@(macro_inc@420)(main@74)
out             #  #@(macro_inc@422)(main@74)
drop #@(macro_inc@425)(main@74)
#(end macro)print("\n")
#(begin macro)print("  f = 20 : 14 == ")
push    0 #@(macro_inc@405)(main@75)
set     32 #@(macro_inc@420)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     70 #@(macro_inc@413)(main@75)
out             # 'f' #@(macro_inc@422)(main@75)
set     32 #@(macro_inc@420)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     29 #@(macro_inc@413)(main@75)
out             # '=' #@(macro_inc@422)(main@75)
sub     29 #@(macro_inc@416)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     18 #@(macro_inc@413)(main@75)
out             # '2' #@(macro_inc@422)(main@75)
sub     2 #@(macro_inc@416)(main@75)
out             # '0' #@(macro_inc@422)(main@75)
sub     16 #@(macro_inc@416)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     26 #@(macro_inc@413)(main@75)
out             # ':' #@(macro_inc@422)(main@75)
sub     26 #@(macro_inc@416)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     17 #@(macro_inc@413)(main@75)
out             # '1' #@(macro_inc@422)(main@75)
add     3 #@(macro_inc@413)(main@75)
out             # '4' #@(macro_inc@422)(main@75)
sub     20 #@(macro_inc@416)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
add     29 #@(macro_inc@413)(main@75)
out             # '=' #@(macro_inc@422)(main@75)
out             # '=' #@(macro_inc@422)(main@75)
sub     29 #@(macro_inc@416)(main@75)
out             # ' ' #@(macro_inc@422)(main@75)
drop #@(macro_inc@425)(main@75)
#(end macro)print("  f = 20 : 14 == ")
push    f #@(main@76)
#(begin macro)popout8hexa
push    16 #@(macro_inc@353)(main@77)
div #@(macro_inc@354)(main@77)
#(begin macro)popouthexa # output most significant hexa character from head of stack value, then drop
sbm     _input9 #@(macro_inc@342)(macro_inc@355)(main@77)
#(begin macro)if_sup  _input9,    9
push    _input9 #@(macro_inc@45)(macro_inc@343)(macro_inc@355)(main@77)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@355)(main@77)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@355)(main@77)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@355)(main@77)
  #(end macro)if_sup  _input9,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input9 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@77)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@77)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@355)(main@77)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@355)(main@77)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input9 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@77)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@77)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@355)(main@77)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@355)(main@77)
pop out #@(macro_inc@348)(macro_inc@355)(main@77)
#(end macro)popouthexa # output most significant hexa character from head of stack value, then drop
#(begin macro)popouthexa # output less significant hexa character from head of stack value, then drop
sbm     _input10 #@(macro_inc@342)(macro_inc@356)(main@77)
#(begin macro)if_sup  _input10,    9
push    _input10 #@(macro_inc@45)(macro_inc@343)(macro_inc@356)(main@77)
push    9 #@(macro_inc@46)(macro_inc@343)(macro_inc@356)(main@77)
sup #@(macro_inc@47)(macro_inc@343)(macro_inc@356)(main@77)
if #@(macro_inc@48)(macro_inc@343)(macro_inc@356)(main@77)
  #(end macro)if_sup  _input10,    9
  #(begin macro)at_add("_input" + _popouthexa, "'7'")
  #(begin macro)at_2("add",a,b)
  at      _input10 #@(macro_inc@79)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@77)
    add   '7' #@(macro_inc@80)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@77)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@344)(macro_inc@356)(main@77)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'7'")
else #@(macro_inc@345)(macro_inc@356)(main@77)
  #(begin macro)at_add("_input" + _popouthexa, "'0'")
  #(begin macro)at_2("add",a,b)
  at      _input10 #@(macro_inc@79)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@77)
    add   '0' #@(macro_inc@80)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@77)
  ta #@(macro_inc@81)(macro_inc@116)(macro_inc@346)(macro_inc@356)(main@77)
  #(end macro)at_2("add",a,b)
  #(end macro)at_add("_input" + _popouthexa, "'0'")
fi #@(macro_inc@347)(macro_inc@356)(main@77)
pop out #@(macro_inc@348)(macro_inc@356)(main@77)
#(end macro)popouthexa # output less significant hexa character from head of stack value, then drop
#(end macro)popout8hexa
#(begin macro)print("\n")
push    0 #@(macro_inc@405)(main@78)
set     10 #@(macro_inc@420)(main@78)
out             #  #@(macro_inc@422)(main@78)
drop #@(macro_inc@425)(main@78)
#(end macro)print("\n")
 #@(main@79)
# macro if_diff(a,b) : if (a != b) { #@(main@80)
#(begin macro)print("if_diff\n")
push    0 #@(macro_inc@405)(main@81)
set     105 #@(macro_inc@420)(main@81)
out             # 'i' #@(macro_inc@422)(main@81)
sub     3 #@(macro_inc@416)(main@81)
out             # 'f' #@(macro_inc@422)(main@81)
sub     7 #@(macro_inc@416)(main@81)
out             # '_' #@(macro_inc@422)(main@81)
add     5 #@(macro_inc@413)(main@81)
out             # 'd' #@(macro_inc@422)(main@81)
add     5 #@(macro_inc@413)(main@81)
out             # 'i' #@(macro_inc@422)(main@81)
sub     3 #@(macro_inc@416)(main@81)
out             # 'f' #@(macro_inc@422)(main@81)
out             # 'f' #@(macro_inc@422)(main@81)
set     10 #@(macro_inc@420)(main@81)
out             #  #@(macro_inc@422)(main@81)
drop #@(macro_inc@425)(main@81)
#(end macro)print("if_diff\n")
#(begin macro)print("   a diff b is true; ")
push    0 #@(macro_inc@405)(main@82)
set     32 #@(macro_inc@420)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
add     65 #@(macro_inc@413)(main@82)
out             # 'a' #@(macro_inc@422)(main@82)
set     32 #@(macro_inc@420)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
add     68 #@(macro_inc@413)(main@82)
out             # 'd' #@(macro_inc@422)(main@82)
add     5 #@(macro_inc@413)(main@82)
out             # 'i' #@(macro_inc@422)(main@82)
sub     3 #@(macro_inc@416)(main@82)
out             # 'f' #@(macro_inc@422)(main@82)
out             # 'f' #@(macro_inc@422)(main@82)
set     32 #@(macro_inc@420)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
add     66 #@(macro_inc@413)(main@82)
out             # 'b' #@(macro_inc@422)(main@82)
set     32 #@(macro_inc@420)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
add     73 #@(macro_inc@413)(main@82)
out             # 'i' #@(macro_inc@422)(main@82)
add     10 #@(macro_inc@413)(main@82)
out             # 's' #@(macro_inc@422)(main@82)
set     32 #@(macro_inc@420)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
add     84 #@(macro_inc@413)(main@82)
out             # 't' #@(macro_inc@422)(main@82)
sub     2 #@(macro_inc@416)(main@82)
out             # 'r' #@(macro_inc@422)(main@82)
add     3 #@(macro_inc@413)(main@82)
out             # 'u' #@(macro_inc@422)(main@82)
sub     16 #@(macro_inc@416)(main@82)
out             # 'e' #@(macro_inc@422)(main@82)
sub     42 #@(macro_inc@416)(main@82)
out             # ';' #@(macro_inc@422)(main@82)
sub     27 #@(macro_inc@416)(main@82)
out             # ' ' #@(macro_inc@422)(main@82)
drop #@(macro_inc@425)(main@82)
#(end macro)print("   a diff b is true; ")
#(begin macro)if_diff a,b
push    a #@(macro_inc@29)(main@83)
push    b #@(macro_inc@30)(main@83)
diff #@(macro_inc@31)(main@83)
if #@(macro_inc@32)(main@83)
  #(end macro)if_diff a,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@84)
  set     79 #@(macro_inc@420)(main@84)
  out             # 'O' #@(macro_inc@422)(main@84)
  sub     4 #@(macro_inc@416)(main@84)
  out             # 'K' #@(macro_inc@422)(main@84)
  set     10 #@(macro_inc@420)(main@84)
  out             #  #@(macro_inc@422)(main@84)
  drop #@(macro_inc@425)(main@84)
  #(end macro)print ("OK\n")
else #@(main@85)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@86)
  set     66 #@(macro_inc@420)(main@86)
  out             # 'B' #@(macro_inc@422)(main@86)
  add     19 #@(macro_inc@413)(main@86)
  out             # 'U' #@(macro_inc@422)(main@86)
  sub     14 #@(macro_inc@416)(main@86)
  out             # 'G' #@(macro_inc@422)(main@86)
  set     10 #@(macro_inc@420)(main@86)
  out             #  #@(macro_inc@422)(main@86)
  drop #@(macro_inc@425)(main@86)
  #(end macro)print ("BUG\n")
fi #@(main@87)
#(begin macro)print("   b diff f is false; ")
push    0 #@(macro_inc@405)(main@88)
set     32 #@(macro_inc@420)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
add     66 #@(macro_inc@413)(main@88)
out             # 'b' #@(macro_inc@422)(main@88)
set     32 #@(macro_inc@420)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
add     68 #@(macro_inc@413)(main@88)
out             # 'd' #@(macro_inc@422)(main@88)
add     5 #@(macro_inc@413)(main@88)
out             # 'i' #@(macro_inc@422)(main@88)
sub     3 #@(macro_inc@416)(main@88)
out             # 'f' #@(macro_inc@422)(main@88)
out             # 'f' #@(macro_inc@422)(main@88)
set     32 #@(macro_inc@420)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
add     70 #@(macro_inc@413)(main@88)
out             # 'f' #@(macro_inc@422)(main@88)
set     32 #@(macro_inc@420)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
add     73 #@(macro_inc@413)(main@88)
out             # 'i' #@(macro_inc@422)(main@88)
add     10 #@(macro_inc@413)(main@88)
out             # 's' #@(macro_inc@422)(main@88)
set     32 #@(macro_inc@420)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
add     70 #@(macro_inc@413)(main@88)
out             # 'f' #@(macro_inc@422)(main@88)
sub     5 #@(macro_inc@416)(main@88)
out             # 'a' #@(macro_inc@422)(main@88)
add     11 #@(macro_inc@413)(main@88)
out             # 'l' #@(macro_inc@422)(main@88)
add     7 #@(macro_inc@413)(main@88)
out             # 's' #@(macro_inc@422)(main@88)
sub     14 #@(macro_inc@416)(main@88)
out             # 'e' #@(macro_inc@422)(main@88)
sub     42 #@(macro_inc@416)(main@88)
out             # ';' #@(macro_inc@422)(main@88)
sub     27 #@(macro_inc@416)(main@88)
out             # ' ' #@(macro_inc@422)(main@88)
drop #@(macro_inc@425)(main@88)
#(end macro)print("   b diff f is false; ")
#(begin macro)if_diff b,f
push    b #@(macro_inc@29)(main@89)
push    f #@(macro_inc@30)(main@89)
diff #@(macro_inc@31)(main@89)
if #@(macro_inc@32)(main@89)
  #(end macro)if_diff b,f
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@90)
  set     66 #@(macro_inc@420)(main@90)
  out             # 'B' #@(macro_inc@422)(main@90)
  add     19 #@(macro_inc@413)(main@90)
  out             # 'U' #@(macro_inc@422)(main@90)
  sub     14 #@(macro_inc@416)(main@90)
  out             # 'G' #@(macro_inc@422)(main@90)
  set     10 #@(macro_inc@420)(main@90)
  out             #  #@(macro_inc@422)(main@90)
  drop #@(macro_inc@425)(main@90)
  #(end macro)print ("BUG\n")
else #@(main@91)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@92)
  set     79 #@(macro_inc@420)(main@92)
  out             # 'O' #@(macro_inc@422)(main@92)
  sub     4 #@(macro_inc@416)(main@92)
  out             # 'K' #@(macro_inc@422)(main@92)
  set     10 #@(macro_inc@420)(main@92)
  out             #  #@(macro_inc@422)(main@92)
  drop #@(macro_inc@425)(main@92)
  #(end macro)print ("OK\n")
fi #@(main@93)
 #@(main@94)
# macro if_equal(a,b) : if (a == b) { #@(main@95)
#(begin macro)print("if_equal\n")
push    0 #@(macro_inc@405)(main@96)
set     105 #@(macro_inc@420)(main@96)
out             # 'i' #@(macro_inc@422)(main@96)
sub     3 #@(macro_inc@416)(main@96)
out             # 'f' #@(macro_inc@422)(main@96)
sub     7 #@(macro_inc@416)(main@96)
out             # '_' #@(macro_inc@422)(main@96)
add     6 #@(macro_inc@413)(main@96)
out             # 'e' #@(macro_inc@422)(main@96)
add     12 #@(macro_inc@413)(main@96)
out             # 'q' #@(macro_inc@422)(main@96)
add     4 #@(macro_inc@413)(main@96)
out             # 'u' #@(macro_inc@422)(main@96)
sub     20 #@(macro_inc@416)(main@96)
out             # 'a' #@(macro_inc@422)(main@96)
add     11 #@(macro_inc@413)(main@96)
out             # 'l' #@(macro_inc@422)(main@96)
set     10 #@(macro_inc@420)(main@96)
out             #  #@(macro_inc@422)(main@96)
drop #@(macro_inc@425)(main@96)
#(end macro)print("if_equal\n")
#(begin macro)print("   a equal b is false; ")
push    0 #@(macro_inc@405)(main@97)
set     32 #@(macro_inc@420)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
add     65 #@(macro_inc@413)(main@97)
out             # 'a' #@(macro_inc@422)(main@97)
set     32 #@(macro_inc@420)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
add     69 #@(macro_inc@413)(main@97)
out             # 'e' #@(macro_inc@422)(main@97)
add     12 #@(macro_inc@413)(main@97)
out             # 'q' #@(macro_inc@422)(main@97)
add     4 #@(macro_inc@413)(main@97)
out             # 'u' #@(macro_inc@422)(main@97)
sub     20 #@(macro_inc@416)(main@97)
out             # 'a' #@(macro_inc@422)(main@97)
add     11 #@(macro_inc@413)(main@97)
out             # 'l' #@(macro_inc@422)(main@97)
set     32 #@(macro_inc@420)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
add     66 #@(macro_inc@413)(main@97)
out             # 'b' #@(macro_inc@422)(main@97)
set     32 #@(macro_inc@420)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
add     73 #@(macro_inc@413)(main@97)
out             # 'i' #@(macro_inc@422)(main@97)
add     10 #@(macro_inc@413)(main@97)
out             # 's' #@(macro_inc@422)(main@97)
set     32 #@(macro_inc@420)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
add     70 #@(macro_inc@413)(main@97)
out             # 'f' #@(macro_inc@422)(main@97)
sub     5 #@(macro_inc@416)(main@97)
out             # 'a' #@(macro_inc@422)(main@97)
add     11 #@(macro_inc@413)(main@97)
out             # 'l' #@(macro_inc@422)(main@97)
add     7 #@(macro_inc@413)(main@97)
out             # 's' #@(macro_inc@422)(main@97)
sub     14 #@(macro_inc@416)(main@97)
out             # 'e' #@(macro_inc@422)(main@97)
sub     42 #@(macro_inc@416)(main@97)
out             # ';' #@(macro_inc@422)(main@97)
sub     27 #@(macro_inc@416)(main@97)
out             # ' ' #@(macro_inc@422)(main@97)
drop #@(macro_inc@425)(main@97)
#(end macro)print("   a equal b is false; ")
#(begin macro)if_equal a,b
push    a #@(macro_inc@37)(main@98)
push    b #@(macro_inc@38)(main@98)
equal #@(macro_inc@39)(main@98)
if #@(macro_inc@40)(main@98)
  #(end macro)if_equal a,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@99)
  set     66 #@(macro_inc@420)(main@99)
  out             # 'B' #@(macro_inc@422)(main@99)
  add     19 #@(macro_inc@413)(main@99)
  out             # 'U' #@(macro_inc@422)(main@99)
  sub     14 #@(macro_inc@416)(main@99)
  out             # 'G' #@(macro_inc@422)(main@99)
  set     10 #@(macro_inc@420)(main@99)
  out             #  #@(macro_inc@422)(main@99)
  drop #@(macro_inc@425)(main@99)
  #(end macro)print ("BUG\n")
else #@(main@100)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@101)
  set     79 #@(macro_inc@420)(main@101)
  out             # 'O' #@(macro_inc@422)(main@101)
  sub     4 #@(macro_inc@416)(main@101)
  out             # 'K' #@(macro_inc@422)(main@101)
  set     10 #@(macro_inc@420)(main@101)
  out             #  #@(macro_inc@422)(main@101)
  drop #@(macro_inc@425)(main@101)
  #(end macro)print ("OK\n")
fi #@(main@102)
#(begin macro)print("   b equal f is true; ")
push    0 #@(macro_inc@405)(main@103)
set     32 #@(macro_inc@420)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
add     66 #@(macro_inc@413)(main@103)
out             # 'b' #@(macro_inc@422)(main@103)
set     32 #@(macro_inc@420)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
add     69 #@(macro_inc@413)(main@103)
out             # 'e' #@(macro_inc@422)(main@103)
add     12 #@(macro_inc@413)(main@103)
out             # 'q' #@(macro_inc@422)(main@103)
add     4 #@(macro_inc@413)(main@103)
out             # 'u' #@(macro_inc@422)(main@103)
sub     20 #@(macro_inc@416)(main@103)
out             # 'a' #@(macro_inc@422)(main@103)
add     11 #@(macro_inc@413)(main@103)
out             # 'l' #@(macro_inc@422)(main@103)
set     32 #@(macro_inc@420)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
add     70 #@(macro_inc@413)(main@103)
out             # 'f' #@(macro_inc@422)(main@103)
set     32 #@(macro_inc@420)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
add     73 #@(macro_inc@413)(main@103)
out             # 'i' #@(macro_inc@422)(main@103)
add     10 #@(macro_inc@413)(main@103)
out             # 's' #@(macro_inc@422)(main@103)
set     32 #@(macro_inc@420)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
add     84 #@(macro_inc@413)(main@103)
out             # 't' #@(macro_inc@422)(main@103)
sub     2 #@(macro_inc@416)(main@103)
out             # 'r' #@(macro_inc@422)(main@103)
add     3 #@(macro_inc@413)(main@103)
out             # 'u' #@(macro_inc@422)(main@103)
sub     16 #@(macro_inc@416)(main@103)
out             # 'e' #@(macro_inc@422)(main@103)
sub     42 #@(macro_inc@416)(main@103)
out             # ';' #@(macro_inc@422)(main@103)
sub     27 #@(macro_inc@416)(main@103)
out             # ' ' #@(macro_inc@422)(main@103)
drop #@(macro_inc@425)(main@103)
#(end macro)print("   b equal f is true; ")
#(begin macro)if_equal b,f
push    b #@(macro_inc@37)(main@104)
push    f #@(macro_inc@38)(main@104)
equal #@(macro_inc@39)(main@104)
if #@(macro_inc@40)(main@104)
  #(end macro)if_equal b,f
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@105)
  set     79 #@(macro_inc@420)(main@105)
  out             # 'O' #@(macro_inc@422)(main@105)
  sub     4 #@(macro_inc@416)(main@105)
  out             # 'K' #@(macro_inc@422)(main@105)
  set     10 #@(macro_inc@420)(main@105)
  out             #  #@(macro_inc@422)(main@105)
  drop #@(macro_inc@425)(main@105)
  #(end macro)print ("OK\n")
else #@(main@106)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@107)
  set     66 #@(macro_inc@420)(main@107)
  out             # 'B' #@(macro_inc@422)(main@107)
  add     19 #@(macro_inc@413)(main@107)
  out             # 'U' #@(macro_inc@422)(main@107)
  sub     14 #@(macro_inc@416)(main@107)
  out             # 'G' #@(macro_inc@422)(main@107)
  set     10 #@(macro_inc@420)(main@107)
  out             #  #@(macro_inc@422)(main@107)
  drop #@(macro_inc@425)(main@107)
  #(end macro)print ("BUG\n")
fi #@(main@108)
 #@(main@109)
# macro if_sup(a,b) : if (a > b) { #@(main@110)
#(begin macro)print("if_sup\n")
push    0 #@(macro_inc@405)(main@111)
set     105 #@(macro_inc@420)(main@111)
out             # 'i' #@(macro_inc@422)(main@111)
sub     3 #@(macro_inc@416)(main@111)
out             # 'f' #@(macro_inc@422)(main@111)
sub     7 #@(macro_inc@416)(main@111)
out             # '_' #@(macro_inc@422)(main@111)
add     20 #@(macro_inc@413)(main@111)
out             # 's' #@(macro_inc@422)(main@111)
add     2 #@(macro_inc@413)(main@111)
out             # 'u' #@(macro_inc@422)(main@111)
sub     5 #@(macro_inc@416)(main@111)
out             # 'p' #@(macro_inc@422)(main@111)
set     10 #@(macro_inc@420)(main@111)
out             #  #@(macro_inc@422)(main@111)
drop #@(macro_inc@425)(main@111)
#(end macro)print("if_sup\n")
#(begin macro)print("   a sup b is false; ")
push    0 #@(macro_inc@405)(main@112)
set     32 #@(macro_inc@420)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
add     65 #@(macro_inc@413)(main@112)
out             # 'a' #@(macro_inc@422)(main@112)
set     32 #@(macro_inc@420)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
add     83 #@(macro_inc@413)(main@112)
out             # 's' #@(macro_inc@422)(main@112)
add     2 #@(macro_inc@413)(main@112)
out             # 'u' #@(macro_inc@422)(main@112)
sub     5 #@(macro_inc@416)(main@112)
out             # 'p' #@(macro_inc@422)(main@112)
set     32 #@(macro_inc@420)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
add     66 #@(macro_inc@413)(main@112)
out             # 'b' #@(macro_inc@422)(main@112)
set     32 #@(macro_inc@420)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
add     73 #@(macro_inc@413)(main@112)
out             # 'i' #@(macro_inc@422)(main@112)
add     10 #@(macro_inc@413)(main@112)
out             # 's' #@(macro_inc@422)(main@112)
set     32 #@(macro_inc@420)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
add     70 #@(macro_inc@413)(main@112)
out             # 'f' #@(macro_inc@422)(main@112)
sub     5 #@(macro_inc@416)(main@112)
out             # 'a' #@(macro_inc@422)(main@112)
add     11 #@(macro_inc@413)(main@112)
out             # 'l' #@(macro_inc@422)(main@112)
add     7 #@(macro_inc@413)(main@112)
out             # 's' #@(macro_inc@422)(main@112)
sub     14 #@(macro_inc@416)(main@112)
out             # 'e' #@(macro_inc@422)(main@112)
sub     42 #@(macro_inc@416)(main@112)
out             # ';' #@(macro_inc@422)(main@112)
sub     27 #@(macro_inc@416)(main@112)
out             # ' ' #@(macro_inc@422)(main@112)
drop #@(macro_inc@425)(main@112)
#(end macro)print("   a sup b is false; ")
#(begin macro)if_sup a,b
push    a #@(macro_inc@45)(main@113)
push    b #@(macro_inc@46)(main@113)
sup #@(macro_inc@47)(main@113)
if #@(macro_inc@48)(main@113)
  #(end macro)if_sup a,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@114)
  set     66 #@(macro_inc@420)(main@114)
  out             # 'B' #@(macro_inc@422)(main@114)
  add     19 #@(macro_inc@413)(main@114)
  out             # 'U' #@(macro_inc@422)(main@114)
  sub     14 #@(macro_inc@416)(main@114)
  out             # 'G' #@(macro_inc@422)(main@114)
  set     10 #@(macro_inc@420)(main@114)
  out             #  #@(macro_inc@422)(main@114)
  drop #@(macro_inc@425)(main@114)
  #(end macro)print ("BUG\n")
else #@(main@115)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@116)
  set     79 #@(macro_inc@420)(main@116)
  out             # 'O' #@(macro_inc@422)(main@116)
  sub     4 #@(macro_inc@416)(main@116)
  out             # 'K' #@(macro_inc@422)(main@116)
  set     10 #@(macro_inc@420)(main@116)
  out             #  #@(macro_inc@422)(main@116)
  drop #@(macro_inc@425)(main@116)
  #(end macro)print ("OK\n")
fi #@(main@117)
#(begin macro)print("   c sup b is true; ")
push    0 #@(macro_inc@405)(main@118)
set     32 #@(macro_inc@420)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
add     67 #@(macro_inc@413)(main@118)
out             # 'c' #@(macro_inc@422)(main@118)
set     32 #@(macro_inc@420)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
add     83 #@(macro_inc@413)(main@118)
out             # 's' #@(macro_inc@422)(main@118)
add     2 #@(macro_inc@413)(main@118)
out             # 'u' #@(macro_inc@422)(main@118)
sub     5 #@(macro_inc@416)(main@118)
out             # 'p' #@(macro_inc@422)(main@118)
set     32 #@(macro_inc@420)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
add     66 #@(macro_inc@413)(main@118)
out             # 'b' #@(macro_inc@422)(main@118)
set     32 #@(macro_inc@420)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
add     73 #@(macro_inc@413)(main@118)
out             # 'i' #@(macro_inc@422)(main@118)
add     10 #@(macro_inc@413)(main@118)
out             # 's' #@(macro_inc@422)(main@118)
set     32 #@(macro_inc@420)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
add     84 #@(macro_inc@413)(main@118)
out             # 't' #@(macro_inc@422)(main@118)
sub     2 #@(macro_inc@416)(main@118)
out             # 'r' #@(macro_inc@422)(main@118)
add     3 #@(macro_inc@413)(main@118)
out             # 'u' #@(macro_inc@422)(main@118)
sub     16 #@(macro_inc@416)(main@118)
out             # 'e' #@(macro_inc@422)(main@118)
sub     42 #@(macro_inc@416)(main@118)
out             # ';' #@(macro_inc@422)(main@118)
sub     27 #@(macro_inc@416)(main@118)
out             # ' ' #@(macro_inc@422)(main@118)
drop #@(macro_inc@425)(main@118)
#(end macro)print("   c sup b is true; ")
#(begin macro)if_sup c,b
push    c #@(macro_inc@45)(main@119)
push    b #@(macro_inc@46)(main@119)
sup #@(macro_inc@47)(main@119)
if #@(macro_inc@48)(main@119)
  #(end macro)if_sup c,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@120)
  set     79 #@(macro_inc@420)(main@120)
  out             # 'O' #@(macro_inc@422)(main@120)
  sub     4 #@(macro_inc@416)(main@120)
  out             # 'K' #@(macro_inc@422)(main@120)
  set     10 #@(macro_inc@420)(main@120)
  out             #  #@(macro_inc@422)(main@120)
  drop #@(macro_inc@425)(main@120)
  #(end macro)print ("OK\n")
else #@(main@121)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@122)
  set     66 #@(macro_inc@420)(main@122)
  out             # 'B' #@(macro_inc@422)(main@122)
  add     19 #@(macro_inc@413)(main@122)
  out             # 'U' #@(macro_inc@422)(main@122)
  sub     14 #@(macro_inc@416)(main@122)
  out             # 'G' #@(macro_inc@422)(main@122)
  set     10 #@(macro_inc@420)(main@122)
  out             #  #@(macro_inc@422)(main@122)
  drop #@(macro_inc@425)(main@122)
  #(end macro)print ("BUG\n")
fi #@(main@123)
#(begin macro)print("   f sup b is false; ")
push    0 #@(macro_inc@405)(main@124)
set     32 #@(macro_inc@420)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
add     70 #@(macro_inc@413)(main@124)
out             # 'f' #@(macro_inc@422)(main@124)
set     32 #@(macro_inc@420)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
add     83 #@(macro_inc@413)(main@124)
out             # 's' #@(macro_inc@422)(main@124)
add     2 #@(macro_inc@413)(main@124)
out             # 'u' #@(macro_inc@422)(main@124)
sub     5 #@(macro_inc@416)(main@124)
out             # 'p' #@(macro_inc@422)(main@124)
set     32 #@(macro_inc@420)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
add     66 #@(macro_inc@413)(main@124)
out             # 'b' #@(macro_inc@422)(main@124)
set     32 #@(macro_inc@420)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
add     73 #@(macro_inc@413)(main@124)
out             # 'i' #@(macro_inc@422)(main@124)
add     10 #@(macro_inc@413)(main@124)
out             # 's' #@(macro_inc@422)(main@124)
set     32 #@(macro_inc@420)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
add     70 #@(macro_inc@413)(main@124)
out             # 'f' #@(macro_inc@422)(main@124)
sub     5 #@(macro_inc@416)(main@124)
out             # 'a' #@(macro_inc@422)(main@124)
add     11 #@(macro_inc@413)(main@124)
out             # 'l' #@(macro_inc@422)(main@124)
add     7 #@(macro_inc@413)(main@124)
out             # 's' #@(macro_inc@422)(main@124)
sub     14 #@(macro_inc@416)(main@124)
out             # 'e' #@(macro_inc@422)(main@124)
sub     42 #@(macro_inc@416)(main@124)
out             # ';' #@(macro_inc@422)(main@124)
sub     27 #@(macro_inc@416)(main@124)
out             # ' ' #@(macro_inc@422)(main@124)
drop #@(macro_inc@425)(main@124)
#(end macro)print("   f sup b is false; ")
#(begin macro)if_sup f,b
push    f #@(macro_inc@45)(main@125)
push    b #@(macro_inc@46)(main@125)
sup #@(macro_inc@47)(main@125)
if #@(macro_inc@48)(main@125)
  #(end macro)if_sup f,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@126)
  set     66 #@(macro_inc@420)(main@126)
  out             # 'B' #@(macro_inc@422)(main@126)
  add     19 #@(macro_inc@413)(main@126)
  out             # 'U' #@(macro_inc@422)(main@126)
  sub     14 #@(macro_inc@416)(main@126)
  out             # 'G' #@(macro_inc@422)(main@126)
  set     10 #@(macro_inc@420)(main@126)
  out             #  #@(macro_inc@422)(main@126)
  drop #@(macro_inc@425)(main@126)
  #(end macro)print ("BUG\n")
else #@(main@127)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@128)
  set     79 #@(macro_inc@420)(main@128)
  out             # 'O' #@(macro_inc@422)(main@128)
  sub     4 #@(macro_inc@416)(main@128)
  out             # 'K' #@(macro_inc@422)(main@128)
  set     10 #@(macro_inc@420)(main@128)
  out             #  #@(macro_inc@422)(main@128)
  drop #@(macro_inc@425)(main@128)
  #(end macro)print ("OK\n")
fi #@(main@129)
 #@(main@130)
# macro if_inf(a,b) : if (a < b) { #@(main@131)
#(begin macro)print("if_inf\n")
push    0 #@(macro_inc@405)(main@132)
set     105 #@(macro_inc@420)(main@132)
out             # 'i' #@(macro_inc@422)(main@132)
sub     3 #@(macro_inc@416)(main@132)
out             # 'f' #@(macro_inc@422)(main@132)
sub     7 #@(macro_inc@416)(main@132)
out             # '_' #@(macro_inc@422)(main@132)
add     10 #@(macro_inc@413)(main@132)
out             # 'i' #@(macro_inc@422)(main@132)
add     5 #@(macro_inc@413)(main@132)
out             # 'n' #@(macro_inc@422)(main@132)
sub     8 #@(macro_inc@416)(main@132)
out             # 'f' #@(macro_inc@422)(main@132)
set     10 #@(macro_inc@420)(main@132)
out             #  #@(macro_inc@422)(main@132)
drop #@(macro_inc@425)(main@132)
#(end macro)print("if_inf\n")
#(begin macro)print("   a inf b is true; ")
push    0 #@(macro_inc@405)(main@133)
set     32 #@(macro_inc@420)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
add     65 #@(macro_inc@413)(main@133)
out             # 'a' #@(macro_inc@422)(main@133)
set     32 #@(macro_inc@420)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
add     73 #@(macro_inc@413)(main@133)
out             # 'i' #@(macro_inc@422)(main@133)
add     5 #@(macro_inc@413)(main@133)
out             # 'n' #@(macro_inc@422)(main@133)
sub     8 #@(macro_inc@416)(main@133)
out             # 'f' #@(macro_inc@422)(main@133)
set     32 #@(macro_inc@420)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
add     66 #@(macro_inc@413)(main@133)
out             # 'b' #@(macro_inc@422)(main@133)
set     32 #@(macro_inc@420)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
add     73 #@(macro_inc@413)(main@133)
out             # 'i' #@(macro_inc@422)(main@133)
add     10 #@(macro_inc@413)(main@133)
out             # 's' #@(macro_inc@422)(main@133)
set     32 #@(macro_inc@420)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
add     84 #@(macro_inc@413)(main@133)
out             # 't' #@(macro_inc@422)(main@133)
sub     2 #@(macro_inc@416)(main@133)
out             # 'r' #@(macro_inc@422)(main@133)
add     3 #@(macro_inc@413)(main@133)
out             # 'u' #@(macro_inc@422)(main@133)
sub     16 #@(macro_inc@416)(main@133)
out             # 'e' #@(macro_inc@422)(main@133)
sub     42 #@(macro_inc@416)(main@133)
out             # ';' #@(macro_inc@422)(main@133)
sub     27 #@(macro_inc@416)(main@133)
out             # ' ' #@(macro_inc@422)(main@133)
drop #@(macro_inc@425)(main@133)
#(end macro)print("   a inf b is true; ")
#(begin macro)if_inf a,b
push    a #@(macro_inc@53)(main@134)
push    b #@(macro_inc@54)(main@134)
inf #@(macro_inc@55)(main@134)
if #@(macro_inc@56)(main@134)
  #(end macro)if_inf a,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@135)
  set     79 #@(macro_inc@420)(main@135)
  out             # 'O' #@(macro_inc@422)(main@135)
  sub     4 #@(macro_inc@416)(main@135)
  out             # 'K' #@(macro_inc@422)(main@135)
  set     10 #@(macro_inc@420)(main@135)
  out             #  #@(macro_inc@422)(main@135)
  drop #@(macro_inc@425)(main@135)
  #(end macro)print ("OK\n")
else #@(main@136)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@137)
  set     66 #@(macro_inc@420)(main@137)
  out             # 'B' #@(macro_inc@422)(main@137)
  add     19 #@(macro_inc@413)(main@137)
  out             # 'U' #@(macro_inc@422)(main@137)
  sub     14 #@(macro_inc@416)(main@137)
  out             # 'G' #@(macro_inc@422)(main@137)
  set     10 #@(macro_inc@420)(main@137)
  out             #  #@(macro_inc@422)(main@137)
  drop #@(macro_inc@425)(main@137)
  #(end macro)print ("BUG\n")
fi #@(main@138)
#(begin macro)print("   c inf b is false; ")
push    0 #@(macro_inc@405)(main@139)
set     32 #@(macro_inc@420)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
add     67 #@(macro_inc@413)(main@139)
out             # 'c' #@(macro_inc@422)(main@139)
set     32 #@(macro_inc@420)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
add     73 #@(macro_inc@413)(main@139)
out             # 'i' #@(macro_inc@422)(main@139)
add     5 #@(macro_inc@413)(main@139)
out             # 'n' #@(macro_inc@422)(main@139)
sub     8 #@(macro_inc@416)(main@139)
out             # 'f' #@(macro_inc@422)(main@139)
set     32 #@(macro_inc@420)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
add     66 #@(macro_inc@413)(main@139)
out             # 'b' #@(macro_inc@422)(main@139)
set     32 #@(macro_inc@420)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
add     73 #@(macro_inc@413)(main@139)
out             # 'i' #@(macro_inc@422)(main@139)
add     10 #@(macro_inc@413)(main@139)
out             # 's' #@(macro_inc@422)(main@139)
set     32 #@(macro_inc@420)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
add     70 #@(macro_inc@413)(main@139)
out             # 'f' #@(macro_inc@422)(main@139)
sub     5 #@(macro_inc@416)(main@139)
out             # 'a' #@(macro_inc@422)(main@139)
add     11 #@(macro_inc@413)(main@139)
out             # 'l' #@(macro_inc@422)(main@139)
add     7 #@(macro_inc@413)(main@139)
out             # 's' #@(macro_inc@422)(main@139)
sub     14 #@(macro_inc@416)(main@139)
out             # 'e' #@(macro_inc@422)(main@139)
sub     42 #@(macro_inc@416)(main@139)
out             # ';' #@(macro_inc@422)(main@139)
sub     27 #@(macro_inc@416)(main@139)
out             # ' ' #@(macro_inc@422)(main@139)
drop #@(macro_inc@425)(main@139)
#(end macro)print("   c inf b is false; ")
#(begin macro)if_inf c,b
push    c #@(macro_inc@53)(main@140)
push    b #@(macro_inc@54)(main@140)
inf #@(macro_inc@55)(main@140)
if #@(macro_inc@56)(main@140)
  #(end macro)if_inf c,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@141)
  set     66 #@(macro_inc@420)(main@141)
  out             # 'B' #@(macro_inc@422)(main@141)
  add     19 #@(macro_inc@413)(main@141)
  out             # 'U' #@(macro_inc@422)(main@141)
  sub     14 #@(macro_inc@416)(main@141)
  out             # 'G' #@(macro_inc@422)(main@141)
  set     10 #@(macro_inc@420)(main@141)
  out             #  #@(macro_inc@422)(main@141)
  drop #@(macro_inc@425)(main@141)
  #(end macro)print ("BUG\n")
else #@(main@142)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@143)
  set     79 #@(macro_inc@420)(main@143)
  out             # 'O' #@(macro_inc@422)(main@143)
  sub     4 #@(macro_inc@416)(main@143)
  out             # 'K' #@(macro_inc@422)(main@143)
  set     10 #@(macro_inc@420)(main@143)
  out             #  #@(macro_inc@422)(main@143)
  drop #@(macro_inc@425)(main@143)
  #(end macro)print ("OK\n")
fi #@(main@144)
#(begin macro)print("   f inf b is false; ")
push    0 #@(macro_inc@405)(main@145)
set     32 #@(macro_inc@420)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
add     70 #@(macro_inc@413)(main@145)
out             # 'f' #@(macro_inc@422)(main@145)
set     32 #@(macro_inc@420)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
add     73 #@(macro_inc@413)(main@145)
out             # 'i' #@(macro_inc@422)(main@145)
add     5 #@(macro_inc@413)(main@145)
out             # 'n' #@(macro_inc@422)(main@145)
sub     8 #@(macro_inc@416)(main@145)
out             # 'f' #@(macro_inc@422)(main@145)
set     32 #@(macro_inc@420)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
add     66 #@(macro_inc@413)(main@145)
out             # 'b' #@(macro_inc@422)(main@145)
set     32 #@(macro_inc@420)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
add     73 #@(macro_inc@413)(main@145)
out             # 'i' #@(macro_inc@422)(main@145)
add     10 #@(macro_inc@413)(main@145)
out             # 's' #@(macro_inc@422)(main@145)
set     32 #@(macro_inc@420)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
add     70 #@(macro_inc@413)(main@145)
out             # 'f' #@(macro_inc@422)(main@145)
sub     5 #@(macro_inc@416)(main@145)
out             # 'a' #@(macro_inc@422)(main@145)
add     11 #@(macro_inc@413)(main@145)
out             # 'l' #@(macro_inc@422)(main@145)
add     7 #@(macro_inc@413)(main@145)
out             # 's' #@(macro_inc@422)(main@145)
sub     14 #@(macro_inc@416)(main@145)
out             # 'e' #@(macro_inc@422)(main@145)
sub     42 #@(macro_inc@416)(main@145)
out             # ';' #@(macro_inc@422)(main@145)
sub     27 #@(macro_inc@416)(main@145)
out             # ' ' #@(macro_inc@422)(main@145)
drop #@(macro_inc@425)(main@145)
#(end macro)print("   f inf b is false; ")
#(begin macro)if_inf f,b
push    f #@(macro_inc@53)(main@146)
push    b #@(macro_inc@54)(main@146)
inf #@(macro_inc@55)(main@146)
if #@(macro_inc@56)(main@146)
  #(end macro)if_inf f,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@147)
  set     66 #@(macro_inc@420)(main@147)
  out             # 'B' #@(macro_inc@422)(main@147)
  add     19 #@(macro_inc@413)(main@147)
  out             # 'U' #@(macro_inc@422)(main@147)
  sub     14 #@(macro_inc@416)(main@147)
  out             # 'G' #@(macro_inc@422)(main@147)
  set     10 #@(macro_inc@420)(main@147)
  out             #  #@(macro_inc@422)(main@147)
  drop #@(macro_inc@425)(main@147)
  #(end macro)print ("BUG\n")
else #@(main@148)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@149)
  set     79 #@(macro_inc@420)(main@149)
  out             # 'O' #@(macro_inc@422)(main@149)
  sub     4 #@(macro_inc@416)(main@149)
  out             # 'K' #@(macro_inc@422)(main@149)
  set     10 #@(macro_inc@420)(main@149)
  out             #  #@(macro_inc@422)(main@149)
  drop #@(macro_inc@425)(main@149)
  #(end macro)print ("OK\n")
fi #@(main@150)
 #@(main@151)
# macro if_supequal(a,b) : if (a >= b) { #@(main@152)
#(begin macro)print("if_supequal\n")
push    0 #@(macro_inc@405)(main@153)
set     105 #@(macro_inc@420)(main@153)
out             # 'i' #@(macro_inc@422)(main@153)
sub     3 #@(macro_inc@416)(main@153)
out             # 'f' #@(macro_inc@422)(main@153)
sub     7 #@(macro_inc@416)(main@153)
out             # '_' #@(macro_inc@422)(main@153)
add     20 #@(macro_inc@413)(main@153)
out             # 's' #@(macro_inc@422)(main@153)
add     2 #@(macro_inc@413)(main@153)
out             # 'u' #@(macro_inc@422)(main@153)
sub     5 #@(macro_inc@416)(main@153)
out             # 'p' #@(macro_inc@422)(main@153)
sub     11 #@(macro_inc@416)(main@153)
out             # 'e' #@(macro_inc@422)(main@153)
add     12 #@(macro_inc@413)(main@153)
out             # 'q' #@(macro_inc@422)(main@153)
add     4 #@(macro_inc@413)(main@153)
out             # 'u' #@(macro_inc@422)(main@153)
sub     20 #@(macro_inc@416)(main@153)
out             # 'a' #@(macro_inc@422)(main@153)
add     11 #@(macro_inc@413)(main@153)
out             # 'l' #@(macro_inc@422)(main@153)
set     10 #@(macro_inc@420)(main@153)
out             #  #@(macro_inc@422)(main@153)
drop #@(macro_inc@425)(main@153)
#(end macro)print("if_supequal\n")
#(begin macro)print("   a supequal b is false; ")
push    0 #@(macro_inc@405)(main@154)
set     32 #@(macro_inc@420)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
add     65 #@(macro_inc@413)(main@154)
out             # 'a' #@(macro_inc@422)(main@154)
set     32 #@(macro_inc@420)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
add     83 #@(macro_inc@413)(main@154)
out             # 's' #@(macro_inc@422)(main@154)
add     2 #@(macro_inc@413)(main@154)
out             # 'u' #@(macro_inc@422)(main@154)
sub     5 #@(macro_inc@416)(main@154)
out             # 'p' #@(macro_inc@422)(main@154)
sub     11 #@(macro_inc@416)(main@154)
out             # 'e' #@(macro_inc@422)(main@154)
add     12 #@(macro_inc@413)(main@154)
out             # 'q' #@(macro_inc@422)(main@154)
add     4 #@(macro_inc@413)(main@154)
out             # 'u' #@(macro_inc@422)(main@154)
sub     20 #@(macro_inc@416)(main@154)
out             # 'a' #@(macro_inc@422)(main@154)
add     11 #@(macro_inc@413)(main@154)
out             # 'l' #@(macro_inc@422)(main@154)
set     32 #@(macro_inc@420)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
add     66 #@(macro_inc@413)(main@154)
out             # 'b' #@(macro_inc@422)(main@154)
set     32 #@(macro_inc@420)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
add     73 #@(macro_inc@413)(main@154)
out             # 'i' #@(macro_inc@422)(main@154)
add     10 #@(macro_inc@413)(main@154)
out             # 's' #@(macro_inc@422)(main@154)
set     32 #@(macro_inc@420)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
add     70 #@(macro_inc@413)(main@154)
out             # 'f' #@(macro_inc@422)(main@154)
sub     5 #@(macro_inc@416)(main@154)
out             # 'a' #@(macro_inc@422)(main@154)
add     11 #@(macro_inc@413)(main@154)
out             # 'l' #@(macro_inc@422)(main@154)
add     7 #@(macro_inc@413)(main@154)
out             # 's' #@(macro_inc@422)(main@154)
sub     14 #@(macro_inc@416)(main@154)
out             # 'e' #@(macro_inc@422)(main@154)
sub     42 #@(macro_inc@416)(main@154)
out             # ';' #@(macro_inc@422)(main@154)
sub     27 #@(macro_inc@416)(main@154)
out             # ' ' #@(macro_inc@422)(main@154)
drop #@(macro_inc@425)(main@154)
#(end macro)print("   a supequal b is false; ")
#(begin macro)if_supequal a,b
push    a #@(macro_inc@61)(main@155)
push    b #@(macro_inc@62)(main@155)
inf #@(macro_inc@63)(main@155)
not #@(macro_inc@64)(main@155)
if #@(macro_inc@65)(main@155)
  #(end macro)if_supequal a,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@156)
  set     66 #@(macro_inc@420)(main@156)
  out             # 'B' #@(macro_inc@422)(main@156)
  add     19 #@(macro_inc@413)(main@156)
  out             # 'U' #@(macro_inc@422)(main@156)
  sub     14 #@(macro_inc@416)(main@156)
  out             # 'G' #@(macro_inc@422)(main@156)
  set     10 #@(macro_inc@420)(main@156)
  out             #  #@(macro_inc@422)(main@156)
  drop #@(macro_inc@425)(main@156)
  #(end macro)print ("BUG\n")
else #@(main@157)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@158)
  set     79 #@(macro_inc@420)(main@158)
  out             # 'O' #@(macro_inc@422)(main@158)
  sub     4 #@(macro_inc@416)(main@158)
  out             # 'K' #@(macro_inc@422)(main@158)
  set     10 #@(macro_inc@420)(main@158)
  out             #  #@(macro_inc@422)(main@158)
  drop #@(macro_inc@425)(main@158)
  #(end macro)print ("OK\n")
fi #@(main@159)
#(begin macro)print("   c supequal b is true; ")
push    0 #@(macro_inc@405)(main@160)
set     32 #@(macro_inc@420)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
add     67 #@(macro_inc@413)(main@160)
out             # 'c' #@(macro_inc@422)(main@160)
set     32 #@(macro_inc@420)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
add     83 #@(macro_inc@413)(main@160)
out             # 's' #@(macro_inc@422)(main@160)
add     2 #@(macro_inc@413)(main@160)
out             # 'u' #@(macro_inc@422)(main@160)
sub     5 #@(macro_inc@416)(main@160)
out             # 'p' #@(macro_inc@422)(main@160)
sub     11 #@(macro_inc@416)(main@160)
out             # 'e' #@(macro_inc@422)(main@160)
add     12 #@(macro_inc@413)(main@160)
out             # 'q' #@(macro_inc@422)(main@160)
add     4 #@(macro_inc@413)(main@160)
out             # 'u' #@(macro_inc@422)(main@160)
sub     20 #@(macro_inc@416)(main@160)
out             # 'a' #@(macro_inc@422)(main@160)
add     11 #@(macro_inc@413)(main@160)
out             # 'l' #@(macro_inc@422)(main@160)
set     32 #@(macro_inc@420)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
add     66 #@(macro_inc@413)(main@160)
out             # 'b' #@(macro_inc@422)(main@160)
set     32 #@(macro_inc@420)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
add     73 #@(macro_inc@413)(main@160)
out             # 'i' #@(macro_inc@422)(main@160)
add     10 #@(macro_inc@413)(main@160)
out             # 's' #@(macro_inc@422)(main@160)
set     32 #@(macro_inc@420)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
add     84 #@(macro_inc@413)(main@160)
out             # 't' #@(macro_inc@422)(main@160)
sub     2 #@(macro_inc@416)(main@160)
out             # 'r' #@(macro_inc@422)(main@160)
add     3 #@(macro_inc@413)(main@160)
out             # 'u' #@(macro_inc@422)(main@160)
sub     16 #@(macro_inc@416)(main@160)
out             # 'e' #@(macro_inc@422)(main@160)
sub     42 #@(macro_inc@416)(main@160)
out             # ';' #@(macro_inc@422)(main@160)
sub     27 #@(macro_inc@416)(main@160)
out             # ' ' #@(macro_inc@422)(main@160)
drop #@(macro_inc@425)(main@160)
#(end macro)print("   c supequal b is true; ")
#(begin macro)if_supequal c,b
push    c #@(macro_inc@61)(main@161)
push    b #@(macro_inc@62)(main@161)
inf #@(macro_inc@63)(main@161)
not #@(macro_inc@64)(main@161)
if #@(macro_inc@65)(main@161)
  #(end macro)if_supequal c,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@162)
  set     79 #@(macro_inc@420)(main@162)
  out             # 'O' #@(macro_inc@422)(main@162)
  sub     4 #@(macro_inc@416)(main@162)
  out             # 'K' #@(macro_inc@422)(main@162)
  set     10 #@(macro_inc@420)(main@162)
  out             #  #@(macro_inc@422)(main@162)
  drop #@(macro_inc@425)(main@162)
  #(end macro)print ("OK\n")
else #@(main@163)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@164)
  set     66 #@(macro_inc@420)(main@164)
  out             # 'B' #@(macro_inc@422)(main@164)
  add     19 #@(macro_inc@413)(main@164)
  out             # 'U' #@(macro_inc@422)(main@164)
  sub     14 #@(macro_inc@416)(main@164)
  out             # 'G' #@(macro_inc@422)(main@164)
  set     10 #@(macro_inc@420)(main@164)
  out             #  #@(macro_inc@422)(main@164)
  drop #@(macro_inc@425)(main@164)
  #(end macro)print ("BUG\n")
fi #@(main@165)
#(begin macro)print("   f supequal b is true; ")
push    0 #@(macro_inc@405)(main@166)
set     32 #@(macro_inc@420)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
add     70 #@(macro_inc@413)(main@166)
out             # 'f' #@(macro_inc@422)(main@166)
set     32 #@(macro_inc@420)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
add     83 #@(macro_inc@413)(main@166)
out             # 's' #@(macro_inc@422)(main@166)
add     2 #@(macro_inc@413)(main@166)
out             # 'u' #@(macro_inc@422)(main@166)
sub     5 #@(macro_inc@416)(main@166)
out             # 'p' #@(macro_inc@422)(main@166)
sub     11 #@(macro_inc@416)(main@166)
out             # 'e' #@(macro_inc@422)(main@166)
add     12 #@(macro_inc@413)(main@166)
out             # 'q' #@(macro_inc@422)(main@166)
add     4 #@(macro_inc@413)(main@166)
out             # 'u' #@(macro_inc@422)(main@166)
sub     20 #@(macro_inc@416)(main@166)
out             # 'a' #@(macro_inc@422)(main@166)
add     11 #@(macro_inc@413)(main@166)
out             # 'l' #@(macro_inc@422)(main@166)
set     32 #@(macro_inc@420)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
add     66 #@(macro_inc@413)(main@166)
out             # 'b' #@(macro_inc@422)(main@166)
set     32 #@(macro_inc@420)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
add     73 #@(macro_inc@413)(main@166)
out             # 'i' #@(macro_inc@422)(main@166)
add     10 #@(macro_inc@413)(main@166)
out             # 's' #@(macro_inc@422)(main@166)
set     32 #@(macro_inc@420)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
add     84 #@(macro_inc@413)(main@166)
out             # 't' #@(macro_inc@422)(main@166)
sub     2 #@(macro_inc@416)(main@166)
out             # 'r' #@(macro_inc@422)(main@166)
add     3 #@(macro_inc@413)(main@166)
out             # 'u' #@(macro_inc@422)(main@166)
sub     16 #@(macro_inc@416)(main@166)
out             # 'e' #@(macro_inc@422)(main@166)
sub     42 #@(macro_inc@416)(main@166)
out             # ';' #@(macro_inc@422)(main@166)
sub     27 #@(macro_inc@416)(main@166)
out             # ' ' #@(macro_inc@422)(main@166)
drop #@(macro_inc@425)(main@166)
#(end macro)print("   f supequal b is true; ")
#(begin macro)if_supequal f,b
push    f #@(macro_inc@61)(main@167)
push    b #@(macro_inc@62)(main@167)
inf #@(macro_inc@63)(main@167)
not #@(macro_inc@64)(main@167)
if #@(macro_inc@65)(main@167)
  #(end macro)if_supequal f,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@168)
  set     79 #@(macro_inc@420)(main@168)
  out             # 'O' #@(macro_inc@422)(main@168)
  sub     4 #@(macro_inc@416)(main@168)
  out             # 'K' #@(macro_inc@422)(main@168)
  set     10 #@(macro_inc@420)(main@168)
  out             #  #@(macro_inc@422)(main@168)
  drop #@(macro_inc@425)(main@168)
  #(end macro)print ("OK\n")
else #@(main@169)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@170)
  set     66 #@(macro_inc@420)(main@170)
  out             # 'B' #@(macro_inc@422)(main@170)
  add     19 #@(macro_inc@413)(main@170)
  out             # 'U' #@(macro_inc@422)(main@170)
  sub     14 #@(macro_inc@416)(main@170)
  out             # 'G' #@(macro_inc@422)(main@170)
  set     10 #@(macro_inc@420)(main@170)
  out             #  #@(macro_inc@422)(main@170)
  drop #@(macro_inc@425)(main@170)
  #(end macro)print ("BUG\n")
fi #@(main@171)
 #@(main@172)
# macro if_infequal(a,b) : if (a <= b) { #@(main@173)
#(begin macro)print("if_infequal\n")
push    0 #@(macro_inc@405)(main@174)
set     105 #@(macro_inc@420)(main@174)
out             # 'i' #@(macro_inc@422)(main@174)
sub     3 #@(macro_inc@416)(main@174)
out             # 'f' #@(macro_inc@422)(main@174)
sub     7 #@(macro_inc@416)(main@174)
out             # '_' #@(macro_inc@422)(main@174)
add     10 #@(macro_inc@413)(main@174)
out             # 'i' #@(macro_inc@422)(main@174)
add     5 #@(macro_inc@413)(main@174)
out             # 'n' #@(macro_inc@422)(main@174)
sub     8 #@(macro_inc@416)(main@174)
out             # 'f' #@(macro_inc@422)(main@174)
sub     1 #@(macro_inc@416)(main@174)
out             # 'e' #@(macro_inc@422)(main@174)
add     12 #@(macro_inc@413)(main@174)
out             # 'q' #@(macro_inc@422)(main@174)
add     4 #@(macro_inc@413)(main@174)
out             # 'u' #@(macro_inc@422)(main@174)
sub     20 #@(macro_inc@416)(main@174)
out             # 'a' #@(macro_inc@422)(main@174)
add     11 #@(macro_inc@413)(main@174)
out             # 'l' #@(macro_inc@422)(main@174)
set     10 #@(macro_inc@420)(main@174)
out             #  #@(macro_inc@422)(main@174)
drop #@(macro_inc@425)(main@174)
#(end macro)print("if_infequal\n")
#(begin macro)print("   a infequal b is true; ")
push    0 #@(macro_inc@405)(main@175)
set     32 #@(macro_inc@420)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
add     65 #@(macro_inc@413)(main@175)
out             # 'a' #@(macro_inc@422)(main@175)
set     32 #@(macro_inc@420)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
add     73 #@(macro_inc@413)(main@175)
out             # 'i' #@(macro_inc@422)(main@175)
add     5 #@(macro_inc@413)(main@175)
out             # 'n' #@(macro_inc@422)(main@175)
sub     8 #@(macro_inc@416)(main@175)
out             # 'f' #@(macro_inc@422)(main@175)
sub     1 #@(macro_inc@416)(main@175)
out             # 'e' #@(macro_inc@422)(main@175)
add     12 #@(macro_inc@413)(main@175)
out             # 'q' #@(macro_inc@422)(main@175)
add     4 #@(macro_inc@413)(main@175)
out             # 'u' #@(macro_inc@422)(main@175)
sub     20 #@(macro_inc@416)(main@175)
out             # 'a' #@(macro_inc@422)(main@175)
add     11 #@(macro_inc@413)(main@175)
out             # 'l' #@(macro_inc@422)(main@175)
set     32 #@(macro_inc@420)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
add     66 #@(macro_inc@413)(main@175)
out             # 'b' #@(macro_inc@422)(main@175)
set     32 #@(macro_inc@420)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
add     73 #@(macro_inc@413)(main@175)
out             # 'i' #@(macro_inc@422)(main@175)
add     10 #@(macro_inc@413)(main@175)
out             # 's' #@(macro_inc@422)(main@175)
set     32 #@(macro_inc@420)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
add     84 #@(macro_inc@413)(main@175)
out             # 't' #@(macro_inc@422)(main@175)
sub     2 #@(macro_inc@416)(main@175)
out             # 'r' #@(macro_inc@422)(main@175)
add     3 #@(macro_inc@413)(main@175)
out             # 'u' #@(macro_inc@422)(main@175)
sub     16 #@(macro_inc@416)(main@175)
out             # 'e' #@(macro_inc@422)(main@175)
sub     42 #@(macro_inc@416)(main@175)
out             # ';' #@(macro_inc@422)(main@175)
sub     27 #@(macro_inc@416)(main@175)
out             # ' ' #@(macro_inc@422)(main@175)
drop #@(macro_inc@425)(main@175)
#(end macro)print("   a infequal b is true; ")
#(begin macro)if_infequal a,b
push    a #@(macro_inc@70)(main@176)
push    b #@(macro_inc@71)(main@176)
sup #@(macro_inc@72)(main@176)
not #@(macro_inc@73)(main@176)
if #@(macro_inc@74)(main@176)
  #(end macro)if_infequal a,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@177)
  set     79 #@(macro_inc@420)(main@177)
  out             # 'O' #@(macro_inc@422)(main@177)
  sub     4 #@(macro_inc@416)(main@177)
  out             # 'K' #@(macro_inc@422)(main@177)
  set     10 #@(macro_inc@420)(main@177)
  out             #  #@(macro_inc@422)(main@177)
  drop #@(macro_inc@425)(main@177)
  #(end macro)print ("OK\n")
else #@(main@178)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@179)
  set     66 #@(macro_inc@420)(main@179)
  out             # 'B' #@(macro_inc@422)(main@179)
  add     19 #@(macro_inc@413)(main@179)
  out             # 'U' #@(macro_inc@422)(main@179)
  sub     14 #@(macro_inc@416)(main@179)
  out             # 'G' #@(macro_inc@422)(main@179)
  set     10 #@(macro_inc@420)(main@179)
  out             #  #@(macro_inc@422)(main@179)
  drop #@(macro_inc@425)(main@179)
  #(end macro)print ("BUG\n")
fi #@(main@180)
#(begin macro)print("   c infequal b is false; ")
push    0 #@(macro_inc@405)(main@181)
set     32 #@(macro_inc@420)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
add     67 #@(macro_inc@413)(main@181)
out             # 'c' #@(macro_inc@422)(main@181)
set     32 #@(macro_inc@420)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
add     73 #@(macro_inc@413)(main@181)
out             # 'i' #@(macro_inc@422)(main@181)
add     5 #@(macro_inc@413)(main@181)
out             # 'n' #@(macro_inc@422)(main@181)
sub     8 #@(macro_inc@416)(main@181)
out             # 'f' #@(macro_inc@422)(main@181)
sub     1 #@(macro_inc@416)(main@181)
out             # 'e' #@(macro_inc@422)(main@181)
add     12 #@(macro_inc@413)(main@181)
out             # 'q' #@(macro_inc@422)(main@181)
add     4 #@(macro_inc@413)(main@181)
out             # 'u' #@(macro_inc@422)(main@181)
sub     20 #@(macro_inc@416)(main@181)
out             # 'a' #@(macro_inc@422)(main@181)
add     11 #@(macro_inc@413)(main@181)
out             # 'l' #@(macro_inc@422)(main@181)
set     32 #@(macro_inc@420)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
add     66 #@(macro_inc@413)(main@181)
out             # 'b' #@(macro_inc@422)(main@181)
set     32 #@(macro_inc@420)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
add     73 #@(macro_inc@413)(main@181)
out             # 'i' #@(macro_inc@422)(main@181)
add     10 #@(macro_inc@413)(main@181)
out             # 's' #@(macro_inc@422)(main@181)
set     32 #@(macro_inc@420)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
add     70 #@(macro_inc@413)(main@181)
out             # 'f' #@(macro_inc@422)(main@181)
sub     5 #@(macro_inc@416)(main@181)
out             # 'a' #@(macro_inc@422)(main@181)
add     11 #@(macro_inc@413)(main@181)
out             # 'l' #@(macro_inc@422)(main@181)
add     7 #@(macro_inc@413)(main@181)
out             # 's' #@(macro_inc@422)(main@181)
sub     14 #@(macro_inc@416)(main@181)
out             # 'e' #@(macro_inc@422)(main@181)
sub     42 #@(macro_inc@416)(main@181)
out             # ';' #@(macro_inc@422)(main@181)
sub     27 #@(macro_inc@416)(main@181)
out             # ' ' #@(macro_inc@422)(main@181)
drop #@(macro_inc@425)(main@181)
#(end macro)print("   c infequal b is false; ")
#(begin macro)if_infequal c,b
push    c #@(macro_inc@70)(main@182)
push    b #@(macro_inc@71)(main@182)
sup #@(macro_inc@72)(main@182)
not #@(macro_inc@73)(main@182)
if #@(macro_inc@74)(main@182)
  #(end macro)if_infequal c,b
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@183)
  set     66 #@(macro_inc@420)(main@183)
  out             # 'B' #@(macro_inc@422)(main@183)
  add     19 #@(macro_inc@413)(main@183)
  out             # 'U' #@(macro_inc@422)(main@183)
  sub     14 #@(macro_inc@416)(main@183)
  out             # 'G' #@(macro_inc@422)(main@183)
  set     10 #@(macro_inc@420)(main@183)
  out             #  #@(macro_inc@422)(main@183)
  drop #@(macro_inc@425)(main@183)
  #(end macro)print ("BUG\n")
else #@(main@184)
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@185)
  set     79 #@(macro_inc@420)(main@185)
  out             # 'O' #@(macro_inc@422)(main@185)
  sub     4 #@(macro_inc@416)(main@185)
  out             # 'K' #@(macro_inc@422)(main@185)
  set     10 #@(macro_inc@420)(main@185)
  out             #  #@(macro_inc@422)(main@185)
  drop #@(macro_inc@425)(main@185)
  #(end macro)print ("OK\n")
fi #@(main@186)
#(begin macro)print("   f infequal b is true; ")
push    0 #@(macro_inc@405)(main@187)
set     32 #@(macro_inc@420)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
add     70 #@(macro_inc@413)(main@187)
out             # 'f' #@(macro_inc@422)(main@187)
set     32 #@(macro_inc@420)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
add     73 #@(macro_inc@413)(main@187)
out             # 'i' #@(macro_inc@422)(main@187)
add     5 #@(macro_inc@413)(main@187)
out             # 'n' #@(macro_inc@422)(main@187)
sub     8 #@(macro_inc@416)(main@187)
out             # 'f' #@(macro_inc@422)(main@187)
sub     1 #@(macro_inc@416)(main@187)
out             # 'e' #@(macro_inc@422)(main@187)
add     12 #@(macro_inc@413)(main@187)
out             # 'q' #@(macro_inc@422)(main@187)
add     4 #@(macro_inc@413)(main@187)
out             # 'u' #@(macro_inc@422)(main@187)
sub     20 #@(macro_inc@416)(main@187)
out             # 'a' #@(macro_inc@422)(main@187)
add     11 #@(macro_inc@413)(main@187)
out             # 'l' #@(macro_inc@422)(main@187)
set     32 #@(macro_inc@420)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
add     66 #@(macro_inc@413)(main@187)
out             # 'b' #@(macro_inc@422)(main@187)
set     32 #@(macro_inc@420)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
add     73 #@(macro_inc@413)(main@187)
out             # 'i' #@(macro_inc@422)(main@187)
add     10 #@(macro_inc@413)(main@187)
out             # 's' #@(macro_inc@422)(main@187)
set     32 #@(macro_inc@420)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
add     84 #@(macro_inc@413)(main@187)
out             # 't' #@(macro_inc@422)(main@187)
sub     2 #@(macro_inc@416)(main@187)
out             # 'r' #@(macro_inc@422)(main@187)
add     3 #@(macro_inc@413)(main@187)
out             # 'u' #@(macro_inc@422)(main@187)
sub     16 #@(macro_inc@416)(main@187)
out             # 'e' #@(macro_inc@422)(main@187)
sub     42 #@(macro_inc@416)(main@187)
out             # ';' #@(macro_inc@422)(main@187)
sub     27 #@(macro_inc@416)(main@187)
out             # ' ' #@(macro_inc@422)(main@187)
drop #@(macro_inc@425)(main@187)
#(end macro)print("   f infequal b is true; ")
#(begin macro)if_infequal f,b
push    f #@(macro_inc@70)(main@188)
push    b #@(macro_inc@71)(main@188)
sup #@(macro_inc@72)(main@188)
not #@(macro_inc@73)(main@188)
if #@(macro_inc@74)(main@188)
  #(end macro)if_infequal f,b
  #(begin macro)print ("OK\n")
  push    0 #@(macro_inc@405)(main@189)
  set     79 #@(macro_inc@420)(main@189)
  out             # 'O' #@(macro_inc@422)(main@189)
  sub     4 #@(macro_inc@416)(main@189)
  out             # 'K' #@(macro_inc@422)(main@189)
  set     10 #@(macro_inc@420)(main@189)
  out             #  #@(macro_inc@422)(main@189)
  drop #@(macro_inc@425)(main@189)
  #(end macro)print ("OK\n")
else #@(main@190)
  #(begin macro)print ("BUG\n")
  push    0 #@(macro_inc@405)(main@191)
  set     66 #@(macro_inc@420)(main@191)
  out             # 'B' #@(macro_inc@422)(main@191)
  add     19 #@(macro_inc@413)(main@191)
  out             # 'U' #@(macro_inc@422)(main@191)
  sub     14 #@(macro_inc@416)(main@191)
  out             # 'G' #@(macro_inc@422)(main@191)
  set     10 #@(macro_inc@420)(main@191)
  out             #  #@(macro_inc@422)(main@191)
  drop #@(macro_inc@425)(main@191)
  #(end macro)print ("BUG\n")
fi #@(main@192)
 #@(main@193)
# macro at_reset(a) : a=0 #@(main@194)
# macro at_inc(a) : a++ #@(main@195)
# macro at_dec(a) : a-- #@(main@196)
# macro at_out(a) : write(a) #@(main@197)
# macro at_add(a,b) : a += b (immediate) #@(main@198)
# macro at_sub(a,b) : a -= b (immediate) #@(main@199)
# macro at_set(a,b) : a = b (immediate) #@(main@200)
 #@(main@201)
# macro write(a) : print out  variable/immediate 8 bits 'a' #@(main@202)
# macro divide(a,b,d,r) : d = a div b ; r = a mod b : 8 bits var or immediate 'a' and 'b' #@(main@203)
# macro left_rewind(array) #@(main@204)
# macro right_rewind(array) #@(main@205)
#(begin macro)scope_end()
drop #@(macro_inc@15)(main@206)
drop #@(macro_inc@15)(main@206)
drop #@(macro_inc@15)(main@206)
drop #@(macro_inc@15)(main@206)
drop #@(macro_inc@15)(main@206)
#(end macro)scope_end()
 #@(main@207)

